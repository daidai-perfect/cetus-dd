import{u as H}from"./useNotifiAlerts-DUmox4I7.js";import{R as x,l as k,A as D,Q as T,d as _,k as L}from"./index-R0MuIW_z.js";import"./vendor-BFGDaAdA.js";import{u as B}from"./useXCetusHelper-Lpo_-Cu4.js";import{a as O,i as F,u as V}from"./usePositionList-BajI2m9G.js";const j=(r,u)=>({isPosDetailRefresh:!1,setIsPosDetailRefresh:t=>{r(()=>({isPosDetailRefresh:t}))},isPosHistoryLoading:!0,setIsPosHistoryLoading:t=>{r(()=>({isPosHistoryLoading:t}))},curPosHistoryList:[],setCurPosHistoryList:t=>{r(()=>({curPosHistoryList:t}))},currentPosDetailTab:"increase",setCurrentPosDetailTab:t=>{r(()=>({currentPosDetailTab:t}))},tokenAmountAfterA:"",setTokenAmountAfterA:t=>{r(()=>({tokenAmountAfterA:t}))},tokenAmountAfterB:"",setTokenAmountAfterB:t=>{r(()=>({tokenAmountAfterB:t}))},isFixedDisplayTokenA:!0,setIsFixedDisplayTokenA:t=>{r(()=>({isFixedDisplayTokenA:t}))},slideValue:"--",setSlideValue:t=>{r(()=>({slideValue:t}))},currentPosPoolInfo:null,setCurrentPosPoolInfo:t=>{r(()=>({currentPosPoolInfo:t}))},currentPoolSqrtPrice:"",setCurrentPoolSqrtPrice:t=>{r(()=>({currentPoolSqrtPrice:t}))},curPosContractPoolInfo:null,setCurPosContractPoolInfo:t=>{r(()=>({curPosContractPoolInfo:t}))},useZapIn:!1,setUseZapIn:t=>{r(()=>({useZapIn:t}))}}),v=x(j);function R(){const r=k("clmm"),{posBaseList:u,setCurrentPosBaseInfo:t,setCurrentPosBaseInfoLoading:b}=O(),{setCurPosHistoryList:N,setIsPosHistoryLoading:a}=v(),{buildPosBaseInfo:m}=F(),{getPosRelatedData:f}=V(),y=async(p,o,e=!1)=>{b(!0);const s=u.find(n=>n.id===o);let i;s&&!e?i=s:i=await g(p,o),console.log("getCurrentPosBaseInfo ~ posInfo:",u,i),t(i),i&&f([i])},g=async(p,o)=>{const e=await r.FullClient.getOwnedObjectsByPage(p,{options:{showType:!0,showContent:!0,showOwner:!0},filter:{ObjectId:o}});return e&&e.data&&e.data.length>0?await m(e.data[0]):null},d=async(p,o)=>{var s;const e=["https://mainnet.suiet.app:443","https://rpc-mainnet.suiscan.xyz:443"];for(const i of e)try{const n=await r.Position.getPositionTransactionList({pos_id:p,full_rpc_url:i,origin_pos_id:o,order:"descending"});if(console.log("ğŸš€ ~ getCurrentPosHistory ~ response?.data:",n==null?void 0:n.data,i),((s=n==null?void 0:n.data)==null?void 0:s.length)>0)return n.data}catch(n){console.error(`Error fetching data from ${i}:`,n)}return[]};return{getCurrentPosBaseInfo:y,getCurrentPosHistory:async(p,o)=>{console.log("ğŸš€ ~ getCurrentPosHistory ~ posId:",p,o),a(!0);const e=await d(p,o),s=p.toLowerCase()!==o.toLowerCase()?await d(o,o):[];console.log("ğŸš€ ~ getCurrentPosHistory ~ clmmHistory:",e,s,[...e,...s]);const n=[...e,...s].sort((P,l)=>(l==null?void 0:l.timestampMs)-(P==null?void 0:P.timestampMs));N(n),a(!1),console.log("ğŸš€ ~ getCurrentPosHistory ~ result:",n)},getCurrentPosByPosId:g}}function E(){const{fetchOwnerVeNFT:r}=B(),{showCommonToast:u}=D(),{notifiSources:t}=T();return{createNotifiSubscriptionVerify:async()=>{try{const a=await r();if(a!=null&&a.xcetus_balance){if(_(a.xcetus_balance).div(Math.pow(10,9)).lessThan(1e3))return u("Price alerts are currently open to users who hold 1000+ xCETUS.","rejected"),!1}else return u("Unable to fetch xCetus information.","rejected"),!1;return t.length>=5?(u("Price alerts can only be enabled for up to 5 positions for an account at the same time.","rejected"),!1):!0}catch(a){return console.error("ğŸš€ ~ createNotifiSubscriptionVerify ~ error:",a),u("An error occurred while verifying the subscription.","rejected"),!1}},getPositionNotifiStatus:(a,m)=>{try{const f=t.find(y=>{const{pool_address:g,position_index:d}=JSON.parse(y.blockchainAddress);return g===a&&d===m});return{isSubscription:!!f,alertID:(f==null?void 0:f.alertID)||""}}catch(f){return console.error("ğŸš€ ~ getPositionNotifiStatus ~ error:",f),{isSubscription:!1,alertID:""}}}}}function G(){const{getCurrentPosByPosId:r}=R(),{currentAccount:u}=L(),{createNotifiAlert:t,deleteNotifiAlerts:b}=H(),{setIsChecked:N,setNotifiSubscriptionLoading:a,notifiClient:m}=T(),{createNotifiSubscriptionVerify:f,getPositionNotifiStatus:y}=E(),g=async o=>{if(a(!0),!await f())return N(!1),!1;const{subscriptionSource:s,position:i,posIndex:n,events:P}=o;console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:30 ~ notifiSubscription ~ notifiSubscriptionParams:",o);try{if(s=="PositionDetail")d(String(i),String(n));else{const l=P.filter(A=>A.type.indexOf("OpenPositionEvent")>-1)[0],c=P.filter(A=>A.type.indexOf("DepositEvent")>-1)[0],{position:S,pool:w}=l.parsedJson,I=c?c.parsedJson.wrapped_position_id:l.parsedJson.position,C=await r(u==null?void 0:u.address,I);C&&(console.log("ğŸš€ğŸš€ğŸš€ ~ file: useNotifiSubscription.ts:36 ~ notifiSubscription ~ currentPosInfo.index:",C.index),d(S,String(C.index)))}}catch(l){a(!1),console.log("ğŸš€ğŸš€ğŸš€ ~ file: useNotifiSubscription.ts:45 ~ notifiSubscription ~ error:",l)}},d=async(o,e)=>{t(o,e)},h=async(o,e,s)=>{console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:57 ~ notifiUnSubscription ~ posId:",o),console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:58 ~ notifiUnSubscription ~ posIndex:",s);const{alertID:i}=y(o,String(s));i&&b(i)};return{notifiSubscription:g,notifiUnSubscription:h,getNotifiPositionTransfer:(o,e,s)=>{if(e&&e.userState&&e.userState.status=="authenticated"){console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:62 ~ getNotifiPositionTransfer ~ notifiSources:",s);for(let i=0;i<s.length;i++){const{pool_address:n,position_index:P}=JSON.parse(s[i].blockchainAddress);let l=!1,c;for(let S=0;S<o.length;S++){const{posId:w,index:I}=o[S];n==w&&Number(I)==Number(P)&&(l=!0),c={pool_address:n,position_index:P,clmmPool:o[S].clmmPool}}l||h(c==null?void 0:c.pool_address,c==null?void 0:c.clmmPool,c==null?void 0:c.position_index)}}console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ notifiSources:",s),console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ posBaseList:",o),console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ notifiClient:",e.us)}}}export{v as a,R as b,E as c,G as u};
//# sourceMappingURL=useNotifiSubscription-CPPflfat.js.map
