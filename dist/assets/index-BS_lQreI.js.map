{"version":3,"file":"index-BS_lQreI.js","sources":["../../src/store/swap/swapConfig.ts","../../../../node_modules/.pnpm/suihoneypot@0.0.6_typescript@5.8.2/node_modules/suihoneypot/src/index.ts"],"sourcesContent":["import { AggregatorProvider } from '@/types/swap'\nimport { create, StateCreator } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface SwapConfigState {\n  providersSwitchStates: Partial<Record<AggregatorProvider, boolean>>\n  setProvidersSwitchStates: (provider: Partial<Record<AggregatorProvider, boolean>>) => void\n  supportOrderSplit: boolean\n  setSupportOrderSplit: (value: boolean) => void\n}\n\nconst store: StateCreator<SwapConfigState> = (set, get) => ({\n  providersSwitchStates: {\n    [AggregatorProvider.CETUS]: true\n  },\n  setProvidersSwitchStates: (provider: Partial<Record<AggregatorProvider, boolean>>) => {\n    const providersSwitchStates = get().providersSwitchStates\n    set(() => ({\n      providersSwitchStates: { ...providersSwitchStates, ...provider }\n    }))\n  },\n  supportOrderSplit: true,\n  setSupportOrderSplit: (value: boolean) => {\n    set(() => ({\n      supportOrderSplit: value\n    }))\n  }\n})\n\nconst useSwapConfigStore = create(persist(store, { name: 'useSwapConfigStore' }))\nexport default useSwapConfigStore\n","import { getFullnodeUrl, SuiClient } from \"@mysten/sui/client\";\nimport { normalizeSuiAddress } from '@mysten/sui/utils';\n\nconst client = new SuiClient({\n    url: getFullnodeUrl(\"mainnet\"),\n});\n\nconst wl: string[] = [\n    '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC',     // Circle Native USDC\n    '0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD',     // Agora USD\n    '0xf16e6b723f242ec745dfd7634ad072c42d5c1d9ac9d62a39c381303eaa57693a::fdusd::FDUSD',   // FDUSD\n    '0x960b531667636f39e85867775f52f6b1f220a058c4de786905bdf761e06a56bb::usdy::USDY',     // Ondo USDY\n    '0x294de7579d55c110a00a7c4946e09a1b5cbeca2592fbb83fd7bfacba3cfeaf0e::drf::DRF'        // DRF\n];\n\nconst denyFeat: string[] = ['deny_list', 'DenyList', 'DenyCap', 'create_regulated_currency'];\n\nconst defaultOptions = {\n\tshowType: true,\n\tshowContent: true,\n\tshowOwner: false,\n\tshowPreviousTransaction: false,\n\tshowStorageRebate: false,\n\tshowDisplay: false,\n};\n\nexport const isHoneyPot = async (ca: string): Promise<boolean> => {\n    let isHoneyPot = false;\n\n    if (wl.includes(ca)) {\n        return isHoneyPot\n    }\n\n    const info = ca.split('::');\n    const package_id = info[0] && normalizeSuiAddress(info[0]);\n    const module_id = info[1];\n\n    const res = await client.getObject({ id: package_id, options: defaultOptions });\n    const bytecode = 'disassembled' in res.data!.content! ? res.data!.content.disassembled[module_id] : null;\n    \n    if (bytecode && typeof bytecode === 'string') {\n        const regex = new RegExp(denyFeat.join('|'), 'i');\n        if (regex.test(bytecode)) {\n            isHoneyPot = true;\n        }\n    }\n\n    return isHoneyPot\n}\n"],"names":["store","set","get","AggregatorProvider","provider","providersSwitchStates","value","useSwapConfigStore","create","persist","client","SuiClient","getFullnodeUrl","wl","denyFeat","defaultOptions","isHoneyPot","ca","info","package_id","normalizeSuiAddress","module_id","res","bytecode"],"mappings":"wHAWA,MAAMA,EAAuC,CAACC,EAAKC,KAAS,CAC1D,sBAAuB,CACrB,CAACC,EAAmB,KAAK,EAAG,EAC9B,EACA,yBAA2BC,GAA2D,CAC9E,MAAAC,EAAwBH,IAAM,sBACpCD,EAAI,KAAO,CACT,sBAAuB,CAAE,GAAGI,EAAuB,GAAGD,CAAS,CAAA,EAC/D,CACJ,EACA,kBAAmB,GACnB,qBAAuBE,GAAmB,CACxCL,EAAI,KAAO,CACT,kBAAmBK,CAAA,EACnB,CAAA,CAEN,GAEMC,EAAqBC,EAAOC,EAAQT,EAAO,CAAE,KAAM,qBAAsB,CAAC,EC1B1EU,EAAS,IAAIC,EAAU,CACzB,IAAKC,EAAe,SAAS,CACjC,CAAC,EAEKC,EAAe,CACjB,iFACA,iFACA,mFACA,iFACA,8EACJ,EAEMC,EAAqB,CAAC,YAAa,WAAY,UAAW,2BAA2B,EAErFC,EAAiB,CACtB,SAAU,GACV,YAAa,GACb,UAAW,GACX,wBAAyB,GACzB,kBAAmB,GACnB,YAAa,EACd,EAEaC,EAAa,MAAOC,GAAiC,CAC9D,IAAID,EAAa,GAEb,GAAAH,EAAG,SAASI,CAAE,EACPD,OAAAA,EAGL,MAAAE,EAAOD,EAAG,MAAM,IAAI,EACpBE,EAAaD,EAAK,CAAC,GAAKE,EAAoBF,EAAK,CAAC,CAAC,EACnDG,EAAYH,EAAK,CAAC,EAElBI,EAAM,MAAMZ,EAAO,UAAU,CAAE,GAAIS,EAAY,QAASJ,EAAgB,EACxEQ,EAAW,iBAAkBD,EAAI,KAAM,QAAWA,EAAI,KAAM,QAAQ,aAAaD,CAAS,EAAI,KAEhG,OAAAE,GAAY,OAAOA,GAAa,UAClB,IAAI,OAAOT,EAAS,KAAK,GAAG,EAAG,GAAG,EACtC,KAAKS,CAAQ,IACnBP,EAAa,IAIdA,CACX","x_google_ignoreList":[1]}