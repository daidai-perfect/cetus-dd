{"version":3,"file":"Swap-BhhOQlxn.js","sources":["../../src/components/modal/SwapConfirmModel.tsx","../../src/hooks/swap/useGetRouterConfig.ts","../../src/components/swap/AggregatorMode/index.tsx","../../src/components/swap/PriceChart.tsx","../../src/components/swap/PriceReference.tsx","../../src/components/swap/Swap.tsx"],"sourcesContent":["import useSwapStore from '@/store/swap/swap'\nimport { SwapRouterData } from '@/types/swap'\nimport { Heading, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react'\nimport SwapConfirmBlock from '../swap/SwapConfirmBlock'\n\ntype SwapConfirmModelProps = {\n  data: SwapRouterData\n  isOpen: boolean\n  onClose: () => void\n  onSubmitClick: (data: SwapRouterData) => void\n}\n\nexport default function SwapConfirmModel(props: SwapConfirmModelProps) {\n  const { isOpen, onClose, data, onSubmitClick } = props\n  const { fromCoin, toCoin, routerData } = useSwapStore()\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} trapFocus={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Swap\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <SwapConfirmBlock\n            onSubmitClick={onSubmitClick}\n            onClose={onClose}\n            data={data}\n            lastRouterData={routerData}\n            fromCoin={fromCoin!}\n            toCoin={toCoin!}\n            isWidget={false}\n          />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { aggregatorStatusPath } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\n\nexport default function useGetRouterConfig() {\n  const { fetchByApi } = useFetch()\n  const { setProviders } = useWebConfigStore()\n\n  /**\n   * 获取router配置信息\n   * TODO 每次打开调用一次？\n   */\n  const fetchRouterConfig = async () => {\n    try {\n      const res = await fetchByApi(aggregatorStatusPath, 'GET')\n      const { providers } = res\n      if (providers && providers.length > 0) {\n        setProviders(providers)\n      }\n      console.log('🚀 ~ file: useGetRouterConfig.ts:13 ~ fetchRouterConfig ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ file: useGetRouterConfig.ts:18 ~ fetchRouterConfig ~ error:', error)\n    }\n  }\n\n  return {\n    fetchRouterConfig\n  }\n}\n","import useCustomizeRouting from '@/hooks/swap/useCustomizeRouting'\nimport useGetRouterConfig from '@/hooks/swap/useGetRouterConfig'\nimport { Icon } from '@cetus/ui-kit'\nimport { Button, FormControl, FormLabel, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Skeleton, Switch } from '@chakra-ui/react'\nimport { useDeepCompareEffect, useRequest } from 'ahooks'\nimport confetti from 'canvas-confetti'\nimport { useRef, useState } from 'react'\nimport AggregatorModeModal from './AggregatorModal'\n\nfunction AggregatorMode() {\n  const [settingOpen, setSettingOpen] = useState(false)\n  const switchRef = useRef<any>(null)\n  const onClose = () => {\n    setSettingOpen(false)\n  }\n\n  const { fetchRouterConfig } = useGetRouterConfig()\n\n  const { loading } = useRequest(fetchRouterConfig)\n\n  const { handleSelectAllProviderClick, handleSaveClick, currProvidersSwitchStates, isOpenAggregatorMode } = useCustomizeRouting()\n\n  const handleChange = () => {\n    if (!isOpenAggregatorMode) {\n      triggerConfettiAnimation()\n    }\n    handleSelectAllProviderClick(!isOpenAggregatorMode)\n  }\n\n  useDeepCompareEffect(() => {\n    handleSaveClick()\n  }, [currProvidersSwitchStates])\n\n  const triggerConfettiAnimation = () => {\n    const viewportWidth = window.innerWidth\n    const viewportHeight = window.innerHeight\n    const rect = switchRef.current?.getBoundingClientRect()\n    const x: any = rect?.left\n    const y: any = rect?.top\n\n    const scalar = 2\n    const shape1 = confetti.shapeFromText({ text: '🟢', scalar })\n    const shape2 = confetti.shapeFromText({ text: '🔵', scalar })\n    const shape3 = confetti.shapeFromText({ text: '💚', scalar })\n    const shape4 = confetti.shapeFromText({ text: '💙', scalar })\n    confetti({\n      particleCount: 40,\n      spread: 60,\n      // origin: { y: 0.6 },\n      shapes: [shape1, shape2, shape3, shape4],\n      scalar,\n      // origin: { y: 0.2 },\n      origin: { x: x / viewportWidth, y: (y * 1.2) / viewportHeight }\n    })\n  }\n\n  return (\n    <>\n      <Skeleton isLoaded={!loading} w=\"178px\" h=\"28px\">\n        <HStack border=\"1px solid\" borderColor=\"border\" borderRadius=\"8px\" h=\"28px\" bg=\"bg_secondary\" gap=\"8px\">\n          <Popover isLazy trigger=\"hover\" autoFocus={false} returnFocusOnClose={false}>\n            <PopoverTrigger>\n              <FormControl display=\"flex\" alignItems=\"center\" pl=\"8px\">\n                <FormLabel\n                  htmlFor=\"aggregator-mode\"\n                  mb=\"0\"\n                  bg=\"plus_mode_color\"\n                  textFillColor=\"transparent\"\n                  backgroundClip=\"text\"\n                  h=\"18px\"\n                  lineHeight=\"18px\"\n                  fontSize=\"12px\"\n                  fontWeight=\"500\"\n                  fontStyle=\"normal\"\n                  mr=\"8px\"\n                >\n                  Aggregator Mode\n                </FormLabel>\n                <Switch ref={switchRef} id=\"aggregator-mode\" isChecked={isOpenAggregatorMode} onChange={handleChange} />\n              </FormControl>\n            </PopoverTrigger>\n            <PopoverContent>\n              <PopoverBody p=\"12px\" lineHeight=\"20px\" fontSize=\"12px\">\n                The Aggregator Mode will aggregate external liquidity sources\n              </PopoverBody>\n            </PopoverContent>\n          </Popover>\n          <Button\n            variant=\"unstyled\"\n            mr=\"-1px\"\n            minW=\"20px\"\n            w=\"20px\"\n            p=\"7px 4px\"\n            h=\"28px\"\n            bg=\"border\"\n            borderRadius=\"0 8px 8px 0\"\n            onClick={() => setSettingOpen(!settingOpen)}\n            _hover={{\n              svg: {\n                fill: 'text_caption'\n              }\n            }}\n          >\n            <Icon xlinkHref=\"#icon-icon_list_token\" fontSize=\"12px\" />\n          </Button>\n        </HStack>\n      </Skeleton>\n\n      {settingOpen && <AggregatorModeModal isOpen={settingOpen} onClose={onClose} />}\n    </>\n  )\n}\n\nexport default AggregatorMode\n","import { d, formatPrice } from '@cetus/utils'\nimport dayjs from 'dayjs'\nimport { Line, LineChart, ResponsiveContainer, Tooltip, YAxis } from 'recharts'\nimport { CategoricalChartProps } from 'recharts/types/chart/generateCategoricalChart'\n\n// 自定义 Tooltip 内容\nconst CustomTooltip = ({ active, payload, label }: any) => {\n  // console.log(payload, 'payload')\n  if (active && payload && payload.length) {\n    return (\n      <div\n        style={{\n          backgroundColor: '#121212',\n          border: '1px solid border_secondary',\n          padding: '12px',\n          borderRadius: '8px',\n          position: 'relative',\n          left: '0px', // 控制位置\n          top: '-30px', // 控制位置\n          fontSize: '12px'\n        }}\n      >\n        <p style={{ color: '#909CA4' }}>{dayjs.unix(payload[0]?.payload?.timestamp).format('MM/DD HH:mm')}</p>\n        <p style={{ color: '#fff', marginTop: '8px' }}>${formatPrice(payload[0].value)}</p>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default function PriceChart({ data = [] }: { data: CategoricalChartProps['data'] }) {\n  const min = d(Math.min(...data.map((item: any) => item.price)))\n    .mul(0.99999)\n    .toNumber()\n\n  const max = d(Math.max(...data.map((item: any) => item.price)))\n    .mul(1.00001)\n    .toNumber()\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart\n        width={180}\n        height={48}\n        data={data}\n        margin={{\n          top: 5,\n          right: 20,\n          left: 20,\n          bottom: 5\n        }}\n      >\n        <defs>\n          <linearGradient id=\"priceLine\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n            <stop offset=\"0%\" stopColor=\"rgba(117, 200, 255, 1)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(104, 255, 216, 1)\" />\n          </linearGradient>\n        </defs>\n        <YAxis hide domain={[min, max]} />\n        <Tooltip cursor={false} content={<CustomTooltip />} />\n        <Line type=\"linear\" dot={false} dataKey=\"price\" stroke=\"url(#priceLine)\" strokeWidth={2} />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n","import { AddressCopyLink, MarketSource, MarketType, Ratio, TooltipIcon } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Token } from '@cetus/types'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport { formatPrice } from '@cetus/utils'\nimport { Box, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport PriceChart from './PriceChart'\n\ninterface PriceReferenceProps {\n  fromCoin?: Token\n  toCoin?: Token\n}\n\nfunction PriceReference({ fromCoin, toCoin }: PriceReferenceProps) {\n  const tokenList = useMemo(() => {\n    return [fromCoin, toCoin].filter(Boolean).filter(item => !!(item?.is_verified === undefined ? item?.is_trusted : item?.is_verified))\n  }, [fromCoin, toCoin])\n  return tokenList.length ? (\n    <VStack w=\"100%\" align=\"flex-start\" gap=\"8px\">\n      <HStack justify=\"flex-start\" h=\"52px\" align=\"center\" gap=\"4px\">\n        <Text fontSize=\"14px\" fontWeight=\"500\" color=\"text_caption\" h=\"20px\" lineHeight=\"20px\">\n          Price Reference\n        </Text>\n        <TooltipIcon type=\"priceReference\" />\n      </HStack>\n      <VStack w=\"100%\" gap=\"28px\">\n        {(fromCoin?.is_verified === undefined ? fromCoin?.is_trusted : fromCoin?.is_verified) && <Item coin={fromCoin} />}\n        {(toCoin?.is_verified === undefined ? toCoin?.is_trusted : toCoin?.is_verified) && <Item coin={toCoin} />}\n      </VStack>\n    </VStack>\n  ) : null\n}\n\nconst Item = ({ coin }: { coin?: Token }) => {\n  const { getExplorerUrl } = useExplorer()\n  const { getPriceKline, getTokenPrice } = useTokenPrice()\n  const [priceData, setPriceData] = useState<{ price: any[]; daily_rate: string }>({ price: [], daily_rate: '' })\n\n  useEffect(() => {\n    setPriceData({ price: [], daily_rate: '' })\n  }, [coin])\n\n  const coinMarketInfo = getTokenPrice(coin?.coin_type as string)\n\n  const fetchPriceData = async (coin_type: string, market: string) => {\n    try {\n      const data = await getPriceKline(coin_type, market)\n      setPriceData(data)\n    } catch (error) {\n      console.log(error, 'error')\n    }\n  }\n\n  useEffect(() => {\n    if (coinMarketInfo?.base_symbol) {\n      fetchPriceData(coinMarketInfo?.base_symbol, coinMarketInfo?.market)\n    }\n  }, [coinMarketInfo?.base_symbol, coinMarketInfo?.market, coin?.coin_type])\n\n  if (!priceData || priceData.price.length === 0) {\n    return <></>\n  }\n\n  return (\n    <VStack w=\"100%\" gap=\"12px\">\n      <HStack w=\"100%\" justify=\"space-between\" align=\"flex-start\" h=\"32px\">\n        <HStack>\n          <SingleCoinImage imageUrl={coin?.logo_url} w=\"28px\" h=\"28px\" />\n          <VStack align=\"flex-start\" gap=\"4px\">\n            <Text fontSize=\"14px\" h=\"16px\" lineHeight=\"16px\" fontWeight=\"600\" color=\"text_caption\">\n              {coin?.symbol}\n            </Text>\n            <Text fontSize=\"12px\" h=\"12px\" lineHeight=\"12px\" fontWeight=\"500\">\n              {coin?.name}\n            </Text>\n          </VStack>\n        </HStack>\n        <HStack>\n          {coinMarketInfo?.market && <MarketSource market={coinMarketInfo?.market as MarketType} />}\n          <Text color=\"text_caption\" fontSize=\"14px\" fontWeight=\"500\">\n            ${coinMarketInfo?.price !== undefined ? formatPrice(coinMarketInfo?.price) : '--'}\n          </Text>\n          {priceData?.daily_rate && coinMarketInfo?.price !== undefined && <Ratio value={priceData?.daily_rate} />}\n        </HStack>\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\" align=\"flex-end\" gap=\"0\">\n        <AddressCopyLink\n          address={coin?.coin_type as string}\n          onClickLink={() => window.open(getExplorerUrl(coin?.coin_type, 'coin'))}\n          wrapStyle={{ border: '1px solid', borderColor: 'border', h: '24px', borderRadius: '8px', p: '0 8px', bg: 'bg_secondary' }}\n          fontWeight=\"500\"\n        />\n        <Box flex=\"0 0 210px\" h=\"24px\" mr=\"-13px\">\n          {coinMarketInfo?.price !== undefined && priceData?.price.length > 0 && <PriceChart data={priceData?.price} />}\n        </Box>\n      </HStack>\n    </VStack>\n  )\n}\n\nexport default PriceReference\n","import useCustomizeRouting from '@/hooks/swap/useCustomizeRouting'\nimport { useSwapHook } from '@/hooks/swap/useSwap'\nimport { useSwapButtonStatus } from '@/hooks/swap/useSwapButtonStatus'\nimport { useFormatSwapRouter } from '@/hooks/swap/useSwapHelper'\nimport useGlobalStore from '@/store/common/global'\nimport useSwapStore from '@/store/swap/swap'\nimport { CetusTooltip, IconBg, TradeInputGroup } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { Decimal, formatNumber } from '@cetus/utils'\nimport { Box, Button, Center, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport Slippage from '../common/Slippage'\nimport SwapConfirmModel from '../modal/SwapConfirmModel'\nimport AggregatorMode from './AggregatorMode'\nimport FreshProgressV2, { FreshProgressRef } from './FreshProgressV2'\nimport PriceRatio from './PriceRatio'\nimport PriceReference from './PriceReference'\nimport ScamsAlert from './ScamsAlert'\nimport SwapRoutes from './SwapRoutes'\n// const FreshProgressV2 = lazy(() => import('./FreshProgressV2'))\n// const PriceReference = lazy(() => import('./PriceReference'))\n\nfunction Swap() {\n  const swapStore = useSwapStore()\n  const { fromCoin, toCoin, setFromCoin, setToCoin, byAmountIn, setFromAmount, setToAmount, setByAmountIn, findRouterLoading, routerData } = swapStore\n  const {\n    handleSelectToken,\n    handleAmountChange,\n    fromAmount,\n    toAmount,\n    fromAmountValue,\n    toAmountValue,\n    fromBalanceInfo,\n    toBalanceInfo,\n    amountLimit,\n    getSwapSecondaryData,\n    doSwapAction,\n    reCalculateRouteData,\n    scamsText,\n    refreshMarketPrice,\n    isOpenConfirmModel,\n    setIsOpenConfirmModel,\n    resetInputAmount,\n    onReverseClick\n  } = useSwapHook(swapStore, false)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [])\n  // Swap 按钮状态\n  const { btnText, btnDisabled } = useSwapButtonStatus(fromAmount, toAmount, fromBalanceInfo?.balanceFormat, fromCoin, toCoin, routerData)\n  const progressRef = useRef<FreshProgressRef>(null)\n  const { formatSwapRouter } = useFormatSwapRouter(routerData)\n  const { isOpenAggregatorMode } = useCustomizeRouting()\n\n  const handleReset = () => {\n    progressRef.current?.reset()\n  }\n\n  const handleRefresh = () => {\n    //刷新Router\n    reCalculateRouteData()\n    //刷新余额\n    fetchAccountBalance()\n    // 刷新市场价格\n    refreshMarketPrice()\n  }\n\n  // TODO 如果有修改，重置定时器\n  useEffect(() => {\n    handleReset()\n  }, [toAmount, fromAmount, fromCoin?.coin_type, toCoin?.coin_type])\n\n  useEffect(() => {\n    if (!byAmountIn) {\n      handleRefresh()\n    }\n  }, [toAmount, fromCoin?.coin_type, toCoin?.coin_type])\n\n  // 切换开关 情况输入\n  useEffect(() => {\n    resetInputAmount()\n  }, [isOpenAggregatorMode])\n\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (fromCoin) {\n      list.push(fromCoin)\n    }\n\n    if (toCoin) {\n      list.push(toCoin)\n    }\n\n    return list\n  }, [fromCoin, toCoin])\n\n  const [tradeIcon, setTradeIcon] = useState('#icon-a-icon_trade')\n\n  const onTradeIconMouseEnter = () => {\n    setTradeIcon('#icon-icon_swap1')\n  }\n\n  const onTradeIconMouseLeave = () => {\n    setTradeIcon('#icon-a-icon_trade')\n  }\n  const { isApp, windowWidth } = useWindowWidth()\n  const { isShowTradeChart, setIsShowTradeChart, isShowTradeOrders, setIsShowTradeOrders } = useGlobalStore()\n\n  return (\n    <>\n      <VStack gap={{ base: '16px', lg: '8px' }} w={{ base: '100%', lg: '470px' }}>\n        <HStack w=\"100%\" justify=\"space-between\">\n          <AggregatorMode />\n          <HStack>\n            <Slippage />\n            {/* <MEVProtect /> */}\n            <CetusTooltip\n              showTooltip={isApp ? false : true}\n              placement=\"bottom-end\"\n              tooltip={<Text fontSize=\"12px\">{isShowTradeChart ? 'Hide reference price' : 'View reference price'}</Text>}\n            >\n              <Center>\n                <IconBg\n                  w=\"28px\"\n                  h=\"28px\"\n                  borderRadius=\"8px\"\n                  variant=\"\"\n                  xlinkHref=\"#icon-icon_kline\"\n                  svgFill={isShowTradeChart ? 'primary' : ''}\n                  svgHover={isShowTradeChart ? 'primary' : isApp ? 'text_paragraph' : 'text_caption'}\n                  onClick={() => setIsShowTradeChart(!isShowTradeChart)}\n                />\n              </Center>\n            </CetusTooltip>\n            {/* <Suspense fallback={<div />}> */}\n            <FreshProgressV2 callbackInterval={isOpenConfirmModel ? 5 : 10} ref={progressRef} min={0} max={10} onClick={handleRefresh} />\n            {/* </Suspense> */}\n          </HStack>\n        </HStack>\n        <Box w=\"100%\">\n          <TradeInputGroup\n            // h5去掉背景图\n            // wrapStyle={isApp && !isShowTradeChart ? { bg: \"center / cover no-repeat url('/images/swap_bg.png')\" } : {}}\n            wrapStyle={{ gap: { base: '16px', lg: '8px' }, mt: { base: '0px', lg: '4px' } }}\n            onClick={() => onReverseClick(isOpenAggregatorMode)}\n            from={{\n              title: 'You Pay',\n              balance: fromBalanceInfo?.balanceFormat || '',\n              value: fromAmount,\n              amountValue: fromAmountValue,\n              loading: !byAmountIn && findRouterLoading,\n              onChange: value => {\n                handleAmountChange(value, true)\n              },\n              selectable: true,\n              placeholder: '0.0',\n              token: fromCoin,\n              onFocusChange: (focus: boolean) => {\n                if (focus && +fromAmount && !byAmountIn) {\n                  handleAmountChange(fromAmount, true)\n                }\n              },\n              onTokenChange: (token: any) => {\n                handleSelectToken(token, true)\n              }\n            }}\n            to={{\n              title: 'You Receive',\n              balance: toBalanceInfo?.balanceFormat || '',\n              value: toAmount,\n              amountValue: toAmountValue,\n              loading: byAmountIn && findRouterLoading,\n              onFocusChange: (focus: boolean) => {\n                if (focus && +toAmount && byAmountIn) {\n                  handleAmountChange(toAmount, false)\n                }\n              },\n              onTokenChange: (token: any) => {\n                handleSelectToken(token, false)\n              },\n              inputAllowed: !isOpenAggregatorMode,\n              onChange: value => {\n                handleAmountChange(value, false)\n              },\n              selectable: true,\n              placeholder: '0.0',\n              token: toCoin,\n              half: false,\n              max: false\n            }}\n            iconParams={{\n              xlinkHref: tradeIcon,\n              svgFill: 'text_caption',\n              transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n              fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n              onMouseEnter: onTradeIconMouseEnter,\n              onMouseLeave: onTradeIconMouseLeave\n            }}\n          />\n\n          {/* 风险提示 */}\n          {scamsText && (\n            <Box mt=\"-32px\" p=\"48px 16px 16px\" borderRadius=\"20px\" bg=\"bg_secondary\" border=\"1px solid\" borderColor=\"border\">\n              <ScamsAlert scamsText={scamsText} />\n            </Box>\n          )}\n        </Box>\n\n        {/* Token 警告弹窗 */}\n        {(fromCoin || toCoin) && (\n          <WarningTokenTipsModal\n            addToken\n            tokensInfo={warningTokenList}\n            waringModalCancel={(tokenInfo: Token[]) => {\n              tokenInfo.forEach(coin => {\n                const hasFind = coin.coin_type === fromCoin?.coin_type || coin.coin_type === toCoin?.coin_type\n                if (hasFind) {\n                  handleSelectToken(undefined, coin.coin_type === fromCoin?.coin_type)\n                }\n              })\n            }}\n          />\n        )}\n\n        <VStack\n          p={!!+fromAmount && !!+toAmount ? '0 8px 12px' : '0 8px'}\n          w=\"100%\"\n          gap=\"8px\"\n          border=\"1px solid\"\n          borderColor=\"border\"\n          borderRadius=\"20px\"\n          bg=\"bg_secondary\"\n        >\n          <Button\n            w=\"calc(100% + 18px)\"\n            h=\"52px\"\n            margin=\"-1px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            borderRadius=\"12px\"\n            isDisabled={findRouterLoading || btnDisabled}\n            isLoading={findRouterLoading}\n            onClick={() => {\n              if (currentAccount) {\n                setIsOpenConfirmModel(true)\n              } else {\n                onWalletModal(true)\n              }\n            }}\n          >\n            {[fromCoin, toCoin]?.filter(Boolean).length < 2 ? 'Select a token' : btnText}\n          </Button>\n          {!!+fromAmount && !!+toAmount && (\n            <VStack w=\"100%\" gap=\"12px\">\n              <PriceRatio findRouterLoading={findRouterLoading} routerData={routerData} fromCoin={fromCoin} toCoin={toCoin} />\n              <HTextLabelBox\n                isLoading={findRouterLoading}\n                label={byAmountIn ? 'Minimum Received' : 'Maximum Sold'}\n                value={`${formatNumber(amountLimit, byAmountIn ? toCoin?.decimals : fromCoin?.decimals, false, Decimal.ROUND_DOWN)} ${byAmountIn ? toCoin?.symbol : fromCoin?.symbol}`}\n                labelStyle={{ fontWeight: 500, whiteSpace: 'nowrap', fontSize: '14px' }}\n                valueStyle={{ fontWeight: 500, fontSize: '14px' }}\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n                wrapStyle={{\n                  p: '0 8px',\n                  minH: '20px'\n                }}\n              />\n\n              <SwapRoutes\n                formatSwapRouter={formatSwapRouter}\n                findRouterLoading={findRouterLoading}\n                fromAmount={fromAmount}\n                toAmount={toAmount}\n                fromCoin={fromCoin}\n                toCoin={toCoin}\n              />\n            </VStack>\n          )}\n        </VStack>\n        {!isShowTradeChart && (\n          // <Suspense fallback={<div />}>\n          <PriceReference fromCoin={fromCoin} toCoin={toCoin} />\n          // </Suspense>\n        )}\n\n        {/* 交易确认弹窗 */}\n        {isOpenConfirmModel && (\n          <SwapConfirmModel\n            data={getSwapSecondaryData()}\n            isOpen={isOpenConfirmModel}\n            onSubmitClick={doSwapAction}\n            onClose={() => {\n              setIsOpenConfirmModel(false)\n            }}\n          />\n        )}\n      </VStack>\n    </>\n  )\n}\n\nexport default Swap\n"],"names":["SwapConfirmModel","props","isOpen","onClose","data","onSubmitClick","fromCoin","toCoin","routerData","useSwapStore","jsxs","Modal","jsx","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","SwapConfirmBlock","useGetRouterConfig","fetchByApi","useFetch","setProviders","useWebConfigStore","res","aggregatorStatusPath","providers","error","AggregatorMode","settingOpen","setSettingOpen","useState","switchRef","useRef","fetchRouterConfig","loading","useRequest","handleSelectAllProviderClick","handleSaveClick","currProvidersSwitchStates","isOpenAggregatorMode","useCustomizeRouting","handleChange","triggerConfettiAnimation","useDeepCompareEffect","viewportWidth","viewportHeight","rect","_a","x","y","scalar","shape1","confetti","shape2","shape3","shape4","Fragment","Skeleton","HStack","Popover","PopoverTrigger","FormControl","FormLabel","Switch","PopoverContent","PopoverBody","Button","Icon","AggregatorModeModal","CustomTooltip","active","payload","label","dayjs","_b","formatPrice","PriceChart","min","d","item","max","ResponsiveContainer","LineChart","YAxis","Tooltip","Line","PriceReference","useMemo","VStack","Text","TooltipIcon","Item","coin","getExplorerUrl","useExplorer","getPriceKline","getTokenPrice","useTokenPrice","priceData","setPriceData","useEffect","coinMarketInfo","fetchPriceData","coin_type","market","SingleCoinImage","MarketSource","Ratio","AddressCopyLink","Box","Swap","swapStore","setFromCoin","setToCoin","byAmountIn","setFromAmount","setToAmount","setByAmountIn","findRouterLoading","handleSelectToken","handleAmountChange","fromAmount","toAmount","fromAmountValue","toAmountValue","fromBalanceInfo","toBalanceInfo","amountLimit","getSwapSecondaryData","doSwapAction","reCalculateRouteData","scamsText","refreshMarketPrice","isOpenConfirmModel","setIsOpenConfirmModel","resetInputAmount","onReverseClick","useSwapHook","currentAccount","onWalletModal","useAccountStore","fetchAccountBalance","useAccountBalance","btnText","btnDisabled","useSwapButtonStatus","progressRef","formatSwapRouter","useFormatSwapRouter","handleReset","handleRefresh","warningTokenList","list","tradeIcon","setTradeIcon","onTradeIconMouseEnter","onTradeIconMouseLeave","isApp","useWindowWidth","isShowTradeChart","setIsShowTradeChart","isShowTradeOrders","setIsShowTradeOrders","useGlobalStore","Slippage","CetusTooltip","Center","IconBg","FreshProgressV2","TradeInputGroup","value","focus","token","ScamsAlert","WarningTokenTipsModal","tokenInfo","PriceRatio","HTextLabelBox","formatNumber","Decimal","SwapRoutes"],"mappings":"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"}