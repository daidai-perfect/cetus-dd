import{am as v,aD as I,d as A,a1 as D,bS as O}from"./index-D49RffYW.js";import{a as j}from"./useXCetusHelper-wuRv4yeo.js";import{a as k}from"./useCurrentPos-CwMCqO3d.js";function E(){const{fetchOwnerVeNFT:S}=j(),{showCommonToast:i}=v(),{notifiSources:d}=I();return{createNotifiSubscriptionVerify:async()=>{try{const e=await S();if(e!=null&&e.xcetus_balance){if(A(e.xcetus_balance).div(Math.pow(10,9)).lessThan(1e3))return i("Price alerts are currently open to users who hold 1000+ xCETUS.","rejected"),!1}else return i("Unable to fetch xCetus information.","rejected"),!1;return d.length>=5?(i("Price alerts can only be enabled for up to 5 positions for an account at the same time.","rejected"),!1):!0}catch(e){return console.error("ðŸš€ ~ createNotifiSubscriptionVerify ~ error:",e),i("An error occurred while verifying the subscription.","rejected"),!1}},getPositionNotifiStatus:(e,l)=>{try{const s=d.find(b=>{const{pool_address:N,position_index:m}=JSON.parse(b.blockchainAddress);return N===e&&m===l});return{isSubscription:!!s,alertID:(s==null?void 0:s.alertID)||""}}catch(s){return console.error("ðŸš€ ~ getPositionNotifiStatus ~ error:",s),{isSubscription:!1,alertID:""}}}}}function U(){const{getCurrentPosByPosId:S}=k(),{currentAccount:i}=D(),{createNotifiAlert:d,getNotifiAlerts:T,deleteNotifiAlerts:P}=O(),{setIsChecked:e,setNotifiSubscriptionLoading:l,notifiClient:s}=I(),{createNotifiSubscriptionVerify:b,getPositionNotifiStatus:N}=E(),m=async o=>{if(l(!0),!await b())return e(!1),!1;const{subscriptionSource:a,position:r,posIndex:p,events:u}=o;try{if(a=="PositionDetail")y(String(r),String(p));else{const c=u.filter(g=>g.type.indexOf("OpenPositionEvent")>-1)[0],t=u.filter(g=>g.type.indexOf("DepositEvent")>-1)[0],{position:f,pool:w}=c.parsedJson,h=t?t.parsedJson.wrapped_position_id:c.parsedJson.position,_=await S(i==null?void 0:i.address,h);_&&y(f,String(_.index))}}catch{l(!1)}},y=async(o,n)=>{d(o,n)},x=async(o,n,a)=>{const{alertID:r}=N(o,String(a));r&&P(r)};return{notifiSubscription:m,notifiUnSubscription:x,getNotifiPositionTransfer:(o,n,a)=>{if(n&&n.userState&&n.userState.status=="authenticated")for(let r=0;r<a.length;r++){const{pool_address:p,position_index:u}=JSON.parse(a[r].blockchainAddress);let c=!1,t;for(let f=0;f<o.length;f++){const{posId:w,index:h}=o[f];p==w&&Number(h)==Number(u)&&(c=!0),t={pool_address:p,position_index:u,clmmPool:o[f].clmmPool}}c||x(t==null?void 0:t.pool_address,t==null?void 0:t.clmmPool,t==null?void 0:t.position_index)}}}}export{E as a,U as u};
