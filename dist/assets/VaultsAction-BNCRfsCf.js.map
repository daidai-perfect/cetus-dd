{"version":3,"file":"VaultsAction-BNCRfsCf.js","sources":["../../src/store/vaults-v2/useVaultsAction.ts","../../src/hooks/vault-v2/useCurrentVaultDetail.ts","../../src/components/vaults-v2/detail/VaultsAddResult.tsx","../../src/components/modal/VaultsAddConfirmModel.tsx","../../src/hooks/vault-v2/useVaultAvaiableCapacity.ts","../../src/hooks/vault-v2/useVaultsHelper.ts","../../src/hooks/vault-v2/useVaultsAdd.ts","../../src/hooks/vault-v2/useVaultsButtonStatus.ts","../../src/store/vaults-v2/useVaultsRisk.ts","../../src/components/vaults-v2/risk-modal/index.tsx","../../src/components/vaults-v2/detail/AvailableCapacity.tsx","../../src/components/vaults-v2/common/ZapSwitch.tsx","../../src/components/vaults-v2/detail/SwitchAssetTab.tsx","../../src/components/vaults-v2/detail/VaultsAdd.tsx","../../src/hooks/vault-v2/useVaultsRemove.ts","../../src/components/vaults-v2/detail/VaultsRemove.tsx","../../src/components/vaults-v2/detail/VaultsAction.tsx"],"sourcesContent":["import { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface VaultsActionState {\n  amountInputA: string\n  amountInputB: string\n  setAmountInputA: (amountInputA: string) => void\n  setAmountInputB: (amountInputB: string) => void\n  fromToken: Token\n  toToken: Token\n  setFromToken: (fromToken: Token) => void\n  setToToken: (toToken: Token) => void\n  calculateResult: { amount_a: string; amount_b: string; ft_amount?: string; burn_ft_amount?: string; swap_result?: any; swap?: any }\n  setCalculateResult: (\n    calculateResult: { amount_a: string; amount_b: string; ft_amount?: string; burn_ft_amount?: string; swap_result?: any; swap?: any } | undefined\n  ) => void\n  clearVaultsActionData: () => void\n}\n\nconst store: StateCreator<VaultsActionState> = (set, get) => ({\n  amountInputA: '',\n  amountInputB: '',\n  setAmountInputA: (value: string) => {\n    set(() => ({\n      amountInputA: value\n    }))\n  },\n  setAmountInputB: (value: string) => {\n    set(() => ({\n      amountInputB: value\n    }))\n  },\n  fromToken: {} as Token,\n  toToken: {} as Token,\n  setFromToken: (fromToken: Token) => set({ fromToken }),\n  setToToken: (toToken: Token) => set({ toToken }),\n  calculateResult: { amount_a: '', amount_b: '', ft_amount: '' },\n  setCalculateResult: (\n    calculateResult: { amount_a: string; amount_b: string; ft_amount?: string; burn_ft_amount?: string; swap_result?: any; swap?: any } | undefined\n  ) => set({ calculateResult }),\n  clearVaultsActionData: () =>\n    set({\n      amountInputA: '',\n      amountInputB: '',\n      // fromToken: {} as Token,\n      // toToken: {} as Token,\n      calculateResult: { amount_a: '', amount_b: '', ft_amount: '' }\n    })\n})\n\nconst useVaultsActionStore = create(store)\nexport default useVaultsActionStore\n","import useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPoolContractStore from '@/store/vaults-v2/useVaultsPoolContract'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { isAvailableObject } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { useEffect, useRef } from 'react'\nimport useGetPythLastPrice from './pyth-price/useGetPythLastPrice'\nimport useGetVaultPoolList from './useGetVaultPoolList'\nimport useGetVaultsContract from './useGetVaultsContract'\nimport useGetVaultsPosition from './useGetVaultsPosition'\n\nexport default function useCurrentVaultDetail() {\n  const { setCurrentVaultPosition, vaultsPositionObj, setCurrentVaultPositionLoading, setVaultsPositionObj } = useVaultsPositionStore()\n  const { vaultClmmPoolContractInfoObj, setLstVaultContractInfoObj, setHaedalVaultContractInfoObj } = useVaultsPoolContractStore()\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n  const vaultsSdk = useSdk('vaults')\n  const { vaultsList } = useVaultsListV2Store()\n  const { getVaultPoolList } = useGetVaultPoolList()\n  const { getVaultPosition } = useGetVaultsPosition()\n  const { getVaultsContractInfo } = useGetVaultsContract()\n  const { getPythLastPrice } = useGetPythLastPrice()\n  const { fetchTokenPrices } = useTokenPrice()\n  const { setFromToken, setToToken } = useVaultsActionStore()\n\n  const { currentAccount } = useAccountStore()\n  const currentAcc = useRef(currentAccount?.address)\n  useEffect(() => {\n    currentAcc.current = currentAccount?.address\n  }, [currentAccount?.address])\n\n  // 获取当前vault详情\n  const getCurrentVaultDetail = (vaultId: string, isRefresh = false) => {\n    console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:61 ~ getCurrentVaultDetail ~ getCurrentVaultDetail:')\n\n    // 如果当前vault详情已存在，则直接返回\n    console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:44 ~ getCurrentVaultDetail ~ vaultsPositionObj:', vaultsPositionObj, currentAcc.current)\n    if (isAvailableObject(vaultsPositionObj) && vaultsPositionObj[vaultId] && !isRefresh) {\n      const currentVaultPositionData = vaultsPositionObj[vaultId]\n      console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:46 ~ getCurrentVaultDetail ~ currentVaultPositionData:', currentVaultPositionData)\n      if (currentVaultPositionData.ownerAddress == currentAcc.current && currentAcc.current) {\n        const { displayTokenA, displayTokenB } = currentVaultPositionData\n        setFromToken(displayTokenA)\n        setToToken(displayTokenB)\n        setCurrentVaultPosition(currentVaultPositionData)\n        setCurrentVaultPositionLoading(false)\n      } else {\n        getCurrentVaultByVaultId(vaultId, isRefresh)\n      }\n    } else {\n      // 没有的话获取最新的\n      getCurrentVaultByVaultId(vaultId, isRefresh)\n    }\n  }\n\n  // 获取当前Vault 池子信息、token汇率\n  const getCurrentVaultContractInfo = async (vaultId: any) => {\n    // 获取vault列表\n    const list = await getVaultPoolList()\n    // 获取当前vault详情\n    const vault = list.filter((item: any) => item.vaultId == vaultId)[0]\n    const { displayTokenA, displayTokenB } = vault\n    setFromToken(displayTokenA)\n    setToToken(displayTokenB)\n    if (vault.category == 'haedal') {\n      getPythLastPrice([fixCoinType(vault.displayTokenA.coin_type, false), fixCoinType(vault.displayTokenB.coin_type, false)])\n    } else {\n      fetchTokenPrices([fixCoinType(vault.displayTokenA.coin_type, false), fixCoinType(vault.displayTokenB.coin_type, false)])\n    }\n    // 获取vaultsContractInfo\n    const { lstVaultContractInfoObj, haedalVaultContractInfoObj, allClmmPoolContractInfoObj } = await getVaultsContractInfo([vault])\n    // 获取clmmContractInfo\n    const clmmContractInfo = allClmmPoolContractInfoObj[vault.clmmPoolAddress]\n    // 获取vaultContractInfo\n    const vaultContractInfo = vault.category == 'cetus' ? lstVaultContractInfoObj[vault.vaultId] : haedalVaultContractInfoObj[vault.vaultId]\n    return { vaultContractInfo, clmmContractInfo, vault }\n  }\n\n  // 获取当前vault详情\n  const getCurrentVaultByVaultId = async (vaultId: any, isRefresh = false) => {\n    console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:87 ~ getCurrentVaultByVaultId ~ getCurrentVaultByVaultId:')\n    if (currentAcc.current && !isRefresh) {\n      setCurrentVaultPositionLoading(true)\n    }\n    const { vaultContractInfo, clmmContractInfo, vault } = await getCurrentVaultContractInfo(vaultId)\n    console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:92 ~ getCurrentVaultByVaultId ~ vaultContractInfo:', vaultContractInfo)\n    console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:93 ~ getCurrentVaultByVaultId ~ clmmContractInfo:', clmmContractInfo)\n    let currentVaultPosition: any = {}\n    if (clmmContractInfo && vaultContractInfo && currentAcc.current) {\n      // 获取当前vault详情\n      currentVaultPosition = await getVaultPosition(vault, clmmContractInfo, vaultContractInfo)\n      if (currentVaultPosition[vault.vaultId].ownerAddress == currentAcc.current && currentAcc.current) {\n        // 设置当前vault详情\n        setCurrentVaultPosition(currentVaultPosition[vault.vaultId])\n        setCurrentVaultPositionLoading(false)\n      }\n    } else {\n      setCurrentVaultPositionLoading(false)\n    }\n  }\n\n  // 更新当前vault详情\n  const updateCurrentVaultById = async (vaultId: string) => {\n    const vault = vaultsList.filter((item: any) => item.vaultId == vaultId)[0]\n    const clmmContractInfo = vaultClmmPoolContractInfoObj[vault.clmmPoolAddress]\n    const vaultContractInfo =\n      vault.category == 'cetus' ? await vaultsSdk!.Vaults.getVault(vault.vaultId) : await volatileVaultsSdk.Vaults.getPool(vault.vaultId)\n    if (vault.category == 'cetus') {\n      setLstVaultContractInfoObj({ [vault.vaultId]: vaultContractInfo })\n    } else {\n      setHaedalVaultContractInfoObj({ [vault.vaultId]: vaultContractInfo })\n    }\n    if (clmmContractInfo && vaultContractInfo) {\n      // 获取当前vault详情\n      const currentVaultPosition = await getVaultPosition(vault, clmmContractInfo, vaultContractInfo)\n      console.log('🚀🚀🚀 ~ useCurrentVaultDetail.ts:100 ~ updateCurrentVaultById ~ currentVaultPosition:', currentVaultPosition)\n      if (currentVaultPosition[vault.vaultId].ownerAddress == currentAcc.current && currentAcc.current) {\n        // 设置当前vault详情\n        setCurrentVaultPosition(currentVaultPosition[vault.vaultId])\n        setVaultsPositionObj(currentVaultPosition)\n      }\n    }\n  }\n\n  return { getCurrentVaultDetail, getCurrentVaultContractInfo, getCurrentVaultByVaultId, updateCurrentVaultById }\n}\n","import TotalAmount from '@/components/common/TotalAmount'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { convertScientificToDecimal, formatNumber } from '@cetus/utils'\nimport { fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { VStack } from '@chakra-ui/react'\n\ntype VaultsAddResultProps = {\n  preCalculateLoading: boolean\n  inputTotalValue?: string\n  lpRate: string\n  amountLimit?: string\n  labelColor?: string\n  lpDecimals?: number\n  poolName: string\n  calculateLpLoading?: boolean\n}\n\n// Vault添加结果\nexport function VaultsAddResult(props: VaultsAddResultProps) {\n  const { poolName, amountLimit, lpRate, inputTotalValue, preCalculateLoading, labelColor, lpDecimals, calculateLpLoading } = props\n\n  return (\n    <VStack w=\"100%\" gap=\"20px\">\n      <TotalAmount totalAmount={inputTotalValue} loading={preCalculateLoading} />\n\n      {/* <HTextLabelBox\n        label=\"Total Amount\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={formatCurrency(inputTotalValue, 2)}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={preCalculateLoading}\n      /> */}\n      <HTextLabelBox\n        label=\"Share of Pool\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={lpRate}\n        isLoading={calculateLpLoading}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n      />\n      <HTextLabelBox\n        label=\"Est. Received LP\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={`${convertScientificToDecimal(formatNumber(fromDecimalsAmount(amountLimit || '0', lpDecimals ? lpDecimals : 9)).toString(), 9)} ${poolName}`}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={calculateLpLoading}\n      />\n    </VStack>\n  )\n}\n","import { VaultsAddModelData } from '@/types/vaults'\nimport { Block, TradeConfirmAmountInfo } from '@cetus/design'\nimport { CoinPairImage } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  HStack,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { VaultsAddResult } from '../vaults-v2/detail/VaultsAddResult'\n\ntype VaultsAddConfirmModelProps = {\n  data: VaultsAddModelData\n  isOpen: boolean\n  onClose: () => void\n  onSubmitClick: () => void\n  calculateLpLoading?: boolean\n}\n\nexport default function VaultsAddConfirmModel(props: VaultsAddConfirmModelProps) {\n  const { isOpen, onClose, data, onSubmitClick, calculateLpLoading } = props\n  const { feeTier, displayTokenA, displayTokenB, displayAmountA, displayAmountB, totalAmountValue, sharePool, lpAmountLimit, lpDecimals } = data\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Deposit\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"20px\" p=\"16px\" pb=\"0px\" pos=\"relative\">\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <HStack>\n                <CoinPairImage\n                  coinAIconUrl={displayTokenA?.logo_url}\n                  coinBIconUrl={displayTokenB?.logo_url}\n                  imageStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                  imgBoxStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                />\n                <Text fontSize=\"16px\" color=\"text_caption\">\n                  {`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n                </Text>\n              </HStack>\n\n              <Block w=\"unset\" p=\"6px 8px\" borderRadius=\"12px\" ml=\"4px\">\n                <HStack>\n                  <Text>Fee Tier</Text>\n                  <Text color=\"primary\">{feeTier}</Text>\n                </HStack>\n              </Block>\n            </HStack>\n\n            {/* 交易数量展示 */}\n            <TradeConfirmAmountInfo\n              coinA={{\n                amount: displayAmountA,\n                ...displayTokenA\n              }}\n              iconParams={{\n                xlinkHref: '#icon-icon_add',\n                svgFill: 'text_caption'\n              }}\n              coinB={{\n                amount: displayAmountB,\n                ...displayTokenB\n              }}\n            />\n\n            {/* 展示结果 */}\n\n            <VaultsAddResult\n              amountLimit={lpAmountLimit}\n              inputTotalValue={totalAmountValue}\n              preCalculateLoading={false}\n              calculateLpLoading={calculateLpLoading}\n              lpRate={sharePool}\n              lpDecimals={lpDecimals}\n              poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n            />\n            <Box h=\"52px\" />\n            <Button\n              pos=\"absolute\"\n              bottom=\"0px\"\n              mt=\"4px\"\n              w=\"100%\"\n              h=\"52px\"\n              borderRadius=\"12px\"\n              fontSize=\"16px\"\n              fontWeight=\"500\"\n              onClick={() => {\n                onSubmitClick()\n              }}\n            >\n              Deposit\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { d, symbolDataDisplayProcessing } from '@cetus/utils'\nimport useGetPythTokenPrice from './pyth-price/useGetPythTokenPrice'\n// 获取vault可用容量\nexport default function useVaultAvaiableCapacity(currentVaultPool: any) {\n  const { getTokenAmountValueByPyth, getTokenPriceByPyth } = useGetPythTokenPrice()\n\n  if (currentVaultPool) {\n    const { hardCap, quoteCoinType, displayCoinTypeA, displayCoinTypeB, displayAmountA, displayAmountB, quoteCoin, baseCoin, baseCoinType } =\n      currentVaultPool\n\n    const hardCapUSD = getTokenAmountValueByPyth(quoteCoinType, hardCap)\n    if (!hardCapUSD) return {}\n    const displayHardCapUSD = symbolDataDisplayProcessing(hardCapUSD)\n    const holdingAmountA = getTokenAmountValueByPyth(displayCoinTypeA, displayAmountA)\n    const holdingAmountB = getTokenAmountValueByPyth(displayCoinTypeB, displayAmountB)\n    const vaultTvl = d(holdingAmountA).add(d(holdingAmountB)).toString()\n    const depositRatio = d(vaultTvl).div(d(hardCapUSD)).mul(100).toString()\n    const displayDepositRatio = symbolDataDisplayProcessing(depositRatio, '%')\n    const quoteCoinPrice = getTokenPriceByPyth(quoteCoinType)\n    const baseCoinPrice = getTokenPriceByPyth(baseCoinType)\n    const availableCapacityUSD = d(hardCapUSD).sub(d(vaultTvl)).gt(0) ? d(hardCapUSD).sub(d(vaultTvl)).toString() : '0'\n    let availableCapacityWithQuoteCoin, availableCapacityWithBaseCoin\n    if (availableCapacityUSD !== '0') {\n      availableCapacityWithQuoteCoin = d(availableCapacityUSD)\n        .div(quoteCoinPrice || '0')\n        .toString()\n      availableCapacityWithBaseCoin = d(availableCapacityUSD)\n        .div(baseCoinPrice || '0')\n        .toString()\n    } else {\n      availableCapacityWithQuoteCoin = '0'\n      availableCapacityWithBaseCoin = '0'\n    }\n\n    return {\n      hardCap,\n      hardCapUSD,\n      vaultTvl,\n      displayHardCapUSD,\n      depositRatio,\n      displayDepositRatio,\n      baseCoin,\n      quoteCoin,\n      availableCapacityWithQuoteCoin,\n      availableCapacityWithBaseCoin,\n      availableCapacityUSD\n    }\n  }\n  return {}\n}\n","import { VaultApiInfo } from '@/types/vaults'\nimport { d, Decimal, formatNumberWithDown, formatNumberWithThreshold } from '@cetus/utils'\nimport { useMemo } from 'react'\n\n/**\n * 计算变更 lp 的 持仓占比\n * @param changeLp\n * @param totalLp\n * @returns\n */\nexport function useCalculateChangeLpRate(changeLp?: string, totalLp?: string) {\n  const lpRate = useMemo(() => {\n    if (changeLp && totalLp) {\n      if (d(totalLp).eq(0)) {\n        return '100%'\n      }\n\n      return `${formatNumberWithThreshold(d(changeLp).div(d(changeLp).add(totalLp)).mul(100).toString(), 2, 6)}%`\n    }\n    return '0%'\n  }, [changeLp, totalLp])\n\n  return { lpRate }\n}\n\n/**\n * 计算滑点数量\n * @param slippage\n * @param amount\n * @param isUp\n * @returns\n */\nexport function useCalculateSlippageAmount(slippage: number, amount?: string, isUp: boolean = false) {\n  const amountLimit = useMemo(() => {\n    if (amount) {\n      return d(amount)\n        .mul(isUp ? 1 + slippage : 1 - slippage)\n        .toString()\n    }\n    return undefined\n  }, [amount, slippage, isUp])\n\n  return { amountLimit }\n}\n\n// export function useContractVault(vaultsId?: string) {\n//   const { contractVaultObj } = useUnstableVaultsListStore()\n\n//   // 合约vaults 信息\n//   const contractVault = useMemo(() => {\n//     if (vaultsId) {\n//       return contractVaultObj[vaultsId]\n//     }\n//     return undefined\n//   }, [contractVaultObj, vaultsId])\n\n//   return { contractVault }\n// }\n\n// export function useContractClmmInfo(poolAddress?: string) {\n//   const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n//   const contractClmmInfo = useMemo(() => {\n//     if (poolAddress) {\n//       return contractClmmPoolObj[poolAddress]\n//     }\n//     return undefined\n//   }, [contractClmmPoolObj, poolAddress])\n\n//   return { contractClmmInfo }\n// }\n\nexport function useGetSuiStakeProtocol(coinType?: string) {\n  const stakeProtocolName = useMemo(() => {\n    if (coinType) {\n      if (coinType.includes('HASUI')) {\n        return 'Haedal'\n      }\n\n      if (coinType.includes('AFSUI')) {\n        return 'Aftermath'\n      }\n      if (coinType.includes('CERT')) {\n        return 'Volo'\n      }\n    }\n    return undefined\n  }, [coinType])\n\n  return { stakeProtocolName }\n}\n\nexport function useGetRewardPeDay(balanceFormat?: string, apiInfo?: VaultApiInfo) {\n  const rewardPerA = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpA).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenA.decimals)}  ${apiInfo?.displayTokenA.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpA, balanceFormat])\n\n  const rewardPerB = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpB).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenB.decimals)}  ${apiInfo?.displayTokenB.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpB, balanceFormat])\n\n  return { rewardPerA, rewardPerB }\n}\n","import useGlobalStore from '@/store/common/global'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPythPrice from '@/store/vaults-v2/useVaultsPythPrice'\nimport { MsafeTransactionSubType } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { convertScientificToDecimal, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { CoinAssist, d, fixCoinType, fromDecimalsAmount, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { CalculateAmountParams, InputType } from '@cetusprotocol/vaults-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { DepositCalculationOptions, DepositCalculationValueOptions, DepositMode } from 'unstable-sdk'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport useGetPythTokenPrice from './pyth-price/useGetPythTokenPrice'\nimport useCurrentVaultDetail from './useCurrentVaultDetail'\nimport { useGetSuiStakeProtocol } from './useVaultsHelper'\n\nexport default function useVaultsAdd(\n  vaultId: string,\n  category: string,\n  displayTokenA: Token,\n  displayTokenB: Token,\n  isReverse: boolean,\n  assetAction: string,\n  isCheckedZAP: boolean,\n  quoteCoin?: Token,\n  availableCapacityUSD?: string,\n  availableCapacityWithQuoteCoin?: string\n) {\n  const { balanceInfo: balanceInfoA } = useGetTokenBalance(displayTokenA)\n  const { balanceInfo: balanceInfoB } = useGetTokenBalance(displayTokenB)\n  const { amountInputA, amountInputB, setAmountInputA, setAmountInputB, setCalculateResult, calculateResult } = useVaultsActionStore()\n  const { getTokenAmountValueByPyth } = useGetPythTokenPrice()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n  const vaultsSdk = useSdk('vaults')\n  const { vaultsSlippage } = useGlobalStore()\n  const { updateCurrentVaultById } = useCurrentVaultDetail()\n  const { fetchAccountBalance } = useAccountBalance()\n  const [isSlider, setIsSlider] = useState(false)\n  const { currentAccount } = useAccountStore()\n\n  const { pythPriceMap } = useVaultsPythPrice()\n  const { mevProtect, transactionMode, maxCapForGas, customGasPrice } = useGlobalStore()\n\n  // 滑杆操作\n  const [percentage, setPercentage] = useState(0)\n  const percentageRef = useRef(0)\n  useEffect(() => {\n    percentageRef.current = percentage\n  }, [percentage])\n\n  // 计算输入框A的USD价值\n  // cetus 直接使用markPrice汇率\n  // haedal 不使用滑杆时 使用pyth价格 单Token质押使用滑杆时 直接使用池子当前Token剩余可注入的值 * 百分比\n  const amountValueA = useMemo(() => {\n    if (category == 'cetus') {\n      return getTokenAmountValue(displayTokenA?.coin_type, amountInputA)\n    } else {\n      if (isCheckedZAP && isSlider && assetAction == displayTokenA?.coin_type) {\n        return d(availableCapacityUSD || '0')\n          .mul(percentage)\n          .div(100)\n          .toString()\n      } else {\n        return getTokenAmountValueByPyth(displayTokenA?.coin_type, amountInputA)\n      }\n    }\n  }, [displayTokenA?.coin_type, amountInputA, pythPriceMap, category, isCheckedZAP, isSlider, percentage])\n\n  // 计算输入框B的USD价值\n  // cetus 直接使用markPrice汇率\n  // haedal 不使用滑杆时 使用pyth价格 单Token质押使用滑杆时 直接使用池子当前Token剩余可注入的值 * 百分比\n  const amountValueB = useMemo(() => {\n    if (category == 'cetus') {\n      return getTokenAmountValue(displayTokenB?.coin_type, amountInputB)\n    } else {\n      if (isCheckedZAP && isSlider && assetAction == displayTokenB?.coin_type) {\n        return d(availableCapacityUSD || '0')\n          .mul(percentage)\n          .div(100)\n          .toString()\n      } else {\n        return getTokenAmountValueByPyth(displayTokenB?.coin_type, amountInputB)\n      }\n    }\n  }, [displayTokenA?.coin_type, amountInputB, pythPriceMap, category, isCheckedZAP, isSlider, percentage])\n\n  // 合约层面的tokenA、tokenB\n  const tokenA = useMemo(() => {\n    return isReverse ? displayTokenB : displayTokenA\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  const tokenB = useMemo(() => {\n    return isReverse ? displayTokenA : displayTokenB\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  // 预计算相关\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // 页面固定哪一边\n  const [isFixedDisplayTokenA, setIsFixedDisplayTokenA] = useState(false)\n  const isFixedDisplayTokenARef = useRef(false)\n  useEffect(() => {\n    isFixedDisplayTokenARef.current = isFixedDisplayTokenA\n  }, [isFixedDisplayTokenA])\n\n  // 合约固定哪一边\n  const [fixAmountA, setFixAmountA] = useState(false)\n  const [preCalculateLoading, setPreCalculateLoading] = useState(false)\n  const [calculateLpLoading, setCalculateLpLoading] = useState(false)\n\n  const amountInputARef = useRef<string>('')\n  const amountInputBRef = useRef<string>('')\n  useEffect(() => {\n    amountInputARef.current = amountInputA\n  }, [amountInputA])\n\n  useEffect(() => {\n    amountInputBRef.current = amountInputB\n  }, [amountInputB])\n\n  // 预计算模式\n  const mode = useMemo(() => {\n    if (isCheckedZAP) {\n      return assetAction == 'both' ? 'FlexibleBoth' : assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n    } else {\n      return 'FixedOneSide'\n    }\n  }, [isCheckedZAP, assetAction, tokenA])\n\n  // 预计算结束 给输入框赋值\n  const wrapRes = (res: any, isFixedDisplayTokenA: boolean, isSlider = false) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:141 ~ wrapRes ~ res:', res)\n    if (res) {\n      if (category == 'haedal') {\n        const amountA = d(res.deposit_amount_a)\n          .div(10 ** tokenA.decimals)\n          .toString()\n        const amountB = d(res.deposit_amount_b)\n          .div(10 ** tokenB.decimals)\n          .toString()\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:150 ~ wrapRes ~ isSlider:', isSlider)\n        if (isSlider) {\n          if (assetAction == 'both' || assetAction == displayTokenA?.coin_type) {\n            console.log('🚀🚀🚀 ~ useVaultsAdd.ts:154 ~ wrapRes ~ setAmountInputA:', setAmountInputA)\n            setAmountInputA(isReverse ? amountB : amountA)\n          }\n          if (assetAction == 'both' || assetAction == displayTokenB?.coin_type) {\n            console.log('🚀🚀🚀 ~ useVaultsAdd.ts:154 ~ wrapRes ~ setAmountInputA:', setAmountInputB)\n            setAmountInputB(isReverse ? amountA : amountB)\n          }\n        } else {\n          // 页面固定某一边 只需要set另一边\n          if (isFixedDisplayTokenA) {\n            setAmountInputB(isReverse ? amountA : amountB)\n          } else {\n            setAmountInputA(isReverse ? amountB : amountA)\n          }\n        }\n      } else {\n        const amountA = d(res.amount_a)\n          .div(10 ** tokenA.decimals)\n          .toString()\n        const amountB = d(res.amount_b)\n          .div(10 ** tokenB.decimals)\n          .toString()\n        // 页面固定某一边 只需要set另一边\n        if (isFixedDisplayTokenA) {\n          setAmountInputB(isReverse ? amountA : amountB)\n        } else {\n          setAmountInputA(isReverse ? amountB : amountA)\n        }\n      }\n    }\n  }\n\n  // 预计算\n  const preCalculate = async (amount: string, isFixedDisplayTokenA: boolean, otherAmount: string, uuid: string) => {\n    try {\n      setCalculateLpLoading(true)\n      const fixToken = (isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA) ? tokenA : tokenB\n      const fixOtherToken = (isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA) ? tokenB : tokenA\n      const inputAmount = toDecimalsAmount(amount, fixToken.decimals).toFixed(0)\n      const otherInputAmount = toDecimalsAmount(otherAmount || 0, fixOtherToken.decimals).toFixed(0)\n      const fixedCoinA = isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n\n      setFixAmountA(fixedCoinA)\n      if (category == 'haedal') {\n        haedalPreCalculate(inputAmount, isFixedDisplayTokenA, otherInputAmount, fixedCoinA, uuid)\n      } else {\n        lstPreCalculate(inputAmount, isFixedDisplayTokenA, fixedCoinA, uuid)\n      }\n    } catch (error) {}\n  }\n\n  // headal预计算\n  const haedalPreCalculate = async (\n    inputAmount: string,\n    isFixedDisplayTokenA: boolean,\n    otherInputAmount: string,\n    fixedCoinA: boolean,\n    uuid: string\n  ) => {\n    let params: DepositCalculationOptions = {\n      uuid,\n      mode: 'FixedOneSide',\n      fixed_amount: '0',\n      fixed_coin_a: fixedCoinA,\n      pool_id: vaultId\n    }\n    // 开启ZAP模式\n    if (isCheckedZAP) {\n      if (mode === 'OnlyCoinA') {\n        params = {\n          uuid,\n          mode,\n          pool_id: vaultId,\n          coin_amount_a: inputAmount\n        }\n      }\n      if (mode === 'OnlyCoinB') {\n        params = {\n          uuid,\n          mode,\n          pool_id: vaultId,\n          coin_amount_b: inputAmount\n        }\n      }\n      if (mode == 'FlexibleBoth') {\n        params = {\n          uuid,\n          mode,\n          pool_id: vaultId,\n          coin_amount_a: fixedCoinA ? inputAmount : otherInputAmount,\n          coin_amount_b: fixedCoinA ? otherInputAmount : inputAmount\n        }\n      }\n    } else {\n      params = {\n        uuid,\n        mode: 'FixedOneSide',\n        fixed_amount: inputAmount,\n        fixed_coin_a: fixedCoinA,\n        pool_id: vaultId\n      }\n    }\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:257 ~ params:', params)\n\n    const res = await volatileVaultsSdk.Vaults.preCalculateDepositAmount(params, {\n      onSuccess: receive_lp_amount => {\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:185 ~ uuid:', uuid, uuidRef.current)\n        if (\n          uuid == uuidRef.current &&\n          (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n            ? amountInputARef.current || amountInputBRef.current\n            : amountInputARef.current && amountInputBRef.current)\n        ) {\n          setCalculateResult({\n            amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n            amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n            ft_amount: receive_lp_amount\n          })\n          setCalculateLpLoading(false)\n        } else {\n          setCalculateLpLoading(false)\n          setCalculateResult(undefined)\n        }\n      },\n      onError: (error, uuid) => {\n        setCalculateLpLoading(false)\n      }\n    })\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:279 ~ res:', res)\n    if (uuidRef.current !== uuid) return\n    // setPreCalculateLoading(false)\n    if (mode == 'FixedOneSide') {\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:179 ~ haedalPreCalculate ~ res:', res)\n      wrapRes(res, isFixedDisplayTokenA)\n    }\n    if (\n      mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n        ? amountInputARef.current || amountInputBRef.current\n        : amountInputARef.current && amountInputBRef.current\n    ) {\n      calculateDepositRatioWithAvailableCapacity(res)\n    }\n  }\n\n  // cetus预计算\n  const lstPreCalculate = async (inputAmount: string, isFixedDisplayTokenA: boolean, fixedCoinA: boolean, uuid: string) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:214 ~ lstPreCalculate ~ uuid:', uuid)\n    if (tokenA && tokenB && vaultId) {\n      try {\n        setCalculateLpLoading(true)\n        const params: CalculateAmountParams = {\n          vault_id: vaultId,\n          fix_amount_a: fixedCoinA,\n          input_amount: inputAmount,\n          slippage: Number(vaultsSlippage),\n          request_id: uuid,\n          side: assetAction === 'both' ? InputType.Both : InputType.OneSide\n        }\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:279 ~ lstPreCalculate ~ params:', params)\n        const res = await vaultsSdk!.Vaults.calculateDepositAmount(params, true, true)\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:204 ~ lstPreCalculate ~ res:', res)\n\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:221 ~ lstPreCalculate ~ uuidRef.current1:', uuidRef.current === uuid, uuidRef.current, '-----', uuid)\n        if (uuidRef.current === uuid) {\n          if (!isCheckedZAP) {\n            wrapRes(res, isFixedDisplayTokenA)\n          }\n          setCalculateResult(res)\n          setCalculateLpLoading(false)\n        }\n      } catch (error) {\n        setCalculateResult(undefined)\n      } finally {\n        setCalculateLpLoading(false)\n      }\n    }\n  }\n\n  // 预计算防抖\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n\n  // 输入框A、B值变化\n  const handleAmountInputChange = async (amount: string, isFixedDisplayTokenA: boolean, otherAmount: string) => {\n    if (isFixedDisplayTokenA) {\n      setAmountInputA(amount)\n    } else {\n      setAmountInputB(amount)\n    }\n    if (availableCapacityUSD == '0' && category == 'haedal') return\n    setIsFixedDisplayTokenA(isFixedDisplayTokenA)\n    if (!amount && !otherAmount) {\n      resetInputAmount()\n      return\n    }\n\n    if (assetAction == 'both' && isCheckedZAP && (!+amount || !+otherAmount)) {\n      setCalculateLpLoading(false)\n      setCalculateResult(undefined)\n      setPercentage(0)\n      return\n    }\n\n    // ZAP模式下大于10000 或者小于0.0001不进行预计算\n    const amountVaule =\n      category == 'haedal'\n        ? getTokenAmountValueByPyth(isFixedDisplayTokenA ? displayTokenA.coin_type : displayTokenB.coin_type, amount)\n        : getTokenAmountValue(isFixedDisplayTokenA ? displayTokenA.coin_type : displayTokenB.coin_type, amount)\n\n    const otherAmountValue =\n      category == 'haedal'\n        ? getTokenAmountValueByPyth(isFixedDisplayTokenA ? displayTokenB.coin_type : displayTokenA.coin_type, otherAmount)\n        : getTokenAmountValue(isFixedDisplayTokenA ? displayTokenB.coin_type : displayTokenA.coin_type, otherAmount)\n    const totalValue = d(amountVaule).add(d(otherAmountValue))\n\n    if (isCheckedZAP && (totalValue.gt(10000) || (totalValue.gt(0) && totalValue.lt(0.0001)))) {\n      setPercentage(0)\n      return\n    }\n\n    const uuid = v4()\n    setUuid(uuid)\n    if (+amount) {\n      debouncedPreCalculate(amount, isFixedDisplayTokenA, otherAmount, uuid)\n    } else {\n      if (!isCheckedZAP) {\n        resetInputAmount()\n      }\n    }\n  }\n\n  // 重置输入框\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    setPercentage(0)\n    setUuid('')\n    setCalculateResult(undefined)\n    setCalculateLpLoading(false)\n  }\n\n  // 总价值 100% = 硬顶 - 当前TVL 不是百分百 显示输入框A、B的值相加\n  const inputTotalValue = useMemo(() => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:386 ~ inputTotalValue ~ amountValueA:', amountValueA)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:387 ~ inputTotalValue ~ amountValueB:', amountValueB)\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // ZAP模式下不能超过10000\n  const zapNumGtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(d(10000))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  // ZAP模式下不能小于0.0001\n  const zapNumLtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(d(0.0001))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  // 单边提示文案\n  const { stakeProtocolName } = useGetSuiStakeProtocol(!fixAmountA ? tokenA?.coin_type : tokenB?.coin_type)\n  const showOnlySideTips = useMemo(() => {\n    if (category == 'haedal') return undefined\n    if (assetAction !== 'both' && tokenA && tokenB && (+amountInputA || +amountInputB)) {\n      const amount = fixAmountA ? amountInputA : amountInputB\n      const fixToken = fixAmountA ? tokenA : tokenB\n      const targetToken = fixAmountA ? tokenB : tokenA\n\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:424 ~ showOnlySideTips ~ calculateResult:', calculateResult)\n      if (calculateResult && calculateResult.swap_result) {\n        const swapInAmount = fromDecimalsAmountFix(calculateResult.swap_result.swap_in_amount, fixToken.decimals)\n        const swapOutAmount = fromDecimalsAmountFix(\n          d(calculateResult.swap_result.swap_out_amount)\n            .mul(1 - Number(vaultsSlippage))\n            .toString(),\n          targetToken.decimals\n        )\n\n        if (CoinAssist.isSuiCoin(fixToken.coin_type)) {\n          return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} SUI, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} SUI will be converted to ${targetToken?.symbol} via ${stakeProtocolName} liquid staking and added to the pool together.`\n        }\n        return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} ${fixToken?.symbol}, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} ${fixToken?.symbol} will be traded for ${convertScientificToDecimal(formatNumber(swapOutAmount, 9).toString(), 9)} ${targetToken?.symbol} and then added to the pool together.`\n      } else {\n        if (!CoinAssist.isSuiCoin(assetAction)) {\n          const amountValue = getTokenAmountValue(assetAction, amount)\n          if (d(amountValue).gt(10000)) {\n            return \"Single-asset deposit can't be higher than $10,000 at a time.\"\n          }\n        }\n      }\n    }\n\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB, category])\n\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n\n  // 重新计算\n  const reCalculateResult = () => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:474 ~ reCalculateResult ~ reCalculateResult:')\n\n    if (availableCapacityUSD == '0' && category == 'haedal') {\n      setAmountInputA('')\n      setAmountInputB('')\n      setPercentage(0)\n      setCalculateLpLoading(false)\n      setCalculateResult(undefined)\n      return\n    }\n\n    if (assetAction == 'both' && (!+amountInputA || !+amountInputB)) {\n      return\n    }\n\n    const uuid = v4()\n    setUuid(uuid)\n\n    if (isSlider) {\n      debouncedPreCalculateDepositValue(percentageRef.current, availableCapacityWithQuoteCoin as string, quoteCoin as Token, uuid)\n    } else {\n      const amount = isFixedDisplayTokenARef.current ? amountInputARef.current : amountInputBRef.current\n      const otherAmount = isFixedDisplayTokenA ? amountInputBRef.current : amountInputARef.current\n      if (+amount) {\n        debouncedPreCalculate(amount, isFixedDisplayTokenA, otherAmount, uuid)\n      }\n    }\n  }\n\n  // 滑杆预计算\n  const preCalculateDepositValue = async (percent: number, availableCapacityWithCoin: string, coin: Token, uuid: string) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:470 ~ preCalculateDepositValue ~ percent:', percent)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:431 ~ preCalculateDepositValue ~ coin:', coin)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:432 ~ preCalculateDepositValue ~ pythPriceMap:', pythPriceMap)\n    const coinPrice = pythPriceMap[fixCoinType(coin?.coin_type, false)]?.price\n    if (tokenA && tokenB && vaultId) {\n      const amountUSD = d(availableCapacityWithCoin).mul(percent).div(100).mul(coinPrice).toString()\n      if (amountUSD == '0') {\n        setCalculateResult(undefined)\n        setAmountInputA('')\n        setAmountInputB('')\n        setPercentage(0)\n        setCalculateLpLoading(false)\n        return\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:464 ~ preCalculateDepositValue ~ coin:', coin)\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:464 ~ preCalculateDepositValue ~ coinPrice:', coinPrice)\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:464 ~ preCalculateDepositValue ~ percent:', percent)\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:464 ~ preCalculateDepositValue ~ availableCapacityWithCoin:', availableCapacityWithCoin)\n      const amount = d(availableCapacityWithCoin).mul(percent).div(100).toString()\n      setCalculateLpLoading(true)\n      const params = {\n        mode: mode as DepositMode,\n        pool_id: vaultId,\n        amount_usd: amountUSD,\n        uuid\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:472 ~ preCalculateDepositValue ~ params:', params)\n      const res = await volatileVaultsSdk.Vaults.preCalculateDepositValue(params as DepositCalculationValueOptions, {\n        onSuccess: (receive_lp_amount, uuid) => {\n          if (\n            uuid == uuidRef.current &&\n            (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n              ? amountInputARef.current || amountInputBRef.current\n              : amountInputARef.current && amountInputBRef.current)\n          ) {\n            setCalculateResult({\n              amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n              amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n              ft_amount: receive_lp_amount\n            })\n            setCalculateLpLoading(false)\n          } else {\n            setCalculateLpLoading(false)\n            setCalculateResult(undefined)\n          }\n        },\n        onError: (error, uuid) => {\n          console.log('🚀 ~ preCalculate ~ error:', error)\n        }\n      })\n      if (uuid !== uuidRef.current) return\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:492 ~ preCalculateDepositValue ~ res:', res)\n\n      wrapRes(res, true, true)\n    }\n  }\n\n  const debouncedPreCalculateDepositValue = useDebounceFunction(preCalculateDepositValue, 500)\n\n  const handlePercentInputChange = (percent: number, availableCapacityWithQuoteCoin: string, quoteCoin: Token, uuid: string) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:536 ~ handlePercentInputChange ~ percent:', percent)\n    if (d(percent).lte(0)) {\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:538 ~ handlePercentInputChange ~ percent11111:')\n      setCalculateResult(undefined)\n      setAmountInputA('')\n      setAmountInputB('')\n      setCalculateLpLoading(false)\n      return\n    }\n\n    debouncedPreCalculateDepositValue(percent, availableCapacityWithQuoteCoin, quoteCoin, uuid)\n  }\n\n  const calculateDepositRatioWithAvailableCapacity = async (wrapRes: any) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:503 ~ calculateDepositRatioWithAvailableCapacity ~ wrapRes:', wrapRes)\n    if (tokenA && tokenB) {\n      const amountA = fromDecimalsAmount(wrapRes.deposit_amount_a, tokenA?.decimals)\n      const amountB = fromDecimalsAmount(wrapRes.deposit_amount_b, tokenB?.decimals)\n      const amountValueA = getTokenAmountValueByPyth(tokenA?.coin_type, String(amountA))\n      const amountValueB = getTokenAmountValueByPyth(tokenB?.coin_type, String(amountB))\n      const amountUSD = d(amountValueA).add(d(amountValueB)).toString()\n      const ratio = d(amountUSD).div(d(availableCapacityUSD)).mul(100)\n      if (availableCapacityUSD == '0') {\n        setPercentage(0)\n        setAmountInputA('')\n        setAmountInputB('')\n        setCalculateResult(undefined)\n        setCalculateLpLoading(false)\n        return\n      }\n      if (ratio.gt(100)) {\n        const uuid = v4()\n        setUuid(uuid)\n        setPercentage(100)\n        debouncedPreCalculateDepositValue(100, availableCapacityWithQuoteCoin as string, quoteCoin as Token, uuid)\n      } else {\n        if (amountInputARef.current || amountInputBRef.current) {\n          const ratioValue = formatNumber(ratio.toString(), 2)\n          setPercentage(Number(ratioValue))\n        }\n      }\n    }\n  }\n\n  // 提交交易\n  const doAddAction = async () => {\n    if (vaultId) {\n      // 处理页面上的值 保证按照合约A,B传入\n      let depositParams: any\n      if (category == 'haedal') {\n        depositParams = {\n          pool_id: vaultId,\n          amount_a: String(\n            isReverse ? toDecimalsAmount(amountInputB || 0, String(tokenA?.decimals)) : toDecimalsAmount(amountInputA || 0, String(tokenA?.decimals))\n          ),\n          amount_b: String(\n            isReverse ? toDecimalsAmount(amountInputA || 0, String(tokenB?.decimals)) : toDecimalsAmount(amountInputB || 0, String(tokenB?.decimals))\n          )\n        }\n      } else {\n        depositParams = {\n          vault_id: vaultId,\n          slippage: Number(vaultsSlippage),\n          deposit_result: calculateResult\n        }\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:261 ~ doAddAction ~ depositParams:', depositParams)\n      // 构建 交易提示\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>, res?: any) => {\n          console.log('🚀🚀🚀 ~ useVaultsAdd.ts:306 ~ doAddAction ~ res:', res)\n          // 提示语也需要处理方向\n          const description =\n            'Deposit ' +\n            [\n              formatDescription(isReverse ? amountInputA : amountInputA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n              formatDescription(isReverse ? amountInputB : amountInputB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n            ]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA\n            let amountB = amountInputB\n\n            if (res) {\n              res.events.forEach((event: any) => {\n                if (event.type.indexOf('::pool::DepositEvent') > -1 && tokenA && tokenB) {\n                  amountA = String(fromDecimalsAmount(event.parsedJson.amount_a, tokenA.decimals))\n                  amountB = String(fromDecimalsAmount(event.parsedJson.amount_b, tokenB.decimals))\n                }\n              })\n            }\n            const description =\n              'Deposit ' +\n              [\n                formatDescription(isReverse ? amountB : amountA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n                formatDescription(isReverse ? amountA : amountB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n              ]\n                .filter(Boolean)\n                .join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n            info.toastTitleText = 'Deposit successful'\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n\n      try {\n        const tx = new Transaction()\n        tx.setSender(currentAccount.address)\n        if (category == 'haedal') {\n          await volatileVaultsSdk.Vaults.buildDepositPayload(depositParams, tx)\n        } else {\n          console.log('🚀🚀🚀 ~ useVaultsAdd.ts:447 ~ doAddAction ~ vaultsSdk:', vaultsSdk, depositParams)\n          await vaultsSdk!.Vaults.deposit(depositParams, tx)\n        }\n        const res = await signAndExecuteTransaction(tx, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: depositParams\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          setTimeout(() => {\n            fetchAccountBalance()\n            updateCurrentVaultById(vaultId)\n          }, 2000)\n        } else {\n          reCalculateResult()\n        }\n      } catch (error) {\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:418 ~ doAddAction ~ error:', error)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  const isQuoteCoin = useMemo(() => {\n    return assetAction == quoteCoin?.coin_type || assetAction == 'both'\n  }, [assetAction, quoteCoin])\n\n  useEffect(() => {\n    return () => {\n      uuidRef.current = ''\n    }\n  }, [])\n\n  return {\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    handleAmountInputChange,\n    amountInputA,\n    amountInputB,\n    setAmountInputA,\n    setAmountInputB,\n    resetInputAmount,\n    preCalculateLoading,\n    isFixedDisplayTokenA,\n    zapNumGtError,\n    zapNumLtError,\n    calculateLpLoading,\n    inputTotalValue,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    percentage,\n    setPercentage,\n    isSlider,\n    setIsSlider,\n    handlePercentInputChange,\n    isQuoteCoin,\n    setUuid,\n    uuidRef\n  }\n}\n","import useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { CoinAssist, d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport default function useVaultsButtonStatus(\n  amountInputA: string,\n  amountInputB: string,\n  balanceA: string,\n  balanceB: string,\n  tokenA: Token,\n  tokenB: Token,\n  assetAction: string,\n  isAdd: boolean,\n  zapNumGtError: boolean,\n  zapNumLtError: boolean,\n  category: string,\n  isCheckedZAP: boolean\n) {\n  const { currentAccount } = useAccountStore()\n  const { calculateResult } = useVaultsActionStore()\n  console.log('🚀🚀🚀 ~ useVaultsButtonStatus.ts:23 ~ calculateResult:', calculateResult)\n\n  // 按钮状态\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: undefined,\n      disabled: false\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    if (!tokenA || !tokenB) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // 判断输入\n    // 双边\n    if (assetAction === 'both') {\n      if (!+amountInputA && !+amountInputB) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n      if (isCheckedZAP && (!+amountInputA || !+amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    } else {\n      // 单边为空\n      if ((assetAction == tokenA?.coin_type && !+amountInputA) || (assetAction == tokenB?.coin_type && !+amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n\n      // cetus单边SUI添加流动性最少10 sui\n      if (category == 'cetus') {\n        if (isAdd) {\n          const isSUI = CoinAssist.isSuiCoin(assetAction)\n          if (\n            (isSUI && assetAction === tokenA?.coin_type && d(amountInputA).lt(3)) ||\n            (isSUI && assetAction === tokenB?.coin_type && d(amountInputB).lt(3))\n          ) {\n            btnInfo.text = 'Minimum deposit 3 SUI'\n            btnInfo.disabled = true\n            return btnInfo\n          }\n        }\n      }\n    }\n\n    // 判断余额\n    // 双边\n    if (assetAction == 'both') {\n      if (d(amountInputA || '0').gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB || '0').gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n\n    // 单边\n    if (assetAction !== 'both') {\n      if (d(amountInputA || '0').gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB || '0').gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n\n    // ZAP模式添加 超过$10000\n    console.log('🚀🚀🚀 ~ useVaultsButtonStatus.ts:111 ~ submitBtnInfo ~ zapNumGtError:', zapNumGtError, zapNumLtError)\n    if (isAdd && zapNumGtError) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // ZAP模式添加 小于0.0001\n    if (isAdd && zapNumLtError) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //ZAP模式添加 预计算结果为0\n    console.log('🚀🚀🚀 ~ useVaultsButtonStatus.ts:133 ~ submitBtnInfo ~ calculateResult:', calculateResult)\n    if ((calculateResult && calculateResult.ft_amount == '0') || (calculateResult && calculateResult.burn_ft_amount == '0') || !calculateResult) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [\n    amountInputA,\n    amountInputB,\n    balanceA,\n    balanceB,\n    tokenA,\n    tokenB,\n    assetAction,\n    zapNumGtError,\n    zapNumLtError,\n    category,\n    currentAccount?.address,\n    calculateResult\n  ])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n","import { create, StateCreator } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface VaultsRiskState {\n  isCheckedAcceptWalletObj: Record<string, boolean>\n  setIsCheckedAcceptWalletObj: (isCheckedWalletObj: Record<string, boolean>) => void\n  isCheckedDontRemindWalletObj: Record<string, boolean>\n  setIsCheckedDontRemindWalletObj: (isCheckedDontRemindWalletObj: Record<string, boolean>) => void\n}\n\nconst store: StateCreator<VaultsRiskState> = (set, get) => ({\n  isCheckedAcceptWalletObj: {},\n  setIsCheckedAcceptWalletObj: (isCheckedWalletObj: Record<string, boolean>) =>\n    set(() => ({\n      isCheckedAcceptWalletObj: {\n        ...get().isCheckedAcceptWalletObj,\n        ...isCheckedWalletObj\n      }\n    })),\n  isCheckedDontRemindWalletObj: {},\n  setIsCheckedDontRemindWalletObj: (isCheckedDontRemindWalletObj: Record<string, boolean>) =>\n    set(() => ({\n      isCheckedDontRemindWalletObj: {\n        ...get().isCheckedDontRemindWalletObj,\n        ...isCheckedDontRemindWalletObj\n      }\n    }))\n})\n\nconst useVaultsRiskStore = create(\n  persist(store, {\n    name: 'useVaultsRiskStore',\n    partialize: state => {\n      const { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj } = state\n      return { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj }\n    }\n  })\n)\n\nexport default useVaultsRiskStore\n","import useVaultsRiskStore from '@/store/vaults-v2/useVaultsRisk'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CheckBox } from '@cetus/ui-kit'\nimport { Button, HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\n\ntype RiskModalProps = {\n  isOpen: boolean\n  setIsOpen: (status: boolean) => void\n  continueFunc: () => void\n}\n\n// 通用带圆点文本组件\nconst RiskBulletText = ({ children }: { children: React.ReactNode }) => (\n  <Text\n    lineHeight=\"20px\"\n    color=\"text_caption\"\n    fontSize=\"12px\"\n    position=\"relative\"\n    pl=\"10px\"\n    _before={{\n      content: '\"\"',\n      display: 'inline-block',\n      w: '4px',\n      h: '4px',\n      borderRadius: '50%',\n      bg: 'primary',\n      position: 'absolute',\n      left: '0',\n      top: '8px'\n    }}\n  >\n    {children}\n  </Text>\n)\n\n// Vault风险确认弹窗\nexport default function RiskModal(props: RiskModalProps) {\n  const { isOpen, setIsOpen, continueFunc } = props\n  const [isCheckedAccept, setIsCheckedAccept] = useState(false)\n  const [isCheckedDontRemind, setIsCheckedDontRemind] = useState(false)\n  const { setIsCheckedAcceptWalletObj, setIsCheckedDontRemindWalletObj } = useVaultsRiskStore()\n  const { currentAccount } = useAccountStore()\n\n  const riskContinue = () => {\n    const newIsCheckedAcceptWalletObj = {\n      [currentAccount?.address]: isCheckedAccept\n    }\n    setIsCheckedAcceptWalletObj(newIsCheckedAcceptWalletObj)\n    const newIsCheckedDontRemindWalletObj = {\n      [currentAccount?.address]: isCheckedDontRemind\n    }\n    setIsCheckedDontRemindWalletObj(newIsCheckedDontRemindWalletObj)\n    continueFunc()\n  }\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen}\n      onClose={() => {\n        setIsOpen(false)\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '480px' }}>\n        <ModalHeader>\n          <Text fontSize={isApp ? '14px' : '16px'} fontWeight=\"500\" color=\"caption\" lineHeight={isApp ? '20px' : '40px'}>\n            Risk Acknowledgement\n          </Text>\n        </ModalHeader>\n        <ModalCloseButton m={isApp ? '' : '12px 2px 0 0'} />\n\n        <ModalBody p=\"0 16px\">\n          <VStack bg=\"menu_item_bg\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" p=\"16px 12px\" gap={isApp ? '12px' : '16px'}>\n            <Text w=\"100%\" textAlign=\"left\" fontSize=\"12px\">\n              Before you provide liquidity via this vault:\n            </Text>\n            <VStack gap={isApp ? '12px' : '16px'}>\n              <RiskBulletText>\n                You acknowledge that this vault strategy is provided by a third party. Cetus integrates it at the UI level for user convenience but\n                does not operate this product or take responsibility for third-party risks.\n              </RiskBulletText>\n              <RiskBulletText>\n                You acknowledge that the displayed APR and APY are based on historical data and not a guaranteed return.\n              </RiskBulletText>\n              <RiskBulletText>\n                You understand that APR and APY figures reflect past trading fees and rewards only, excluding impermanent loss and price volatility.\n              </RiskBulletText>\n              <RiskBulletText>\n                You recognize the risks associated with automated liquidity strategies, including market fluctuations and third-party operational\n                risks.\n              </RiskBulletText>\n              <Text fontSize=\"12px\" color=\"text_paragraph\" lineHeight=\"20px\">\n                Please assess these risks carefully and proceed only if you fully understand and accept them.\n              </Text>\n            </VStack>\n          </VStack>\n          <VStack\n            bg=\"menu_item_bg\"\n            borderRadius=\"8px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p={isApp ? '12px 16px' : '16px'}\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            m=\"16px 0\"\n            userSelect=\"none\"\n            gap={isApp ? '8px' : '12px'}\n          >\n            <HStack>\n              <CheckBox checked={isCheckedAccept} onClick={() => setIsCheckedAccept(!isCheckedAccept)} />\n              <Text fontWeight=\"500\" color=\"text_caption\">\n                I acknowledge and accept all the risks.\n              </Text>\n            </HStack>\n            <HStack>\n              <CheckBox checked={isCheckedDontRemind} onClick={() => setIsCheckedDontRemind(!isCheckedDontRemind)} />\n              <Text fontSize=\"12px\" color=\"text_paragraph\">\n                Don't remind me again.\n              </Text>\n            </HStack>\n          </VStack>\n          <Button\n            w=\"calc(100% + 32px)\"\n            h=\"52px\"\n            bg=\"primary\"\n            borderRadius=\"12px\"\n            fontWeight=\"600\"\n            ml=\"-16px\"\n            disabled={!isCheckedAccept}\n            onClick={riskContinue}\n          >\n            Continue\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { formatNumber, formatPercentage, symbolDataDisplayProcessing } from '@cetus/utils'\nimport {\n  HStack,\n  Image,\n  Skeleton,\n  Slider,\n  SliderFilledTrack,\n  SliderMark,\n  SliderMarkProps,\n  SliderThumb,\n  SliderTrack,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype AvailableCapacityProps = {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  depositRatio: string | number\n  hardCapUSD: string | number\n  vaultTvl: string | number\n  availableCapacityUSD: string | number\n  quoteCoin?: Token\n  maxCapNum?: string\n  availableCapacityWithQuoteCoin?: string\n}\n\n// 剩余可用部分 百分比添加操作滑杆\nexport default function AvailableCapacity({\n  percentage,\n  onChange,\n  quoteCoin,\n  availableCapacityWithQuoteCoin,\n  availableCapacityUSD\n}: AvailableCapacityProps) {\n  const loading = useMemo(() => {\n    return !availableCapacityUSD\n  }, [availableCapacityUSD])\n\n  const labelStyles = {\n    fontSize: 'sm',\n    position: 'absolute',\n    ml: '-5px',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    zIndex: '100',\n    borderRadius: '50%'\n  }\n\n  const sliderMarkList = [0, 25, 50, 75, 100]\n\n  return (\n    <>\n      {loading ? (\n        <VStack width=\"100%\" maxHeight=\"164px\" justifyContent=\"space-between\">\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n        </VStack>\n      ) : (\n        <VStack width=\"100%\" alignItems=\"start\" gap=\"14px\">\n          <Text color=\"text_paragraph\" textAlign=\"left\">\n            Available Capacity\n          </Text>\n          <HStack w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"12px\">\n            <CetusTooltip\n              tooltip={\n                <HStack>\n                  <Image key={quoteCoin?.coin_type} src={quoteCoin?.logo_url} w=\"20px\" h=\"20px\" />\n                  <Text color=\"text_caption\">{formatNumber(availableCapacityWithQuoteCoin, 2)}</Text>\n                  <Text color=\"text_caption\">{quoteCoin?.symbol}</Text>\n                </HStack>\n              }\n            >\n              <HStack w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Text color=\"text_caption\" height=\"14px\" textAlign=\"left\" fontSize=\"16px\" textDecoration=\"underline dotted\">\n                  {symbolDataDisplayProcessing(availableCapacityUSD, '$')}\n                </Text>\n              </HStack>\n            </CetusTooltip>\n            <Slider\n              aria-label=\"slider-ex-6\"\n              min={0}\n              max={100}\n              focusThumbOnChange={false}\n              value={percentage == '--' ? 0 : Number(percentage)}\n              onChange={value => onChange(value)}\n              w=\"242px\"\n              isDisabled={Number(availableCapacityUSD) <= 0}\n            >\n              {sliderMarkList\n                .filter(item => item !== Number(percentage))\n                .map((item, index) => (\n                  <SliderMark\n                    key={index}\n                    {...(labelStyles as SliderMarkProps)}\n                    value={item}\n                    w=\"8px\"\n                    h=\"8px\"\n                    bg={Number(percentage) >= item ? 'primary' : '#2b2e32'}\n                    onClick={() => onChange(item)}\n                  />\n                ))}\n              <SliderMark\n                value={Number(percentage)}\n                textAlign=\"center\"\n                bg=\"#1B2E3B\"\n                p=\"2px 4px\"\n                borderRadius=\"4px\"\n                fontSize=\"12px\"\n                color=\"primary\"\n                mt=\"-28px\"\n                ml=\"-15px\"\n              >\n                {formatPercentage(percentage, 2)}\n              </SliderMark>\n              <SliderTrack bg=\"#2b2e32\" height=\"2px\" borderRadius=\"4px\">\n                <SliderFilledTrack height=\"2px\" bg=\"primary\" borderRadius=\"2px\" />\n              </SliderTrack>\n              <SliderThumb\n                p=\"1px\"\n                w=\"10px\"\n                h=\"10px\"\n                border=\"1px solid primary\"\n                position=\"relative\"\n                zIndex=\"100\"\n                borderRadius=\"50%\"\n                _before={{\n                  content: '\"\"',\n                  w: '6px',\n                  h: '6px',\n                  borderRadius: '50%',\n                  bg: [0, 25, 50, 75, 100].includes(Number(percentage)) ? 'primary' : 'bg_secondary',\n                  border: '1px solid #2b2e32'\n                }}\n              />\n            </Slider>\n          </HStack>\n          {!loading && availableCapacityUSD == 0 ? (\n            <VStack w=\"100%\" alignItems=\"start\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The vault has reached its current capacity. New deposits are not accepted at this time.\n              </Text>\n            </VStack>\n          ) : null}\n        </VStack>\n      )}\n    </>\n  )\n}\n","import { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Switch, Text } from '@chakra-ui/react'\n\ntype ZapTooltipTextType = {\n  [key: string]: string\n}\nconst ZapTooltipText: ZapTooltipTextType = {\n  customDeposit:\n    'Through Zap-In, you can deposit your liquidity in single token or with customized token ratio. Tokens will be auto converted to match the required ratio. ',\n  deposit: 'Through Zap-In, you can deposit your liquidity in single token. Tokens will be auto converted to match the required ratio.',\n  withdraw: 'Through Zap-Out, you can withdraw your liquidity in one token. The liquidity will be auto converted to one token you selected.'\n}\n\ntype ZapSwitchProps = {\n  zapText: string\n  isCheckedZAP: boolean\n  tooltipType: 'customDeposit' | 'deposit' | 'withdraw'\n  zapSwitchChange: (status: boolean) => void\n}\nfunction ZapSwitch(props: ZapSwitchProps) {\n  const { isCheckedZAP, zapText, tooltipType, zapSwitchChange } = props\n  const { isApp } = useWindowWidth()\n  return (\n    <Block padding=\"6px 8px\" borderRadius=\"8px\" width=\"unset\">\n      <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top\" autoFocus={false} returnFocusOnClose={false}>\n        <PopoverTrigger>\n          <HStack h=\"14px\" cursor=\"pointer\" as=\"button\">\n            <Text fontSize=\"14px\" color={isCheckedZAP ? 'primary' : ''} fontWeight=\"500\">\n              {zapText}\n            </Text>\n            <Switch isChecked={isCheckedZAP} onChange={() => zapSwitchChange(!isCheckedZAP)} />\n          </HStack>\n        </PopoverTrigger>\n        <PopoverContent minW=\"fit-content\" w=\"fit-content\">\n          <PopoverBody p=\"12px\" lineHeight=\"20px\" fontSize=\"12px\" maxWidth=\"320px\">\n            {ZapTooltipText[tooltipType]}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Block>\n  )\n}\n\nexport default ZapSwitch\n","import { useGetSuiStakeProtocol } from '@/hooks/vault-v2/useVaultsHelper'\nimport { AssetActionType } from '@/types/vaults'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Token } from '@cetus/types'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport ZapSwitch from '../common/ZapSwitch'\n\nconst hoverCoinTips =\n  'You can also choose to deposit in only one asset type. In that case, the vault will convert your asset to the required propositions using Cetus. Please note that trading fees & slippage will be applied. When slippage is involved, a certain amount of post-swap dust (no loss of funds) will be returned to you.'\n\nconst hoverSuiTips = (stakeProtocolName?: string, symbol?: string) =>\n  `When you deposit in only SUI tokens, a part of your SUI amount will be converted to ${symbol} via ${stakeProtocolName} liquid staking services to match required liquidity compositions of the liquidity pool on Cetus. A certain amount of dust (no loss of funds) will be returned to you if slippage is involved.`\n\nconst ActionTabEnum = {\n  Deposit: 'Deposit',\n  Withdraw: 'Withdraw'\n} as const\n\n// deposit withdraw 切换\nexport function SwitchAssetTab(props: {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  onSelectAssetTab: (assetTab: AssetActionType) => void\n  label?: string\n  setAssetAction: (value: string) => void\n  assetAction: string\n  isCheckedZAP: boolean\n  setIsCheckedZAP: (value: boolean) => void\n  category?: string\n  currentActionTab?: string\n}) {\n  const {\n    displayTokenA,\n    displayTokenB,\n    onSelectAssetTab,\n    label = 'Deposit Amounts',\n    isCheckedZAP,\n    setIsCheckedZAP,\n    assetAction,\n    setAssetAction,\n    category,\n    currentActionTab\n  } = props\n\n  const { stakeProtocolName } = useGetSuiStakeProtocol(displayTokenA?.coin_type)\n  const isUnstableVault = useMemo(() => category === 'haedal', [category])\n\n  const generateTabList = (): Tab<{ action: AssetActionType }>[] => {\n    if (!displayTokenA || !displayTokenB) return []\n\n    const baseTabs: Tab<{ action: AssetActionType }>[] = [\n      {\n        label: `${displayTokenA.symbol} only`,\n        action: displayTokenA.coin_type,\n        afterIcon: isCheckedZAP && currentActionTab === ActionTabEnum.Deposit && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n        tooltip: isUnstableVault\n          ? currentActionTab === ActionTabEnum.Deposit\n            ? `You can add liquidity in this pool with only ${displayTokenA.symbol}.`\n            : ''\n          : hoverCoinTips\n      },\n      {\n        label: `${displayTokenB.symbol} only`,\n        action: displayTokenB.coin_type,\n        afterIcon: isCheckedZAP && currentActionTab === ActionTabEnum.Deposit && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n        tooltip: isUnstableVault\n          ? currentActionTab === ActionTabEnum.Deposit\n            ? `You can add liquidity in this pool with only ${displayTokenB.symbol}.`\n            : ''\n          : hoverSuiTips(stakeProtocolName, displayTokenA?.symbol)\n      }\n    ]\n\n    if (isUnstableVault && currentActionTab === ActionTabEnum.Deposit) {\n      baseTabs.splice(1, 0, {\n        label: `${displayTokenA.symbol}+${displayTokenB.symbol}`,\n        action: 'both',\n        tooltip: 'You can add any value you want from both assets.'\n      })\n    }\n\n    return baseTabs\n  }\n\n  const tabList = useMemo(generateTabList, [displayTokenA, displayTokenB, isCheckedZAP, stakeProtocolName, isUnstableVault, currentActionTab])\n\n  const currentTab = useMemo(() => {\n    if (tabList.length === 0) return undefined\n\n    if (assetAction === displayTokenA?.coin_type) return tabList[0].label\n\n    if (assetAction === displayTokenB?.coin_type) {\n      if (isUnstableVault && currentActionTab === ActionTabEnum.Deposit) {\n        return tabList[2]?.label\n      }\n      return tabList[1]?.label\n    }\n\n    return tabList[1]?.label\n  }, [assetAction, tabList, isUnstableVault, currentActionTab, displayTokenA?.coin_type, displayTokenB?.coin_type])\n\n  const tooltipType = useMemo(() => {\n    if (currentActionTab === ActionTabEnum.Deposit) {\n      return isUnstableVault ? 'customDeposit' : 'deposit'\n    }\n    return 'withdraw'\n  }, [currentActionTab, isUnstableVault])\n\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <Text fontWeight=\"500\">{label}</Text>\n        <ZapSwitch\n          isCheckedZAP={isCheckedZAP}\n          zapText={currentActionTab === ActionTabEnum.Deposit ? 'Zap In' : 'Zap Out'}\n          tooltipType={tooltipType}\n          zapSwitchChange={(status: boolean) => {\n            setIsCheckedZAP(!isCheckedZAP)\n            setAssetAction(status ? (displayTokenA?.coin_type ?? '') : 'both')\n          }}\n        />\n      </HStack>\n\n      {isCheckedZAP && tabList.length > 0 && (\n        <SelectTab\n          wrapStyle={{\n            w: '100%',\n            h: '48px',\n            borderRadius: '8px',\n            p: '3px'\n          }}\n          itemStyle={{\n            w: '50%',\n            fontSize: '14px',\n            borderRadius: '6px',\n            fontWeight: '500'\n          }}\n          type=\"outlineTab\"\n          currentTab={currentTab}\n          tabList={tabList}\n          handleChangeTab={(item: Tab<{ action: AssetActionType }>) => {\n            setAssetAction(item.action)\n            onSelectAssetTab(item.action)\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import VaultsAddConfirmModel from '@/components/modal/VaultsAddConfirmModel'\nimport useVaultAvaiableCapacity from '@/hooks/vault-v2/useVaultAvaiableCapacity'\nimport useVaultsAdd from '@/hooks/vault-v2/useVaultsAdd'\nimport useVaultsButtonStatus from '@/hooks/vault-v2/useVaultsButtonStatus'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vault-v2/useVaultsHelper'\nimport useGlobalStore from '@/store/common/global'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport useVaultsPythPriceStore from '@/store/vaults-v2/useVaultsPythPrice'\nimport useVaultsRiskStore from '@/store/vaults-v2/useVaultsRisk'\nimport { VaultsAddModelData } from '@/types'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Button, Text, VStack } from '@chakra-ui/react'\nimport { SetStateAction, useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport RiskModal from '../risk-modal'\nimport AvailableCapacity from './AvailableCapacity'\nimport { SwitchAssetTab } from './SwitchAssetTab'\nimport { VaultsAddResult } from './VaultsAddResult'\n\ntype VaultsAddProps = {\n  category: string\n  isReverse: boolean\n  vaultId: string\n  currentActionTab: string\n  totalSupply: string\n  lpTokenInfo: any\n  feeTier: string\n  isModal?: boolean\n  isAutoRefresh?: boolean\n}\n\n// Vault添加\nexport default function VaultsAdd(props: VaultsAddProps) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [assetAction, setAssetAction] = useState('both')\n  const [isCheckedZAP, setIsCheckedZAP] = useState(false)\n  const { category, isReverse, vaultId, currentActionTab, totalSupply, lpTokenInfo, feeTier, isModal, isAutoRefresh } = props\n  const { fromToken, toToken, calculateResult } = useVaultsActionStore()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n\n  const currentVaultPool = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj, vaultId])\n\n  const avaiableCapacityInfo = useVaultAvaiableCapacity(currentVaultPool)\n  const {\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    handleAmountInputChange,\n    amountInputA,\n    amountInputB,\n    resetInputAmount,\n    preCalculateLoading,\n    zapNumGtError,\n    zapNumLtError,\n    calculateLpLoading,\n    inputTotalValue,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    percentage,\n    setPercentage,\n    setIsSlider,\n    handlePercentInputChange,\n    isQuoteCoin,\n    setUuid,\n    uuidRef,\n    isSlider\n  } = useVaultsAdd(\n    vaultId,\n    category,\n    fromToken,\n    toToken,\n    isReverse,\n    assetAction,\n    isCheckedZAP,\n    avaiableCapacityInfo?.quoteCoin,\n    avaiableCapacityInfo?.availableCapacityUSD,\n    avaiableCapacityInfo?.availableCapacityWithQuoteCoin\n  )\n  console.log('🚀🚀🚀 ~ vaultsAdd.tsx:74 ~ VaultsAdd ~ calculateLpLoading:', calculateLpLoading)\n\n  // 切换ZAP或者资产类型，清空输入框\n  useEffect(() => {\n    resetInputAmount()\n  }, [isCheckedZAP, assetAction])\n\n  const [isOpenAddModel, setIsOpenAddModel] = useState(false)\n\n  const { isApp } = useWindowWidth()\n\n  const { btnText, btnDisabled } = useVaultsButtonStatus(\n    amountInputA,\n    amountInputB,\n    balanceInfoA?.balanceFormat || '',\n    balanceInfoB?.balanceFormat || '',\n    fromToken,\n    toToken,\n    assetAction,\n    true,\n    zapNumGtError,\n    zapNumLtError,\n    category,\n    isCheckedZAP\n  )\n\n  const { vaultsSlippage } = useGlobalStore()\n\n  // 占比\n  const { lpRate } = useCalculateChangeLpRate(calculateResult?.ft_amount, totalSupply)\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(Number(vaultsSlippage), calculateResult?.ft_amount, false)\n\n  const getSecondModelData = () => {\n    const data: VaultsAddModelData = {\n      feeTier: feeTier || '',\n      displayTokenA: fromToken!,\n      displayTokenB: toToken!,\n      displayAmountA: amountInputA,\n      displayAmountB: amountInputB,\n      totalAmountValue: inputTotalValue,\n      sharePool: lpRate,\n      lpAmountLimit: amountLimit || '0',\n      lpDecimals: lpTokenInfo?.decimals\n    }\n\n    return data\n  }\n\n  const { pythPriceMap } = useVaultsPythPriceStore()\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n  useEffect(() => {\n    if (isMounted.current) {\n      reCalculateResult()\n    }\n    isMounted.current = true\n  }, [pythPriceMap])\n\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ VaultsAdd.tsx:151 ~ VaultsAdd ~ isAutoRefresh:', isAutoRefresh)\n    if (isMounted.current) {\n      reCalculateResult()\n    }\n  }, [isAutoRefresh])\n\n  const { isCheckedDontRemindWalletObj } = useVaultsRiskStore()\n  const [isOpenRiskModal, setIsOpenRiskModal] = useState(false)\n  const isShowRiskModal = useMemo(() => {\n    return !isCheckedDontRemindWalletObj[currentAccount?.address]\n  }, [isCheckedDontRemindWalletObj, currentAccount?.address])\n\n  useEffect(() => {\n    return () => {\n      uuidRef.current = ''\n    }\n  }, [])\n\n  return (\n    <VStack gap={isModal ? '8px' : '12px'} w=\"100%\" align=\"flex-start\">\n      <Block\n        bg={isModal ? 'transparent' : 'bg_six'}\n        borderColor={isModal ? 'transparent' : 'border_secondary'}\n        borderRadius=\"12px\"\n        p={{ base: '16px 8px 8px', lg: isModal ? '0' : '16px' }}\n        w=\"100%\"\n      >\n        <SwitchAssetTab\n          displayTokenA={fromToken}\n          displayTokenB={toToken}\n          onSelectAssetTab={assetAction => {\n            setAssetAction(assetAction)\n          }}\n          setIsCheckedZAP={() => setIsCheckedZAP(!isCheckedZAP)}\n          setAssetAction={setAssetAction}\n          assetAction={assetAction}\n          isCheckedZAP={isCheckedZAP}\n          category={category}\n          currentActionTab={currentActionTab}\n          handleRefreshClick={() => {\n            console.log('🚀🚀🚀 ~ vaultsAdd.tsx:174 ~ VaultsAdd ~ handleRefreshClick:')\n            reCalculateResult()\n          }}\n        />\n        <VStack mt={isModal ? '8px' : '16px'} position=\"relative\">\n          <TradeInputGroup\n            borderRadius=\"12px\"\n            from={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              hideSelf: assetAction !== 'both' && assetAction !== fromToken?.coin_type,\n              balance: balanceInfoA?.balanceFormat || '',\n              value: amountInputA,\n              amountValue: amountInputA && amountValueA,\n              loading: false,\n              onChange: value => {\n                if (category == 'haedal') {\n                  setIsSlider(false)\n                }\n                handleAmountInputChange(value, true, amountInputB)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: fromToken\n            }}\n            to={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              hideSelf: assetAction !== 'both' && assetAction !== toToken?.coin_type,\n              balance: balanceInfoB?.balanceFormat || '',\n              value: amountInputB,\n              amountValue: amountInputB && amountValueB,\n              loading: false,\n              onChange: value => {\n                if (category == 'haedal') {\n                  setIsSlider(false)\n                }\n                handleAmountInputChange(value, false, amountInputA)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: toToken\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption',\n              iconCursor: 'default'\n            }}\n            iconHover={false}\n          />\n        </VStack>\n      </Block>\n      {category == 'haedal' && isAvailableObject(pythPriceMap) && (\n        <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"16px\" key={vaultId}>\n          <AvailableCapacity\n            depositRatio={avaiableCapacityInfo.depositRatio || ''}\n            percentage={percentage}\n            hardCapUSD={avaiableCapacityInfo.hardCapUSD || ''}\n            vaultTvl={avaiableCapacityInfo.vaultTvl || ''}\n            availableCapacityUSD={avaiableCapacityInfo.availableCapacityUSD || ''}\n            quoteCoin={avaiableCapacityInfo.quoteCoin}\n            maxCapNum={avaiableCapacityInfo.hardCap || ''}\n            availableCapacityWithQuoteCoin={avaiableCapacityInfo.availableCapacityWithQuoteCoin || ''}\n            onChange={(value: string | number) => {\n              setIsSlider(true)\n              setPercentage(value as SetStateAction<number>)\n              const uuid = v4()\n              setUuid(uuid)\n              handlePercentInputChange(\n                value as number,\n                isQuoteCoin\n                  ? (avaiableCapacityInfo?.availableCapacityWithQuoteCoin as string)\n                  : (avaiableCapacityInfo?.availableCapacityWithBaseCoin as string),\n                isQuoteCoin ? avaiableCapacityInfo.quoteCoin : avaiableCapacityInfo.baseCoin,\n                uuid\n              )\n            }}\n          />\n        </Block>\n      )}\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"0px\">\n        <VStack w=\"100%\" gap=\"20px\">\n          <Button\n            m=\"-1px\"\n            isLoading={calculateLpLoading || isOpenAddModel}\n            w=\"100%\"\n            borderRadius=\"12px\"\n            h=\"52px\"\n            fontSize={isApp ? '14px' : '18px'}\n            fontWeight=\"500\"\n            disabled={btnDisabled || isOpenAddModel || calculateLpLoading}\n            onClick={() => {\n              if (currentAccount) {\n                if (isShowRiskModal && category == 'haedal') {\n                  setIsOpenRiskModal(true)\n                } else {\n                  setIsOpenAddModel(true)\n                }\n              } else {\n                onWalletModal(true)\n              }\n            }}\n          >\n            {btnText || (isCheckedZAP ? 'Zap In' : 'Deposit')}\n          </Button>\n\n          {zapNumGtError && (amountInputA || amountInputB) && (\n            <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\" gap=\"20px\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                Single-asset deposit can't be higher than $10,000 at a time.\n              </Text>\n            </VStack>\n          )}\n\n          {zapNumLtError && (amountInputA || amountInputB) && (\n            <VStack w=\"100%\" pl=\"16px\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} pr=\"16px\" alignItems=\"start\">\n              <Text\n                color=\"primary_red\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_red_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The input is too small. Zap mode is not available.\n              </Text>\n            </VStack>\n          )}\n\n          {/* 展示计算结果 */}\n          {(calculateResult || showOnlySideTips) && (amountInputA || amountInputB) && (\n            <VStack w=\"100%\" pb=\"20px\" pl=\"16px\" pr=\"16px\" alignItems=\"start\" gap=\"0\">\n              {assetAction !== 'both' && showOnlySideTips && (\n                <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\" pb={calculateResult ? '20px' : '0'}>\n                  {showOnlySideTips}\n                </Text>\n              )}\n              {calculateResult && (\n                <VaultsAddResult\n                  amountLimit={amountLimit}\n                  inputTotalValue={inputTotalValue}\n                  preCalculateLoading={preCalculateLoading}\n                  calculateLpLoading={calculateLpLoading}\n                  lpRate={lpRate}\n                  lpDecimals={lpTokenInfo?.decimals}\n                  poolName={`${fromToken?.symbol} - ${toToken?.symbol}`}\n                  labelColor=\"primary_gray\"\n                />\n              )}\n            </VStack>\n          )}\n        </VStack>\n      </Block>\n      {isOpenRiskModal && (\n        <RiskModal\n          isOpen={isOpenRiskModal}\n          setIsOpen={setIsOpenRiskModal}\n          continueFunc={() => {\n            setIsOpenRiskModal(false)\n            setIsOpenAddModel(true)\n          }}\n        />\n      )}\n      {isOpenAddModel && (\n        <VaultsAddConfirmModel\n          data={getSecondModelData()}\n          isOpen={isOpenAddModel}\n          calculateLpLoading={calculateLpLoading}\n          onClose={() => {\n            setIsOpenAddModel(false)\n          }}\n          onSubmitClick={() => {\n            setIsOpenAddModel(false)\n            doAddAction()\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import useGlobalStore from '@/store/common/global'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport { MsafeTransactionSubType } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { formatNumber, formatNumberWithDown, fromDecimalsAmountFix, getBalanceChanges } from '@cetus/utils'\nimport { d, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { CalculateRemoveAmountParams, InputType, WithdrawBothParams, WithdrawOneSideParams } from '@cetusprotocol/vaults-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { WithdrawCalculationOptions, WithdrawMode, WithdrawOptions } from 'unstable-sdk'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useGetPythTokenPrice from './pyth-price/useGetPythTokenPrice'\nimport useCurrentVaultDetail from './useCurrentVaultDetail'\n\nexport default function useVaultsRemove(\n  vaultId: string,\n  category: string,\n  displayTokenA: Token,\n  displayTokenB: Token,\n  isReverse: boolean,\n  assetAction: string,\n  isCheckedZAP: boolean,\n  currentVaultPosition: any\n) {\n  const { amountInputA, amountInputB, calculateResult, setAmountInputA, setAmountInputB, setCalculateResult } = useVaultsActionStore()\n  const { findBestRouters } = useFindBestRouting()\n  const { vaultsSlippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n  const vaultsSdk = useSdk('vaults')\n  const { getTokenAmountValueByPyth } = useGetPythTokenPrice()\n  const [preCalculateLoading, setPreCalculateLoading] = useState(false)\n  const [fixAmountA, setFixAmountA] = useState(false)\n  const { fetchAccountBalance } = useAccountBalance()\n  const { updateCurrentVaultById } = useCurrentVaultDetail()\n  const { providers } = useWebConfigStore()\n\n  const fixAmountARef = useRef(fixAmountA)\n  useEffect(() => {\n    fixAmountARef.current = fixAmountA\n  }, [fixAmountA])\n  const [isSlider, setIsSlider] = useState(false)\n  const [uuid, setUuid] = useState('')\n\n  const uuidRef = useRef(uuid)\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const amountInputARef = useRef(amountInputA)\n  const amountInputBRef = useRef(amountInputB)\n  useEffect(() => {\n    amountInputARef.current = amountInputA\n  }, [amountInputA])\n\n  useEffect(() => {\n    amountInputBRef.current = amountInputB\n  }, [amountInputB])\n\n  const tokenA = useMemo(() => {\n    return isReverse ? displayTokenB : displayTokenA\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  const tokenB = useMemo(() => {\n    return isReverse ? displayTokenA : displayTokenB\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  // 价值\n  const amountValueA =\n    category == 'haedal'\n      ? getTokenAmountValueByPyth(displayTokenA?.coin_type, amountInputA || '0')\n      : getTokenAmountValue(displayTokenA?.coin_type, amountInputA || '0')\n  const amountValueB =\n    category == 'haedal'\n      ? getTokenAmountValueByPyth(displayTokenB?.coin_type, amountInputB || '0')\n      : getTokenAmountValue(displayTokenB?.coin_type, amountInputB || '0')\n\n  // 可用数量\n  const [availableAmountA, setAvailableAmountA] = useState(isReverse ? currentVaultPosition?.amountB : currentVaultPosition?.amountA)\n  const [availableAmountB, setAvailableAmountB] = useState(isReverse ? currentVaultPosition?.amountA : currentVaultPosition?.amountB)\n\n  const [calculateAvailableLoading, setCalculateAvailableLoading] = useState<boolean>(false)\n\n  // 计算可用资产\n  const calculateAvailableAmount = async () => {\n    // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:103 ~ calculateAvailableAmount ~ calculateAvailableAmount:')\n    const { amountA, amountB } = currentVaultPosition\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:97 ~ calculateAvailableAmount ~ currentVaultPosition:', currentVaultPosition)\n    setCalculateAvailableLoading(false)\n    if (assetAction === 'both') {\n      setAvailableAmountA(isReverse ? amountB : amountA)\n      setAvailableAmountB(isReverse ? amountA : amountB)\n      return\n    }\n\n    const isOnlyReceiveCoinA = assetAction === tokenA?.coin_type\n    const fromAmount = isOnlyReceiveCoinA ? amountB : amountA\n    const targetAmount = isOnlyReceiveCoinA ? amountA : amountB\n    if (category == 'haedal') {\n      haedalCalculateAvailableAmount(fromAmount, targetAmount, isOnlyReceiveCoinA)\n    } else {\n      // 利用findRouter 转化为 单一资产\n      lstCalculateAvailableAmount(fromAmount, targetAmount, isOnlyReceiveCoinA)\n    }\n  }\n\n  // haedal 计算可用资产\n  const haedalCalculateAvailableAmount = async (fromAmount: string, targetAmount: string, isOnlyReceiveCoinA: boolean) => {\n    if (d(fromAmount).gt(0)) {\n      setCalculateAvailableLoading(true)\n      // mode为合约方向\n      const params: any = {\n        pool_id: vaultId,\n        mode,\n        burn_lp_amount: currentVaultPosition?.balance,\n        available_lp_amount: currentVaultPosition?.balance\n      }\n      try {\n        const res = await volatileVaultsSdk.Vaults.preCalculateWithdrawAmount(params)\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:127 ~ haedalCalculateAvailableAmount ~ res:', res)\n        // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:110 ~ calculateAvailableAmount ~ res:', res)\n        // mode 为合约方向\n        if (mode == 'OnlyCoinA') {\n          const amount = fromDecimalsAmountFix(res.receive_amount_a, tokenA?.decimals)\n          if (isReverse) {\n            setAvailableAmountB(amount)\n          } else {\n            setAvailableAmountA(amount)\n          }\n        } else {\n          const amount = fromDecimalsAmountFix(res.receive_amount_b, tokenB?.decimals)\n          if (isReverse) {\n            setAvailableAmountA(amount)\n          } else {\n            setAvailableAmountB(amount)\n          }\n        }\n        setCalculateAvailableLoading(false)\n      } catch (error) {\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:145 ~ calculateAvailableAmount ~ error:', error)\n      }\n    } else {\n      if (isOnlyReceiveCoinA) {\n        setAvailableAmountA(targetAmount)\n      } else {\n        setAvailableAmountB(targetAmount)\n      }\n    }\n    setCalculateAvailableLoading(false)\n  }\n\n  // cetus 计算可用资产\n  const lstCalculateAvailableAmount = async (fromAmount: string, targetAmount: string, isOnlyReceiveCoinA: boolean) => {\n    if (d(fromAmount).gt(0)) {\n      setCalculateAvailableLoading(true)\n      const fromToken = isOnlyReceiveCoinA ? tokenB! : tokenA!\n      const toToken = isOnlyReceiveCoinA ? tokenA! : tokenB!\n\n      findBestRouters({\n        fromToken,\n        toToken,\n        amount: toDecimalsAmount(fromAmount, fromToken.decimals).toString(),\n        providersKeys: providers,\n        by_amount_in: true,\n        uuid: v4()\n      })\n        .then(result => {\n          if (result.toAmountUi) {\n            targetAmount = d(targetAmount).add(result.toAmountUi).toString()\n          }\n          if (isOnlyReceiveCoinA) {\n            setAvailableAmountA(targetAmount)\n          } else {\n            setAvailableAmountB(targetAmount)\n          }\n        })\n        .finally(() => {\n          setCalculateAvailableLoading(false)\n        })\n    } else {\n      if (isOnlyReceiveCoinA) {\n        setAvailableAmountA(targetAmount)\n      } else {\n        setAvailableAmountB(targetAmount)\n      }\n    }\n  }\n\n  // 总价值 100% = 硬顶 - 当前TVL 不是百分百 显示输入框A、B的值相加\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // ZAP模式下不能超过10000\n  const zapNumGtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(d(10000))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  // ZAP模式下不能小于0.0001\n  const zapNumLtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(d(0.0001))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  const [removePercent, setRemovePercent] = useState<number>(0)\n\n  // 清空输入框\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    setRemovePercent(0)\n    setPreCalculateLoading(false)\n    setCalculateResult(undefined)\n    setUuid('')\n  }\n\n  // 预计算结束 给输入框赋值\n  const wrapRes = (res: any, isFixedDisplayTokenA: boolean, isSlider: boolean, displayRatio: number) => {\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:96 ~ wrapRes ~ res:', res, isSlider, displayRatio)\n    if (res) {\n      const amountA = d(category == 'haedal' ? res.receive_amount_a : res.amount_a)\n        .div(10 ** tokenA.decimals)\n        .toString()\n      const amountB = d(category == 'haedal' ? res.receive_amount_b : res.amount_b)\n        .div(10 ** tokenB.decimals)\n        .toString()\n      const swapOutAmount = d(res.swap_result?.swap_out_amount || '0')\n        .div(10 ** (isFixedDisplayTokenA ? displayTokenA.decimals : displayTokenB.decimals))\n        .toString()\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:239 ~ wrapRes ~ swapOutAmount:', swapOutAmount, amountA, amountB)\n      if (displayRatio === 100 && assetAction == 'both') {\n        setAvailableAmountA(isReverse ? amountB : amountA)\n        setAvailableAmountB(isReverse ? amountA : amountB)\n      }\n      // 输入模式 滑杆模式\n      // 输入模式下 只需要set另一边\n      // 滑杆模式下 需要set两边\n\n      if (!isSlider) {\n        if (assetAction !== 'both') return\n        if (isFixedDisplayTokenA) {\n          setAmountInputB(isReverse ? amountA : amountB)\n        } else {\n          setAmountInputA(isReverse ? amountB : amountA)\n        }\n      } else {\n        if (assetAction == 'both') {\n          setAmountInputA(isReverse ? amountB : amountA)\n          setAmountInputB(isReverse ? amountA : amountB)\n        } else {\n          if (assetAction == displayTokenA?.coin_type) {\n            // const amount = d(swapOutAmount)\n            //   .add(category == 'cetus' ? amountA : isReverse ? amountB : amountA)\n            //   .toString()\n            if (displayRatio == 100) {\n              // setAvailableAmountA(amount)\n            }\n            const amount = d(availableAmountA).mul(displayRatio).div(100).toString()\n            console.log('🚀🚀🚀 ~ useVaultsRemove.ts:264 ~ wrapRes ~ amount:', amount)\n            setAmountInputA(amount)\n          } else {\n            // const amount = d(swapOutAmount)\n            //   .add(category == 'cetus' ? amountB : isReverse ? amountA : amountB)\n            //   .toString()\n            if (displayRatio == 100) {\n              // setAvailableAmountB(amount)\n            }\n            const amount = d(availableAmountB).mul(displayRatio).div(100).toString()\n            setAmountInputB(amount)\n          }\n          // if (isFixedDisplayTokenA) {\n          //   setAmountInputA(isReverse ? amountB : amountA)\n          // } else {\n          //   setAmountInputB(isReverse ? amountA : amountB)\n          // }\n        }\n      }\n    }\n  }\n  /**\n   * 预计算\n   * @param amount\n   * @param isPercentInput\n   * @param fix_amount_a\n   * @param uuid\n   */\n  const preCalculate = async (amount: string, is_ft_input: boolean, isFixedDisplayTokenA: boolean, uuid: string, removePercent?: number) => {\n    if (tokenA && tokenB && vaultId) {\n      // 非百分比输入，要判断余额是否足够\n      if (!removePercent) {\n        if (isFixedDisplayTokenA) {\n          if (d(amount).gt(availableAmountA)) {\n            setUuid('')\n            setAmountInputB('')\n            setRemovePercent(0)\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            return\n          }\n        } else {\n          if (d(amount).gt(availableAmountB)) {\n            setUuid('')\n            setAmountInputA('')\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            setRemovePercent(0)\n            return\n          }\n        }\n      }\n\n      if (+amountInputARef.current || +amountInputBRef.current || removePercent) {\n        setPreCalculateLoading(true)\n      }\n\n      const fixToken = (isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA) ? tokenA : tokenB\n      const inputAmount = toDecimalsAmount(amount, fixToken.decimals).toFixed(0)\n      const availableRemoveAmount = isFixedDisplayTokenA\n        ? toDecimalsAmount(availableAmountA, fixToken.decimals).toFixed(0)\n        : toDecimalsAmount(availableAmountB, fixToken.decimals).toFixed(0)\n      const fixedCoinA = isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n      const ratio = d(inputAmount).div(d(availableRemoveAmount))\n      const removeLpAmount = formatNumberWithDown(ratio.mul(currentVaultPosition?.balance).toString(), 0, true)\n      const displayRatio = Number(formatNumberWithDown(ratio.mul(100).toString(), 2))\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:324 ~ preCalculate ~ fixedCoinA:', fixedCoinA)\n      setFixAmountA(fixedCoinA)\n      if (category === 'haedal') {\n        haedalPreCalculate(removeLpAmount as string, isFixedDisplayTokenA, uuid, displayRatio, false)\n      } else {\n        lstPreCalculate(removeLpAmount as string, isFixedDisplayTokenA, fixedCoinA, uuid, displayRatio, false)\n      }\n    }\n  }\n\n  // haedal 预计算\n  const haedalPreCalculate = async (removeLpAmount: string, isFixedDisplayTokenA: boolean, uuid: string, displayRatio: number, isSlider: boolean) => {\n    let params: WithdrawCalculationOptions\n\n    if (assetAction == 'both') {\n      params = {\n        pool_id: vaultId,\n        mode: 'FixedOneSide',\n        burn_lp_amount: String(removeLpAmount)\n        // request_id: uuid\n      }\n    } else {\n      const mode = assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n      params = {\n        pool_id: vaultId,\n        mode,\n        burn_lp_amount: String(removeLpAmount)\n        // request_id: uuid\n      }\n    }\n\n    try {\n      const res = await volatileVaultsSdk.Vaults.preCalculateWithdrawAmount(params)\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:386 ~ haedalPreCalculate ~ res:', res, uuid, uuidRef.current)\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:202 ~ haedalPreCalculate ~ res:', res)\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:215 ~ haedalPreCalculate ~ uuidRef.current:', uuidRef.current, uuid)\n      // if (uuidRef.current !== params.request_id) return\n\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:224 ~ haedalPreCalculate ~ res:', res)\n      if (res.burn_lp_amount == '0') {\n        setPreCalculateLoading(false)\n        setCalculateResult(undefined)\n        return\n      }\n\n      wrapRes(res, isFixedDisplayTokenA, isSlider, displayRatio)\n      setCalculateResult({\n        ...res,\n        burn_ft_amount: res.burn_lp_amount\n      } as any)\n      setRemovePercent(displayRatio)\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:388 ~ haedalPreCalculate ~ error:', error)\n      setCalculateResult(undefined)\n    } finally {\n      setPreCalculateLoading(false)\n    }\n  }\n\n  const lstPreCalculate = async (\n    removeLpAmount: string,\n    isFixedDisplayTokenA: boolean,\n    fixedCoinA: boolean,\n    uuid: string,\n    displayRatio: number,\n    isSlider: boolean\n  ) => {\n    const params: CalculateRemoveAmountParams = {\n      vault_id: vaultId,\n      fix_amount_a: fixedCoinA,\n      input_amount: removeLpAmount,\n      slippage: Number(vaultsSlippage),\n      request_id: uuid,\n      side: assetAction === 'both' ? InputType.Both : InputType.OneSide,\n      is_ft_input: true,\n      max_ft_amount: currentVaultPosition?.balance\n    }\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:275 ~ lstPreCalculate ~ params:', params)\n\n    try {\n      const res = await vaultsSdk!.Vaults.calculateWithdrawAmount(params)\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:386 ~ res:', res, displayRatio)\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:202 ~ haedalPreCalculate ~ res:', res)\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:215 ~ haedalPreCalculate ~ uuidRef.current:', uuidRef.current, uuid)\n      // if (uuidRef.current !== uuid) return\n\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:224 ~ haedalPreCalculate ~ res:', res)\n      if (res.burn_ft_amount == '0') {\n        setPreCalculateLoading(false)\n        setCalculateResult(undefined)\n        return\n      }\n\n      wrapRes(res, isFixedDisplayTokenA, isSlider, displayRatio)\n      setCalculateResult(res)\n      setRemovePercent(displayRatio)\n    } catch (error) {\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:297 ~ lstPreCalculate ~ error:', error)\n      setCalculateResult(undefined)\n    } finally {\n      setPreCalculateLoading(false)\n    }\n  }\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n  const debouncedPercentInputChange = useDebounceFunction(category == 'cetus' ? lstPreCalculate : haedalPreCalculate, 500)\n\n  // 百分比输入\n  const handlePercentInputChange = (value: number, isFixedDisplayTokenA: boolean) => {\n    if (value == 0) {\n      resetInputAmount()\n      return\n    }\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:218 ~ handlePercentInputChange ~ value:', value, category)\n    setIsSlider(true)\n    setPreCalculateLoading(true)\n    setRemovePercent(value)\n    const uuid = v4()\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:225 ~ handlePercentInputChange ~ uuid:', uuid)\n    setUuid(uuid)\n    const removeLpAmount = formatNumberWithDown(\n      d(currentVaultPosition?.balance)\n        .mul(value / 100)\n        .toString(),\n      0,\n      true\n    )\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:459 ~ handlePercentInputChange ~ removeLpAmount:', removeLpAmount, currentVaultPosition?.balance)\n\n    const fixedCoinA = isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n    setFixAmountA(fixedCoinA)\n\n    if (category === 'haedal') {\n      debouncedPercentInputChange(removeLpAmount as string, isFixedDisplayTokenA, uuid, value, true)\n    } else {\n      debouncedPercentInputChange(removeLpAmount as string, isFixedDisplayTokenA, fixedCoinA, uuid, value, true)\n    }\n  }\n\n  const handleAmountInputChange = (amount: string, isFixedDisplayTokenA: boolean, isClickMax?: boolean, isClickHalf?: boolean) => {\n    // 移除全部，走LP 移除\n    if (isClickHalf || isClickMax) {\n      // 单token移除这里赋值\n      if (assetAction !== 'both') {\n        if (isFixedDisplayTokenA) {\n          setAmountInputA(amount)\n        } else {\n          setAmountInputB(amount)\n        }\n      }\n    }\n    if (isClickMax) {\n      handlePercentInputChange(100, isFixedDisplayTokenA)\n      return\n    }\n\n    if (isClickHalf) {\n      handlePercentInputChange(50, isFixedDisplayTokenA)\n      return\n    }\n    setIsSlider(false)\n\n    // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:423 ~ handleAmountInputChange ~ isFixedDisplayTokenA:', isFixedDisplayTokenA)\n    if (isFixedDisplayTokenA) {\n      setAmountInputA(amount)\n    } else {\n      setAmountInputB(amount)\n    }\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedPreCalculate(amount, false, isFixedDisplayTokenA, uuid)\n    } else {\n      resetInputAmount()\n    }\n  }\n\n  const mode: WithdrawMode = useMemo(() => {\n    if (isCheckedZAP) {\n      return assetAction == 'both' ? 'FixedOneSide' : assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n    } else {\n      return 'FixedOneSide'\n    }\n  }, [isCheckedZAP, assetAction, tokenA])\n\n  // 重新计算\n  const reCalculateResult = () => {\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:519 ~ reCalculateResult ~ reCalculateResult:')\n    const isDisplayTokenA = isReverse ? !fixAmountARef.current : fixAmountARef.current\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:516 ~ reCalculateResult ~ isDisplayTokenA:', isDisplayTokenA)\n    if (isSlider) {\n      handlePercentInputChange(removePercent, isDisplayTokenA)\n    } else {\n      const amount = fixAmountARef.current\n        ? isReverse\n          ? amountInputBRef.current\n          : amountInputARef.current\n        : isReverse\n          ? amountInputARef.current\n          : amountInputBRef.current\n      handleAmountInputChange(amount, isDisplayTokenA)\n    }\n  }\n\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n  const [submitLoading, setSubmitLoading] = useState(false)\n  const doRemoveAction = async () => {\n    if (vaultId && calculateResult && currentVaultPosition?.balance) {\n      setSubmitLoading(true)\n\n      let param: WithdrawOptions | WithdrawBothParams | WithdrawOneSideParams\n      if (category == 'haedal') {\n        param = {\n          pool_id: vaultId,\n          burn_lp_amount: removePercent == 100 ? currentVaultPosition?.balance : calculateResult.burn_ft_amount,\n          mode,\n          slippage: Number(vaultsSlippage)\n        }\n      } else {\n        if (assetAction === 'both') {\n          param = {\n            vault_id: vaultId,\n            ft_amount: calculateResult?.burn_ft_amount as string,\n            slippage: Number(vaultsSlippage)\n          }\n        } else {\n          const fix_amount_a = assetAction === tokenA?.coin_type\n          if (removePercent === 100) {\n            param = {\n              vault_id: vaultId,\n              is_ft_input: true,\n              input_amount: currentVaultPosition?.balance,\n              slippage: Number(vaultsSlippage),\n              max_ft_amount: currentVaultPosition?.balance,\n              fix_amount_a\n            }\n          } else {\n            const input_amount = toDecimalsAmount(fixAmountA ? amountInputA : amountInputB, 9)\n            param = {\n              vault_id: vaultId,\n              is_ft_input: false,\n              input_amount: input_amount.toString(),\n              slippage: Number(vaultsSlippage),\n              max_ft_amount: currentVaultPosition?.balance,\n              fix_amount_a\n            }\n          }\n        }\n      }\n      // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:567 ~ doRemoveAction ~ calculateResult:', calculateResult)\n\n      console.log('🚀 ~ doRemoveAction ~ params:', param)\n\n      // 构建 交易提示\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n          const description =\n            'Withdraw ' +\n            [formatDescription(amountInputA, displayTokenA.symbol), formatDescription(amountInputB, displayTokenB.symbol)]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastDescriptionContent: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA || '0'\n            let amountB = amountInputB || '0'\n\n            // if (res) {\n            //   res.events.forEach(event => {\n            // //     console.log('🚀🚀🚀 ~ useVaultsAdd.ts:367 ~ doAddAction ~ event:', event)\n            //     if (event.type.indexOf('::pool::WithdrawEvent') > -1 && tokenA && tokenB) {\n            //       amountA = String(fromDecimalsAmount(event.parsedJson.amount_a, tokenA.decimals))\n            // //       console.log('🚀🚀🚀 ~ useVaultsAdd.ts:361 ~ doAddAction ~ amountA:', amountA)\n            //       amountB = String(fromDecimalsAmount(event.parsedJson.amount_b, tokenB.decimals))\n            // //       console.log('🚀🚀🚀 ~ useVaultsAdd.ts:363 ~ doAddAction ~ amountB:', amountB)\n            //     }\n            //   })\n            // }\n\n            console.log('🚀🚀🚀 ~ useVaultsRemove.ts:582 ~ doRemoveAction ~ balanceChanges:', balanceChanges, amountInputA, amountInputB)\n            if (balanceChanges) {\n              amountA = d(amountInputA || '0').gt(0) ? getBalanceChanges(balanceChanges, displayTokenA) || amountInputA : ''\n              amountB = d(amountInputB || '0').gt(0) ? getBalanceChanges(balanceChanges, displayTokenB) || amountInputB : ''\n            }\n            // console.log('🚀🚀🚀 ~ useVaultsRemove.ts:584 ~ doRemoveAction ~ amount:', amountA, amountB)\n\n            const descriptionList = [formatDescription(amountA, displayTokenA.symbol), formatDescription(amountB, displayTokenB.symbol)].filter(\n              Boolean\n            )\n\n            const description =\n              (descriptionList && descriptionList.length > 1 ? 'Removed ' : 'Withdraw ') +\n              [formatDescription(amountA, displayTokenA?.symbol), formatDescription(amountB, displayTokenB?.symbol)].filter(Boolean).join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n\n      try {\n        let tx = new Transaction()\n        if (category == 'haedal') {\n          tx = await volatileVaultsSdk.Vaults.buildWithdrawPayload(param as WithdrawOptions)\n        } else {\n          await vaultsSdk!.Vaults.withdraw(param as WithdrawBothParams | WithdrawOneSideParams, tx)\n        }\n        const res = await signAndExecuteTransaction(tx, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: param\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          setTimeout(() => {\n            fetchAccountBalance()\n            updateCurrentVaultById(vaultId)\n          }, 2000)\n          // autoRefresh()\n        } else {\n          reCalculateResult()\n        }\n        setSubmitLoading(false)\n      } catch (error) {\n        // console.log('🚀 ~ doAddAction ~ error:', error)\n        setSubmitLoading(false)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  // 单边提示文案\n  const showOnlySideTips = useMemo(() => {\n    // if (category == 'haedal') {\n    //   return undefined\n    // }\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:656 ~ showOnlySideTips ~ calculateResult:', calculateResult)\n    if (calculateResult && (calculateResult.swap_result || calculateResult.swap) && assetAction !== 'both' && tokenA && tokenB) {\n      let amountIn = category == 'cetus' ? calculateResult.swap_result.swap_in_amount : calculateResult.swap.swap_amount_in\n      let amountOut = category == 'cetus' ? calculateResult.swap_result.swap_out_amount : calculateResult.swap.swap_amount_out\n\n      const fixedAmountA = category == 'cetus' ? fixAmountA : isReverse ? !fixAmountA : fixAmountA\n      const amount = fixedAmountA ? amountInputA : amountInputB\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:709 ~ showOnlySideTips ~ amount:', amount)\n\n      const fixToken = fixedAmountA ? displayTokenA : displayTokenB\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:687 ~ showOnlySideTips ~ fixToken:', fixToken)\n\n      const targetToken = fixedAmountA ? displayTokenB : displayTokenA\n\n      const swapInAmount = fromDecimalsAmountFix(amountIn, targetToken.decimals)\n\n      const swapOutAmount = fromDecimalsAmountFix(\n        d(amountOut)\n          .mul(1 - Number(vaultsSlippage))\n          .toString(),\n        fixToken.decimals\n      )\n\n      return `To withdraw ${formatNumber(amount, fixToken?.decimals)} ${fixToken?.symbol}, ${formatNumber(swapInAmount, targetToken?.decimals)} ${targetToken?.symbol} in the pool will be traded for ${formatNumber(swapOutAmount, fixToken?.decimals)} ${fixToken?.symbol}`\n    }\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB, fixAmountA, category])\n\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:717 ~ availableAmountA:', availableAmountA)\n    reCalculateResult()\n  }, [availableAmountA, availableAmountB])\n\n  const { currentAccount } = useAccountStore()\n\n  useEffect(() => {\n    resetInputAmount()\n    setTimeout(() => {\n      if (currentVaultPosition?.amountA && currentVaultPosition?.amountB) {\n        calculateAvailableAmount()\n      }\n    }, 200)\n  }, [isCheckedZAP, assetAction, currentAccount?.address])\n\n  useEffect(() => {\n    calculateAvailableAmount()\n  }, [currentVaultPosition?.amountA, currentVaultPosition?.amountB])\n\n  return {\n    calculateAvailableLoading,\n    availableAmountA,\n    availableAmountB,\n    amountInputA,\n    amountInputB,\n    amountValueA,\n    amountValueB,\n    zapNumGtError,\n    zapNumLtError,\n    handleAmountInputChange,\n    handlePercentInputChange,\n    debouncedPercentInputChange,\n    removePercent,\n    showOnlySideTips,\n    preCalculateLoading,\n    doRemoveAction,\n    inputTotalValue,\n    calculateResult,\n    setIsSlider,\n    resetInputAmount,\n    calculateAvailableAmount,\n    submitLoading,\n    isSlider,\n    fixAmountA,\n    reCalculateResult\n  }\n}\n","import { PositionSlider } from '@/components/position/details/RemoveBlock'\nimport useVaultsButtonStatus from '@/hooks/vault-v2/useVaultsButtonStatus'\nimport { useCalculateSlippageAmount } from '@/hooks/vault-v2/useVaultsHelper'\nimport useVaultsRemove from '@/hooks/vault-v2/useVaultsRemove'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { formatCurrency, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { SwitchAssetTab } from './SwitchAssetTab'\ntype VaultsRemoveProps = {\n  category: string\n  isReverse: boolean\n  vaultId: string\n  currentActionTab: string\n  lpTokenInfo: Token\n  isModal?: boolean\n  isAutoRefresh: boolean\n}\nexport default function VaultsRemove(props: VaultsRemoveProps) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { fromToken, toToken, calculateResult } = useVaultsActionStore()\n  console.log('🚀🚀🚀 ~ VaultsRemove.tsx:27 ~ VaultsRemove ~ calculateResult:', calculateResult)\n  const { currentVaultPosition } = useVaultsPositionStore()\n  const [assetAction, setAssetAction] = useState('both')\n  const [isCheckedZAP, setIsCheckedZAP] = useState(false)\n  const { category, isReverse, vaultId, currentActionTab, lpTokenInfo, isModal, isAutoRefresh } = props\n  const currentPosition = useMemo(() => {\n    return currentVaultPosition\n  }, [currentVaultPosition])\n  const {\n    amountInputA,\n    amountInputB,\n    amountValueA,\n    amountValueB,\n    calculateAvailableLoading,\n    availableAmountA,\n    availableAmountB,\n    zapNumGtError,\n    zapNumLtError,\n    handleAmountInputChange,\n    removePercent,\n    handlePercentInputChange,\n    doRemoveAction,\n    showOnlySideTips,\n    preCalculateLoading,\n    inputTotalValue,\n    setIsSlider,\n    resetInputAmount,\n    isSlider,\n    fixAmountA,\n    reCalculateResult\n  } = useVaultsRemove(vaultId, category, fromToken, toToken, isReverse, assetAction, isCheckedZAP, currentPosition)\n\n  const { btnText, btnDisabled } = useVaultsButtonStatus(\n    amountInputA,\n    amountInputB,\n    availableAmountA || '',\n    availableAmountB || '',\n    fromToken,\n    toToken,\n    assetAction,\n    false,\n    zapNumGtError,\n    zapNumLtError,\n    category,\n    isCheckedZAP\n  )\n  console.log('🚀🚀🚀 ~ VaultsRemove.tsx:72 ~ VaultsRemove ~ btnDisabled:', btnDisabled, btnText)\n\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(0, calculateResult?.burn_ft_amount, false)\n\n  const LPBurnAmount = useMemo(() => {\n    return formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), lpTokenInfo?.decimals)\n  }, [amountLimit, lpTokenInfo])\n\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ VaultsRemove.tsx:80 ~ VaultsRemove ~ sCheckedZAP, assetAction:', isCheckedZAP, assetAction)\n    resetInputAmount()\n  }, [isCheckedZAP, assetAction])\n\n  const showTokenALoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isSlider) {\n        return true\n      }\n      if (isReverse) {\n        return fixAmountA\n      }\n      return !fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isSlider])\n\n  const showTokenBLoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isSlider) {\n        return true\n      }\n      if (isReverse) {\n        return !fixAmountA\n      }\n      return fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isSlider])\n\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     reCalculateResult()\n  //   }\n  // }, [isAutoRefresh])\n\n  return (\n    <VStack gap={isModal ? '8px' : '12px'} w=\"100%\" align=\"flex-start\">\n      {/* <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p={{ base: '16px 8px 8px', lg: '16px' }} w=\"100%\"> */}\n      <Block\n        bg={isModal ? 'transparent' : 'bg_six'}\n        borderColor={isModal ? 'transparent' : 'border_secondary'}\n        borderRadius=\"12px\"\n        // p={{ base: '16px 8px 8px', lg: '16px' }}\n        p={{ base: '16px 8px 8px', lg: isModal ? '0' : '16px' }}\n        w=\"100%\"\n      >\n        <SwitchAssetTab\n          label=\"Remove Amounts\"\n          displayTokenA={fromToken}\n          displayTokenB={toToken}\n          onSelectAssetTab={assetAction => {\n            setAssetAction(assetAction)\n          }}\n          isCheckedZAP={isCheckedZAP}\n          setIsCheckedZAP={setIsCheckedZAP}\n          assetAction={assetAction}\n          setAssetAction={setAssetAction}\n          currentActionTab={currentActionTab}\n          category={category}\n        />\n        <Box w=\"100%\" position=\"relative\" mt={isModal ? '8px' : '16px'}>\n          <TradeInputGroup\n            borderRadius=\"12px\"\n            from={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              calculateAvailableLoading,\n              hideSelf: assetAction !== 'both' && assetAction !== fromToken?.coin_type,\n              balance: availableAmountA || '',\n              value: amountInputA,\n              amountValue: amountValueA,\n              loading: showTokenALoading,\n              onChange: (value: string, isClickMax?: boolean, isClickHalf?: boolean) => {\n                if (currentAccount?.address && !calculateAvailableLoading) {\n                  setIsSlider(false)\n                  handleAmountInputChange(value, true, isClickMax, isClickHalf)\n                }\n              },\n              needRemainBalance: false,\n              selectable: false,\n              placeholder: '0.0',\n              token: fromToken,\n              balanceLabel: 'Available'\n            }}\n            to={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              balanceLabel: 'Available',\n              calculateAvailableLoading,\n              needRemainBalance: false,\n              hideSelf: assetAction !== 'both' && assetAction !== toToken?.coin_type,\n              balance: availableAmountB || '',\n              value: amountInputB,\n              amountValue: amountValueB,\n              loading: showTokenBLoading,\n              onChange: (value: string, isClickMax?: boolean, isClickHalf?: boolean) => {\n                if (currentAccount?.address && !calculateAvailableLoading) {\n                  setIsSlider(false)\n                  handleAmountInputChange(value, false, isClickMax, isClickHalf)\n                }\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: toToken\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption',\n              iconCursor: 'default'\n            }}\n            iconHover={false}\n          />\n        </Box>\n      </Block>\n      {!isModal && (\n        <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p={{ base: '16px 8px', lg: '16px' }}>\n          <Text color=\"primary_gray\">Amount</Text>\n          <PositionSlider\n            percentage={removePercent}\n            onChange={(value: string | number) => {\n              if (!calculateAvailableLoading) {\n                console.log('🚀🚀🚀 ~ VaultsRemove.tsx:213 ~ VaultsRemove ~ assetAction:', assetAction)\n                console.log('🚀🚀🚀 ~ VaultsRemove.tsx:214 ~ VaultsRemove ~ fromToken.address:', fromToken.address)\n                handlePercentInputChange(Number(value.toString().replace('%', '')), assetAction == 'both' ? true : assetAction == fromToken.coin_type)\n              }\n            }}\n          />\n        </Block>\n      )}\n\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"0px\">\n        <VStack w=\"100%\" gap=\"20px\">\n          <Button\n            m=\"-1px\"\n            isLoading={preCalculateLoading}\n            w=\"100%\"\n            borderRadius=\"12px\"\n            h=\"52px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            disabled={btnDisabled || preCalculateLoading}\n            onClick={() => {\n              if (currentAccount) {\n                doRemoveAction()\n              } else {\n                onWalletModal(true)\n              }\n            }}\n          >\n            {btnText || (isCheckedZAP ? 'Zap Out' : 'Withdraw')}\n          </Button>\n\n          {zapNumGtError && (\n            <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb=\"20px\" alignItems=\"start\">\n              <Text\n                color=\"primary_red\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_red_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                Single-asset withdraw can't be higher than $10,000 at a time.\n              </Text>\n            </VStack>\n          )}\n\n          {/* 展示计算结果 */}\n          {calculateResult && !zapNumGtError && (amountInputA || amountInputB) && (\n            <VStack w=\"100%\" pb=\"20px\" pl=\"16px\" pr=\"16px\" gap=\"0px\">\n              {assetAction !== 'both' && showOnlySideTips && (\n                <Text color=\"text_paragraph\" width=\"100%\" fontSize=\"12px\" lineHeight=\"1.8\" pb=\"20px\">\n                  {showOnlySideTips}\n                </Text>\n              )}\n              <VStack w=\"100%\" gap=\"20px\">\n                <HTextLabelBox\n                  label=\"Total Withdraw\"\n                  labelStyle={{\n                    fontSize: '14px'\n                  }}\n                  value={formatCurrency(inputTotalValue, 2)}\n                  valueStyle={{\n                    fontSize: '14px'\n                  }}\n                  skeletonStyle={{\n                    valueH: '14px'\n                  }}\n                  isLoading={preCalculateLoading}\n                />\n                <HTextLabelBox\n                  label=\"LP Burn Amount\"\n                  value={`${LPBurnAmount} ${`${fromToken?.symbol} - ${toToken?.symbol}`}`}\n                  labelStyle={{\n                    fontSize: '14px'\n                  }}\n                  valueStyle={{\n                    fontSize: '14px'\n                  }}\n                  skeletonStyle={{\n                    valueH: '14px'\n                  }}\n                  isLoading={preCalculateLoading}\n                />\n              </VStack>\n            </VStack>\n          )}\n        </VStack>\n      </Block>\n    </VStack>\n  )\n}\n","import Slippage from '@/components/common/Slippage'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport { Block, SelectTab } from '@cetus/design'\nimport { RefreshButton } from '@cetus/ui-kit'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport VaultsAdd from './VaultsAdd'\nimport VaultsRemove from './VaultsRemove'\n\nconst tabList = [\n  {\n    label: 'Deposit',\n    value: 'Deposit'\n  },\n  {\n    label: 'Withdraw',\n    value: 'Withdraw'\n  }\n]\n// Vault 操作部分 弹窗详情共用 isModal参数区分\nexport default function VaultsAction({\n  vaultId,\n  autoRefresh,\n  isModal,\n  currentTab = 'Deposit'\n}: {\n  vaultId: string\n  autoRefresh: () => void\n  isModal: boolean\n  currentTab?: 'Deposit' | 'Withdraw'\n}) {\n  const { setAmountInputA, setAmountInputB } = useVaultsActionStore()\n  const { vaultListObj, lpTokenInfoObj } = useVaultsListV2Store()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n  const currentVaultPoolApiInfo = useMemo(() => {\n    return vaultListObj[vaultId as string]\n  }, [vaultListObj, vaultId])\n  const currentVaultPoolContractInfo = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj])\n  const [currTab, setCurrTab] = useState<'Deposit' | 'Withdraw'>(currentTab)\n\n  const lpTokenInfo = useMemo(() => {\n    return lpTokenInfoObj[currentVaultPoolApiInfo?.lpTokenType]\n  }, [lpTokenInfoObj, currentVaultPoolApiInfo?.lpTokenType])\n\n  const [isRefresh, setIsRefresh] = useState(false)\n\n  const handleRefresh = () => {\n    autoRefresh()\n    setIsRefresh(prev => !prev)\n  }\n\n  return (\n    <VStack w={{ base: '100%', lg: '100%' }} justifyContent=\"start\" gap={isModal ? '8px' : '12px'}>\n      {/* 切换Tab */}\n      {/* <Block p=\"0\" borderRadius=\"12px\" bg=\"bg_six\" borderColor=\"border_secondary\"> */}\n      <Block p=\"0\" borderRadius=\"12px\" bg={isModal ? 'transparent' : 'bg_six'} borderColor={isModal ? 'transparent' : 'border_secondary'}>\n        <HStack w=\"100%\" p={{ base: '0 8px', lg: isModal ? '0' : '0 16px' }}>\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: '100%',\n              h: isModal ? '54px' : '60px',\n              border: 'none',\n              bg: isModal ? 'transparent' : 'bg_six',\n              borderColor: 'border_secondary'\n            }}\n            itemStyle={{\n              fontSize: isModal ? '14px' : '16px',\n              mr: '28px'\n            }}\n            tabList={tabList}\n            currentTab={currTab}\n            handleChangeTab={(item: any) => {\n              setAmountInputA('')\n              setAmountInputB('')\n              setCurrTab(item?.value)\n            }}\n          />\n          <HStack>\n            <Slippage slippageType=\"vaults\" compact={true} />\n            <RefreshButton\n              handleRefresh={() => handleRefresh()}\n              isAutoRefresh={true}\n              refreshInterval={20}\n              innerStyle={{ bg: 'bg_secondary' }}\n              w=\"28px\"\n              h=\"28px\"\n              borderRadius=\"8px\"\n              bg=\"bg_secondary\"\n            />\n          </HStack>\n        </HStack>\n      </Block>\n\n      {currTab === 'Deposit' && (\n        <VaultsAdd\n          category={currentVaultPoolApiInfo?.category}\n          isReverse={currentVaultPoolApiInfo?.isReverse}\n          vaultId={currentVaultPoolApiInfo?.vaultId}\n          currentActionTab=\"Deposit\"\n          totalSupply={currentVaultPoolContractInfo?.totalSupply}\n          lpTokenInfo={lpTokenInfo}\n          feeTier={currentVaultPoolApiInfo?.feeDisplay}\n          isModal={isModal}\n          isAutoRefresh={isRefresh}\n        />\n      )}\n      {currTab === 'Withdraw' && (\n        <VaultsRemove\n          category={currentVaultPoolApiInfo?.category}\n          isReverse={currentVaultPoolApiInfo?.isReverse}\n          vaultId={currentVaultPoolApiInfo?.vaultId}\n          currentActionTab=\"Withdraw\"\n          lpTokenInfo={lpTokenInfo}\n          isModal={isModal}\n          isAutoRefresh={isRefresh}\n        />\n      )}\n    </VStack>\n  )\n}\n"],"names":["store","set","get","value","fromToken","toToken","calculateResult","useVaultsActionStore","create","useCurrentVaultDetail","setCurrentVaultPosition","vaultsPositionObj","setCurrentVaultPositionLoading","setVaultsPositionObj","useVaultsPositionStore","vaultClmmPoolContractInfoObj","setLstVaultContractInfoObj","setHaedalVaultContractInfoObj","useVaultsPoolContractStore","volatileVaultsSdk","usePeripherySDKStore","vaultsSdk","useSdk","vaultsList","useVaultsListV2Store","getVaultPoolList","useGetVaultPoolList","getVaultPosition","useGetVaultsPosition","getVaultsContractInfo","useGetVaultsContract","getPythLastPrice","useGetPythLastPrice","fetchTokenPrices","useTokenPrice","setFromToken","setToToken","currentAccount","useAccountStore","currentAcc","useRef","useEffect","getCurrentVaultDetail","vaultId","isRefresh","isAvailableObject","currentVaultPositionData","displayTokenA","displayTokenB","getCurrentVaultByVaultId","getCurrentVaultContractInfo","vault","item","fixCoinType","lstVaultContractInfoObj","haedalVaultContractInfoObj","allClmmPoolContractInfoObj","clmmContractInfo","vaultContractInfo","currentVaultPosition","VaultsAddResult","props","poolName","amountLimit","lpRate","inputTotalValue","preCalculateLoading","labelColor","lpDecimals","calculateLpLoading","jsxs","VStack","jsx","TotalAmount","HTextLabelBox","convertScientificToDecimal","formatNumber","fromDecimalsAmount","VaultsAddConfirmModel","isOpen","onClose","data","onSubmitClick","feeTier","displayAmountA","displayAmountB","totalAmountValue","sharePool","lpAmountLimit","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","HStack","CoinPairImage","Text","Block","TradeConfirmAmountInfo","Box","Button","useVaultAvaiableCapacity","currentVaultPool","getTokenAmountValueByPyth","getTokenPriceByPyth","useGetPythTokenPrice","hardCap","quoteCoinType","displayCoinTypeA","displayCoinTypeB","quoteCoin","baseCoin","baseCoinType","hardCapUSD","displayHardCapUSD","symbolDataDisplayProcessing","holdingAmountA","holdingAmountB","vaultTvl","d","depositRatio","displayDepositRatio","quoteCoinPrice","baseCoinPrice","availableCapacityUSD","availableCapacityWithQuoteCoin","availableCapacityWithBaseCoin","useCalculateChangeLpRate","changeLp","totalLp","useMemo","formatNumberWithThreshold","useCalculateSlippageAmount","slippage","amount","isUp","useGetSuiStakeProtocol","coinType","useVaultsAdd","category","isReverse","assetAction","isCheckedZAP","balanceInfoA","useGetTokenBalance","balanceInfoB","amountInputA","amountInputB","setAmountInputA","setAmountInputB","setCalculateResult","getTokenAmountValue","vaultsSlippage","useGlobalStore","updateCurrentVaultById","fetchAccountBalance","useAccountBalance","isSlider","setIsSlider","useState","pythPriceMap","useVaultsPythPrice","mevProtect","transactionMode","maxCapForGas","customGasPrice","percentage","setPercentage","percentageRef","amountValueA","amountValueB","tokenA","tokenB","uuid","setUuid","uuidRef","isFixedDisplayTokenA","setIsFixedDisplayTokenA","isFixedDisplayTokenARef","fixAmountA","setFixAmountA","setPreCalculateLoading","setCalculateLpLoading","amountInputARef","amountInputBRef","mode","wrapRes","res","amountA","amountB","preCalculate","otherAmount","fixToken","fixOtherToken","inputAmount","toDecimalsAmount","otherInputAmount","fixedCoinA","haedalPreCalculate","lstPreCalculate","params","receive_lp_amount","error","calculateDepositRatioWithAvailableCapacity","InputType","debouncedPreCalculate","useDebounceFunction","handleAmountInputChange","resetInputAmount","amountVaule","otherAmountValue","totalValue","v4","zapNumGtError","zapNumLtError","stakeProtocolName","showOnlySideTips","targetToken","swapInAmount","fromDecimalsAmountFix","swapOutAmount","CoinAssist","amountValue","signAndExecuteTransaction","transactionConfirmation","transactionRejected","useTransaction","reCalculateResult","debouncedPreCalculateDepositValue","percent","availableCapacityWithCoin","coin","coinPrice","_a","amountUSD","handlePercentInputChange","ratio","ratioValue","doAddAction","depositParams","toastInfo","status","balanceChanges","description","formatDescription","info","event","tx","Transaction","MsafeTransactionSubType","isQuoteCoin","useVaultsButtonStatus","balanceA","balanceB","isAdd","submitBtnInfo","btnInfo","isSUI","isCheckedWalletObj","isCheckedDontRemindWalletObj","useVaultsRiskStore","persist","state","isCheckedAcceptWalletObj","RiskBulletText","children","RiskModal","setIsOpen","continueFunc","isCheckedAccept","setIsCheckedAccept","isCheckedDontRemind","setIsCheckedDontRemind","setIsCheckedAcceptWalletObj","setIsCheckedDontRemindWalletObj","riskContinue","newIsCheckedAcceptWalletObj","newIsCheckedDontRemindWalletObj","isApp","useWindowWidth","CheckBox","AvailableCapacity","onChange","loading","labelStyles","sliderMarkList","Fragment","Skeleton","CetusTooltip","Image","Slider","index","SliderMark","formatPercentage","SliderTrack","SliderFilledTrack","SliderThumb","ZapTooltipText","ZapSwitch","zapText","tooltipType","zapSwitchChange","Popover","PopoverTrigger","Switch","PopoverContent","PopoverBody","hoverCoinTips","hoverSuiTips","symbol","ActionTabEnum","SwitchAssetTab","onSelectAssetTab","label","setIsCheckedZAP","setAssetAction","currentActionTab","isUnstableVault","generateTabList","baseTabs","tabList","currentTab","_b","_c","SelectTab","VaultsAdd","onWalletModal","totalSupply","lpTokenInfo","isModal","isAutoRefresh","vaultsPoolObj","useVaultsPoolStore","avaiableCapacityInfo","isOpenAddModel","setIsOpenAddModel","btnText","btnDisabled","getSecondModelData","useVaultsPythPriceStore","isMounted","isOpenRiskModal","setIsOpenRiskModal","isShowRiskModal","TradeInputGroup","useVaultsRemove","findBestRouters","useFindBestRouting","providers","useWebConfigStore","fixAmountARef","availableAmountA","setAvailableAmountA","availableAmountB","setAvailableAmountB","calculateAvailableLoading","setCalculateAvailableLoading","calculateAvailableAmount","isOnlyReceiveCoinA","fromAmount","targetAmount","haedalCalculateAvailableAmount","lstCalculateAvailableAmount","result","removePercent","setRemovePercent","displayRatio","is_ft_input","availableRemoveAmount","removeLpAmount","formatNumberWithDown","debouncedPercentInputChange","isClickMax","isClickHalf","isDisplayTokenA","submitLoading","setSubmitLoading","doRemoveAction","param","fix_amount_a","input_amount","getBalanceChanges","descriptionList","amountIn","amountOut","fixedAmountA","VaultsRemove","currentPosition","LPBurnAmount","showTokenALoading","showTokenBLoading","PositionSlider","formatCurrency","VaultsAction","autoRefresh","vaultListObj","lpTokenInfoObj","currentVaultPoolApiInfo","currentVaultPoolContractInfo","currTab","setCurrTab","setIsRefresh","handleRefresh","prev","Slippage","RefreshButton"],"mappings":"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"}