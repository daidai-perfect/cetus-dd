<<<<<<<< HEAD:dist/assets/WithdrawMode-BZmgMplU.js.map
{"version":3,"file":"WithdrawMode-BZmgMplU.js","sources":["../../src/components/vaults/modal/WithdrawMode.tsx"],"sourcesContent":["import vaultInterface from '@/hooks/vault-interface'\nimport { useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { VaultApiInfo } from '@/types'\nimport { TradeInputGroup } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { d, formatCurrency, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\ntype VaultWithdrawModeProps = {\n  isUnstableVault: boolean\n  displayTokenA: Token\n  displayTokenB: Token\n  vaultId: string\n  isReverse: boolean\n  assetAction: string\n  isCheckedZAP: boolean\n  currentActionTab: string\n  apiVaultInfo: VaultApiInfo\n  autoRefresh: () => void\n  contractVault: any\n  lpTokenInfo: any\n  balanceInfo: any\n  fetchClmmPoolFromContract: (clmmPoolAddress: string, forceRefresh?: boolean) => void\n  fetchVaultInfoFromContract: (vaultId: string, forceRefresh?: boolean) => void\n  holdCoinAmounts: string\n  fromTokenLock: boolean\n  toTokenLock: boolean\n  fetchVaultBalance: (address: string, vaultId: string, decimals: number) => void\n  isBalanceLoading: boolean\n  holdLpAmount: string\n}\nexport default function VaultWithdrawMode(props: VaultWithdrawModeProps) {\n  const {\n    isUnstableVault,\n    displayTokenA,\n    displayTokenB,\n    vaultId,\n    isReverse,\n    assetAction,\n    isCheckedZAP,\n    apiVaultInfo,\n    lpTokenInfo,\n    holdCoinAmounts,\n    fetchVaultBalance,\n    isBalanceLoading,\n    holdLpAmount,\n    autoRefresh\n  } = props\n  const useVaultsRemove = vaultInterface.useVaultsRemove(isUnstableVault)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(isUnstableVault)\n  const { currentAccount, onWalletModal } = useAccountStore()\n\n  const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n  const {\n    amountInputA,\n    amountInputB,\n    availableAmountA,\n    availableAmountB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doRemoveAction,\n    reCalculateResult,\n    calculateAvailableLoading\n  } = useVaultsRemove(\n    assetAction,\n    autoRefresh,\n    holdCoinAmounts,\n    holdLpAmount,\n    vaultId,\n    isReverse ? displayTokenB : displayTokenA,\n    isReverse ? displayTokenA : displayTokenB,\n    isReverse,\n    isCheckedZAP,\n    contractClmmPoolObj\n  )\n\n  const inputTotalValueError = useMemo(() => {\n    if (inputTotalValue && isCheckedZAP) {\n      return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(0.0001)\n    }\n    return false\n  }, [isCheckedZAP, inputTotalValue])\n\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    false,\n    amountInputA,\n    amountInputB,\n    isReverse ? !fixAmountA : fixAmountA,\n    availableAmountA,\n    availableAmountB,\n    displayTokenA,\n    displayTokenB,\n    '',\n    calculateResult,\n    inputTotalValueError\n  )\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(0, calculateResult?.burn_ft_amount, false)\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [apiVaultInfo?.vaultsId])\n\n  useEffect(() => {\n    if (currentAccount?.address && apiVaultInfo?.vaultsId && lpTokenInfo?.decimals && apiVaultInfo?.isUnstableVault) {\n      fetchVaultBalance(currentAccount?.address, apiVaultInfo.vaultsId, lpTokenInfo?.decimals)\n    }\n  }, [currentAccount?.address, apiVaultInfo?.vaultsId, lpTokenInfo?.decimals])\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [availableAmountA, availableAmountB])\n\n  const LPBurnAmount = useMemo(() => {\n    return formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), lpTokenInfo?.decimals)\n  }, [amountLimit, lpTokenInfo])\n\n  return (\n    <>\n      <Box w=\"100%\" position=\"relative\">\n        <TradeInputGroup\n          onClick={() => {}}\n          from={{\n            wrapStyle: { h: '108px' },\n            balance: availableAmountA || '',\n            value: amountInputA,\n            amountValue: amountValueA,\n            loading: false,\n            calculateAvailableLoading: isBalanceLoading || calculateAvailableLoading,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n            onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n              console.log('🚀🚀🚀 ~ withdraw-mode.tsx:194 ~ VaultWithdrawMode ~ value:', value)\n              handleAmountInputChange(value, !isReverse, isClickMax, isHalfClickMax)\n            },\n            selectable: false,\n            placeholder: '0.0',\n            token: displayTokenA,\n            balanceLabel: 'Available',\n            onFocusChange: (focus: boolean) => {}\n          }}\n          to={{\n            wrapStyle: { h: '108px' },\n            balance: availableAmountB || '',\n            value: amountInputB,\n            amountValue: amountValueB,\n            loading: false,\n            calculateAvailableLoading: isBalanceLoading || calculateAvailableLoading,\n            onFocusChange: (focus: boolean) => {},\n            onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n              handleAmountInputChange(value, isReverse, isClickMax, isHalfClickMax)\n            },\n            selectable: false,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n            placeholder: '0.0',\n            token: displayTokenB,\n            balanceLabel: 'Available'\n          }}\n          iconParams={{\n            xlinkHref: '#icon-icon_add',\n            svgFill: 'text_caption',\n            iconCursor: 'default'\n          }}\n          iconHover={false}\n        />\n      </Box>\n      <Button\n        width=\"100%\"\n        height=\"52px\"\n        borderRadius=\"12px\"\n        marginBottom=\"8px\"\n        fontWeight=\"500\"\n        isLoading={preCalculateLoading}\n        disabled={btnDisabled || preCalculateLoading}\n        onClick={() => (!currentAccount?.address ? onWalletModal(true) : doRemoveAction())}\n      >\n        {/* {btnText || currentActionTab} */}\n        {btnText || (isCheckedZAP ? 'Zap Out' : 'Withdraw')}\n      </Button>\n\n      {inputTotalValueError && (\n        <VStack w=\"100%\" alignItems=\"start\" mb=\"8px\">\n          <Text\n            color=\"primary_red\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_red_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            The input is too small. Zap mode is not available.\n          </Text>\n        </VStack>\n      )}\n\n      {/* 展示计算结果 */}\n      {(calculateResult || showOnlySideTips) && !inputTotalValueError && (\n        <VStack w=\"100%\" gap=\"20px\" pb=\"20px\">\n          {assetAction !== 'both' && (\n            <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\">\n              {showOnlySideTips}\n            </Text>\n          )}\n          <VStack w=\"100%\" gap=\"20px\">\n            <HTextLabelBox\n              label=\"Total Withdraw\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              value={formatCurrency(inputTotalValue, 2)}\n              valueStyle={{\n                fontSize: '14px'\n              }}\n              isLoading={preCalculateLoading}\n            />\n            <HTextLabelBox\n              label=\"LP Burn Amount\"\n              value={`${LPBurnAmount} ${`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}`}\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              valueStyle={{\n                fontSize: '14px'\n              }}\n              isLoading={preCalculateLoading}\n            />\n          </VStack>\n        </VStack>\n      )}\n    </>\n  )\n}\n"],"names":["VaultWithdrawMode","props","isUnstableVault","displayTokenA","displayTokenB","vaultId","isReverse","assetAction","isCheckedZAP","apiVaultInfo","lpTokenInfo","holdCoinAmounts","fetchVaultBalance","isBalanceLoading","holdLpAmount","autoRefresh","useVaultsRemove","vaultInterface","useAddButtonStatus","currentAccount","onWalletModal","useAccountStore","contractClmmPoolObj","useUnstableVaultsListStore","amountInputA","amountInputB","availableAmountA","availableAmountB","amountValueA","amountValueB","preCalculateLoading","fixAmountA","inputTotalValue","handleAmountInputChange","calculateResult","showOnlySideTips","doRemoveAction","reCalculateResult","calculateAvailableLoading","inputTotalValueError","useMemo","d","btnText","btnDisabled","amountLimit","useCalculateSlippageAmount","useEffect","LPBurnAmount","formatNumber","fromDecimalsAmountFix","jsxs","Fragment","jsx","Box","TradeInputGroup","value","isClickMax","isHalfClickMax","focus","Button","VStack","Text","HTextLabelBox","formatCurrency"],"mappings":"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"}
========
{"version":3,"file":"WithdrawMode-NArJeSTT.js","sources":["../../src/components/vaults/modal/WithdrawMode.tsx"],"sourcesContent":["import vaultInterface from '@/hooks/vault-interface'\nimport { useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { VaultApiInfo } from '@/types'\nimport { TradeInputGroup } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { d, formatCurrency, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\ntype VaultWithdrawModeProps = {\n  isUnstableVault: boolean\n  displayTokenA: Token\n  displayTokenB: Token\n  vaultId: string\n  isReverse: boolean\n  assetAction: string\n  isCheckedZAP: boolean\n  currentActionTab: string\n  apiVaultInfo: VaultApiInfo\n  autoRefresh: () => void\n  contractVault: any\n  lpTokenInfo: any\n  balanceInfo: any\n  fetchClmmPoolFromContract: (clmmPoolAddress: string, forceRefresh?: boolean) => void\n  fetchVaultInfoFromContract: (vaultId: string, forceRefresh?: boolean) => void\n  holdCoinAmounts: string\n  fromTokenLock: boolean\n  toTokenLock: boolean\n  fetchVaultBalance: (address: string, vaultId: string, decimals: number) => void\n  isBalanceLoading: boolean\n  holdLpAmount: string\n}\nexport default function VaultWithdrawMode(props: VaultWithdrawModeProps) {\n  const {\n    isUnstableVault,\n    displayTokenA,\n    displayTokenB,\n    vaultId,\n    isReverse,\n    assetAction,\n    isCheckedZAP,\n    apiVaultInfo,\n    lpTokenInfo,\n    holdCoinAmounts,\n    fetchVaultBalance,\n    isBalanceLoading,\n    holdLpAmount,\n    autoRefresh\n  } = props\n  const useVaultsRemove = vaultInterface.useVaultsRemove(isUnstableVault)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(isUnstableVault)\n  const { currentAccount, onWalletModal } = useAccountStore()\n\n  const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n  const {\n    amountInputA,\n    amountInputB,\n    availableAmountA,\n    availableAmountB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doRemoveAction,\n    reCalculateResult,\n    calculateAvailableLoading\n  } = useVaultsRemove(\n    assetAction,\n    autoRefresh,\n    holdCoinAmounts,\n    holdLpAmount,\n    vaultId,\n    isReverse ? displayTokenB : displayTokenA,\n    isReverse ? displayTokenA : displayTokenB,\n    isReverse,\n    isCheckedZAP,\n    contractClmmPoolObj\n  )\n\n  const inputTotalValueError = useMemo(() => {\n    if (inputTotalValue && isCheckedZAP) {\n      return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(0.0001)\n    }\n    return false\n  }, [isCheckedZAP, inputTotalValue])\n\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    false,\n    amountInputA,\n    amountInputB,\n    isReverse ? !fixAmountA : fixAmountA,\n    availableAmountA,\n    availableAmountB,\n    displayTokenA,\n    displayTokenB,\n    '',\n    calculateResult,\n    inputTotalValueError\n  )\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(0, calculateResult?.burn_ft_amount, false)\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [apiVaultInfo?.vaultsId])\n\n  useEffect(() => {\n    if (currentAccount?.address && apiVaultInfo?.vaultsId && lpTokenInfo?.decimals && apiVaultInfo?.isUnstableVault) {\n      fetchVaultBalance(currentAccount?.address, apiVaultInfo.vaultsId, lpTokenInfo?.decimals)\n    }\n  }, [currentAccount?.address, apiVaultInfo?.vaultsId, lpTokenInfo?.decimals])\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [availableAmountA, availableAmountB])\n\n  const LPBurnAmount = useMemo(() => {\n    return formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), lpTokenInfo?.decimals)\n  }, [amountLimit, lpTokenInfo])\n\n  return (\n    <>\n      <Box w=\"100%\" position=\"relative\">\n        <TradeInputGroup\n          onClick={() => {}}\n          from={{\n            wrapStyle: { h: '108px' },\n            balance: availableAmountA || '',\n            value: amountInputA,\n            amountValue: amountValueA,\n            loading: false,\n            calculateAvailableLoading: isBalanceLoading || calculateAvailableLoading,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n            onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n              console.log('🚀🚀🚀 ~ withdraw-mode.tsx:194 ~ VaultWithdrawMode ~ value:', value)\n              handleAmountInputChange(value, !isReverse, isClickMax, isHalfClickMax)\n            },\n            selectable: false,\n            placeholder: '0.0',\n            token: displayTokenA,\n            balanceLabel: 'Available',\n            onFocusChange: (focus: boolean) => {}\n          }}\n          to={{\n            wrapStyle: { h: '108px' },\n            balance: availableAmountB || '',\n            value: amountInputB,\n            amountValue: amountValueB,\n            loading: false,\n            calculateAvailableLoading: isBalanceLoading || calculateAvailableLoading,\n            onFocusChange: (focus: boolean) => {},\n            onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n              handleAmountInputChange(value, isReverse, isClickMax, isHalfClickMax)\n            },\n            selectable: false,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n            placeholder: '0.0',\n            token: displayTokenB,\n            balanceLabel: 'Available'\n          }}\n          iconParams={{\n            xlinkHref: '#icon-icon_add',\n            svgFill: 'text_caption',\n            iconCursor: 'default'\n          }}\n          iconHover={false}\n        />\n      </Box>\n      <Button\n        width=\"100%\"\n        height=\"52px\"\n        borderRadius=\"12px\"\n        marginBottom=\"8px\"\n        fontWeight=\"500\"\n        isLoading={preCalculateLoading}\n        disabled={btnDisabled || preCalculateLoading}\n        onClick={() => (!currentAccount?.address ? onWalletModal(true) : doRemoveAction())}\n      >\n        {/* {btnText || currentActionTab} */}\n        {btnText || (isCheckedZAP ? 'Zap Out' : 'Withdraw')}\n      </Button>\n\n      {inputTotalValueError && (\n        <VStack w=\"100%\" alignItems=\"start\" mb=\"8px\">\n          <Text\n            color=\"primary_red\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_red_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            The input is too small. Zap mode is not available.\n          </Text>\n        </VStack>\n      )}\n\n      {/* 展示计算结果 */}\n      {(calculateResult || showOnlySideTips) && !inputTotalValueError && (\n        <VStack w=\"100%\" gap=\"20px\" pb=\"20px\">\n          {assetAction !== 'both' && (\n            <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\">\n              {showOnlySideTips}\n            </Text>\n          )}\n          <VStack w=\"100%\" gap=\"20px\">\n            <HTextLabelBox\n              label=\"Total Withdraw\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              value={formatCurrency(inputTotalValue, 2)}\n              valueStyle={{\n                fontSize: '14px'\n              }}\n              isLoading={preCalculateLoading}\n            />\n            <HTextLabelBox\n              label=\"LP Burn Amount\"\n              value={`${LPBurnAmount} ${`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}`}\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              valueStyle={{\n                fontSize: '14px'\n              }}\n              isLoading={preCalculateLoading}\n            />\n          </VStack>\n        </VStack>\n      )}\n    </>\n  )\n}\n"],"names":["VaultWithdrawMode","props","isUnstableVault","displayTokenA","displayTokenB","vaultId","isReverse","assetAction","isCheckedZAP","apiVaultInfo","lpTokenInfo","holdCoinAmounts","fetchVaultBalance","isBalanceLoading","holdLpAmount","autoRefresh","useVaultsRemove","vaultInterface","useAddButtonStatus","currentAccount","onWalletModal","useAccountStore","contractClmmPoolObj","useUnstableVaultsListStore","amountInputA","amountInputB","availableAmountA","availableAmountB","amountValueA","amountValueB","preCalculateLoading","fixAmountA","inputTotalValue","handleAmountInputChange","calculateResult","showOnlySideTips","doRemoveAction","reCalculateResult","calculateAvailableLoading","inputTotalValueError","useMemo","d","btnText","btnDisabled","amountLimit","useCalculateSlippageAmount","useEffect","LPBurnAmount","formatNumber","fromDecimalsAmountFix","jsxs","Fragment","jsx","Box","TradeInputGroup","value","isClickMax","isHalfClickMax","focus","Button","VStack","Text","HTextLabelBox","formatCurrency"],"mappings":"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"}
>>>>>>>> 48e3e63a7d52715810f0754e6a7d258ba01f9a12:dist/assets/WithdrawMode-NArJeSTT.js.map
