{"version":3,"file":"WithdrawMode-Cge63etj.js","sources":["../../src/components/vaults/modal/WithdrawMode.tsx"],"sourcesContent":["import vaultInterface from '@/hooks/vault-interface'\nimport useGetApiVaultInfo from '@/hooks/vaults/useGetApiVaultInfo'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { VaultApiInfo } from '@/types'\nimport { TradeInputGroup } from '@cetus/design'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { d, formatCurrency, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\ntype VaultWithdrawModeProps = {\n  isUnstableVault: boolean\n  displayTokenA: Token\n  displayTokenB: Token\n  vaultId: string\n  isReverse: boolean\n  assetAction: string\n  isCheckedZAP: boolean\n  currentActionTab: string\n  apiVaultInfo: VaultApiInfo\n  autoRefresh: () => void\n}\nexport default function VaultWithdrawMode(props: VaultWithdrawModeProps) {\n  const { isUnstableVault, displayTokenA, displayTokenB, vaultId, isReverse, assetAction, isCheckedZAP, currentActionTab, apiVaultInfo } = props\n  const useVaultsRemove = vaultInterface.useVaultsRemove(isUnstableVault)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(isUnstableVault)\n  const useGetContractVaultInfo = vaultInterface.useGetContractVaultInfo(isUnstableVault)\n  // const { apiVaultInfo, tokenA, tokenB, isReverse, vaultsId, totalLp, holdCoinAmounts, holdLpAmount, handleRefreshClick } = props\n  const { getApiVaultInfo } = useGetApiVaultInfo(vaultId)\n  const { currentAccount, isOpenWalletModal, onWalletModal } = useAccountStore()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const {\n    contractVault,\n    lpTokenInfo,\n    balanceInfo,\n    fetchClmmPoolFromContract,\n    fetchVaultInfoFromContract,\n    holdCoinAmounts,\n    fromTokenLock,\n    toTokenLock,\n    fetchVaultBalance,\n    isBalanceLoading,\n    holdLpAmount\n  } = useGetContractVaultInfo(\n    apiVaultInfo?.vaultsId,\n    apiVaultInfo?.clmmPoolAddress,\n    apiVaultInfo?.tokenA,\n    apiVaultInfo?.tokenB,\n    apiVaultInfo?.isReverse\n  )\n\n  const autoRefresh = () => {\n    // 刷新余额\n    fetchAccountBalance()\n\n    console.log('🚀🚀🚀 ~ index.tsx:57 ~ autoRefresh ~ apiVaultInfo:', apiVaultInfo)\n    if (apiVaultInfo?.category == 'haedal') {\n      fetchVaultBalance(currentAccount?.address, vaultId, apiVaultInfo?.tokenA?.decimals)\n    }\n\n    // 刷新 clmm 合约\n    if (apiVaultInfo) {\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n\n    // 刷新Vaults 合约\n    if (vaultId) {\n      fetchVaultInfoFromContract(vaultId, true)\n      getApiVaultInfo(vaultId, true)\n    }\n    console.log('🚀🚀🚀 ~ index.tsx:68 ~ autoRefresh ~ autoRefresh:', autoRefresh)\n  }\n  console.log('🚀🚀🚀 ~ WithdrawMode.tsx:69 ~ VaultWithdrawMode ~ holdCoinAmounts:', holdCoinAmounts)\n\n  const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n  const contractClmmPoolInfo: any = useMemo(() => {\n    if (contractClmmPoolObj && contractClmmPoolObj[apiVaultInfo?.clmmPoolAddress]) {\n      return contractClmmPoolObj[apiVaultInfo?.clmmPoolAddress]\n    }\n    return undefined\n  }, [apiVaultInfo?.clmmPoolAddress, contractClmmPoolObj])\n  const {\n    amountInputA,\n    amountInputB,\n    availableAmountA,\n    availableAmountB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doRemoveAction,\n    removePercent,\n    isPercentInput,\n    reCalculateResult,\n    calculateAvailableLoading\n  } = useVaultsRemove(\n    assetAction,\n    autoRefresh,\n    holdCoinAmounts,\n    holdLpAmount,\n    vaultId,\n    isReverse ? displayTokenB : displayTokenA,\n    isReverse ? displayTokenA : displayTokenB,\n    isReverse,\n    isCheckedZAP,\n    contractClmmPoolObj\n  )\n\n  const inputTotalValueError = useMemo(() => {\n    if (inputTotalValue && isCheckedZAP) {\n      return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(0.0001)\n    }\n    return false\n  }, [isCheckedZAP, inputTotalValue])\n\n  //totalLp,holdLpAmount\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    false,\n    amountInputA,\n    amountInputB,\n    isReverse ? !fixAmountA : fixAmountA,\n    availableAmountA,\n    availableAmountB,\n    displayTokenA,\n    displayTokenB,\n    '',\n    calculateResult,\n    inputTotalValueError\n  )\n  // 占比\n  const { lpRate } = useCalculateChangeLpRate(\n    calculateResult?.burn_ft_amount,\n    isUnstableVault ? contractVault?.lp_token_treasury : contractVault?.total_supply\n  )\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(0, calculateResult?.burn_ft_amount, false)\n\n  const balanceA = useMemo(() => {\n    return isReverse ? availableAmountB : availableAmountA\n  }, [availableAmountB, availableAmountA, isReverse])\n\n  const balanceB = useMemo(() => {\n    return isReverse ? availableAmountA : availableAmountB\n  }, [availableAmountA, availableAmountB, isReverse])\n\n  const showTokenALoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isPercentInput) {\n        return true\n      }\n      if (isReverse) {\n        return fixAmountA\n      }\n      return !fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isPercentInput])\n\n  const showTokenBLoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isPercentInput) {\n        return true\n      }\n      if (isReverse) {\n        return !fixAmountA\n      }\n      return fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isPercentInput])\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [apiVaultInfo?.vaultsId])\n\n  useEffect(() => {\n    if (apiVaultInfo && apiVaultInfo?.clmmPoolAddress) {\n      console.log('🚀🚀🚀 ~ withdraw-mode.tsx:170 ~ useEffect ~ apiVaultInfo:', apiVaultInfo)\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n  }, [apiVaultInfo?.clmmPoolAddress])\n\n  useEffect(() => {\n    if (vaultId) {\n      fetchVaultInfoFromContract(vaultId)\n    }\n  }, [vaultId])\n\n  // useEffect(() => {\n  //   getApiVaultInfo(vaultId, false)\n  // }, [])\n\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ withdraw-mode.tsx:188 ~ useEffect ~ lpTokenInfo:', lpTokenInfo)\n    console.log('🚀🚀🚀 ~ withdraw-mode.tsx:188 ~ useEffect ~ apiVaultInfo:', apiVaultInfo)\n    if (currentAccount?.address && apiVaultInfo?.vaultsId && lpTokenInfo?.decimals && apiVaultInfo?.isUnstableVault) {\n      console.log('🚀🚀🚀 ~ withdraw-mode.tsx:189 ~ useEffect ~ fetchVaultBalance:', fetchVaultBalance)\n      fetchVaultBalance(currentAccount?.address, apiVaultInfo.vaultsId, lpTokenInfo?.decimals)\n    }\n  }, [currentAccount?.address, apiVaultInfo?.vaultsId, lpTokenInfo?.decimals])\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [availableAmountA, availableAmountB])\n\n  const LPBurnAmount = useMemo(() => {\n    return formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), lpTokenInfo?.decimals)\n  }, [amountLimit, lpTokenInfo])\n\n  return (\n    <>\n      <Box w=\"100%\" position=\"relative\">\n        <TradeInputGroup\n          onClick={() => {}}\n          from={{\n            wrapStyle: { h: '108px' },\n            balance: availableAmountA || '',\n            value: amountInputA,\n            amountValue: amountValueA,\n            loading: false,\n            calculateAvailableLoading: isBalanceLoading || calculateAvailableLoading,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n            onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n              console.log('🚀🚀🚀 ~ withdraw-mode.tsx:194 ~ VaultWithdrawMode ~ value:', value)\n              handleAmountInputChange(value, !isReverse, isClickMax, isHalfClickMax)\n            },\n            selectable: false,\n            placeholder: '0.0',\n            token: displayTokenA,\n            balanceLabel: 'Available',\n            onFocusChange: (focus: boolean) => {}\n          }}\n          to={{\n            wrapStyle: { h: '108px' },\n            balance: availableAmountB || '',\n            value: amountInputB,\n            amountValue: amountValueB,\n            loading: false,\n            calculateAvailableLoading: isBalanceLoading || calculateAvailableLoading,\n            onFocusChange: (focus: boolean) => {},\n            onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n              handleAmountInputChange(value, isReverse, isClickMax, isHalfClickMax)\n            },\n            selectable: false,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n            placeholder: '0.0',\n            token: displayTokenB,\n            balanceLabel: 'Available'\n          }}\n          iconParams={{\n            xlinkHref: '#icon-icon_add',\n            svgFill: 'text_caption',\n            iconCursor: 'default'\n          }}\n          iconHover={false}\n        />\n        {/* {[\n          fromTokenLock && (assetAction == displayTokenA?.coin_type || assetAction == 'both'),\n          toTokenLock && (assetAction == displayTokenB?.coin_type || assetAction == 'both')\n        ].filter(Boolean)?.length === 1 && (\n          <LockInput\n            position=\"absolute\"\n            top={assetAction == 'both' ? (fromTokenLock ? '0px' : '116px') : '0px'}\n            h=\"108px\"\n            borderRadius=\"16px\"\n            left=\"0\"\n            text=\"\"\n          />\n        )} */}\n      </Box>\n      <Button\n        width=\"100%\"\n        height=\"52px\"\n        borderRadius=\"12px\"\n        marginBottom=\"8px\"\n        fontWeight=\"500\"\n        isLoading={preCalculateLoading}\n        disabled={btnDisabled || preCalculateLoading}\n        onClick={() => (!currentAccount?.address ? onWalletModal(true) : doRemoveAction())}\n      >\n        {/* {btnText || currentActionTab} */}\n        {btnText || (isCheckedZAP ? 'Zap Out' : 'Withdraw')}\n      </Button>\n      {/* <HStack marginBottom=\"12px\" width=\"100%\">\n        <VaultsAddResult\n          amountLimit={amountLimit}\n          inputTotalValue={inputTotalValue}\n          preCalculateLoading={preCalculateLoading}\n          lpRate={lpRate}\n          lpDecimals={lpTokenInfo?.decimals}\n          poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n          labelColor=\"primary_gray\"\n        />\n      </HStack> */}\n      {inputTotalValueError && (\n        <VStack w=\"100%\" alignItems=\"start\" mb=\"8px\">\n          <Text\n            color=\"primary_red\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_red_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            The input is too small. Zap mode is not available.\n          </Text>\n        </VStack>\n      )}\n      {/* 展示计算结果 */}\n      {(calculateResult || showOnlySideTips) && !inputTotalValueError && (\n        <VStack w=\"100%\" gap=\"20px\" pb=\"20px\">\n          {assetAction !== 'both' && (\n            <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\">\n              {showOnlySideTips}\n            </Text>\n          )}\n          <VStack w=\"100%\" gap=\"20px\">\n            <HTextLabelBox\n              label=\"Total Withdraw\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              value={formatCurrency(inputTotalValue, 2)}\n              valueStyle={{\n                fontSize: '14px'\n              }}\n              isLoading={preCalculateLoading}\n            />\n            <HTextLabelBox\n              label=\"LP Burn Amount\"\n              value={`${LPBurnAmount} ${`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}`}\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              valueStyle={{\n                fontSize: '14px'\n              }}\n              isLoading={preCalculateLoading}\n            />\n          </VStack>\n        </VStack>\n      )}\n    </>\n  )\n}\n"],"names":["VaultWithdrawMode","props","isUnstableVault","displayTokenA","displayTokenB","vaultId","isReverse","assetAction","isCheckedZAP","currentActionTab","apiVaultInfo","useVaultsRemove","vaultInterface","useAddButtonStatus","useGetContractVaultInfo","getApiVaultInfo","useGetApiVaultInfo","currentAccount","isOpenWalletModal","onWalletModal","useAccountStore","fetchAccountBalance","useAccountBalance","contractVault","lpTokenInfo","balanceInfo","fetchClmmPoolFromContract","fetchVaultInfoFromContract","holdCoinAmounts","fromTokenLock","toTokenLock","fetchVaultBalance","isBalanceLoading","holdLpAmount","autoRefresh","_a","contractClmmPoolObj","useUnstableVaultsListStore","useMemo","amountInputA","amountInputB","availableAmountA","availableAmountB","amountValueA","amountValueB","preCalculateLoading","fixAmountA","inputTotalValue","handleAmountInputChange","calculateResult","showOnlySideTips","doRemoveAction","removePercent","isPercentInput","reCalculateResult","calculateAvailableLoading","inputTotalValueError","d","btnText","btnDisabled","useCalculateChangeLpRate","amountLimit","useCalculateSlippageAmount","useEffect","LPBurnAmount","formatNumber","fromDecimalsAmountFix","jsxs","Fragment","jsx","Box","TradeInputGroup","value","isClickMax","isHalfClickMax","focus","Button","VStack","Text","HTextLabelBox","formatCurrency"],"mappings":"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"}