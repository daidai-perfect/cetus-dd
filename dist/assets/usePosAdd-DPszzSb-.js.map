{"version":3,"file":"usePosAdd-DPszzSb-.js","sources":["../../src/hooks/position/usePosAdd.ts"],"sourcesContent":["import useGlobalStore from '@/store/common/global'\nimport { MsafeTransactionSubType, PrePosAddRes } from '@/types'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { Token } from '@cetus/types'\nimport { bnToAmount, d } from '@cetus/utils'\nimport { ClmmPoolUtil } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport BN from 'bn.js'\n\ntype GetAddTsPayload = {\n  poolAddress: string\n  coinTypeA: string\n  coinTypeB: string\n  amountA: string\n  amountB: string\n  fixAmountA: boolean\n  lowerTick: number\n  upperTick: number\n  currentSqrtPrice: string\n  posType: 'clmm' | 'farms'\n  rewarderCoinTypes: any\n  posIndex?: string\n  posId?: string\n  farmsPoolId?: string\n}\n\nexport default function usePosAdd() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { peripherySdk } = usePeripherySDKStore()\n\n  const { slippage } = useGlobalStore()\n  /**\n   * 与计算\n   * @param\n   * isTokenA: 输入的token === tokenA 为true\n   * roundUp都传true就行\n   * @returns\n   */\n  const preAdd = (params: {\n    amount: string | BN\n    tokenA: Token\n    tokenB: Token\n    isTokenA: boolean\n    lowerTick: number\n    upperTick: number\n    curSqrtPrice: string\n    isReverse: boolean\n    roundUp: boolean\n  }): PrePosAddRes => {\n    console.log('🚀 ~ usePosAdd ~ params:', params)\n    const { amount, tokenA, tokenB, isTokenA, lowerTick, upperTick, curSqrtPrice, isReverse, roundUp } = params\n\n    const coinAmount = new BN(amount)\n    console.log('🚀 ~ usePosAdd ~ coinAmount:', slippage, curSqrtPrice, coinAmount.toString())\n    const { coinAmountA, coinAmountB, tokenMaxA, tokenMaxB, liquidityAmount } = ClmmPoolUtil.estLiquidityAndcoinAmountFromOneAmounts(\n      lowerTick,\n      upperTick,\n      coinAmount,\n      isTokenA,\n      roundUp,\n      d(slippage).toNumber(),\n      new BN(curSqrtPrice)\n    )\n    console.log('🚀 ~ usePosAdd ~ coinAmountA:', coinAmountA.toString())\n    console.log('🚀 ~ usePosAdd ~ coinAmountB:', coinAmountB.toString())\n\n    const decimalsA = tokenA.decimals\n    const decimalsB = tokenB.decimals\n\n    return {\n      coinAmountAOrigin: coinAmountA.toString(),\n      coinAmountBOrigin: coinAmountB.toString(),\n      displayCoinAmountA: !isReverse ? bnToAmount(coinAmountA.toString(), decimalsA) : bnToAmount(coinAmountB.toString(), decimalsB),\n      displayCoinAmountB: !isReverse ? bnToAmount(coinAmountB.toString(), decimalsB) : bnToAmount(coinAmountA.toString(), decimalsA),\n      coinAmountA: bnToAmount(coinAmountA.toString(), decimalsA),\n      coinAmountB: bnToAmount(coinAmountB.toString(), decimalsB),\n      tokenMaxA: tokenMaxA.toString(),\n      tokenMaxB: tokenMaxB.toString(),\n      liquidityAmount: liquidityAmount.toString()\n    }\n  }\n  const getClmmCreateAddData = async (params: GetAddTsPayload) => {\n    const {\n      poolAddress,\n      coinTypeA,\n      coinTypeB,\n      fixAmountA,\n      amountA,\n      amountB,\n      lowerTick,\n      upperTick,\n      currentSqrtPrice,\n      posType,\n      rewarderCoinTypes,\n      posIndex,\n      posId,\n      farmsPoolId\n    } = params\n\n    const createAddParams = {\n      coinTypeA,\n      coinTypeB,\n      amount_a: amountA,\n      amount_b: amountB,\n      pool_id: poolAddress,\n      fix_amount_a: fixAmountA,\n      slippage: d(slippage).toNumber(),\n      is_open: !posIndex,\n      tick_lower: lowerTick,\n      tick_upper: upperTick,\n      collect_fee: !posIndex ? false : true,\n      rewarder_coin_types: rewarderCoinTypes,\n      pos_id: posId || ''\n    }\n\n    const gasEstimateArg = {\n      slippage: d(slippage).toNumber(),\n      curSqrtPrice: new BN(currentSqrtPrice)\n    }\n\n    const tx = await clmmSdk.Position.createAddLiquidityFixTokenPayload(createAddParams, gasEstimateArg)\n\n    const msafeParams = {\n      action: !posIndex ? MsafeTransactionSubType.OpenAndAddLiquidity : MsafeTransactionSubType.IncreaseLiquidity,\n      txbParams: {\n        parameter: createAddParams,\n        gasEstimateArg\n      }\n    }\n    console.log('🚀 ~ getClmmCreateAddData ~ msafeParams:', msafeParams, tx)\n\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  const getFarmsCreateAddData = async (params: GetAddTsPayload) => {\n    const {\n      poolAddress,\n      coinTypeA,\n      coinTypeB,\n      fixAmountA,\n      amountA,\n      amountB,\n      lowerTick,\n      upperTick,\n      currentSqrtPrice,\n      posType,\n      rewarderCoinTypes,\n      posIndex,\n      posId,\n      farmsPoolId\n    } = params\n\n    let tx: any\n    let msafeParams: any\n    if (posId) {\n      const parameter = {\n        pool_id: farmsPoolId || '',\n        coinTypeA,\n        coinTypeB,\n        position_nft_id: posId,\n        clmm_pool_id: poolAddress,\n        amount_a: amountA,\n        amount_b: amountB,\n        collect_fee: true,\n        collect_rewarder: false,\n        fix_amount_a: fixAmountA,\n        clmm_rewarder_types: rewarderCoinTypes\n      }\n\n      console.log('🚀 ~ getFarmsCreateAddData ~ parameter:', parameter)\n      tx = await peripherySdk.Farms.addLiquidityFixCoinPayload(parameter)\n\n      msafeParams = {\n        action: MsafeTransactionSubType.FarmingIncreaseLiquidity,\n        txbParams: parameter\n      }\n    } else {\n      const parameter = {\n        pool_id: farmsPoolId || '',\n        coinTypeA,\n        coinTypeB,\n        clmm_pool_id: poolAddress,\n        amount_a: amountA,\n        amount_b: amountB,\n        fix_amount_a: fixAmountA,\n        tick_lower: lowerTick,\n        tick_upper: upperTick\n      }\n\n      tx = await peripherySdk.Farms.openPositionAddLiquidityStakePaylod(parameter)\n\n      msafeParams = {\n        action: MsafeTransactionSubType.FarmingOpenAndAddLiquidity,\n        txbParams: parameter\n      }\n    }\n\n    console.log('🚀 ~ getFarmsCreateAddData ~ msafeParams:', msafeParams, tx)\n\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  // 获取创建添加，追加tx(clmm, farms)\n  const getAddTsPayload = (params: GetAddTsPayload) => {\n    console.log('🚀 ~ getAddTsPayload ~ params:', params)\n    const { posType } = params\n\n    if (posType === 'clmm') {\n      return getClmmCreateAddData(params)\n    } else {\n      return getFarmsCreateAddData(params)\n    }\n  }\n\n  return {\n    preAdd,\n    getAddTsPayload,\n    getClmmCreateAddData,\n    getFarmsCreateAddData\n  }\n}\n"],"names":["usePosAdd","clmmSdk","useClmmSDKStore","peripherySdk","usePeripherySDKStore","slippage","useGlobalStore","preAdd","params","amount","tokenA","tokenB","isTokenA","lowerTick","upperTick","curSqrtPrice","isReverse","roundUp","coinAmount","BN","coinAmountA","coinAmountB","tokenMaxA","tokenMaxB","liquidityAmount","ClmmPoolUtil","d","decimalsA","decimalsB","bnToAmount","getClmmCreateAddData","poolAddress","coinTypeA","coinTypeB","fixAmountA","amountA","amountB","currentSqrtPrice","posType","rewarderCoinTypes","posIndex","posId","farmsPoolId","createAddParams","gasEstimateArg","tx","msafeParams","MsafeTransactionSubType","getFarmsCreateAddData","parameter"],"mappings":"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"}