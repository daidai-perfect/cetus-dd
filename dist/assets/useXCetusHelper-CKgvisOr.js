import{k as F,j as h,as as p,n as O,d as y,aK as N,aP as _,m as P,w as S,ar as x,Q as R,bh as X,bi as G}from"./index-BcaB9c-7.js";import{u as E}from"./useToken-swJ9eiro.js";import{a as m}from"./vendor-C6OgHlW5.js";import{u as M}from"./index-Bh_ofGSv.js";function A(){const{xCetusSdk:t}=F(),{currentAccount:e}=h(),n=m.useRef(e==null?void 0:e.address);m.useEffect(()=>{n.current=e==null?void 0:e.address},[e==null?void 0:e.address]);const{setLockCetusListLoading:s,clearData:o,setLockCetusList:T,setAvailableXCetusAmount:a,veNFT:i}=p();return{fetchOwnerLockCetusList:async(c,f=e==null?void 0:e.address)=>{if(!f){s(!1),o();return}try{s(!0);const r=await t.XCetusModule.getOwnerRedeemLockList(f);console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ lockList:",r,f),f===n.current&&(r.sort((g,d)=>g.locked_until_time-d.locked_until_time),T(r),c&&a(x.getAvailableXCetus(c,r)))}catch(r){console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ error:",r)}finally{s(!1)}}}}function B(){const{xCetusSdk:t}=F(),{setDividendRewardList:e}=p();return{fetchVeNFTDividendInfo:async s=>{try{const o=await t.XCetusModule.getVeNFTDividendInfo(s);console.log("ðŸš€ ~ file: useXCetusHelper.ts:62 ~ fetchVeNFTDividendInfo ~ dividendInfo:",o),o&&e(o.rewards)}catch(o){console.log("ðŸš€ ~ fetchVeNFTDividendInfo ~ error:",o,s)}}}}function Q(){const{xCetusSdk:t}=F(),{currentAccount:e}=h(),{fetchOwnerLockCetusList:n}=A(),{setVeNFTLoading:s,clearData:o,setVeNFT:T}=p();return{fetchOwnerVeNFT:async(i=e==null?void 0:e.address,l)=>{if(!i){s(!1),o();return}s(!0);try{const c=await t.XCetusModule.getOwnerVeNFT(i,l);if(console.log("ðŸš€ ~ fetchOwnerVeNFT ~ veNFT:",c),c)return T(c,i),n(c,i),c}catch(c){console.log("ðŸš€ ~ fetchOwnerVeNFT ~ error:",c)}finally{s(!1)}}}}function U(){const{dividendManager:t}=p(),[e,n]=m.useState(),[s,o]=m.useState(),T=a=>{const i=Date.now()/1e3,{start_time:l,interval_day:c}=a,f=Number(x.getNextStartTime(a).toString()),r=S.env=="testnet"?Math.ceil((i-l)/(c*60)):Math.ceil((i-l)/(c*24*3600));n(r),o(f)};return m.useEffect(()=>{t&&T(t)},[t]),{currentPeriod:e,nextStartTime:s,calculateCurrPeriod:T}}function W(t,e){const{fetchTokenInfo:n}=E(),{getTokenAmountValue:s}=O(),{coinPriceObj:o}=P(),[T,a]=m.useState("0"),i=m.useCallback(async()=>{if(!(!t||!e))try{const l=t.bonus,c=l.map(L=>N(L.name,!1)),f=await n(c),r=l.map(L=>{const k=N(L.name,!1),u=f==null?void 0:f.get(k);if(u){const w=_(L.value,u.decimals).toString();return s(k,w)}return"0"}).reduce((L,k)=>L.add(k),y(0)),g=s(S.cetus_coin.coin_type,_(e,9).toString()),d=y(g).gt(0)?r.div(7).mul(365).div(g).mul(100).toFixed(2):"0";a(Number(d)>0&&Number(d)<.01?"0.01":d.toString())}catch(l){console.error("Error calculating APR:",l),a("0.01")}},[t==null?void 0:t.bonus,e,o]);return M(()=>{i()},[t==null?void 0:t.bonus,e,o]),{cetusApr:T}}function z(t){const{dividendRewardList:e}=p(),{fetchTokenInfo:n}=E(),{getTokenAmountValue:s}=O(),[o,T]=m.useState([]),[a,i]=m.useState([]),[l,c]=m.useState("0"),f=m.useCallback(async()=>{let r=y(0);const g=e.filter(u=>!(u.period===t||u.rewards.find(w=>y(w.amount).eq(0))));console.log("ðŸš€ ~ file: useXCetusHelper.ts:107 ~ calculateRewards ~ filteredList:",{filteredList:g,dividendRewardList:e,currentPeriod:t}),i(g);const d={},L=g.flatMap(u=>u.rewards.map(w=>N(w.coin_type,!1))),k=await n(L);g.forEach(u=>{for(const w of u.rewards){const C=N(w.coin_type,!1),v=k==null?void 0:k.get(C);if(v){const b=_(w.amount,v.decimals).toString(),V=s(C,b);r=r.add(V),d[C]=d[C]?{...d[C],amount:y(d[C].amount).add(b).toString(),value:y(d[C].value).add(V).toString()}:{amount:b,coin_type:C,value:V}}}}),T(Object.values(d).filter(u=>y(u.amount).gt(0)).sort((u,w)=>y(w.value).sub(u.value).toNumber())),c(r.toString())},[e,s,t]);return m.useEffect(()=>{t&&f()},[e,t]),{summaryRewardList:o,rewardList:a,totalRewardValue:l}}const j=`${S.xcetus_sdk_options.xcetus.package_id}::xcetus::VeNFT`,$=`${S.xcetus_sdk_options.xcetus.package_id}::lock_coin::LockedCoin<${S.cetus_coin.coin_type}>`;function I(t){let e;return t.forEach(n=>{if(n){const s=R(X(n)).source_address;if(s===j&&n.data&&n.data.content){const{fields:o}=n.data.content;return e={...G(n),id:o.id.id,index:o.index,type:s,xcetus_balance:o.xcetus_balance},e}}}),e}async function J(t,e){const n=[];for(let s=0;s<t.length;s++){const o=t[s];if(o&&R(X(o)).source_address===$&&o.data){const a=x.buildLockCetus(o.data.content);a.xcetus_amount=await e.XCetusModule.getXCetusAmount(a.id),n.push(a)}}return n}export{j as X,$ as a,I as b,J as c,B as d,U as e,z as f,W as g,Q as u};
//# sourceMappingURL=useXCetusHelper-CKgvisOr.js.map
