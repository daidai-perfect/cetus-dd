{"version":3,"file":"PositionDetail-BwD156L2.js","sources":["../../src/components/position/details/DetailStatsInfo.tsx","../../src/hooks/position/usePosAddPage.ts","../../src/components/position/details/IncreaseBlock.tsx","../../src/components/position/details/ChartBlock.tsx","../../src/components/position/details/PositionChartInfo.tsx","../../src/pages/PositionDetail.tsx"],"sourcesContent":["import useTransaction from '@/hooks/common/useTransaction'\nimport useCalculatePendingYield from '@/hooks/position/useCalculatePendingYield'\nimport useCurrentPos from '@/hooks/position/useCurrentPos'\nimport useGetPosfees from '@/hooks/position/useGetPosfees'\nimport useGetPosRewards from '@/hooks/position/useGetPosRewards'\nimport usePosClaimFeeAndReward from '@/hooks/position/usePosClaimFeeAndReward'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CommonTypeInfo, Token, TransactionStatusType } from '@cetus/types'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport { d, formatCurrency, formatNumberWithDown, textEllipses } from '@cetus/utils'\nimport { Box, Button, HStack, Progress, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport LiquidityValueBlock from '../list/LiquidityValueBlock'\n\nfunction DetailStatsInfo() {\n  const { tokenAmountAfterA, tokenAmountAfterB, currentPosDetailTab, curPosContractPoolInfo } = usePositionDetailStore()\n  const { getPosFeeData } = useGetPosfees()\n  const { getPosRewardsData } = useGetPosRewards()\n  const { currentAccount } = useAccountStore()\n  const { currentPosBaseInfo, posFeeData, posRewardsData, posLiquidityData, currentPosBaseInfoLoading, posFeeDataLoading, posRewardsDataLoading } =\n    usePositionStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n\n  const currentPosLiquidityData = useMemo(() => {\n    return posLiquidityData[currentPosBaseInfo?.posId as string]\n  }, [posLiquidityData, currentPosBaseInfo?.posId])\n\n  const currentPosFeeData = useMemo(() => {\n    console.log('🚀 ~ currentPosFeeData ~ posFeeData[currentPosBaseInfo?.posId as string]:', posFeeData[currentPosBaseInfo?.posId as string])\n    return posFeeData[currentPosBaseInfo?.posId as string]\n  }, [posFeeData, currentPosBaseInfo?.posId])\n\n  const currentPosRewardsData = useMemo(() => {\n    console.log(\n      '🚀 ~ currentPosRewardsData ~ posRewardsData[currentPosBaseInfo?.posId as string]:',\n      posRewardsData[currentPosBaseInfo?.posId as string]\n    )\n    return posRewardsData[currentPosBaseInfo?.posId as string]\n  }, [posRewardsData, currentPosBaseInfo?.posId])\n\n  const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n  const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n\n  const [isClaimLoading, setIsClaimLoading] = useState(false)\n  const [totalYield, setTotalYield] = useState('--')\n  const { signAndExecuteTransaction } = useTransaction()\n  const { getPosClaimFeeAndRewardTxPayload } = usePosClaimFeeAndReward()\n  const { calculatePendingYield } = useCalculatePendingYield()\n\n  useEffect(() => {\n    if (!currentPosBaseInfoLoading && !posFeeDataLoading && !posRewardsDataLoading) {\n      const { total } = calculatePendingYield([currentPosBaseInfo], posFeeData, posRewardsData)\n      setTotalYield(total)\n    }\n  }, [currentPosBaseInfoLoading, posFeeDataLoading, posRewardsDataLoading])\n  const { fetchAccountBalance } = useAccountBalance()\n  const toClaim = async () => {\n    setIsClaimLoading(true)\n    try {\n      const rewarderCoinTypes = currentPosRewardsData?.map((item: PosReward) => item.coin_address) || []\n      const params = {\n        posType: currentPosBaseInfo?.posType,\n        id: currentPosBaseInfo?.id,\n        clmmPool: currentPosBaseInfo?.clmmPool,\n        coinTypeA: currentPosBaseInfo?.coinTypeA,\n        coinTypeB: currentPosBaseInfo?.coinTypeB,\n        rewarderCoinTypes,\n        account: currentAccount?.address\n      }\n      console.log('🚀 ~ toClaim ~ params.currentPosBaseInfo:', params, currentPosBaseInfo)\n      const { tx, msafeParams } = await getPosClaimFeeAndRewardTxPayload(params)\n      console.log('🚀 ~ toClaim ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: (status: TransactionStatusType) => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: '',\n              toastTitleText: ''\n            }\n\n            if (status === 'success') {\n              info.toastTitleText = 'Claim Successful'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toClaim ~ res:', res)\n\n      if (res) {\n        // 重新拿数据\n        setTimeout(() => {\n          fetchAccountBalance()\n          getPosFeeData([currentPosBaseInfo as PosBaseInfo])\n          getPosRewardsData([currentPosBaseInfo as PosBaseInfo], { [curPosContractPoolInfo.poolAddress]: curPosContractPoolInfo })\n          // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n        }, 2000)\n      }\n      setIsClaimLoading(false)\n    } catch (error) {\n      setIsClaimLoading(false)\n      console.log('🚀 ~ toClaim ~ error:', error)\n    }\n  }\n\n  const isInputValue = tokenAmountAfterA !== '' || tokenAmountAfterB !== ''\n\n  const { isApp } = useWindowWidth()\n  return (\n    <Block w=\"100%\" borderRadius=\"16px\" p=\"0\">\n      <Block\n        w=\"calc(100% + 2px)\"\n        ml=\"-1px\"\n        mt=\"-1px\"\n        bg=\"bg_six\"\n        borderRadius=\"16px\"\n        h={{ base: 'auto', lg: '80px' }}\n        p={{ base: '20px 8px', lg: '20px 20px' }}\n      >\n        <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" justify={{ base: 'center', lg: 'space-between' }} gap={{ base: '16px', lg: '0' }}>\n          <Stack\n            flexDir={{ base: 'row', lg: 'column' }}\n            align={{ base: 'center', lg: 'flex-start' }}\n            justify={{ base: 'space-between', lg: 'center' }}\n            mt={{ base: '-12px', lg: '0' }}\n          >\n            <Text color=\"primary_gray\" mb={{ base: '0', lg: '-12px' }}>\n              Liquidity\n            </Text>\n            <LiquidityValueBlock positionInfo={currentPosBaseInfo} haveTooltip={false} />\n          </Stack>\n          <VStack minW=\"200px\" align={{ base: 'center', lg: 'flex-end' }} pb={{ base: '0', lg: '12px' }} gap=\"12px\">\n            <HStack w=\"100%\" justify={{ base: 'center', lg: 'space-between' }}>\n              <HStack gap=\"4px\">\n                <SingleCoinImage\n                  imageUrl={currentPosBaseInfo?.displayTokenA?.logo_url}\n                  w=\"20px\"\n                  h=\"20px\"\n                  showTagWidth=\"10px\"\n                  showTagHeight=\"10px\"\n                  coinType={currentPosBaseInfo ? currentPosBaseInfo?.displayTokenA?.coin_type : ''}\n                />\n                <Skeleton isLoaded={!!currentPosBaseInfo && !!currentPosLiquidityData}>\n                  <HStack gap=\"4px\">\n                    <Text color=\"primary\">{textEllipses(currentPosBaseInfo?.displayTokenA?.symbol)}</Text>\n                    <Text color=\"primary\">{currentPosLiquidityData?.displayPercentA}%</Text>\n                  </HStack>\n                </Skeleton>\n              </HStack>\n              <HStack gap=\"4px\">\n                <SingleCoinImage\n                  imageUrl={currentPosBaseInfo?.displayTokenB?.logo_url}\n                  w=\"20px\"\n                  h=\"20px\"\n                  showTagWidth=\"10px\"\n                  showTagHeight=\"10px\"\n                  coinType={currentPosBaseInfo ? currentPosBaseInfo?.displayTokenB?.coin_type : ''}\n                />\n                <Skeleton isLoaded={!!currentPosBaseInfo && !!currentPosLiquidityData}>\n                  <HStack gap=\"4px\">\n                    <Text color=\"primary_green\">{textEllipses(currentPosBaseInfo?.displayTokenB?.symbol)}</Text>\n                    <Text color=\"primary_green\">{currentPosLiquidityData?.displayPercentB}%</Text>\n                  </HStack>\n                </Skeleton>\n              </HStack>\n            </HStack>\n            <Progress\n              w=\"200px\"\n              h=\"4px\"\n              value={currentPosLiquidityData?.displayPercentA}\n              bg=\"quote_green\"\n              sx={{\n                'div[role=\"progressbar\"]': {\n                  bg: 'primary'\n                }\n              }}\n            />\n          </VStack>\n        </Stack>\n      </Block>\n      <HStack\n        gap={{ base: '20px', lg: '8px' }}\n        p={{ base: '20px 8px', lg: '40px 8px' }}\n        w=\"100%\"\n        justify=\"space-around\"\n        flexDirection={{ base: 'column', lg: 'row' }}\n      >\n        <TokenAmountAndAfter\n          label=\"Base\"\n          token={currentPosBaseInfo?.displayTokenA}\n          amount={currentPosLiquidityData?.displayCoinAmountA}\n          afterAmount={tokenAmountAfterA}\n        />\n        <TokenAmountAndAfter\n          label=\"Quote\"\n          token={currentPosBaseInfo?.displayTokenB}\n          amount={currentPosLiquidityData?.displayCoinAmountB}\n          afterAmount={tokenAmountAfterB}\n        />\n      </HStack>\n      <Block\n        w=\"calc(100% + 2px)\"\n        ml=\"-1px\"\n        mt=\"-1px\"\n        bg=\"bg_six\"\n        borderRadius=\"16px\"\n        h={{ base: '70px', lg: '80px' }}\n        p={{ base: '20px 8px', lg: '20px' }}\n      >\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Stack\n            flexDir={{ base: 'row', lg: 'column' }}\n            alignItems={{ base: 'center', lg: 'flex-start' }}\n            justify={{ base: 'space-between', lg: 'center' }}\n            w={{ base: '100%', lg: 'auto' }}\n          >\n            <Text color=\"primary_gray\">Pending Yield</Text>\n            <Skeleton isLoaded={!!totalYield && !!currentPosBaseInfo && !!posFeeData && !!posRewardsData}>\n              <Text color=\"text_caption\" fontSize=\"16px\">\n                {formatCurrency(totalYield, 2)}\n              </Text>\n            </Skeleton>\n          </Stack>\n          <Button\n            isLoading={isClaimLoading}\n            disabled={Number(totalYield) == 0 || posFeeDataLoading || posRewardsDataLoading || isClaimLoading || !currentPosFeeData}\n            onClick={toClaim}\n            w=\"112px\"\n            h=\"28px\"\n            borderRadius=\"8px\"\n            fontWeight=\"500\"\n            fontSize=\"14px\"\n          >\n            Claim\n          </Button>\n        </HStack>\n      </Block>\n      <HStack\n        p={{ base: '20px 8px 0', lg: '40px 8px 20px' }}\n        w=\"100%\"\n        justify=\"space-between\"\n        flexWrap=\"wrap\"\n        sx={{\n          '>div': {\n            mb: { base: '12px', lg: '20px' }\n          }\n        }}\n        flexDirection={{ base: 'column', lg: 'row' }}\n      >\n        <TokenAmountAndAfter\n          label=\"Fees\"\n          token={currentPosBaseInfo?.displayTokenA}\n          amount={currentPosFeeData?.displayFeeOwedA}\n          afterAmount={isInputValue ? '0' : ''}\n        />\n        <TokenAmountAndAfter\n          label={isApp ? '' : 'Fees'}\n          token={currentPosBaseInfo?.displayTokenB}\n          amount={currentPosFeeData?.displayFeeOwedB}\n          afterAmount={isInputValue ? '0' : ''}\n        />\n        {currentPosRewardsData?.map((item: any, index: number) => {\n          return (\n            <React.Fragment key={item?.coin_address}>\n              {d(item.amount_owed).gt(0) && (\n                <TokenAmountAndAfter\n                  label={isApp ? (index == 0 ? 'Mining Rewards' : '') : 'Mining Rewards'}\n                  token={item?.token}\n                  amount={item?.display_amount_owed}\n                  afterAmount={isInputValue ? '0' : ''}\n                />\n              )}\n            </React.Fragment>\n          )\n        })}\n      </HStack>\n    </Block>\n  )\n}\n\nconst TokenAmountAndAfter = ({\n  label,\n  token,\n  amount,\n  afterAmount,\n  isLoading\n}: {\n  label: string\n  token: Token\n  amount: string\n  afterAmount: string\n  isLoading?: boolean\n}) => {\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack align={{ base: 'flex-end', lg: 'center' }} gap={{ base: '4px', lg: '8px' }} w={{ base: '100%', lg: 'calc(50% - 4px)' }}>\n      <HStack w=\"100%\" justify={{ base: 'space-between' }} flexDirection={{ base: 'row', lg: 'column' }}>\n        <Text color=\"primary_gray\">{label}</Text>\n        <HStack>\n          <Box onClick={isApp ? () => window.open(getExplorerUrl(token?.coin_type, 'coin')) : () => {}}>\n            <SingleTokenInfo\n              haveTooltip={!isApp}\n              coinType={token ? token?.coin_type : ''}\n              haveName={false}\n              haveSymbol={false}\n              warningIcon={{ iconW: '14px', iconH: '14px' }}\n              imgBoxStyle={{ w: '28px', h: '28px' }}\n            />\n          </Box>\n          <Skeleton isLoaded={!isLoading && !!amount}>\n            <Text color=\"text_caption\" fontSize={{ base: '14px', lg: '16px' }}>\n              {formatNumberWithDown(amount)}\n            </Text>\n          </Skeleton>\n          <Text color=\"text_caption\" fontSize={{ base: '14px', lg: '16px' }}>\n            {textEllipses(token?.symbol)}\n          </Text>\n        </HStack>\n      </HStack>\n      {afterAmount !== '' && afterAmount && (\n        <HStack bg=\"primary_opacity.10\" borderRadius=\"full\" p=\" 0 20px\" h=\"26px\" align=\"center\">\n          <Text color=\"primary\">{formatNumberWithDown(afterAmount)}</Text>\n          <Text color=\"primary\">after</Text>\n        </HStack>\n      )}\n    </VStack>\n  )\n}\nexport default DetailStatsInfo\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { PosReward } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, bnToAmount, d, Decimal, formatNumberWithDown, getBalanceChanges, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useInsufficientBalanceToast from '../common/useInsufficientBalanceToast'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport useCurrentPos from './useCurrentPos'\nimport usePosAdd from './usePosAdd'\nimport usePosHelper from './usePosHelper'\n\nexport default function usePosAddPage() {\n  const { currentPosBaseInfo, posPoolsOriginalData, posPoolsRelatedData, posRewardsData, posLiquidityData } = usePositionStore()\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId]\n  const { getTokenAmountValue } = useTokenPrice()\n  const { transactionConfirmation } = useTransactionModal()\n  const { preAdd, getAddTsPayload, getClmmCreateAddData, getFarmsCreateAddData } = usePosAdd()\n  const { getTokenALock, getTokenBLock } = usePosHelper()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const {\n    setTokenAmountAfterA,\n    setTokenAmountAfterB,\n    currentPoolSqrtPrice,\n    isFixedDisplayTokenA,\n    setIsFixedDisplayTokenA,\n    curPosContractPoolInfo,\n    currentPosDetailTab,\n    isPosDetailRefresh,\n    useZapIn\n  } = usePositionDetailStore()\n\n  const { getZapDepositToastInfo, getZapDepositTx, reCalculateZapData } = useZapSubmit()\n  const { preDepositeData, setZapAmount, setPreDepositeData } = useZapStore()\n\n  const [preAddLoading, setPreAddLoading] = useState(false)\n  const [tokenMaxA, setTokenMaxA] = useState('')\n  const [tokenMaxB, setTokenMaxB] = useState('')\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n\n  const currentPosLiquidityData = useMemo(() => {\n    return posLiquidityData[currentPosBaseInfo?.posId as string]\n  }, [posLiquidityData, currentPosBaseInfo?.posId])\n\n  // 左侧after展示\n  const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n  const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n  useEffect(() => {\n    if (+tokenAmountA || +tokenAmountB) {\n      const amountA = +tokenAmountA\n      const amountB = +tokenAmountB\n      setTokenAmountAfterA(d(amountA).plus(tokenABalance).toString())\n      setTokenAmountAfterB(d(amountB).plus(tokenBBalance).toString())\n    } else {\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const displayTokenA = currentPosBaseInfo?.displayTokenA\n  const displayTokenB = currentPosBaseInfo?.displayTokenB\n\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  // 余额\n  const { balanceInfo: tokenABalanceInfo } = useGetTokenBalance(displayTokenA)\n  const { balanceInfo: tokenBBalanceInfo } = useGetTokenBalance(displayTokenB)\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosAddPage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setPreAddLoading(false)\n    setUuid('')\n  }\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(currentPosBaseInfo, curPosContractPoolInfo)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(currentPosBaseInfo, curPosContractPoolInfo)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showDisplayTokenALock = !currentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock\n  const showDisplayTokenBLock = !currentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [showDisplayTokenALock, showDisplayTokenBLock])\n\n  // 预计算防抖\n  const debouncedPreAdd = useDebounceFunction((amount, is_fixed_displaytokenA, uuid) => {\n    if (currentPosDetailTab !== 'increase') {\n      return\n    }\n    const decimals = is_fixed_displaytokenA ? currentPosBaseInfo?.displayTokenA?.decimals : currentPosBaseInfo?.displayTokenB?.decimals\n    const amountBN = amountToBN(amount, decimals)\n    const tokenA = currentPosBaseInfo?.tokenA\n    const tokenB = currentPosBaseInfo?.tokenB\n    const lowerTick = currentPosBaseInfo?.lowerTick\n    const upperTick = currentPosBaseInfo?.upperTick\n    const isReverse = currentPosBaseInfo?.isReverse\n    // const curSqrtPrice = currentPosPoolsOriginalData.current_sqrt_price\n    const params = {\n      amount: amountBN,\n      tokenA,\n      tokenB,\n      isTokenA: isReverse ? !is_fixed_displaytokenA : is_fixed_displaytokenA,\n      lowerTick,\n      upperTick,\n      curSqrtPrice: currentPoolSqrtPrice,\n      isReverse,\n      roundUp: true\n    }\n    console.log('🚀 ~ debouncedPreAdd ~ params:', params)\n    const { displayCoinAmountA, displayCoinAmountB, tokenMaxA, tokenMaxB } = preAdd(params)\n    // console.log('🚀 ~ debouncedPreAdd:', coinAmountA, coinAmountB, params, is_fixed_displaytokenA, uuid)\n\n    if (uuidRef.current === uuid) {\n      setTokenMaxA(tokenMaxA)\n      setTokenMaxB(tokenMaxB)\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB(displayCoinAmountB || '')\n      } else {\n        setTokenAmountA(displayCoinAmountA || '')\n      }\n    } else {\n      resetInputAmount()\n    }\n    setPreAddLoading(false)\n  }, 500)\n\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(currentPosBaseInfo)) {\n      console.log('🚀 ~ reCalculateResult ~ currentPosBaseInfo:', currentPosBaseInfo)\n      const amount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n      if (+amount) {\n        const uuid = v4()\n        setUuid(uuid)\n        debouncedPreAdd(amount, isFixedDisplayTokenA, uuid)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentPosDetailTab == 'increase' && isPosDetailRefresh) {\n      reCalculateResult()\n    }\n  }, [isPosDetailRefresh])\n\n  /**\n   * 输入数量监听\n   * @param amount\n   */\n  const handleAmountChange = (amount: string, is_fixed_displaytokenA: boolean) => {\n    console.log('🚀 ~ handleAmountChange ~ amount:', !amount, +amount, amount)\n    if (!amount) {\n      resetInputAmount()\n      return\n    }\n    setIsFixedDisplayTokenA(is_fixed_displaytokenA)\n    if (is_fixed_displaytokenA) {\n      setTokenAmountA(amount)\n    } else {\n      setTokenAmountB(amount)\n    }\n\n    if (+amount) {\n      setPreAddLoading(true)\n      const uuid = v4()\n      setUuid(uuid)\n\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n      debouncedPreAdd(amount, is_fixed_displaytokenA, uuid)\n    } else {\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB('')\n      } else {\n        setTokenAmountA('')\n      }\n    }\n  }\n\n  const { currentAccount } = useAccountStore()\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Add More Liquidity',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenABalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(displayTokenA?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(displayTokenB?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    if (!showTokenALock && !showTokenBLock && (!+tokenAmountA || !+tokenAmountB)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    if (currentPosBaseInfo?.posType == 'burn') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [tokenAmountA, tokenAmountB, tokenABalanceInfo, tokenBBalanceInfo, currentAccount?.address])\n\n  const { signAndExecuteTransaction } = useTransaction()\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n  const [isAddLoading, setIsAddLoading] = useState(false)\n  const { fetchAccountBalance } = useAccountBalance()\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const toAdd = async () => {\n    setIsAddLoading(true)\n    try {\n      let tx\n      let msafeParams\n      let toastInfo\n\n      const rewarderCoinTypes = (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n        if (d(item?.amount_owed).gt(0)) {\n          arr.push(item.coin_address)\n        }\n        return arr\n      }, [])\n      if (!useZapIn) {\n        const inputAmount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n        const tokenDecimals = isFixedDisplayTokenA ? displayTokenA.decimals : displayTokenB.decimals\n        const amount = d(inputAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n\n        const fixAmountA = currentPosBaseInfo?.isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n        let amount_a\n        let amount_b\n        const lowerTick = currentPosBaseInfo?.lowerTick\n        const upperTick = currentPosBaseInfo?.upperTick\n        const currentTickIndex = curPosContractPoolInfo?.current_tick_index\n        if (currentTickIndex !== undefined && lowerTick !== undefined && upperTick !== undefined) {\n          if (currentTickIndex >= lowerTick && currentTickIndex <= upperTick) {\n            amount_a = fixAmountA ? amount : tokenMaxA\n            amount_b = fixAmountA ? tokenMaxB : amount\n          } else if (currentTickIndex > upperTick) {\n            amount_a = 0\n            amount_b = amount\n          } else if (currentTickIndex < lowerTick) {\n            amount_a = amount\n            amount_b = 0\n          }\n        }\n\n        console.log('🚀 ~ toAdd ~ lowerTick:', lowerTick, upperTick, currentTickIndex)\n\n        console.log('🚀 ~ toAdd ~ amount_a:', currentPosBaseInfo, amount_a, amount_b)\n\n        console.log('🚀 ~ toAdd ~ rewarderCoinTypes:', currentPosRewardsData, rewarderCoinTypes)\n\n        const params: any = {\n          poolAddress: currentPosBaseInfo?.clmmPool,\n          coinTypeA: currentPosBaseInfo?.coinTypeA,\n          coinTypeB: currentPosBaseInfo?.coinTypeB,\n          amountA: amount_a,\n          amountB: amount_b,\n          fixAmountA,\n          lowerTick: currentPosBaseInfo?.lowerTick,\n          upperTick: currentPosBaseInfo?.upperTick,\n          // currentSqrtPrice: currentPosPoolsRelatedData?.curSqrtPrice,\n          currentSqrtPrice: currentPoolSqrtPrice,\n          posType: currentPosBaseInfo?.posType,\n          rewarderCoinTypes,\n          posIndex: currentPosBaseInfo?.index,\n          posId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId\n        }\n        if (currentPosBaseInfo?.posType == 'farms') {\n          params['farmsPoolId'] = currentPosBaseInfo?.farmsPool\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Add ' +\n              [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n                .filter(Boolean)\n                .join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = tokenAmountA\n              let amountBF = tokenAmountB\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n                amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n              }\n              const description =\n                'Add ' +\n                [formatDescription(amountAF, displayTokenA?.symbol), formatDescription(amountBF, displayTokenB?.symbol)].filter(Boolean).join(' and ')\n\n              info.toastDescriptionContent = description\n              info.modalDescriptionText = description\n              info.toastTitleText = 'Supplied Successful'\n            }\n\n            return info\n          }\n        }\n\n        transactionConfirmation(toastInfo)\n\n        console.log('🚀 ~ toAdd ~ params:', params)\n        const addPayload = await getAddTsPayload(params)\n        tx = addPayload?.tx\n        msafeParams = addPayload?.msafeParams\n      } else {\n        toastInfo = getZapDepositToastInfo()\n        transactionConfirmation(toastInfo)\n        tx = await getZapDepositTx(currentPosBaseInfo?.lowerTick, currentPosBaseInfo?.upperTick, currentPosBaseInfo?.posType == 'farms', {\n          pos_id: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n          collect_fee: true,\n          collect_rewarder_types: rewarderCoinTypes\n        })\n      }\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n\n      if (res) {\n        // 重新拿数据\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        getCurrentPosBaseInfo(currentAccount?.address as string, currentPosBaseInfo?.id as string, true)\n        // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n      } else {\n        if (currentPosBaseInfo) {\n          // 如果失败，大概率都是池子价格变化了，需要重新计算\n          getContractPoolInfo(currentPosBaseInfo?.clmmPool).then(res => {\n            console.log('🚀 ~ toClaim ~ res:', res)\n            if (useZapIn) {\n              reCalculateZapData()\n            } else {\n              reCalculateResult()\n            }\n          })\n        }\n      }\n      setIsAddLoading(false)\n    } catch (error: any) {\n      console.log('🚀 ~ toClaim ~ error:', error)\n      if (useZapIn) {\n        reCalculateZapData()\n      } else {\n        reCalculateResult()\n      }\n      showInsufficientBalanceToast(String(error))\n      setIsAddLoading(false)\n    }\n  }\n\n  // zapIn时候根据计算结果设置amountA,B,  主要为了左侧after相关展示\n  useEffect(() => {\n    if (currentPosDetailTab !== 'increase') return\n    if (useZapIn) {\n      if (preDepositeData?.amount_a || preDepositeData?.amount_b) {\n        const tokenA = currentPosBaseInfo?.tokenA\n        const tokenB = currentPosBaseInfo?.tokenB\n        const amountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n        const amountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n        setTokenAmountA(!currentPosBaseInfo?.isReverse ? amountA : amountB)\n        setTokenAmountB(!currentPosBaseInfo?.isReverse ? amountB : amountA)\n        return\n      }\n      setTokenAmountA('')\n      setTokenAmountB('')\n    }\n  }, [useZapIn, preDepositeData, currentPosBaseInfo?.isReverse])\n\n  useEffect(() => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    return () => {\n      setPreDepositeData(undefined)\n    }\n  }, [])\n\n  return {\n    tokenAmountA,\n    tokenAmountB,\n    reCalculateResult,\n    preAddLoading,\n    preAdd,\n    getAddTsPayload,\n    displayTokenA,\n    displayTokenB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    handleAmountChange,\n    resetInputAmount,\n    btnStatusText,\n    toAdd,\n    isAddLoading,\n    showTokenALock,\n    showTokenBLock,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    getClmmCreateAddData,\n    getFarmsCreateAddData,\n    currentPoolSqrtPrice\n  }\n}\n","import ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport useCurrentApiPool from '@/hooks/position/useCurrentApiPool'\nimport usePosAddPage from '@/hooks/position/usePosAddPage'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { formatCurrency } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Box, Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport FarmsBlock from './FarmsBlock'\nimport RangeAlerts from './RangeAlerts'\nimport TradeTitle from './TradeTitle'\n\nfunction IncreaseBlock() {\n  const { currentPosBaseInfo, posPoolsRelatedData, posApiPoolData } = usePositionStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { isFixedDisplayTokenA, curPosContractPoolInfo, useZapIn, currentPosPoolInfo } = usePositionDetailStore()\n  const {\n    tokenAmountA,\n    tokenAmountB,\n    displayTokenA,\n    displayTokenB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    handleAmountChange,\n    preAddLoading,\n    btnStatusText,\n    toAdd,\n    isAddLoading,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    resetInputAmount,\n    currentPoolSqrtPrice\n  } = usePosAddPage()\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const amountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA, '--')\n  const amountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB, '--')\n  const totalAmount = amountValueA == '--' || amountValueB == '--' ? '--' : d(tokenAmountValueA).plus(tokenAmountValueB).toString()\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId]\n\n  const { currentApiPoolInfo } = useCurrentApiPool(currentPosBaseInfo, posApiPoolData)\n\n  return (\n    <VStack w=\"100%\" gap=\"8px\">\n      <Box w=\"100%\" position=\"relative\" bg=\"bg_six\" p={{ base: '8px', lg: '16px' }} border=\"1px solid\" borderColor=\"border\" borderRadius=\"16px\">\n        {currentApiPoolInfo?.haveZap && currentPosBaseInfo?.posType !== 'burn' && !showDisplayTokenALock && !showDisplayTokenBLock && (\n          <TradeTitle action=\"Deposit\" resetInputAmount={resetInputAmount} />\n        )}\n        {useZapIn ? (\n          <ZapDeposite\n            action=\"Deposit\"\n            apiPoolInfo={currentApiPoolInfo}\n            currentSqrtPrice={currentPoolSqrtPrice}\n            lowerTick={currentPosBaseInfo?.lowerTick}\n            upperTick={currentPosBaseInfo?.upperTick}\n          />\n        ) : (\n          <>\n            <TradeInputGroup\n              from={{\n                wrapStyle: {\n                  h: '108px',\n                  borderRadius: '12px'\n                },\n                balance: tokenABalanceInfo?.balanceFormat || '',\n                value: tokenAmountA,\n                amountValue: tokenAmountValueA,\n                loading: !isFixedDisplayTokenA && preAddLoading,\n                onChange: value => {\n                  handleAmountChange(value, true)\n                },\n                placeholder: '0.0',\n                token: displayTokenA,\n                lock: {\n                  isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenALock,\n                  style: {\n                    borderRadius: '12px'\n                  }\n                }\n              }}\n              to={{\n                wrapStyle: {\n                  h: '108px',\n                  borderRadius: '12px'\n                },\n                balance: tokenBBalanceInfo?.balanceFormat || '',\n                value: tokenAmountB,\n                amountValue: tokenAmountValueB,\n                loading: isFixedDisplayTokenA && preAddLoading,\n                onChange: value => {\n                  handleAmountChange(value, false)\n                },\n                placeholder: '0.0',\n                token: displayTokenB,\n                lock: {\n                  isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenBLock,\n                  style: {\n                    borderRadius: '12px'\n                  }\n                }\n              }}\n              iconHover={false}\n              iconParams={\n                showDisplayTokenALock || showDisplayTokenBLock\n                  ? undefined\n                  : {\n                      xlinkHref: '#icon-icon_add',\n                      svgFill: 'text_caption'\n                    }\n              }\n              lock={{\n                isLock: !currentPosBaseInfo || !curPosContractPoolInfo || (currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn'),\n                text: currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn' ? 'Your liquidity has been permanently locked' : undefined,\n                style: {\n                  h: '224px',\n                  borderRadius: '12px'\n                }\n              }}\n            />\n          </>\n        )}\n      </Box>\n\n      {useZapIn ? (\n        <ZapSubmiteInfo\n          action=\"Deposit\"\n          onClick={toAdd}\n          hideDepositRatio={true}\n          otherLoading={isAddLoading}\n          isReverse={currentPosBaseInfo?.isReverse}\n        />\n      ) : (\n        <>\n          <Button\n            onClick={() => {\n              if (currentAccount) {\n                toAdd()\n              } else {\n                onWalletModal(true)\n              }\n            }}\n            isLoading={isAddLoading}\n            disabled={btnStatusText.disabled || isAddLoading}\n            w=\"100%\"\n            h=\"56px\"\n            fontSize=\"20px\"\n            fontWeight=\"500\"\n          >\n            {btnStatusText.text}\n          </Button>\n          {totalAmount && (\n            <Block borderRadius=\"0 0 16px 16px\" pt=\"36px\" mt=\"-28px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <Text>Total Amount</Text>\n                <Text color=\"text_caption\">{formatCurrency(totalAmount, 2)}</Text>\n              </HStack>\n            </Block>\n          )}\n        </>\n      )}\n      {currentPosBaseInfo?.posType !== 'burn' && <FarmsBlock haveFarming={currentPosPoolInfo?.haveFarming} />}\n      {currentPosPoolsRelatedData && currentPosPoolsRelatedData?.minPrice !== '0' && currentPosPoolsRelatedData?.maxPrice !== '∞' && (\n        <RangeAlerts subscriptionSource=\"PositionDetail\" />\n      )}\n    </VStack>\n  )\n}\nexport default IncreaseBlock\n","import LiquidityRangeChart from '@/components/liquidity/LiquidityRangeChart'\nimport useGetCurrentPrice from '@/hooks/liquidity/useGetCurrentPrice'\nimport useLiquidityStore from '@/store/liquidity'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PoolApiInfo } from '@/types'\nimport { getReversePrice } from '@/utils/pool'\nimport { formatNumberWithDown } from '@cetus/utils'\nimport { TickMath, TickUtil } from '@cetusprotocol/common-sdk'\nimport { Box } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useEffect, useMemo } from 'react'\n\nfunction ChartBlock() {\n  const { currentPosBaseInfo } = usePositionStore()\n  const { currentPosPoolInfo, curPosContractPoolInfo } = usePositionDetailStore()\n  const { setContractPoolInfo, setApiPoolInfo } = useLiquidityStore()\n  const { lowerTickData, upperTickData, setLowerTickData, setUpperTickData } = usePriceRangeStore()\n\n  useDeepCompareEffect(() => {\n    setApiPoolInfo(currentPosPoolInfo)\n  }, [currentPosPoolInfo])\n\n  const handleSetTickData = (tick: number, type: 'lower' | 'upper', poolApiInfo: PoolApiInfo) => {\n    const decimalsA = poolApiInfo?.tokenA?.decimals\n    const decimalsB = poolApiInfo?.tokenB?.decimals\n    let price\n\n    if (Math.abs(tick) == Math.abs(TickUtil.getMinIndex(Number(poolApiInfo.tickSpacing)))) {\n      price = type === 'lower' ? '0' : '∞'\n    } else {\n      price = TickMath.tickIndexToPrice(tick, decimalsA, decimalsB).toString()\n    }\n\n    const displayPrice = price === '∞' ? '∞' : formatNumberWithDown(price, 6)\n    const reversePrice = getReversePrice(price)\n    const displayReversePrice = reversePrice === '∞' ? '∞' : formatNumberWithDown(reversePrice, 6)\n\n    const data = {\n      id: type,\n      tokenA: poolApiInfo?.tokenA,\n      tokenB: poolApiInfo?.tokenB,\n      tick,\n      price,\n      displayPrice,\n      reversePrice,\n      displayReversePrice,\n      tickSpacing: poolApiInfo?.tickSpacing,\n      pool: poolApiInfo?.poolAddress\n    }\n\n    if (type === 'lower') {\n      setLowerTickData({ ...data })\n    } else {\n      setUpperTickData({ ...data })\n    }\n  }\n\n  const { getCurrentPrice } = useGetCurrentPrice()\n\n  useEffect(() => {\n    if (currentPosBaseInfo?.lowerTick && curPosContractPoolInfo?.current_sqrt_price && currentPosPoolInfo?.poolAddress) {\n      handleSetTickData(currentPosBaseInfo?.lowerTick, 'lower', { ...currentPosPoolInfo, tickSpacing: curPosContractPoolInfo.tickSpacing })\n      handleSetTickData(currentPosBaseInfo?.upperTick, 'upper', { ...currentPosPoolInfo, tickSpacing: curPosContractPoolInfo.tickSpacing })\n\n      getCurrentPrice(curPosContractPoolInfo?.current_sqrt_price, currentPosPoolInfo)\n      setContractPoolInfo(curPosContractPoolInfo)\n    }\n  }, [currentPosBaseInfo?.lowerTick, curPosContractPoolInfo?.current_sqrt_price, currentPosPoolInfo?.poolAddress])\n\n  const canDisplay = useMemo(() => {\n    return currentPosBaseInfo?.posId && lowerTickData?.pool && upperTickData?.pool\n  }, [lowerTickData?.pool, upperTickData?.pool, currentPosBaseInfo?.posId])\n  // console.log('🚀 ~ ChartBlock ~ currentPosBaseInfo?.isReverse:', currentPosBaseInfo?.isReverse)\n\n  return (\n    <Box className=\"chart-block\" w={{ base: '100%', lg: '200px' }} h=\"85px\" mb=\"8px\" overflow=\"hidden\">\n      {canDisplay && (\n        // <LiquidityRangeChart\n        //   isFrom=\"position\"\n        //   handleClickRefresh={() => {}}\n        //   minPriceData={!currentPosBaseInfo?.isReverse ? lowerTickData : upperTickData}\n        //   maxPriceData={!currentPosBaseInfo?.isReverse ? upperTickData : lowerTickData}\n        //   direct={!currentPosBaseInfo?.isReverse}\n        //   readonly={true}\n        // />\n        <LiquidityRangeChart\n          isFrom=\"position\"\n          handleClickRefresh={() => {}}\n          direct={!currentPosBaseInfo?.isReverse}\n          minPriceData={!currentPosBaseInfo?.isReverse ? lowerTickData : upperTickData}\n          maxPriceData={!currentPosBaseInfo?.isReverse ? upperTickData : lowerTickData}\n          readonly={true}\n        />\n      )}\n    </Box>\n  )\n}\nexport default ChartBlock\n","import usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport { AddressCopyLink, Block, TooltipIcon } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport { formatNumber } from '@cetus/utils'\nimport { HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport PositionCurrentPrice from '../PositionCurrentPrice'\nimport PositionStatus from '../PositionStatus'\nimport RangeValue from '../RangeValue'\nimport ChartBlock from './ChartBlock'\n\nfunction PositionChartInfo() {\n  const { currentPosBaseInfo, posPoolsRelatedData, posPoolsOriginalData } = usePositionStore()\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId]\n\n  const { getClmmPosName } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (currentPosBaseInfo?.tokenName) {\n      return currentPosBaseInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool]?.index\n      return getClmmPosName(currentPosBaseInfo?.index, position_index)\n    }\n  }, [currentPosBaseInfo?.tokenName, currentPosBaseInfo?.index, currentPosBaseInfo?.clmmPool, posPoolsOriginalData])\n\n  const displayFee = currentPosPoolsRelatedData?.displayFee + '%'\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n\n  const leverage = useMemo(() => {\n    console.log('🚀 ~ leverage ~ currentPosPoolsRelatedData:', currentPosPoolsRelatedData)\n    const minPrice = currentPosPoolsRelatedData?.minPriceOrigin\n    const maxPrice = currentPosPoolsRelatedData?.maxPriceOrigin\n    if (minPrice !== '0' && maxPrice !== '∞') {\n      return formatNumber(1 / (1 - Number((minPrice / maxPrice) ** 0.25)), 2) + 'x'\n    } else {\n      return '1x'\n    }\n  }, [currentPosPoolsRelatedData?.minPriceOrigin, currentPosPoolsRelatedData?.maxPriceOrigin])\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <Block w=\"100%\" borderRadius=\"20px 20px 16px 16px\">\n      <Block p={{ base: '16px 8px', lg: '16px' }} w=\"calc(100% + 34px)\" ml=\"-17px\" mt=\"-21px\" bg=\"bg_six\">\n        <HStack justify=\"space-between\">\n          <HStack h={{ base: '40px', lg: '32px' }} gap=\"8px\" flexDirection={{ base: 'column', lg: 'row' }}>\n            <HStack w={{ base: '100%', lg: 'unset' }}>\n              <Text>Position ID</Text>\n              <Skeleton isLoaded={!!tokenName}>\n                <Text color=\"text_caption\">{tokenName?.split('|')[1]}</Text>\n              </Skeleton>\n            </HStack>\n            <HStack w={{ base: '100%', lg: 'unset' }}>\n              <Text>Position NFT</Text>\n              <Skeleton isLoaded={!!currentPosBaseInfo?.id}>\n                <AddressCopyLink\n                  fontWeight=\"500\"\n                  color=\"text_caption\"\n                  fontSize=\"14px\"\n                  address={currentPosBaseInfo?.id}\n                  showLink={false}\n                  onClickLink={() => {\n                    window.open(getExplorerUrl(currentPosBaseInfo?.id, 'nftAddress'), '_blank')\n                  }}\n                />\n              </Skeleton>\n            </HStack>\n          </HStack>\n          {currentPosPoolsRelatedData && (\n            <PositionStatus\n              isActive={isActive}\n              isLoading={currentPosPoolsRelatedData?.currentStatus == ''}\n              h=\"32px\"\n              p=\"0 12px\"\n              w=\"unset\"\n              isRow={true}\n              imgStyle={{\n                imgW: '30px',\n                imgH: '16px'\n              }}\n            />\n          )}\n        </HStack>\n      </Block>\n      <HStack gap={{ base: '20px', lg: '8px' }} w=\"100%\" justify=\"space-between\" p=\"28px 0 20px\" flexDirection={{ base: 'column', lg: 'row' }}>\n        {/* <Box h=\"200px\" /> */}\n        <VStack gap={{ base: '16px', lg: '32px' }}>\n          <VStack w=\"100%\" justify=\"space-between\" mt=\"8px\" align={{ base: 'center', lg: 'flex-start' }}>\n            <Text color=\"primary_gray\">Current Price</Text>\n            <PositionCurrentPrice\n              posId={currentPosBaseInfo?.posId || ''}\n              displayTokenA={currentPosBaseInfo?.displayTokenA}\n              displayTokenB={currentPosBaseInfo?.displayTokenB}\n            />\n          </VStack>\n          <VStack w=\"100%\" justify=\"space-between\" mt=\"8px\" align={{ base: 'center', lg: 'flex-start' }}>\n            <Text color=\"primary_gray\">Position Range</Text>\n            <RangeValue\n              displayTokenA={currentPosBaseInfo?.displayTokenA}\n              displayTokenB={currentPosBaseInfo?.displayTokenB}\n              justify=\"center\"\n              priceInfo={{\n                minPrice: currentPosPoolsRelatedData?.minPrice,\n                maxPrice: currentPosPoolsRelatedData?.maxPrice,\n                minPriceResever: currentPosPoolsRelatedData?.minPriceResever,\n                maxPriceResever: currentPosPoolsRelatedData?.maxPriceResever\n              }}\n              fontSize=\"14px\"\n            />\n          </VStack>\n        </VStack>\n        <VStack gap=\"0\">\n          <ChartBlock />\n          <VStack zIndex=\"9\">\n            <HStack gap=\"2px\" bg=\"primary_opacity.10\" borderRadius=\"full\" p=\" 0 20px\" h=\"26px\" align=\"center\">\n              <Text color=\"primary\" fontSize=\"12px\">\n                Leverage\n              </Text>\n              <TooltipIcon type=\"leverage\" />\n              <Skeleton ml=\"4px\" isLoaded={!!leverage && !!currentPosPoolsRelatedData}>\n                <Text color=\"primary\">{leverage}</Text>\n              </Skeleton>\n            </HStack>\n          </VStack>\n        </VStack>\n      </HStack>\n    </Block>\n  )\n}\nexport default PositionChartInfo\n","import AprTooltip from '@/components/common/aprTooltip'\nimport CoinPairInfo from '@/components/common/CoinPairInfo'\nimport Slippage from '@/components/common/Slippage'\nimport StatsInfo from '@/components/liquidity/StatsInfo'\nimport DetailStatsInfo from '@/components/position/details/DetailStatsInfo'\nimport IncreaseBlock from '@/components/position/details/IncreaseBlock'\nimport PositionChartInfo from '@/components/position/details/PositionChartInfo'\nimport RemoveBlock from '@/components/position/details/RemoveBlock'\nimport useGetPoolList from '@/hooks/pool/useGetPoolList'\nimport useCurrentPos from '@/hooks/position/useCurrentPos'\nimport useGetPosLiquiditys from '@/hooks/position/useGetPosLiquiditys'\nimport useGetPosPools from '@/hooks/position/useGetPosPools'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport { PosBaseInfo } from '@/types'\nimport { Block, SelectTab } from '@cetus/design'\nimport { useAccountBalance, useRpcListener } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { BackButton, RefreshButton } from '@cetus/ui-kit'\nimport { Button, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nfunction PositionDetail() {\n  const navigate = useNavigate()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { currentAccount } = useAccountStore()\n  const { position_nft_id } = useParams()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory, getCurrentPosByPosId } = useCurrentPos()\n  const {\n    curPosContractPoolInfo,\n    currentPosDetailTab,\n    currentPosPoolInfo,\n    setCurrentPosDetailTab,\n    setCurrentPosPoolInfo,\n    setCurrentPoolSqrtPrice,\n    setCurPosContractPoolInfo,\n    setIsPosDetailRefresh,\n    setUseZapIn\n  } = usePositionDetailStore()\n  const { posPoolsRelatedData, currentPosBaseInfo, setCurrentPosBaseInfo, farmsPosRewardsData, posRewardsData } = usePositionStore()\n  console.log(currentPosBaseInfo, 'currentPosBaseInfo')\n  const feeDisplay = (posPoolsRelatedData[currentPosBaseInfo?.posId as string]?.displayFee || '--') + '%'\n  const tabList = [\n    {\n      label: 'Increase',\n      value: 'increase'\n    },\n    {\n      label: 'Remove',\n      value: 'remove'\n    }\n  ]\n\n  const handleRefresh = () => {\n    console.log('🚀 ~ handleRefresh ~ handleRefresh:')\n    setIsPosDetailRefresh(true)\n    getPosData(true)\n    getPosPoolPoolData()\n    getTokensPrice()\n    fetchAccountBalance()\n    handleGetPrice()\n    setTimeout(() => {\n      setIsPosDetailRefresh(false)\n    }, 1000)\n    // getHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n  }\n\n  const getPosData = (isForceRefresh: boolean = false) => {\n    if (currentAccount?.address && position_nft_id) {\n      getCurrentPosBaseInfo(currentAccount?.address, position_nft_id, isForceRefresh)\n    }\n  }\n  useEffect(() => {\n    console.log('🚀 ~ PositionDetail ~ position_nft_id:', position_nft_id)\n    getPosData()\n  }, [currentAccount?.address, position_nft_id])\n\n  const getHistory = async (id: string, posId: string) => {\n    if (id) {\n      await getCurrentPosHistory(id, posId)\n    }\n  }\n  useEffect(() => {\n    console.log('🚀 ~ PositionHistory ~ currentPosBaseInfo?.id:', currentPosBaseInfo?.id)\n    // getHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n  }, [currentPosBaseInfo?.id])\n\n  const { fetchTokenPrices } = useTokenPrice()\n\n  // 刷新页面时重新查token价格\n  const posFarmsData = farmsPosRewardsData[currentPosBaseInfo?.id as string]\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId as string]\n  const getTokensPrice = () => {\n    const coinAddresses = currentPosRewardsData?.map((item: any) => item?.coin_address) || []\n    const rewarderTypes = posFarmsData?.map((item: any) => item?.rewarder_type) || []\n    const additionalTokens = [currentPosBaseInfo?.tokenA?.coin_type, currentPosBaseInfo?.tokenB?.coin_type].filter(Boolean)\n    const uniqueTokens = Array.from(new Set([...coinAddresses, ...additionalTokens, ...rewarderTypes]))\n    fetchTokenPrices(uniqueTokens)\n  }\n  useEffect(() => {\n    getTokensPrice()\n  }, [currentPosBaseInfo?.posId, currentPosRewardsData?.length, posFarmsData?.length])\n\n  // 接口查询池子信息 FarmsBlock展示apr 以及添加和移除时的奖励coin_types\n  const { getPoolList } = useGetPoolList()\n  const getPosPoolPoolData = async () => {\n    if (!currentPosBaseInfo?.clmmPool) return\n    const poolDataList: any = await getPoolList({ pool: currentPosBaseInfo?.clmmPool })\n    console.log('🚀 ~ getPoolData ~ poolInfo:', currentPosBaseInfo, poolDataList)\n    if (poolDataList) {\n      return setCurrentPosPoolInfo(poolDataList?.list[0])\n    }\n  }\n\n  // 20s轮询current_sqrt_price 防止提交交易时报错\n  // const { getContractPoolInfo } = useGetContractPoolInfo()\n  const { getPosPoolsOriginalObj, getPosPoolsRelatedData } = useGetPosPools()\n  const { getPosLiquidityData } = useGetPosLiquiditys()\n\n  const handleGetPrice = async () => {\n    console.log('🚀 ~ handleGetPrice ~ currentPosBaseInfo?.clmmPool:', currentPosBaseInfo?.clmmPool)\n    if (currentPosBaseInfo?.clmmPool) {\n      const posInfo: any = await getCurrentPosByPosId(currentAccount?.address, position_nft_id as string)\n      const contractPoolInfo = await getPosPoolsOriginalObj([posInfo as PosBaseInfo])\n      // const contractPoolInfo = await getContractPoolInfo(currentPosBaseInfo?.clmmPool)\n      getPosPoolsRelatedData([posInfo], contractPoolInfo)\n      const info = contractPoolInfo[posInfo?.clmmPool]\n\n      console.log('🚀 ~ handleGetPrice ~ contractPoolInfo[currentPosBaseInfo?.clmmPool]:', info, curPosContractPoolInfo)\n      if (info?.current_sqrt_price !== curPosContractPoolInfo?.current_sqrt_price) {\n        getPosLiquidityData([posInfo], contractPoolInfo)\n      }\n      if (contractPoolInfo) {\n        setCurrentPoolSqrtPrice(info?.current_sqrt_price)\n        setCurPosContractPoolInfo(info)\n      }\n    }\n  }\n\n  const { setFromCoin, setToCoin, fromCoin, toCoin } = useSwapWidgetStore()\n  useEffect(() => {\n    getPosPoolPoolData()\n    handleGetPrice()\n    let priceInterval: any\n    if (currentPosBaseInfo?.clmmPool) {\n      priceInterval = setInterval(() => {\n        handleGetPrice()\n      }, 20000)\n    }\n    /**\n     * 切换小组件token与当前池子相同\n     */\n    if (currentPosBaseInfo?.displayTokenA && currentPosBaseInfo?.displayTokenB) {\n      setFromCoin(currentPosBaseInfo?.displayTokenA)\n      setToCoin(currentPosBaseInfo?.displayTokenB)\n    }\n\n    return () => {\n      clearInterval(priceInterval) // 清除 priceInterval\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [currentPosBaseInfo?.clmmPool])\n\n  useEffect(() => {\n    setCurrentPosDetailTab('increase')\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n    return () => {\n      setCurPosContractPoolInfo(null)\n      setCurrentPosBaseInfo(null)\n      setCurrentPosPoolInfo(null)\n      setUseZapIn(false)\n    }\n  }, [])\n\n  useRpcListener({\n    onRpcChange: () => {\n      getPosData(true)\n      handleGetPrice()\n      if (currentAccount?.address) {\n        fetchAccountBalance()\n      }\n    }\n  })\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack gap=\"12px\" w=\"100%\" pt=\"20px\" align=\"flex-start\">\n      <HStack w=\"100%\" justifyContent=\"space-between\" flexDirection={{ base: 'column-reverse', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justifyContent=\"space-between\">\n          <BackButton />\n          {isApp && (\n            <HStack>\n              <SlippageRefreshMEV />\n              <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />\n            </HStack>\n          )}\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          <Button\n            w={{ base: '100%', lg: 'unset' }}\n            bg=\"bg_secondary\"\n            fontSize=\"14px\"\n            p=\"0 16px\"\n            h=\"32px\"\n            borderRadius=\"8px\"\n            fontWeight=\"500\"\n            variant=\"outline\"\n            onClick={e => {\n              navigate(`/liquidity?poolAddress=${currentPosBaseInfo?.clmmPool}`)\n            }}\n          >\n            Create a new position\n          </Button>\n          {!isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      </HStack>\n      <HStack w=\"100%\" justifyContent=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <Skeleton w={{ base: '100%', lg: 'unset' }} isLoaded={!!currentPosBaseInfo?.clmmPool}>\n          <CoinPairInfo\n            symbolFontWeight=\"600\"\n            haveName={true}\n            poolInfo={{ feeDisplay, poolAddress: currentPosBaseInfo?.clmmPool, ...currentPosBaseInfo }}\n            symbolEllipsesDecimals={10}\n            nameEllipsesDecimals={20}\n            placement=\"bottom-start\"\n          />\n        </Skeleton>\n        <HStack w={{ base: '100%', lg: 'unset' }} gap={{ base: '12px', lg: '28px' }} flexDirection={{ base: 'column', lg: 'row' }}>\n          <StatsInfo\n            label=\"Pool APR\"\n            value={\n              <AprTooltip poolInfo={currentPosPoolInfo}>\n                <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n                  <Text\n                    as=\"span\"\n                    fontSize=\"14px\"\n                    color=\"text_caption\"\n                    fontWeight=\"500\"\n                    cursor={currentPosPoolInfo?.farmingAprDisplay || currentPosPoolInfo?.miningAprList?.length > 0 ? 'help' : 'text'}\n                  >\n                    {currentPosPoolInfo?.feeAndMiningAprDisplay}\n                  </Text>\n                  {currentPosPoolInfo?.haveFarming && (\n                    <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                      +{currentPosPoolInfo?.farmingAprDisplay}\n                    </Text>\n                  )}\n                </HStack>\n              </AprTooltip>\n            }\n            loading={!currentPosPoolInfo?.poolAddress}\n          />\n          <StatsInfo label=\"TVL\" value={(currentPosPoolInfo?.tvlDisplay as string) || ''} loading={!currentPosPoolInfo?.poolAddress} />\n          <StatsInfo label=\"Volume (24H)\" value={(currentPosPoolInfo?.volume24Display as string) || ''} loading={!currentPosPoolInfo?.poolAddress} />\n          <StatsInfo label=\"Fees (24H)\" value={(currentPosPoolInfo?.fees24Display as string) || ''} loading={!currentPosPoolInfo?.poolAddress} />\n        </HStack>\n      </HStack>\n      <HStack w=\"100%\" align=\"flex-start\" flexDirection={{ base: 'column-reverse', lg: 'row' }}>\n        <VStack w={{ base: '100%', lg: '60%' }} gap=\"8px\" key={`${currentPosBaseInfo?.posId}-posInfo`}>\n          <PositionChartInfo />\n          <DetailStatsInfo />\n          {/* <PositionHistory /> */}\n        </VStack>\n        <VStack w={{ base: '100%', lg: '40%' }}>\n          <Block p=\"0\" borderRadius=\"16px\" bg=\"bg_six\">\n            <HStack w=\"100%\" p=\"0 16px\">\n              <SelectTab\n                type=\"borderTab\"\n                bg=\"none\"\n                wrapStyle={{\n                  w: '100%',\n                  h: '60px',\n                  border: 'none',\n                  bg: 'none'\n                }}\n                itemStyle={{\n                  w: { base: '50%', lg: 'unset' },\n                  fontSize: '16px',\n                  mr: '28px'\n                }}\n                tabList={tabList}\n                currentTab={currentPosDetailTab == 'increase' ? 'Increase' : 'Remove'}\n                handleChangeTab={(item: any) => {\n                  setCurrentPosDetailTab(item?.value)\n                }}\n              />\n              {!isApp && <SlippageRefreshMEV />}\n            </HStack>\n          </Block>\n          {currentPosDetailTab == 'increase' && <IncreaseBlock />}\n          {currentPosDetailTab == 'remove' && <RemoveBlock />}\n        </VStack>\n      </HStack>\n    </VStack>\n  )\n}\nconst SlippageRefreshMEV = () => {\n  return (\n    <HStack>\n      <Slippage />\n      {/* <MEVProtect /> */}\n    </HStack>\n  )\n}\nexport default PositionDetail\n"],"names":["DetailStatsInfo","tokenAmountAfterA","tokenAmountAfterB","currentPosDetailTab","curPosContractPoolInfo","usePositionDetailStore","getPosFeeData","useGetPosfees","getPosRewardsData","useGetPosRewards","currentAccount","useAccountStore","currentPosBaseInfo","posFeeData","posRewardsData","posLiquidityData","currentPosBaseInfoLoading","posFeeDataLoading","posRewardsDataLoading","usePositionStore","useCurrentPos","currentPosLiquidityData","useMemo","currentPosFeeData","currentPosRewardsData","formatNumberWithDown","isClaimLoading","setIsClaimLoading","useState","totalYield","setTotalYield","signAndExecuteTransaction","useTransaction","getPosClaimFeeAndRewardTxPayload","usePosClaimFeeAndReward","calculatePendingYield","useCalculatePendingYield","useEffect","total","fetchAccountBalance","useAccountBalance","toClaim","rewarderCoinTypes","item","params","tx","msafeParams","res","status","info","error","isInputValue","isApp","useWindowWidth","Block","jsx","jsxs","Stack","Text","LiquidityValueBlock","VStack","HStack","SingleCoinImage","_a","_b","Skeleton","_c","_d","_e","_f","Progress","TokenAmountAndAfter","formatCurrency","Button","index","React","d","label","token","amount","afterAmount","isLoading","getExplorerUrl","useExplorer","Box","SingleTokenInfo","textEllipses","usePosAddPage","posPoolsOriginalData","posPoolsRelatedData","getTokenAmountValue","useTokenPrice","transactionConfirmation","useTransactionModal","preAdd","getAddTsPayload","getClmmCreateAddData","getFarmsCreateAddData","usePosAdd","getTokenALock","getTokenBLock","usePosHelper","getCurrentPosBaseInfo","setTokenAmountAfterA","setTokenAmountAfterB","currentPoolSqrtPrice","isFixedDisplayTokenA","setIsFixedDisplayTokenA","isPosDetailRefresh","useZapIn","getZapDepositToastInfo","getZapDepositTx","reCalculateZapData","useZapSubmit","preDepositeData","setZapAmount","setPreDepositeData","useZapStore","preAddLoading","setPreAddLoading","tokenMaxA","setTokenMaxA","tokenMaxB","setTokenMaxB","tokenAmountA","setTokenAmountA","tokenAmountB","setTokenAmountB","tokenABalance","tokenBBalance","amountA","amountB","displayTokenA","displayTokenB","mevProtect","maxCapForGas","transactionMode","customGasPrice","useGlobalStore","tokenABalanceInfo","useGetTokenBalance","tokenBBalanceInfo","tokenAmountValueA","tokenAmountValueB","uuid","setUuid","uuidRef","useRef","resetInputAmount","showTokenALock","showTokenBLock","showDisplayTokenALock","showDisplayTokenBLock","debouncedPreAdd","useDebounceFunction","is_fixed_displaytokenA","decimals","amountBN","amountToBN","tokenA","tokenB","lowerTick","upperTick","isReverse","displayCoinAmountA","displayCoinAmountB","reCalculateResult","isAvailableObject","v4","handleAmountChange","btnStatusText","btnInfo","getContractPoolInfo","useGetContractPoolInfo","isAddLoading","setIsAddLoading","showInsufficientBalanceToast","useInsufficientBalanceToast","toAdd","toastInfo","arr","inputAmount","tokenDecimals","Decimal","fixAmountA","amount_a","amount_b","currentTickIndex","balanceChanges","description","formatDescription","amountAF","amountBF","getBalanceChanges","addPayload","bnToAmount","IncreaseBlock","posApiPoolData","onWalletModal","currentPosPoolInfo","amountValueA","amountValueB","totalAmount","currentPosPoolsRelatedData","currentApiPoolInfo","useCurrentApiPool","TradeTitle","ZapDeposite","Fragment","TradeInputGroup","value","ZapSubmiteInfo","FarmsBlock","RangeAlerts","ChartBlock","setContractPoolInfo","setApiPoolInfo","useLiquidityStore","lowerTickData","upperTickData","setLowerTickData","setUpperTickData","usePriceRangeStore","useDeepCompareEffect","handleSetTickData","tick","type","poolApiInfo","decimalsA","decimalsB","price","TickUtil","TickMath","displayPrice","reversePrice","getReversePrice","displayReversePrice","data","getCurrentPrice","useGetCurrentPrice","canDisplay","LiquidityRangeChart","PositionChartInfo","getClmmPosName","tokenName","position_index","isActive","leverage","minPrice","maxPrice","formatNumber","AddressCopyLink","PositionStatus","PositionCurrentPrice","RangeValue","TooltipIcon","PositionDetail","navigate","useNavigate","position_nft_id","useParams","getCurrentPosByPosId","setCurrentPosDetailTab","setCurrentPosPoolInfo","setCurrentPoolSqrtPrice","setCurPosContractPoolInfo","setIsPosDetailRefresh","setUseZapIn","setCurrentPosBaseInfo","farmsPosRewardsData","feeDisplay","tabList","handleRefresh","getPosData","getPosPoolPoolData","getTokensPrice","handleGetPrice","isForceRefresh","fetchTokenPrices","posFarmsData","coinAddresses","rewarderTypes","additionalTokens","uniqueTokens","getPoolList","useGetPoolList","poolDataList","getPosPoolsOriginalObj","getPosPoolsRelatedData","useGetPosPools","getPosLiquidityData","useGetPosLiquiditys","posInfo","contractPoolInfo","setFromCoin","setToCoin","fromCoin","toCoin","useSwapWidgetStore","priceInterval","envConfigs","useRpcListener","BackButton","SlippageRefreshMEV","RefreshButton","e","CoinPairInfo","StatsInfo","AprTooltip","SelectTab","RemoveBlock","Slippage"],"mappings":"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"}