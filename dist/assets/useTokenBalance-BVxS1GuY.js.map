{"version":3,"file":"useTokenBalance-BVxS1GuY.js","sources":["../../../hooks/src/useTokenBalance.ts"],"sourcesContent":["import { useAccountStore } from '@cetus/stores'\nimport useTokenBalanceStore from '@cetus/stores/src/tokenBalance'\nimport { BalanceInfo, Token } from '@cetus/types/src/common-types'\nimport { extractStructTagFromType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport Decimal from 'decimal.js'\nimport { useMemo } from 'react'\nimport { useAccountBalance } from '.'\nimport { formatNumber, fromDecimalsAmountFix } from '../../utils/src/formatter'\n\nexport function useGetTokenBalance(coin?: Token) {\n  const { tokenBalanceObj } = useTokenBalanceStore()\n  const { currentAccount } = useAccountStore()\n  const { fetchCoinBalance } = useAccountBalance()\n\n  const getBalanceInfoFromCache = (token?: Token): BalanceInfo | undefined => {\n    if (token) {\n      console.log('ðŸš€ðŸš€ðŸš€ ~ useTokenBalance.ts:18 ~ useGetTokenBalance ~ tokenBalanceObj:', tokenBalanceObj)\n      const info = tokenBalanceObj[extractStructTagFromType(token.coin_type).full_address]\n      console.log('ðŸš€ðŸš€ðŸš€ ~ useTokenBalance.ts:19 ~ useGetTokenBalance ~ info:', info)\n\n      if (info) {\n        const totalBalance = info.totalBalance\n        const balanceFormat = fromDecimalsAmountFix(totalBalance, token.decimals).toString()\n        return {\n          balance: info.totalBalance,\n          balanceFormat,\n          balanceDisplay: formatNumber(balanceFormat, undefined, undefined, Decimal.ROUND_DOWN).toString()\n        }\n      }\n      return undefined\n    }\n\n    return undefined\n  }\n\n  const balanceInfo = useMemo((): BalanceInfo | undefined => {\n    return getBalanceInfoFromCache(coin)\n  }, [coin?.coin_type, tokenBalanceObj, currentAccount?.address])\n\n  return {\n    balanceInfo,\n    getBalanceInfoFromCache,\n    fetchCoinBalance\n  }\n}\n"],"names":["useGetTokenBalance","coin","tokenBalanceObj","useTokenBalanceStore","currentAccount","useAccountStore","fetchCoinBalance","useAccountBalance","getBalanceInfoFromCache","token","info","extractStructTagFromType","totalBalance","balanceFormat","fromDecimalsAmountFix","formatNumber","Decimal","useMemo"],"mappings":"0KASO,SAASA,EAAmBC,EAAc,CACzC,KAAA,CAAE,gBAAAC,CAAgB,EAAIC,EAAqB,EAC3C,CAAE,eAAAC,CAAe,EAAIC,EAAgB,EACrC,CAAE,iBAAAC,CAAiB,EAAIC,EAAkB,EAEzCC,EAA2BC,GAA2C,CAC1E,GAAIA,EAAO,CACD,QAAA,IAAI,yEAA0EP,CAAe,EACrG,MAAMQ,EAAOR,EAAgBS,EAAyBF,EAAM,SAAS,EAAE,YAAY,EAGnF,GAFQ,QAAA,IAAI,8DAA+DC,CAAI,EAE3EA,EAAM,CACR,MAAME,EAAeF,EAAK,aACpBG,EAAgBC,EAAsBF,EAAcH,EAAM,QAAQ,EAAE,SAAS,EAC5E,MAAA,CACL,QAASC,EAAK,aACd,cAAAG,EACA,eAAgBE,EAAaF,EAAe,OAAW,OAAWG,EAAQ,UAAU,EAAE,SAAS,CACjG,CAAA,CAEK,MAAA,CAIX,EAMO,MAAA,CACL,YALkBC,EAAAA,QAAQ,IACnBT,EAAwBP,CAAI,EAClC,CAACA,GAAA,YAAAA,EAAM,UAAWC,EAAiBE,GAAA,YAAAA,EAAgB,OAAO,CAAC,EAI5D,wBAAAI,EACA,iBAAAF,CACF,CACF"}