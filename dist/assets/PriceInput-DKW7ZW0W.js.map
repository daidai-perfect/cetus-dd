{"version":3,"file":"PriceInput-DKW7ZW0W.js","sources":["../../src/components/liquidity/ControlPriceRange/PriceInput.tsx"],"sourcesContent":["import { TickData } from '@/types'\nimport { InputBox } from '@cetus/design'\nimport { d } from '@cetus/utils'\nimport { HStack, Input, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useState } from 'react'\nimport ActionButton from './ActionButton'\n\nexport default function PriceInput({\n  title,\n  perText,\n  data,\n  direct,\n  loading,\n  handleAddPrice,\n  handleSubPrice,\n  setTickDataBasedOnPrice,\n  isFullRange\n}: {\n  title: string\n  perText: string\n  data: Partial<TickData>\n  direct: boolean\n  loading?: boolean\n  handleAddPrice: (tickData: Partial<TickData>) => void\n  handleSubPrice: (tickData: Partial<TickData>) => void\n  setTickDataBasedOnPrice: (data: Partial<TickData>, value: string, direct?: boolean) => void\n  isFullRange?: boolean\n}) {\n  const [inputValue, setInputValue] = useState('')\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value\n    if (value && value.startsWith('-')) {\n      return\n    }\n    if (isAllowed(value) || isAllowed(value.split(',').join(''))) {\n      setInputValue(value)\n    }\n  }\n\n  useEffect(() => {\n    if (data?.pool) {\n      setInputValue((direct ? data.displayPrice : data.displayReversePrice) || '')\n    }\n  }, [data?.tick, data?.pool, direct])\n\n  const handleAdd = useCallback(() => {\n    direct ? handleAddPrice(data) : handleSubPrice(data)\n  }, [direct, data])\n\n  const handleSub = useCallback(() => {\n    direct ? handleSubPrice(data) : handleAddPrice(data)\n  }, [direct, data])\n\n  const handleOnBlur = useCallback(() => {\n    let value\n    if (!inputValue) {\n      value = (direct ? data.displayPrice : data.displayReversePrice) || ''\n      setInputValue(value)\n      return\n    }\n    try {\n      setTickDataBasedOnPrice(data, direct ? inputValue : d(1).div(inputValue).toString(), direct)\n    } catch (error) {\n      setTickDataBasedOnPrice(data, inputValue, direct)\n    }\n  }, [inputValue, data, direct])\n  const isAllowed = (value: string) => {\n    // 允许空字符串、数字、小数或∞\n    return value === '' || /^-?\\d*\\.?\\d*$/.test(value) || value === '∞'\n  }\n\n  return (\n    <InputBox borderRadius=\"12px\" p=\"12px\">\n      <HStack flex=\"1\" justify=\"space-between\">\n        {isFullRange ? <Stack /> : <ActionButton type=\"Sub\" onClick={handleSub} disabled={inputValue === '0' || isFullRange} />}\n        <VStack>\n          <Text fontSize=\"12px\" color=\"primary_gray\">\n            {title}\n          </Text>\n          {loading ? (\n            <Skeleton w=\"100px\" h=\"14px\" />\n          ) : (\n            <Input\n              value={inputValue}\n              onChange={handleChange}\n              placeholder=\"0.0\"\n              style={{\n                width: 'calc(100% - 8px)',\n                background: 'none',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                opacity: 1,\n                outline: 'none',\n                color: 'var(--chakra-colors-text_caption)',\n                fontSize: '14px',\n                height: '14px',\n                lineHeight: '14px',\n                textAlign: 'center',\n                fontWeight: '500'\n              }}\n              onBlur={handleOnBlur}\n            />\n          )}\n\n          <Text fontSize=\"12px\" color=\"primary_gray\">\n            {perText}\n          </Text>\n        </VStack>\n\n        {isFullRange ? <Stack /> : <ActionButton type=\"Add\" onClick={handleAdd} disabled={inputValue === '∞' || isFullRange} />}\n      </HStack>\n    </InputBox>\n  )\n}\n"],"names":["PriceInput","title","perText","data","direct","loading","handleAddPrice","handleSubPrice","setTickDataBasedOnPrice","isFullRange","inputValue","setInputValue","useState","handleChange","event","value","isAllowed","useEffect","handleAdd","useCallback","handleSub","handleOnBlur","d","jsx","InputBox","jsxs","HStack","Stack","ActionButton","VStack","Text","Skeleton","Input"],"mappings":"6NAOA,SAAwBA,EAAW,CACjC,MAAAC,EACA,QAAAC,EACA,KAAAC,EACA,OAAAC,EACA,QAAAC,EACA,eAAAC,EACA,eAAAC,EACA,wBAAAC,EACA,YAAAC,CACF,EAUG,CACD,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAE,EAEzCC,EAAgBC,GAA+C,CAC7D,MAAAC,EAAQD,EAAM,OAAO,MACvBC,GAASA,EAAM,WAAW,GAAG,IAG7BC,EAAUD,CAAK,GAAKC,EAAUD,EAAM,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC,IACzDJ,EAAcI,CAAK,CAEvB,EAEAE,EAAAA,UAAU,IAAM,CACVd,GAAA,MAAAA,EAAM,MACRQ,GAAeP,EAASD,EAAK,aAAeA,EAAK,sBAAwB,EAAE,CAC7E,EACC,CAACA,GAAA,YAAAA,EAAM,KAAMA,GAAA,YAAAA,EAAM,KAAMC,CAAM,CAAC,EAE7B,MAAAc,EAAYC,EAAAA,YAAY,IAAM,CAClCf,EAASE,EAAeH,CAAI,EAAII,EAAeJ,CAAI,CAAA,EAClD,CAACC,EAAQD,CAAI,CAAC,EAEXiB,EAAYD,EAAAA,YAAY,IAAM,CAClCf,EAASG,EAAeJ,CAAI,EAAIG,EAAeH,CAAI,CAAA,EAClD,CAACC,EAAQD,CAAI,CAAC,EAEXkB,EAAeF,EAAAA,YAAY,IAAM,CACjC,IAAAJ,EACJ,GAAI,CAACL,EAAY,CACfK,GAASX,EAASD,EAAK,aAAeA,EAAK,sBAAwB,GACnEQ,EAAcI,CAAK,EACnB,MAAA,CAEE,GAAA,CACsBP,EAAAL,EAAMC,EAASM,EAAaY,EAAE,CAAC,EAAE,IAAIZ,CAAU,EAAE,SAAS,EAAGN,CAAM,OAC7E,CACUI,EAAAL,EAAMO,EAAYN,CAAM,CAAA,CAEjD,EAAA,CAACM,EAAYP,EAAMC,CAAM,CAAC,EACvBY,EAAaD,GAEVA,IAAU,IAAM,gBAAgB,KAAKA,CAAK,GAAKA,IAAU,IAIhE,OAAAQ,EAAAA,IAACC,EAAS,CAAA,aAAa,OAAO,EAAE,OAC9B,SAAAC,EAAAA,KAACC,EAAO,CAAA,KAAK,IAAI,QAAQ,gBACtB,SAAA,CAAAjB,EAAec,EAAA,IAAAI,EAAA,CAAM,CAAA,EAAKJ,EAAAA,IAACK,EAAa,CAAA,KAAK,MAAM,QAASR,EAAW,SAAUV,IAAe,KAAOD,EAAa,SACpHoB,EACC,CAAA,SAAA,CAAAN,MAACO,EAAK,CAAA,SAAS,OAAO,MAAM,eACzB,SACH7B,EAAA,EACCI,EACEkB,EAAAA,IAAAQ,EAAA,CAAS,EAAE,QAAQ,EAAE,MAAO,CAAA,EAE7BR,EAAA,IAACS,EAAA,CACC,MAAOtB,EACP,SAAUG,EACV,YAAY,MACZ,MAAO,CACL,MAAO,mBACP,WAAY,OACZ,WAAY,SACZ,SAAU,SACV,aAAc,WACd,QAAS,EACT,QAAS,OACT,MAAO,oCACP,SAAU,OACV,OAAQ,OACR,WAAY,OACZ,UAAW,SACX,WAAY,KACd,EACA,OAAQQ,CAAA,CACV,QAGDS,EAAK,CAAA,SAAS,OAAO,MAAM,eACzB,SACH5B,CAAA,CAAA,CAAA,EACF,EAECO,EAAcc,EAAA,IAACI,EAAM,CAAA,CAAA,EAAMJ,EAAAA,IAAAK,EAAA,CAAa,KAAK,MAAM,QAASV,EAAW,SAAUR,IAAe,KAAOD,CAAa,CAAA,CAAA,CAAA,CACvH,CACF,CAAA,CAEJ"}