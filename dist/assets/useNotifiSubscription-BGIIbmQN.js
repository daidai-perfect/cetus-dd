import{an as _,aD as I,d as v,a1 as D,bR as O}from"./index-CukE8cTn.js";import{a as A}from"./useXCetusHelper-BnGoSkj6.js";import{a as j}from"./useCurrentPos-Bey-IjFU.js";function k(){const{fetchOwnerVeNFT:b}=A(),{showCommonToast:s}=_(),{notifiSources:l}=I();return{createNotifiSubscriptionVerify:async()=>{try{const i=await b();if(i!=null&&i.xcetus_balance){if(v(i.xcetus_balance).div(Math.pow(10,9)).lessThan(1e3))return s("Price alerts are currently open to users who hold 1000+ xCETUS.","rejected"),!1}else return s("Unable to fetch xCetus information.","rejected"),!1;return l.length>=5?(s("Price alerts can only be enabled for up to 5 positions for an account at the same time.","rejected"),!1):!0}catch(i){return console.error("ğŸš€ ~ createNotifiSubscriptionVerify ~ error:",i),s("An error occurred while verifying the subscription.","rejected"),!1}},getPositionNotifiStatus:(i,S)=>{try{const n=l.find(N=>{const{pool_address:g,position_index:p}=JSON.parse(N.blockchainAddress);return g===i&&p===S});return{isSubscription:!!n,alertID:(n==null?void 0:n.alertID)||""}}catch(n){return console.error("ğŸš€ ~ getPositionNotifiStatus ~ error:",n),{isSubscription:!1,alertID:""}}}}}function C(){const{getCurrentPosByPosId:b}=j(),{currentAccount:s}=D(),{createNotifiAlert:l,deleteNotifiAlerts:y}=O(),{setIsChecked:x,setNotifiSubscriptionLoading:i,notifiClient:S}=I(),{createNotifiSubscriptionVerify:n,getPositionNotifiStatus:N}=k(),g=async o=>{if(i(!0),!await n())return x(!1),!1;const{subscriptionSource:e,position:c,posIndex:d,events:u}=o;console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:30 ~ notifiSubscription ~ notifiSubscriptionParams:",o);try{if(e=="PositionDetail")p(String(c),String(d));else{const a=u.filter(h=>h.type.indexOf("OpenPositionEvent")>-1)[0],t=u.filter(h=>h.type.indexOf("DepositEvent")>-1)[0],{position:f,pool:w}=a.parsedJson,P=t?t.parsedJson.wrapped_position_id:a.parsedJson.position,m=await b(s==null?void 0:s.address,P);m&&(console.log("ğŸš€ğŸš€ğŸš€ ~ file: useNotifiSubscription.ts:36 ~ notifiSubscription ~ currentPosInfo.index:",m.index),p(f,String(m.index)))}}catch(a){i(!1),console.log("ğŸš€ğŸš€ğŸš€ ~ file: useNotifiSubscription.ts:45 ~ notifiSubscription ~ error:",a)}},p=async(o,r)=>{l(o,r)},T=async(o,r,e)=>{console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:57 ~ notifiUnSubscription ~ posId:",o),console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:58 ~ notifiUnSubscription ~ posIndex:",e);const{alertID:c}=N(o,String(e));c&&y(c)};return{notifiSubscription:g,notifiUnSubscription:T,getNotifiPositionTransfer:(o,r,e)=>{if(r&&r.userState&&r.userState.status=="authenticated"){console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:62 ~ getNotifiPositionTransfer ~ notifiSources:",e);for(let c=0;c<e.length;c++){const{pool_address:d,position_index:u}=JSON.parse(e[c].blockchainAddress);let a=!1,t;for(let f=0;f<o.length;f++){const{posId:w,index:P}=o[f];d==w&&Number(P)==Number(u)&&(a=!0),t={pool_address:d,position_index:u,clmmPool:o[f].clmmPool}}a||T(t==null?void 0:t.pool_address,t==null?void 0:t.clmmPool,t==null?void 0:t.position_index)}}console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ notifiSources:",e),console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ posBaseList:",o),console.log("ğŸš€ğŸš€ğŸš€ ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ notifiClient:",r.us)}}}export{k as a,C as u};
