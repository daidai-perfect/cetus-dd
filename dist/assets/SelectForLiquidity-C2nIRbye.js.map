{"version":3,"file":"SelectForLiquidity-C2nIRbye.js","sources":["../../src/pages/SelectForLiquidity.tsx"],"sourcesContent":["import SelectPool from '@/components/liquidity/SelectPool'\nimport SelectTokenAndFeeConfirm from '@/components/liquidity/SelectTokenAndFeeConfirm'\nimport useCreatePoolHelper from '@/hooks/create-pool/useCreatePoolHelper'\nimport useQuoteWhiteTokenList from '@/hooks/create-pool/useQuoteWhiteTokenList'\nimport { isTrustedToken } from '@/utils'\nimport { defaultFeeList, FeeTier } from '@cetus/design/src/components/common/FeeTierSelect'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { BackButton } from '@cetus/ui-kit'\nimport { useDisclosure, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nfunction SelectForLiquidity() {\n  const navigate = useNavigate()\n  const [baseToken, setBaseToken] = useState<Token | undefined>()\n  const [quoteToken, setQuoteToken] = useState<Token | undefined>(envConfigs.sui_coin)\n  const [feeTier, setFeeTier] = useState<FeeTier | undefined>(undefined)\n  const [feeTierList, setFeeTierList] = useState<FeeTier[]>([])\n  const { fetchFeeTierList } = useCreatePoolHelper()\n  const { quoteWhiteTokenList } = useQuoteWhiteTokenList()\n\n  useEffect(() => {\n    if (baseToken && quoteToken) {\n      fetchFeeTierList(baseToken.coin_type, quoteToken.coin_type).then(res => {\n        setFeeTierList(\n          res?.map(item => {\n            const title = res.find(feeTier => feeTier.feeRate === item.feeRate)?.title || item.title\n            return {\n              ...item,\n              disabled:\n                title === 'Not Created' && !isTrustedToken(baseToken, quoteWhiteTokenList) && !isTrustedToken(quoteToken, quoteWhiteTokenList)\n                  ? true\n                  : false\n            }\n          })\n        )\n      })\n    } else {\n      setFeeTierList(\n        defaultFeeList?.map(item => ({\n          ...item,\n          title: ''\n        }))\n      )\n    }\n  }, [baseToken?.coin_type, quoteToken?.coin_type])\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const onContinue = () => {\n    if (feeTier) {\n      if (feeTier.poolAddress) {\n        navigate(`/liquidity?tab=deposit&poolAddress=${feeTier.poolAddress}`)\n      } else {\n        onOpen()\n      }\n    }\n  }\n\n  const onConfirm = () => {\n    if (baseToken && quoteToken && feeTier) {\n      // create pool\n      navigate(`/create-pool/${baseToken?.coin_type}/${quoteToken?.coin_type}/${feeTier?.feeRate}`)\n    }\n  }\n\n  return (\n    <>\n      <VStack w=\"524px\" align=\"flex-start\" gap=\"20px\" mt=\"20px\">\n        <BackButton text=\"Pools\" onClick={() => navigate('/pools')} />\n        <SelectPool\n          title=\"Select pair\"\n          description=\"Select the token you want to provide liquidity for.\"\n          onContinue={onContinue}\n          baseToken={baseToken}\n          onBaseTokenChange={token => setBaseToken(token)}\n          quoteToken={quoteToken}\n          onQuoteTokenChange={token => setQuoteToken(token)}\n          feeTier={feeTier}\n          onFeeTierChange={fee => setFeeTier(fee)}\n          fromSource=\"addLiquidity\"\n          feeTierList={feeTierList}\n        />\n      </VStack>\n      {isOpen && (\n        <SelectTokenAndFeeConfirm\n          title=\"This Pool has not been initialized\"\n          subTitle=\"Do you want to initialize it?\"\n          btnText=\"Initialized Pool\"\n          isOpen={isOpen}\n          onClose={onClose}\n          onConfirm={onConfirm}\n        />\n      )}\n    </>\n  )\n}\n\nexport default SelectForLiquidity\n"],"names":["SelectForLiquidity","navigate","useNavigate","baseToken","setBaseToken","useState","quoteToken","setQuoteToken","envConfigs","feeTier","setFeeTier","feeTierList","setFeeTierList","fetchFeeTierList","useCreatePoolHelper","quoteWhiteTokenList","useQuoteWhiteTokenList","useEffect","res","item","title","_a","isTrustedToken","defaultFeeList","isOpen","onOpen","onClose","useDisclosure","onContinue","onConfirm","jsxs","Fragment","VStack","jsx","BackButton","SelectPool","token","fee","SelectTokenAndFeeConfirm"],"mappings":"o7BAYA,SAASA,IAAqB,CAC5B,MAAMC,EAAWC,EAAY,EACvB,CAACC,EAAWC,CAAY,EAAIC,WAA4B,EACxD,CAACC,EAAYC,CAAa,EAAIF,EAAAA,SAA4BG,EAAW,QAAQ,EAC7E,CAACC,EAASC,CAAU,EAAIL,EAAAA,SAA8B,MAAS,EAC/D,CAACM,EAAaC,CAAc,EAAIP,EAAAA,SAAoB,CAAA,CAAE,EACtD,CAAE,iBAAAQ,CAAiB,EAAIC,EAAoB,EAC3C,CAAE,oBAAAC,CAAoB,EAAIC,EAAuB,EAEvDC,EAAAA,UAAU,IAAM,OACVd,GAAaG,EACfO,EAAiBV,EAAU,UAAWG,EAAW,SAAS,EAAE,KAAYY,GAAA,CACtEN,EACEM,GAAA,YAAAA,EAAK,IAAYC,GAAA,OACT,MAAAC,IAAQC,EAAAH,EAAI,KAAKT,GAAWA,EAAQ,UAAYU,EAAK,OAAO,IAApD,YAAAE,EAAuD,QAASF,EAAK,MAC5E,MAAA,CACL,GAAGA,EACH,SACEC,IAAU,eAAiB,CAACE,EAAenB,EAAWY,CAAmB,GAAK,CAACO,EAAehB,EAAYS,CAAmB,CAGjI,CACD,EACH,CAAA,CACD,EAEDH,GACES,EAAAE,IAAA,YAAAF,EAAgB,IAAaF,IAAA,CAC3B,GAAGA,EACH,MAAO,EAAA,GAEX,GAED,CAAChB,GAAA,YAAAA,EAAW,UAAWG,GAAA,YAAAA,EAAY,SAAS,CAAC,EAEhD,KAAM,CAAE,OAAAkB,EAAQ,OAAAC,EAAQ,QAAAC,CAAA,EAAYC,EAAc,EAE5CC,EAAa,IAAM,CACnBnB,IACEA,EAAQ,YACDR,EAAA,sCAAsCQ,EAAQ,WAAW,EAAE,EAE7DgB,EAAA,EAGb,EAEMI,EAAY,IAAM,CAClB1B,GAAaG,GAAcG,GAEpBR,EAAA,gBAAgBE,GAAA,YAAAA,EAAW,SAAS,IAAIG,GAAA,YAAAA,EAAY,SAAS,IAAIG,GAAA,YAAAA,EAAS,OAAO,EAAE,CAEhG,EAEA,OAEIqB,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACD,EAAAA,KAAAE,EAAA,CAAO,EAAE,QAAQ,MAAM,aAAa,IAAI,OAAO,GAAG,OACjD,SAAA,CAAAC,MAACC,GAAW,KAAK,QAAQ,QAAS,IAAMjC,EAAS,QAAQ,EAAG,EAC5DgC,EAAA,IAACE,EAAA,CACC,MAAM,cACN,YAAY,sDACZ,WAAAP,EACA,UAAAzB,EACA,kBAA4BiC,GAAAhC,EAAagC,CAAK,EAC9C,WAAA9B,EACA,mBAA6B8B,GAAA7B,EAAc6B,CAAK,EAChD,QAAA3B,EACA,gBAAwB4B,GAAA3B,EAAW2B,CAAG,EACtC,WAAW,eACX,YAAA1B,CAAA,CAAA,CACF,EACF,EACCa,GACCS,EAAA,IAACK,EAAA,CACC,MAAM,qCACN,SAAS,gCACT,QAAQ,mBACR,OAAAd,EACA,QAAAE,EACA,UAAAG,CAAA,CAAA,CACF,EAEJ,CAEJ"}