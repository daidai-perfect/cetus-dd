{"version":3,"file":"DepositMode-BQi0l_nR.js","sources":["../../src/components/vaults/modal/DepositMode.tsx"],"sourcesContent":["import vaultInterface from '@/hooks/vault-interface'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useGlobalStore from '@/store/common/global'\nimport { VaultApiInfo } from '@/types'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport { useInterval } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { v4 } from 'uuid'\nimport AvailableCapacity from '../detail/AvailableCapacity'\nimport { VaultsAddResult } from '../detail/VaultsAddResult'\n\ntype VaultDepositModeProps = {\n  isUnstableVault: boolean\n  displayTokenA?: Token | undefined\n  displayTokenB?: Token | undefined\n  vaultId: string\n  isReverse: boolean\n  assetAction: string\n  isCheckedZAP: boolean\n  currentActionTab: string\n  autoRefresh: () => void\n  apiVaultInfo: VaultApiInfo\n  quoteCoin?: Token\n  maxCapNum?: string\n}\nexport default function VaultDepositMode(props: VaultDepositModeProps) {\n  const {\n    isUnstableVault,\n    displayTokenA,\n    displayTokenB,\n    vaultId,\n    isReverse,\n    assetAction,\n    isCheckedZAP,\n    autoRefresh,\n    apiVaultInfo,\n    quoteCoin,\n    maxCapNum\n  } = props\n  const useVaultsAdd = vaultInterface.useVaultsAdd(isUnstableVault)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(isUnstableVault)\n  const useGetContractVaultInfo = vaultInterface.useGetContractVaultInfo(isUnstableVault)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const {\n    contractVault,\n    lpTokenInfo,\n    fetchClmmPoolFromContract,\n    fetchVaultInfoFromContract,\n    gtAumLimit,\n    hardCapUSD,\n    vaultTvl,\n    depositRatio,\n    refreshPythPrice,\n    calculateVaultTvlLoading\n  } = useGetContractVaultInfo(\n    apiVaultInfo?.vaultsId,\n    apiVaultInfo?.clmmPoolAddress,\n    apiVaultInfo?.tokenA,\n    apiVaultInfo?.tokenB,\n    apiVaultInfo?.isReverse,\n    true\n  )\n\n  // 初始化add hook时区分 传入tokenA,B按照合约方向\n  const {\n    amountInputA,\n    amountInputB,\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    overHardtop,\n    zapNumError,\n    calculateLpLoading,\n    inputTotalValueError,\n    percentage,\n    setPercentage,\n    setIsSlider,\n    debouncedPreCalculateDepositValue,\n    isSlider,\n    setUuid\n  } = useVaultsAdd(\n    assetAction,\n    autoRefresh,\n    vaultId,\n    isReverse ? displayTokenB : displayTokenA,\n    isReverse ? displayTokenA : displayTokenB,\n    isReverse,\n    isCheckedZAP,\n    hardCapUSD,\n    vaultTvl,\n    gtAumLimit\n  )\n\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    true,\n    amountInputA,\n    amountInputB,\n    fixAmountA,\n    balanceInfoA?.balanceFormat,\n    balanceInfoB?.balanceFormat,\n    displayTokenA,\n    displayTokenB,\n    zapNumError,\n    calculateResult,\n    overHardtop,\n    inputTotalValueError\n  )\n\n  const { vaultsSlippage } = useGlobalStore()\n\n  useEffect(() => {\n    if (apiVaultInfo) {\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n  }, [apiVaultInfo?.clmmPoolAddress])\n\n  useEffect(() => {\n    if (vaultId) {\n      fetchVaultInfoFromContract(vaultId, true)\n    }\n  }, [vaultId])\n\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(Number(vaultsSlippage), calculateResult?.ft_amount, false)\n  // 占比 非稳 lp_token_treasury 稳定total_supply 分别表示池子总lp_token数量\n  const { lpRate } = useCalculateChangeLpRate(\n    calculateResult?.ft_amount,\n    isUnstableVault ? contractVault?.lp_token_treasury : contractVault?.total_supply\n  )\n\n  const { isApp } = useWindowWidth()\n\n  const [refreshInterval, setRefreshInterval] = useState(10)\n\n  useInterval({\n    interval: refreshInterval * 1000,\n    callback: () => {\n      refreshPythPrice()\n      if (isSlider) {\n        const uuid = v4()\n        setUuid(uuid)\n        debouncedPreCalculateDepositValue(percentage, uuid)\n      }\n    }\n  })\n\n  return (\n    <>\n      <Box w=\"100%\" position=\"relative\">\n        <TradeInputGroup\n          onClick={() => {}}\n          from={{\n            wrapStyle: { h: '108px' },\n            balance: balanceInfoA?.balanceFormat || '',\n            value: amountInputA,\n            amountValue: amountInputA && amountValueA,\n            loading: (isReverse ? fixAmountA : !fixAmountA) && preCalculateLoading && !isCheckedZAP,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n            onChange: value => {\n              setRefreshInterval(10)\n              handleAmountInputChange(value, !isReverse, true, amountInputB)\n            },\n            selectable: false,\n            placeholder: '0.0',\n            token: displayTokenA,\n            onFocusChange: (focus: boolean) => {}\n          }}\n          to={{\n            wrapStyle: { h: '108px' },\n            balance: balanceInfoB?.balanceFormat || '',\n            value: amountInputB,\n            amountValue: amountInputB && amountValueB,\n            loading: (isReverse ? !fixAmountA : fixAmountA) && preCalculateLoading && !isCheckedZAP,\n            onFocusChange: (focus: boolean) => {},\n            onChange: value => {\n              setRefreshInterval(10)\n              handleAmountInputChange(value, isReverse, true, amountInputA)\n            },\n            selectable: false,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n            placeholder: '0.0',\n            token: displayTokenB\n          }}\n          iconParams={{\n            xlinkHref: '#icon-icon_add',\n            svgFill: 'text_caption',\n            iconCursor: 'default'\n          }}\n          iconHover={false}\n        />\n      </Box>\n\n      {zapNumError && percentage > 0 && (amountInputA || amountInputB) ? (\n        <VStack w=\"100%\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\" gap=\"20px\">\n          <Text\n            color=\"primary_yellow\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_yellow_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            Single-asset deposit can't be higher than $10,000 at a time.\n          </Text>\n        </VStack>\n      ) : null}\n\n      <Button\n        width=\"100%\"\n        height=\"52px\"\n        borderRadius=\"12px\"\n        marginBottom=\"8px\"\n        fontWeight=\"500\"\n        fontSize={zapNumError ? (isApp ? '12px' : '15px') : '16px'}\n        isLoading={preCalculateLoading}\n        disabled={btnDisabled || preCalculateLoading || (currentAccount?.address && (gtAumLimit || overHardtop))}\n        onClick={() => (!currentAccount?.address ? onWalletModal(true) : doAddAction())}\n      >\n        {btnText || (isCheckedZAP ? 'Zap In' : 'Deposit')}\n      </Button>\n\n      {apiVaultInfo?.category == 'haedal' && (\n        <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"16px\" mb=\"8px\">\n          <AvailableCapacity\n            depositRatio={depositRatio}\n            percentage={percentage}\n            hardCapUSD={hardCapUSD}\n            vaultTvl={vaultTvl}\n            calculateVaultTvlLoading={calculateVaultTvlLoading}\n            quoteCoin={quoteCoin}\n            maxCapNum={maxCapNum}\n            gtAumLimit={gtAumLimit}\n            onChange={value => {\n              setIsSlider(true)\n              setPercentage(value)\n              const uuid = v4()\n              setUuid(uuid)\n              debouncedPreCalculateDepositValue(value, uuid)\n              setRefreshInterval(10)\n            }}\n          />\n        </Block>\n      )}\n\n      {inputTotalValueError && (\n        <VStack w=\"100%\" alignItems=\"start\">\n          <Text\n            color=\"primary_red\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_red_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            The input is too small. Zap mode is not available.\n          </Text>\n        </VStack>\n      )}\n\n      {/* 展示计算结果 */}\n      {(calculateResult || showOnlySideTips) &&\n        !inputTotalValueError &&\n        ((assetAction === 'both' && isCheckedZAP && amountInputA && amountInputB) || assetAction !== 'both') && (\n          <VStack w=\"100%\" pb=\"20px\" alignItems=\"start\" gap=\"0\">\n            {assetAction !== 'both' && showOnlySideTips && (\n              <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\" pb={calculateResult ? '20px' : '0'}>\n                {showOnlySideTips}\n              </Text>\n            )}\n            {calculateResult && (\n              <VaultsAddResult\n                amountLimit={amountLimit}\n                inputTotalValue={inputTotalValue}\n                preCalculateLoading={preCalculateLoading}\n                calculateLpLoading={calculateLpLoading}\n                lpRate={lpRate}\n                lpDecimals={lpTokenInfo?.decimals}\n                poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n                labelColor=\"primary_gray\"\n              />\n            )}\n          </VStack>\n        )}\n    </>\n  )\n}\n"],"names":["VaultDepositMode","props","isUnstableVault","displayTokenA","displayTokenB","vaultId","isReverse","assetAction","isCheckedZAP","autoRefresh","apiVaultInfo","quoteCoin","maxCapNum","useVaultsAdd","vaultInterface","useAddButtonStatus","useGetContractVaultInfo","currentAccount","onWalletModal","useAccountStore","contractVault","lpTokenInfo","fetchClmmPoolFromContract","fetchVaultInfoFromContract","gtAumLimit","hardCapUSD","vaultTvl","depositRatio","refreshPythPrice","calculateVaultTvlLoading","amountInputA","amountInputB","balanceInfoA","balanceInfoB","amountValueA","amountValueB","preCalculateLoading","fixAmountA","inputTotalValue","handleAmountInputChange","calculateResult","showOnlySideTips","doAddAction","reCalculateResult","overHardtop","zapNumError","calculateLpLoading","inputTotalValueError","percentage","setPercentage","setIsSlider","debouncedPreCalculateDepositValue","isSlider","setUuid","btnText","btnDisabled","vaultsSlippage","useGlobalStore","useEffect","amountLimit","useCalculateSlippageAmount","lpRate","useCalculateChangeLpRate","isApp","useWindowWidth","refreshInterval","setRefreshInterval","useState","useInterval","uuid","v4","jsxs","Fragment","jsx","Box","TradeInputGroup","value","focus","VStack","Text","Button","Block","AvailableCapacity","VaultsAddResult"],"mappings":"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"}