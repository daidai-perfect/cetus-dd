{"version":3,"file":"RefreshButton-CJmC-Yhv.js","sources":["../../../utils/src/interval.ts","../../../ui-kit/src/components/RefreshButton.tsx"],"sourcesContent":["type MockIntervalReturnType = {\n  clear: () => void\n}\n\nexport function mockInterval<T extends any[]>(\n  callback: (...args: T) => Promise<void> | void, // 支持异步函数\n  delay: number,\n  ...args: T // 接收任意数量的参数\n): MockIntervalReturnType {\n  let timerId: ReturnType<typeof setTimeout> | null = null // 使用 Node.js 的 Timeout 类型\n\n  const execute = async () => {\n    try {\n      await callback(...args) // 调用异步的回调\n    } catch (err) {\n      console.error('Callback error:', err)\n      clearTimeout(timerId!) // 在错误时清除定时器\n    }\n    timerId = setTimeout(execute, delay) // 递归调用 setTimeout\n  }\n\n  timerId = setTimeout(execute, delay)\n\n  return {\n    clear: () => {\n      if (timerId) {\n        clearTimeout(timerId)\n      }\n    }\n  }\n}\n\n// 使用示例\n// const asyncInterval = mockInterval(\n//   async (param: string) => {\n//     console.log(param)\n//     // 假设 fetchData 是异步函数\n//     await fetchData() // 异步操作\n//   },\n//   2000,\n//   'Async Hello' // 参数\n// )\n","import { cancelBubble, mockInterval } from '@cetus/utils'\nimport { Box, Center, CenterProps, Flex, FlexProps, Spinner } from '@chakra-ui/react'\nimport { useEffect, useRef, useState } from 'react'\nimport Icon, { VariantType } from './Icon'\n\ninterface RefreshButtonProps extends CenterProps {\n  variant?: VariantType\n  handleRefresh: (isManual: boolean) => void\n  isAutoRefresh?: boolean\n  refreshInterval?: number // 自动刷新间隔时间, 单位秒\n  innerStyle?: FlexProps\n  isRefreshed?: boolean\n}\n\nexport default function RefreshButton(props: RefreshButtonProps) {\n  const { variant, handleRefresh, isAutoRefresh, refreshInterval, innerStyle = {}, isRefreshed, ...rest } = props\n  const [moveTransform, setMoveTransform] = useState(false)\n  const [rotation, setRotation] = useState(0)\n  const timeoutTimer = useRef<NodeJS.Timeout | null>(null)\n  const intervalTimer = useRef<any>(null)\n  const onRefresh = async (isManual: boolean) => {\n    setRotation(360)\n    setMoveTransform(true)\n    try {\n      await handleRefresh(isManual)\n    } catch (error) {\n      console.error('RefreshButton refresh error', error)\n      setMoveTransform(false)\n      setRotation(0)\n    }\n  }\n  const startTimer = () => {\n    if (intervalTimer.current) {\n      intervalTimer.current()\n    }\n    if (isAutoRefresh && refreshInterval) {\n      const { clear } = mockInterval(() => {\n        onRefresh(false)\n      }, refreshInterval * 1000)\n      intervalTimer.current = clear\n    }\n  }\n\n  const handleClick = async e => {\n    cancelBubble(e)\n    if (intervalTimer.current) {\n      intervalTimer.current()\n    }\n    await onRefresh(true)\n    startTimer()\n  }\n\n  useEffect(() => {\n    startTimer()\n\n    return () => {\n      if (timeoutTimer.current) {\n        clearTimeout(timeoutTimer.current)\n        timeoutTimer.current = null\n      }\n      if (intervalTimer.current) {\n        intervalTimer.current()\n        intervalTimer.current = null\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (typeof isRefreshed == 'boolean') {\n      if (isRefreshed) {\n        setMoveTransform(false)\n        setRotation(0)\n      }\n    } else {\n      if (moveTransform) {\n        timeoutTimer.current = setTimeout(() => {\n          setMoveTransform(false)\n          setRotation(0)\n        }, 1000)\n      }\n    }\n  }, [moveTransform, isRefreshed])\n\n  return (\n    // <Tooltip label={<Text fontSize=\"12px\">Refresh</Text>} aria-label=\"Yield\">\n    <Center\n      h=\"40px\"\n      w=\"40px\"\n      borderRadius=\"8px\"\n      bg={innerStyle?.bg ? innerStyle?.bg : 'bg_secondary'}\n      border=\"1px solid\"\n      borderColor=\"border\"\n      cursor=\"pointer\"\n      onClick={handleClick}\n      _hover={{\n        color: 'text_caption',\n        svg: {\n          fill: 'text_caption'\n        }\n      }}\n      {...rest}\n    >\n      <Flex w=\"24px\" h=\"24px\" bg=\"checked_bg\" alignItems=\"center\" justifyContent=\"center\" borderRadius=\"4px\" {...innerStyle}>\n        <Box>\n          {moveTransform ? (\n            <Flex w=\"20px\" h=\"20px\" alignItems=\"center\" justifyContent=\"center\">\n              <Spinner\n                w=\"16px\"\n                h=\"16px\"\n                speed=\"1.2s\"\n                sx={{\n                  color: 'text_paragraph'\n                }}\n              />\n            </Flex>\n          ) : (\n            <Box>\n              <Icon xlinkHref=\"#icon-icon_refresh\" variant=\"gray\" />\n            </Box>\n          )}\n        </Box>\n      </Flex>\n    </Center>\n    // </Tooltip>\n  )\n}\n"],"names":["mockInterval","callback","delay","args","timerId","execute","err","RefreshButton","props","variant","handleRefresh","isAutoRefresh","refreshInterval","innerStyle","isRefreshed","rest","moveTransform","setMoveTransform","useState","rotation","setRotation","timeoutTimer","useRef","intervalTimer","onRefresh","isManual","error","startTimer","clear","handleClick","e","cancelBubble","useEffect","jsx","Center","Flex","Box","Spinner","Icon"],"mappings":"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"}