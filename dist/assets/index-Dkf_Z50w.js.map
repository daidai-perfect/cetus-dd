{"version":3,"file":"index-Dkf_Z50w.js","sources":["../../../../node_modules/.pnpm/@tanstack+virtual-core@3.13.6/node_modules/@tanstack/virtual-core/dist/esm/utils.js","../../../../node_modules/.pnpm/@tanstack+virtual-core@3.13.6/node_modules/@tanstack/virtual-core/dist/esm/index.js","../../../../node_modules/.pnpm/@tanstack+react-virtual@3.13.6_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tanstack/react-virtual/dist/esm/index.js"],"sourcesContent":["function memo(getDeps, fn, opts) {\n  let deps = opts.initialDeps ?? [];\n  let result;\n  function memoizedFunction() {\n    var _a, _b, _c, _d;\n    let depTime;\n    if (opts.key && ((_a = opts.debug) == null ? void 0 : _a.call(opts))) depTime = Date.now();\n    const newDeps = getDeps();\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => deps[index] !== dep);\n    if (!depsChanged) {\n      return result;\n    }\n    deps = newDeps;\n    let resultTime;\n    if (opts.key && ((_b = opts.debug) == null ? void 0 : _b.call(opts))) resultTime = Date.now();\n    result = fn(...newDeps);\n    if (opts.key && ((_c = opts.debug) == null ? void 0 : _c.call(opts))) {\n      const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;\n      const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;\n      const resultFpsPercentage = resultEndTime / 16;\n      const pad = (str, num) => {\n        str = String(str);\n        while (str.length < num) {\n          str = \" \" + str;\n        }\n        return str;\n      };\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n          0,\n          Math.min(120 - 120 * resultFpsPercentage, 120)\n        )}deg 100% 31%);`,\n        opts == null ? void 0 : opts.key\n      );\n    }\n    (_d = opts == null ? void 0 : opts.onChange) == null ? void 0 : _d.call(opts, result);\n    return result;\n  }\n  memoizedFunction.updateDeps = (newDeps) => {\n    deps = newDeps;\n  };\n  return memoizedFunction;\n}\nfunction notUndefined(value, msg) {\n  if (value === void 0) {\n    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : \"\"}`);\n  } else {\n    return value;\n  }\n}\nconst approxEqual = (a, b) => Math.abs(a - b) < 1;\nconst debounce = (targetWindow, fn, ms) => {\n  let timeoutId;\n  return function(...args) {\n    targetWindow.clearTimeout(timeoutId);\n    timeoutId = targetWindow.setTimeout(() => fn.apply(this, args), ms);\n  };\n};\nexport {\n  approxEqual,\n  debounce,\n  memo,\n  notUndefined\n};\n//# sourceMappingURL=utils.js.map\n","import { debounce, memo, notUndefined, approxEqual } from \"./utils.js\";\nconst defaultKeyExtractor = (index) => index;\nconst defaultRangeExtractor = (range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0);\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1);\n  const arr = [];\n  for (let i = start; i <= end; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\nconst observeElementRect = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const targetWindow = instance.targetWindow;\n  if (!targetWindow) {\n    return;\n  }\n  const handler = (rect) => {\n    const { width, height } = rect;\n    cb({ width: Math.round(width), height: Math.round(height) });\n  };\n  handler(element.getBoundingClientRect());\n  if (!targetWindow.ResizeObserver) {\n    return () => {\n    };\n  }\n  const observer = new targetWindow.ResizeObserver((entries) => {\n    const run = () => {\n      const entry = entries[0];\n      if (entry == null ? void 0 : entry.borderBoxSize) {\n        const box = entry.borderBoxSize[0];\n        if (box) {\n          handler({ width: box.inlineSize, height: box.blockSize });\n          return;\n        }\n      }\n      handler(element.getBoundingClientRect());\n    };\n    instance.options.useAnimationFrameWithResizeObserver ? requestAnimationFrame(run) : run();\n  });\n  observer.observe(element, { box: \"border-box\" });\n  return () => {\n    observer.unobserve(element);\n  };\n};\nconst addEventListenerOptions = {\n  passive: true\n};\nconst observeWindowRect = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight });\n  };\n  handler();\n  element.addEventListener(\"resize\", handler, addEventListenerOptions);\n  return () => {\n    element.removeEventListener(\"resize\", handler);\n  };\n};\nconst supportsScrollend = typeof window == \"undefined\" ? true : \"onscrollend\" in window;\nconst observeElementOffset = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const targetWindow = instance.targetWindow;\n  if (!targetWindow) {\n    return;\n  }\n  let offset = 0;\n  const fallback = instance.options.useScrollendEvent && supportsScrollend ? () => void 0 : debounce(\n    targetWindow,\n    () => {\n      cb(offset, false);\n    },\n    instance.options.isScrollingResetDelay\n  );\n  const createHandler = (isScrolling) => () => {\n    const { horizontal, isRtl } = instance.options;\n    offset = horizontal ? element[\"scrollLeft\"] * (isRtl && -1 || 1) : element[\"scrollTop\"];\n    fallback();\n    cb(offset, isScrolling);\n  };\n  const handler = createHandler(true);\n  const endHandler = createHandler(false);\n  endHandler();\n  element.addEventListener(\"scroll\", handler, addEventListenerOptions);\n  const registerScrollendEvent = instance.options.useScrollendEvent && supportsScrollend;\n  if (registerScrollendEvent) {\n    element.addEventListener(\"scrollend\", endHandler, addEventListenerOptions);\n  }\n  return () => {\n    element.removeEventListener(\"scroll\", handler);\n    if (registerScrollendEvent) {\n      element.removeEventListener(\"scrollend\", endHandler);\n    }\n  };\n};\nconst observeWindowOffset = (instance, cb) => {\n  const element = instance.scrollElement;\n  if (!element) {\n    return;\n  }\n  const targetWindow = instance.targetWindow;\n  if (!targetWindow) {\n    return;\n  }\n  let offset = 0;\n  const fallback = instance.options.useScrollendEvent && supportsScrollend ? () => void 0 : debounce(\n    targetWindow,\n    () => {\n      cb(offset, false);\n    },\n    instance.options.isScrollingResetDelay\n  );\n  const createHandler = (isScrolling) => () => {\n    offset = element[instance.options.horizontal ? \"scrollX\" : \"scrollY\"];\n    fallback();\n    cb(offset, isScrolling);\n  };\n  const handler = createHandler(true);\n  const endHandler = createHandler(false);\n  endHandler();\n  element.addEventListener(\"scroll\", handler, addEventListenerOptions);\n  const registerScrollendEvent = instance.options.useScrollendEvent && supportsScrollend;\n  if (registerScrollendEvent) {\n    element.addEventListener(\"scrollend\", endHandler, addEventListenerOptions);\n  }\n  return () => {\n    element.removeEventListener(\"scroll\", handler);\n    if (registerScrollendEvent) {\n      element.removeEventListener(\"scrollend\", endHandler);\n    }\n  };\n};\nconst measureElement = (element, entry, instance) => {\n  if (entry == null ? void 0 : entry.borderBoxSize) {\n    const box = entry.borderBoxSize[0];\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? \"inlineSize\" : \"blockSize\"]\n      );\n      return size;\n    }\n  }\n  return Math.round(\n    element.getBoundingClientRect()[instance.options.horizontal ? \"width\" : \"height\"]\n  );\n};\nconst windowScroll = (offset, {\n  adjustments = 0,\n  behavior\n}, instance) => {\n  var _a, _b;\n  const toOffset = offset + adjustments;\n  (_b = (_a = instance.scrollElement) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {\n    [instance.options.horizontal ? \"left\" : \"top\"]: toOffset,\n    behavior\n  });\n};\nconst elementScroll = (offset, {\n  adjustments = 0,\n  behavior\n}, instance) => {\n  var _a, _b;\n  const toOffset = offset + adjustments;\n  (_b = (_a = instance.scrollElement) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {\n    [instance.options.horizontal ? \"left\" : \"top\"]: toOffset,\n    behavior\n  });\n};\nclass Virtualizer {\n  constructor(opts) {\n    this.unsubs = [];\n    this.scrollElement = null;\n    this.targetWindow = null;\n    this.isScrolling = false;\n    this.scrollToIndexTimeoutId = null;\n    this.measurementsCache = [];\n    this.itemSizeCache = /* @__PURE__ */ new Map();\n    this.pendingMeasuredCacheIndexes = [];\n    this.scrollRect = null;\n    this.scrollOffset = null;\n    this.scrollDirection = null;\n    this.scrollAdjustments = 0;\n    this.elementsCache = /* @__PURE__ */ new Map();\n    this.observer = /* @__PURE__ */ (() => {\n      let _ro = null;\n      const get = () => {\n        if (_ro) {\n          return _ro;\n        }\n        if (!this.targetWindow || !this.targetWindow.ResizeObserver) {\n          return null;\n        }\n        return _ro = new this.targetWindow.ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            const run = () => {\n              this._measureElement(entry.target, entry);\n            };\n            this.options.useAnimationFrameWithResizeObserver ? requestAnimationFrame(run) : run();\n          });\n        });\n      };\n      return {\n        disconnect: () => {\n          var _a;\n          (_a = get()) == null ? void 0 : _a.disconnect();\n          _ro = null;\n        },\n        observe: (target) => {\n          var _a;\n          return (_a = get()) == null ? void 0 : _a.observe(target, { box: \"border-box\" });\n        },\n        unobserve: (target) => {\n          var _a;\n          return (_a = get()) == null ? void 0 : _a.unobserve(target);\n        }\n      };\n    })();\n    this.range = null;\n    this.setOptions = (opts2) => {\n      Object.entries(opts2).forEach(([key, value]) => {\n        if (typeof value === \"undefined\") delete opts2[key];\n      });\n      this.options = {\n        debug: false,\n        initialOffset: 0,\n        overscan: 1,\n        paddingStart: 0,\n        paddingEnd: 0,\n        scrollPaddingStart: 0,\n        scrollPaddingEnd: 0,\n        horizontal: false,\n        getItemKey: defaultKeyExtractor,\n        rangeExtractor: defaultRangeExtractor,\n        onChange: () => {\n        },\n        measureElement,\n        initialRect: { width: 0, height: 0 },\n        scrollMargin: 0,\n        gap: 0,\n        indexAttribute: \"data-index\",\n        initialMeasurementsCache: [],\n        lanes: 1,\n        isScrollingResetDelay: 150,\n        enabled: true,\n        isRtl: false,\n        useScrollendEvent: false,\n        useAnimationFrameWithResizeObserver: false,\n        ...opts2\n      };\n    };\n    this.notify = (sync) => {\n      var _a, _b;\n      (_b = (_a = this.options).onChange) == null ? void 0 : _b.call(_a, this, sync);\n    };\n    this.maybeNotify = memo(\n      () => {\n        this.calculateRange();\n        return [\n          this.isScrolling,\n          this.range ? this.range.startIndex : null,\n          this.range ? this.range.endIndex : null\n        ];\n      },\n      (isScrolling) => {\n        this.notify(isScrolling);\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"maybeNotify\",\n        debug: () => this.options.debug,\n        initialDeps: [\n          this.isScrolling,\n          this.range ? this.range.startIndex : null,\n          this.range ? this.range.endIndex : null\n        ]\n      }\n    );\n    this.cleanup = () => {\n      this.unsubs.filter(Boolean).forEach((d) => d());\n      this.unsubs = [];\n      this.observer.disconnect();\n      this.scrollElement = null;\n      this.targetWindow = null;\n    };\n    this._didMount = () => {\n      return () => {\n        this.cleanup();\n      };\n    };\n    this._willUpdate = () => {\n      var _a;\n      const scrollElement = this.options.enabled ? this.options.getScrollElement() : null;\n      if (this.scrollElement !== scrollElement) {\n        this.cleanup();\n        if (!scrollElement) {\n          this.maybeNotify();\n          return;\n        }\n        this.scrollElement = scrollElement;\n        if (this.scrollElement && \"ownerDocument\" in this.scrollElement) {\n          this.targetWindow = this.scrollElement.ownerDocument.defaultView;\n        } else {\n          this.targetWindow = ((_a = this.scrollElement) == null ? void 0 : _a.window) ?? null;\n        }\n        this.elementsCache.forEach((cached) => {\n          this.observer.observe(cached);\n        });\n        this._scrollToOffset(this.getScrollOffset(), {\n          adjustments: void 0,\n          behavior: void 0\n        });\n        this.unsubs.push(\n          this.options.observeElementRect(this, (rect) => {\n            this.scrollRect = rect;\n            this.maybeNotify();\n          })\n        );\n        this.unsubs.push(\n          this.options.observeElementOffset(this, (offset, isScrolling) => {\n            this.scrollAdjustments = 0;\n            this.scrollDirection = isScrolling ? this.getScrollOffset() < offset ? \"forward\" : \"backward\" : null;\n            this.scrollOffset = offset;\n            this.isScrolling = isScrolling;\n            this.maybeNotify();\n          })\n        );\n      }\n    };\n    this.getSize = () => {\n      if (!this.options.enabled) {\n        this.scrollRect = null;\n        return 0;\n      }\n      this.scrollRect = this.scrollRect ?? this.options.initialRect;\n      return this.scrollRect[this.options.horizontal ? \"width\" : \"height\"];\n    };\n    this.getScrollOffset = () => {\n      if (!this.options.enabled) {\n        this.scrollOffset = null;\n        return 0;\n      }\n      this.scrollOffset = this.scrollOffset ?? (typeof this.options.initialOffset === \"function\" ? this.options.initialOffset() : this.options.initialOffset);\n      return this.scrollOffset;\n    };\n    this.getFurthestMeasurement = (measurements, index) => {\n      const furthestMeasurementsFound = /* @__PURE__ */ new Map();\n      const furthestMeasurements = /* @__PURE__ */ new Map();\n      for (let m = index - 1; m >= 0; m--) {\n        const measurement = measurements[m];\n        if (furthestMeasurementsFound.has(measurement.lane)) {\n          continue;\n        }\n        const previousFurthestMeasurement = furthestMeasurements.get(\n          measurement.lane\n        );\n        if (previousFurthestMeasurement == null || measurement.end > previousFurthestMeasurement.end) {\n          furthestMeasurements.set(measurement.lane, measurement);\n        } else if (measurement.end < previousFurthestMeasurement.end) {\n          furthestMeasurementsFound.set(measurement.lane, true);\n        }\n        if (furthestMeasurementsFound.size === this.options.lanes) {\n          break;\n        }\n      }\n      return furthestMeasurements.size === this.options.lanes ? Array.from(furthestMeasurements.values()).sort((a, b) => {\n        if (a.end === b.end) {\n          return a.index - b.index;\n        }\n        return a.end - b.end;\n      })[0] : void 0;\n    };\n    this.getMeasurementOptions = memo(\n      () => [\n        this.options.count,\n        this.options.paddingStart,\n        this.options.scrollMargin,\n        this.options.getItemKey,\n        this.options.enabled\n      ],\n      (count, paddingStart, scrollMargin, getItemKey, enabled) => {\n        this.pendingMeasuredCacheIndexes = [];\n        return {\n          count,\n          paddingStart,\n          scrollMargin,\n          getItemKey,\n          enabled\n        };\n      },\n      {\n        key: false\n      }\n    );\n    this.getMeasurements = memo(\n      () => [this.getMeasurementOptions(), this.itemSizeCache],\n      ({ count, paddingStart, scrollMargin, getItemKey, enabled }, itemSizeCache) => {\n        if (!enabled) {\n          this.measurementsCache = [];\n          this.itemSizeCache.clear();\n          return [];\n        }\n        if (this.measurementsCache.length === 0) {\n          this.measurementsCache = this.options.initialMeasurementsCache;\n          this.measurementsCache.forEach((item) => {\n            this.itemSizeCache.set(item.key, item.size);\n          });\n        }\n        const min = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;\n        this.pendingMeasuredCacheIndexes = [];\n        const measurements = this.measurementsCache.slice(0, min);\n        for (let i = min; i < count; i++) {\n          const key = getItemKey(i);\n          const furthestMeasurement = this.options.lanes === 1 ? measurements[i - 1] : this.getFurthestMeasurement(measurements, i);\n          const start = furthestMeasurement ? furthestMeasurement.end + this.options.gap : paddingStart + scrollMargin;\n          const measuredSize = itemSizeCache.get(key);\n          const size = typeof measuredSize === \"number\" ? measuredSize : this.options.estimateSize(i);\n          const end = start + size;\n          const lane = furthestMeasurement ? furthestMeasurement.lane : i % this.options.lanes;\n          measurements[i] = {\n            index: i,\n            start,\n            size,\n            end,\n            key,\n            lane\n          };\n        }\n        this.measurementsCache = measurements;\n        return measurements;\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"getMeasurements\",\n        debug: () => this.options.debug\n      }\n    );\n    this.calculateRange = memo(\n      () => [\n        this.getMeasurements(),\n        this.getSize(),\n        this.getScrollOffset(),\n        this.options.lanes\n      ],\n      (measurements, outerSize, scrollOffset, lanes) => {\n        return this.range = measurements.length > 0 && outerSize > 0 ? calculateRange({\n          measurements,\n          outerSize,\n          scrollOffset,\n          lanes\n        }) : null;\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"calculateRange\",\n        debug: () => this.options.debug\n      }\n    );\n    this.getVirtualIndexes = memo(\n      () => {\n        let startIndex = null;\n        let endIndex = null;\n        const range = this.calculateRange();\n        if (range) {\n          startIndex = range.startIndex;\n          endIndex = range.endIndex;\n        }\n        this.maybeNotify.updateDeps([this.isScrolling, startIndex, endIndex]);\n        return [\n          this.options.rangeExtractor,\n          this.options.overscan,\n          this.options.count,\n          startIndex,\n          endIndex\n        ];\n      },\n      (rangeExtractor, overscan, count, startIndex, endIndex) => {\n        return startIndex === null || endIndex === null ? [] : rangeExtractor({\n          startIndex,\n          endIndex,\n          overscan,\n          count\n        });\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"getVirtualIndexes\",\n        debug: () => this.options.debug\n      }\n    );\n    this.indexFromElement = (node) => {\n      const attributeName = this.options.indexAttribute;\n      const indexStr = node.getAttribute(attributeName);\n      if (!indexStr) {\n        console.warn(\n          `Missing attribute name '${attributeName}={index}' on measured element.`\n        );\n        return -1;\n      }\n      return parseInt(indexStr, 10);\n    };\n    this._measureElement = (node, entry) => {\n      const index = this.indexFromElement(node);\n      const item = this.measurementsCache[index];\n      if (!item) {\n        return;\n      }\n      const key = item.key;\n      const prevNode = this.elementsCache.get(key);\n      if (prevNode !== node) {\n        if (prevNode) {\n          this.observer.unobserve(prevNode);\n        }\n        this.observer.observe(node);\n        this.elementsCache.set(key, node);\n      }\n      if (node.isConnected) {\n        this.resizeItem(index, this.options.measureElement(node, entry, this));\n      }\n    };\n    this.resizeItem = (index, size) => {\n      const item = this.measurementsCache[index];\n      if (!item) {\n        return;\n      }\n      const itemSize = this.itemSizeCache.get(item.key) ?? item.size;\n      const delta = size - itemSize;\n      if (delta !== 0) {\n        if (this.shouldAdjustScrollPositionOnItemSizeChange !== void 0 ? this.shouldAdjustScrollPositionOnItemSizeChange(item, delta, this) : item.start < this.getScrollOffset() + this.scrollAdjustments) {\n          if (process.env.NODE_ENV !== \"production\" && this.options.debug) {\n            console.info(\"correction\", delta);\n          }\n          this._scrollToOffset(this.getScrollOffset(), {\n            adjustments: this.scrollAdjustments += delta,\n            behavior: void 0\n          });\n        }\n        this.pendingMeasuredCacheIndexes.push(item.index);\n        this.itemSizeCache = new Map(this.itemSizeCache.set(item.key, size));\n        this.notify(false);\n      }\n    };\n    this.measureElement = (node) => {\n      if (!node) {\n        this.elementsCache.forEach((cached, key) => {\n          if (!cached.isConnected) {\n            this.observer.unobserve(cached);\n            this.elementsCache.delete(key);\n          }\n        });\n        return;\n      }\n      this._measureElement(node, void 0);\n    };\n    this.getVirtualItems = memo(\n      () => [this.getVirtualIndexes(), this.getMeasurements()],\n      (indexes, measurements) => {\n        const virtualItems = [];\n        for (let k = 0, len = indexes.length; k < len; k++) {\n          const i = indexes[k];\n          const measurement = measurements[i];\n          virtualItems.push(measurement);\n        }\n        return virtualItems;\n      },\n      {\n        key: process.env.NODE_ENV !== \"production\" && \"getVirtualItems\",\n        debug: () => this.options.debug\n      }\n    );\n    this.getVirtualItemForOffset = (offset) => {\n      const measurements = this.getMeasurements();\n      if (measurements.length === 0) {\n        return void 0;\n      }\n      return notUndefined(\n        measurements[findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index) => notUndefined(measurements[index]).start,\n          offset\n        )]\n      );\n    };\n    this.getOffsetForAlignment = (toOffset, align, itemSize = 0) => {\n      const size = this.getSize();\n      const scrollOffset = this.getScrollOffset();\n      if (align === \"auto\") {\n        align = toOffset >= scrollOffset + size ? \"end\" : \"start\";\n      }\n      if (align === \"center\") {\n        toOffset += (itemSize - size) / 2;\n      } else if (align === \"end\") {\n        toOffset -= size;\n      }\n      const scrollSizeProp = this.options.horizontal ? \"scrollWidth\" : \"scrollHeight\";\n      const scrollSize = this.scrollElement ? \"document\" in this.scrollElement ? this.scrollElement.document.documentElement[scrollSizeProp] : this.scrollElement[scrollSizeProp] : 0;\n      const maxOffset = scrollSize - size;\n      return Math.max(Math.min(maxOffset, toOffset), 0);\n    };\n    this.getOffsetForIndex = (index, align = \"auto\") => {\n      index = Math.max(0, Math.min(index, this.options.count - 1));\n      const item = this.measurementsCache[index];\n      if (!item) {\n        return void 0;\n      }\n      const size = this.getSize();\n      const scrollOffset = this.getScrollOffset();\n      if (align === \"auto\") {\n        if (item.end >= scrollOffset + size - this.options.scrollPaddingEnd) {\n          align = \"end\";\n        } else if (item.start <= scrollOffset + this.options.scrollPaddingStart) {\n          align = \"start\";\n        } else {\n          return [scrollOffset, align];\n        }\n      }\n      const toOffset = align === \"end\" ? item.end + this.options.scrollPaddingEnd : item.start - this.options.scrollPaddingStart;\n      return [\n        this.getOffsetForAlignment(toOffset, align, item.size),\n        align\n      ];\n    };\n    this.isDynamicMode = () => this.elementsCache.size > 0;\n    this.cancelScrollToIndex = () => {\n      if (this.scrollToIndexTimeoutId !== null && this.targetWindow) {\n        this.targetWindow.clearTimeout(this.scrollToIndexTimeoutId);\n        this.scrollToIndexTimeoutId = null;\n      }\n    };\n    this.scrollToOffset = (toOffset, { align = \"start\", behavior } = {}) => {\n      this.cancelScrollToIndex();\n      if (behavior === \"smooth\" && this.isDynamicMode()) {\n        console.warn(\n          \"The `smooth` scroll behavior is not fully supported with dynamic size.\"\n        );\n      }\n      this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n        adjustments: void 0,\n        behavior\n      });\n    };\n    this.scrollToIndex = (index, { align: initialAlign = \"auto\", behavior } = {}) => {\n      index = Math.max(0, Math.min(index, this.options.count - 1));\n      this.cancelScrollToIndex();\n      if (behavior === \"smooth\" && this.isDynamicMode()) {\n        console.warn(\n          \"The `smooth` scroll behavior is not fully supported with dynamic size.\"\n        );\n      }\n      const offsetAndAlign = this.getOffsetForIndex(index, initialAlign);\n      if (!offsetAndAlign) return;\n      const [offset, align] = offsetAndAlign;\n      this._scrollToOffset(offset, { adjustments: void 0, behavior });\n      if (behavior !== \"smooth\" && this.isDynamicMode() && this.targetWindow) {\n        this.scrollToIndexTimeoutId = this.targetWindow.setTimeout(() => {\n          this.scrollToIndexTimeoutId = null;\n          const elementInDOM = this.elementsCache.has(\n            this.options.getItemKey(index)\n          );\n          if (elementInDOM) {\n            const [latestOffset] = notUndefined(\n              this.getOffsetForIndex(index, align)\n            );\n            if (!approxEqual(latestOffset, this.getScrollOffset())) {\n              this.scrollToIndex(index, { align, behavior });\n            }\n          } else {\n            this.scrollToIndex(index, { align, behavior });\n          }\n        });\n      }\n    };\n    this.scrollBy = (delta, { behavior } = {}) => {\n      this.cancelScrollToIndex();\n      if (behavior === \"smooth\" && this.isDynamicMode()) {\n        console.warn(\n          \"The `smooth` scroll behavior is not fully supported with dynamic size.\"\n        );\n      }\n      this._scrollToOffset(this.getScrollOffset() + delta, {\n        adjustments: void 0,\n        behavior\n      });\n    };\n    this.getTotalSize = () => {\n      var _a;\n      const measurements = this.getMeasurements();\n      let end;\n      if (measurements.length === 0) {\n        end = this.options.paddingStart;\n      } else if (this.options.lanes === 1) {\n        end = ((_a = measurements[measurements.length - 1]) == null ? void 0 : _a.end) ?? 0;\n      } else {\n        const endByLane = Array(this.options.lanes).fill(null);\n        let endIndex = measurements.length - 1;\n        while (endIndex >= 0 && endByLane.some((val) => val === null)) {\n          const item = measurements[endIndex];\n          if (endByLane[item.lane] === null) {\n            endByLane[item.lane] = item.end;\n          }\n          endIndex--;\n        }\n        end = Math.max(...endByLane.filter((val) => val !== null));\n      }\n      return Math.max(\n        end - this.options.scrollMargin + this.options.paddingEnd,\n        0\n      );\n    };\n    this._scrollToOffset = (offset, {\n      adjustments,\n      behavior\n    }) => {\n      this.options.scrollToFn(offset, { behavior, adjustments }, this);\n    };\n    this.measure = () => {\n      this.itemSizeCache = /* @__PURE__ */ new Map();\n      this.notify(false);\n    };\n    this.setOptions(opts);\n  }\n}\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    const middle = (low + high) / 2 | 0;\n    const currentValue = getCurrentValue(middle);\n    if (currentValue < value) {\n      low = middle + 1;\n    } else if (currentValue > value) {\n      high = middle - 1;\n    } else {\n      return middle;\n    }\n  }\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n  lanes\n}) {\n  const lastIndex = measurements.length - 1;\n  const getOffset = (index) => measurements[index].start;\n  if (measurements.length <= lanes) {\n    return {\n      startIndex: 0,\n      endIndex: lastIndex\n    };\n  }\n  let startIndex = findNearestBinarySearch(\n    0,\n    lastIndex,\n    getOffset,\n    scrollOffset\n  );\n  let endIndex = startIndex;\n  if (lanes === 1) {\n    while (endIndex < lastIndex && measurements[endIndex].end < scrollOffset + outerSize) {\n      endIndex++;\n    }\n  } else if (lanes > 1) {\n    const endPerLane = Array(lanes).fill(0);\n    while (endIndex < lastIndex && endPerLane.some((pos) => pos < scrollOffset + outerSize)) {\n      const item = measurements[endIndex];\n      endPerLane[item.lane] = item.end;\n      endIndex++;\n    }\n    const startPerLane = Array(lanes).fill(scrollOffset + outerSize);\n    while (startIndex >= 0 && startPerLane.some((pos) => pos >= scrollOffset)) {\n      const item = measurements[startIndex];\n      startPerLane[item.lane] = item.start;\n      startIndex--;\n    }\n    startIndex = Math.max(0, startIndex - startIndex % lanes);\n    endIndex = Math.min(lastIndex, endIndex + (lanes - 1 - endIndex % lanes));\n  }\n  return { startIndex, endIndex };\n}\nexport {\n  Virtualizer,\n  approxEqual,\n  debounce,\n  defaultKeyExtractor,\n  defaultRangeExtractor,\n  elementScroll,\n  measureElement,\n  memo,\n  notUndefined,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  windowScroll\n};\n//# sourceMappingURL=index.js.map\n","import * as React from \"react\";\nimport { flushSync } from \"react-dom\";\nimport { Virtualizer, elementScroll, observeElementOffset, observeElementRect, windowScroll, observeWindowOffset, observeWindowRect } from \"@tanstack/virtual-core\";\nexport * from \"@tanstack/virtual-core\";\nconst useIsomorphicLayoutEffect = typeof document !== \"undefined\" ? React.useLayoutEffect : React.useEffect;\nfunction useVirtualizerBase(options) {\n  const rerender = React.useReducer(() => ({}), {})[1];\n  const resolvedOptions = {\n    ...options,\n    onChange: (instance2, sync) => {\n      var _a;\n      if (sync) {\n        flushSync(rerender);\n      } else {\n        rerender();\n      }\n      (_a = options.onChange) == null ? void 0 : _a.call(options, instance2, sync);\n    }\n  };\n  const [instance] = React.useState(\n    () => new Virtualizer(resolvedOptions)\n  );\n  instance.setOptions(resolvedOptions);\n  useIsomorphicLayoutEffect(() => {\n    return instance._didMount();\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate();\n  });\n  return instance;\n}\nfunction useVirtualizer(options) {\n  return useVirtualizerBase({\n    observeElementRect,\n    observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options\n  });\n}\nfunction useWindowVirtualizer(options) {\n  return useVirtualizerBase({\n    getScrollElement: () => typeof document !== \"undefined\" ? window : null,\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    initialOffset: () => typeof document !== \"undefined\" ? window.scrollY : 0,\n    ...options\n  });\n}\nexport {\n  useVirtualizer,\n  useWindowVirtualizer\n};\n//# sourceMappingURL=index.js.map\n"],"names":["memo","getDeps","fn","opts","deps","result","memoizedFunction","_a","_b","_c","_d","depTime","newDeps","dep","index","resultTime","depEndTime","resultEndTime","resultFpsPercentage","pad","str","num","notUndefined","value","msg","approxEqual","a","b","debounce","targetWindow","ms","timeoutId","args","defaultKeyExtractor","defaultRangeExtractor","range","start","end","arr","i","observeElementRect","instance","cb","element","handler","rect","width","height","observer","entries","run","entry","box","addEventListenerOptions","supportsScrollend","observeElementOffset","offset","fallback","createHandler","isScrolling","horizontal","isRtl","endHandler","registerScrollendEvent","measureElement","elementScroll","adjustments","behavior","toOffset","Virtualizer","_ro","get","target","opts2","key","sync","d","scrollElement","cached","measurements","furthestMeasurementsFound","furthestMeasurements","m","measurement","previousFurthestMeasurement","count","paddingStart","scrollMargin","getItemKey","enabled","itemSizeCache","item","min","furthestMeasurement","measuredSize","size","lane","outerSize","scrollOffset","lanes","calculateRange","startIndex","endIndex","rangeExtractor","overscan","node","attributeName","indexStr","prevNode","itemSize","delta","indexes","virtualItems","k","len","findNearestBinarySearch","align","scrollSizeProp","maxOffset","initialAlign","offsetAndAlign","latestOffset","endByLane","val","low","high","getCurrentValue","middle","currentValue","lastIndex","getOffset","endPerLane","pos","startPerLane","useIsomorphicLayoutEffect","React.useLayoutEffect","React.useEffect","useVirtualizerBase","options","rerender","React.useReducer","resolvedOptions","instance2","flushSync","React.useState","useVirtualizer"],"mappings":"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","x_google_ignoreList":[0,1,2]}