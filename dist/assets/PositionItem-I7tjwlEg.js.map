{"version":3,"file":"PositionItem-I7tjwlEg.js","sources":["../../../hooks/src/useQueryParams.ts","../../src/components/common/FarmingIcon.tsx","../../src/components/vaults-v2/modal/VaultPositionRange.tsx","../../src/components/vaults-v2/modal/VaultInfo.tsx","../../src/components/vaults-v2/modal/index.tsx","../../src/hooks/position/usePositionApr.ts","../../src/hooks/position/usePositionListAction.ts","../../src/components/position/list/PendingFeesBlock.tsx","../../src/components/position/list/PendingRewardsBlock.tsx","../../src/components/position/list/PositionAprBlock.tsx","../../../../../../../../../images/icon_active_new@2x.png","../../src/components/position/list/StatusPosition.tsx","../../src/components/position/list/PositionPriceRange.tsx","../../src/components/position/list/PositionItemContent.tsx","../../src/components/position/list/PositionItem.tsx"],"sourcesContent":["import { useLayoutEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nfunction useQueryParams() {\n  const { search } = useLocation()\n  const [queryParams, setQueryParams] = useState<Record<string, string>>({})\n\n  useLayoutEffect(() => {\n    const searchParams = new URLSearchParams(search)\n    setQueryParams(Object.fromEntries(searchParams.entries()))\n  }, [search])\n\n  return queryParams\n}\n\nexport default useQueryParams\n","import { CetusTooltip } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { cancelBubble } from '@cetus/utils'\nimport { Center, HStack, Image, StackProps, Text } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ninterface FarmingIcon extends StackProps {\n  tooltip?: ReactNode\n}\n\nconst FarmingIcon = ({ tooltip, ...rest }: FarmingIcon) => {\n  const navigate = useNavigate()\n  const { isApp } = useWindowWidth()\n  return (\n    <HStack\n      w=\"20px\"\n      h=\"20px\"\n      onClick={e => {\n        cancelBubble(e)\n        isApp ? '' : navigate('/farms')\n      }}\n      {...rest}\n    >\n      <CetusTooltip placement=\"top\" tooltip={tooltip ? tooltip : <Text fontSize=\"12px\">Farm rewards available</Text>}>\n        <Center>\n          <Image w=\"100%\" h=\"100%\" minW=\"100%\" src=\"/images/icon_farms.png\" />\n        </Center>\n      </CetusTooltip>\n    </HStack>\n  )\n}\n\nexport default FarmingIcon\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { Box, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Skeleton, Text } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\n\ntype VaultPositionRangeProps = {\n  minPrice?: string\n  maxPrice?: string\n  currPrice?: string\n}\nfunction VaultPositionRange(props: VaultPositionRangeProps) {\n  const { minPrice, maxPrice, currPrice } = props\n  const [elementWidth, setElementWidth] = useState<number>(0)\n  const [currPriceWidth, setCurrPriceWidth] = useState<number>(0)\n  const elementRef = useRef<HTMLDivElement>(null)\n  const currPriceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const updateWidths = () => {\n      if (elementRef.current) setElementWidth(elementRef.current.offsetWidth)\n      if (currPriceRef.current) setCurrPriceWidth(currPriceRef.current.offsetWidth)\n    }\n\n    const resizeObserver = new ResizeObserver(updateWidths)\n    const priceResizeObserver = new ResizeObserver(updateWidths)\n\n    if (elementRef.current) resizeObserver.observe(elementRef.current)\n    if (currPriceRef.current) priceResizeObserver.observe(currPriceRef.current)\n\n    return () => {\n      if (elementRef.current) resizeObserver.unobserve(elementRef.current)\n      if (currPriceRef.current) priceResizeObserver.unobserve(currPriceRef.current)\n    }\n  }, [minPrice, maxPrice, currPrice])\n\n  const sliderML = useMemo(() => {\n    if (maxPrice === '∞') return '0px'\n    if (currPrice && minPrice && maxPrice && elementWidth) {\n      if (d(currPrice).lessThanOrEqualTo(maxPrice) && d(currPrice).greaterThanOrEqualTo(minPrice)) {\n        const relativePosition = d(currPrice)\n          .sub(minPrice)\n          .div(d(maxPrice).sub(d(minPrice)))\n          .toString()\n        return `${d(elementWidth).mul(relativePosition).toFixed(0)}px`\n      }\n      if (d(currPrice).lt(minPrice)) {\n        return '-36px'\n      }\n      if (d(currPrice).gt(maxPrice)) {\n        return 'calc(100% + 36px)'\n      }\n    }\n    return '0px'\n  }, [currPrice, minPrice, maxPrice, elementWidth])\n\n  const priceLeft = useMemo(() => {\n    const left = sliderML.replace('px', '')\n    return Number(left) - currPriceWidth / 2 + 'px'\n  }, [sliderML, currPriceWidth])\n\n  const { isApp } = useWindowWidth()\n  return (\n    <>\n      {minPrice !== undefined && maxPrice !== undefined && currPrice !== undefined ? (\n        <HStack w=\"100%\" height=\"60px\" background=\"primary_opacity.10\" borderRadius=\"16px\" p=\"0px 0px 8px\" key={sliderML}>\n          <Box\n            w=\"100%\"\n            padding={minPrice && d(currPrice).lt(minPrice) ? '0 40px 0 60px' : maxPrice && d(currPrice).gt(maxPrice) ? '0 60px 0 40px' : '0 40px'}\n            position=\"relative\"\n          >\n            <Text\n              whiteSpace=\"nowrap\"\n              position=\"absolute\"\n              top=\"20px\"\n              left={minPrice && d(currPrice).lt(minPrice) ? '60px' : '40px'}\n              fontSize=\"12px\"\n              color=\"text_caption\"\n            >\n              {formatNumberWithDown(minPrice)}\n            </Text>\n            <Box\n              w=\"100%\"\n              position=\"relative\"\n              height=\"14px\"\n              ref={elementRef}\n              bgImage=\"url('/images/img_range@2x.png')\"\n              bgSize=\"100% 14px\"\n              bgPosition=\"center\"\n            >\n              <Popover isLazy placement=\"top\" trigger={isApp ? 'click' : 'hover'} autoFocus={false} returnFocusOnClose={false} gutter={4}>\n                <PopoverTrigger>\n                  <Box as=\"button\">\n                    <Box\n                      bg=\"#fff\"\n                      borderRadius=\"8px\"\n                      w=\"4px\"\n                      height=\"15px\"\n                      position=\"absolute\"\n                      top=\"50%\"\n                      transform=\"translateY(-50%)\"\n                      left={sliderML}\n                      ml=\"-2px\"\n                      zIndex=\"5\"\n                    />\n                  </Box>\n                </PopoverTrigger>\n                <PopoverContent\n                  w=\"fit-content\"\n                  bg=\"none\"\n                  border=\"none\"\n                  ref={currPriceRef}\n                  position=\"absolute\"\n                  top=\"-32px !important\"\n                  left={priceLeft}\n                  zIndex=\"5\"\n                >\n                  <PopoverBody fontSize=\"12px\" w=\"fit-content\" bg=\"none\" border=\"none\">\n                    <Text whiteSpace=\"nowrap\" fontSize=\"12px\" color=\"primary\">\n                      {formatNumberWithDown(currPrice)}\n                    </Text>\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n            </Box>\n            <Text\n              whiteSpace=\"nowrap\"\n              position=\"absolute\"\n              top=\"20px\"\n              right={maxPrice && d(currPrice).gt(maxPrice) ? '60px' : '40px'}\n              fontSize=\"12px\"\n              color=\"text_caption\"\n            >\n              {formatNumberWithDown(maxPrice)}\n            </Text>\n          </Box>\n        </HStack>\n      ) : (\n        <HStack w=\"100%\" height=\"60px\" background=\"primary_opacity.10\" borderRadius=\"16px\" p=\"0 40px\">\n          <Skeleton w=\"100%\" h=\"20px\" />\n        </HStack>\n      )}\n    </>\n  )\n}\nexport default VaultPositionRange\n","import useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport { Block } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, VTextLabelBox } from '@cetus/ui-kit'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Box, Flex, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { VaultsAprTooltipContent } from '../list/common/VaultsAprBlock'\nimport VaultPositionRange from './VaultPositionRange'\n\ntype VaultInfoProps = {\n  vaultId: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  feeDisplay: string\n  clmmPool: string\n  isReverse: boolean\n  minPrice?: string\n  maxPrice?: string\n  currPrice?: string\n  category: string\n}\nfunction VaultInfo(props: VaultInfoProps) {\n  const { vaultId, displayTokenA, displayTokenB, feeDisplay, minPrice, maxPrice, currPrice } = props\n  console.log('🚀🚀🚀 ~ VaultInfo.tsx:25 ~ VaultInfo ~ props:', props)\n  const { vaultListObj } = useVaultsListV2Store()\n\n  const apiVaultInfo = useMemo(() => {\n    if (isAvailableObject(vaultListObj) && vaultId) {\n      return vaultListObj[vaultId]\n    }\n    return\n  }, [vaultListObj, vaultId])\n\n  return (\n    <VStack width=\"calc(100% + 32px)\" padding=\"0 16px\" alignItems=\"left\" paddingBottom=\"16px\" borderBottom=\"1px solid\" borderColor=\"border\">\n      <Flex>\n        <CoinPairImage\n          coinAIconUrl={displayTokenA?.logo_url}\n          coinBIconUrl={displayTokenB?.logo_url}\n          imageStyle={{\n            w: '32px',\n            h: '32px'\n          }}\n          imgBoxStyle={{\n            w: '32px',\n            h: '32px'\n          }}\n        />\n        <Flex marginLeft=\"8px\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n          <Box>\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"16px\" color=\"text_caption\">\n                {`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n              </Text>\n              <Block w=\"unset\" p=\"3px 12px 2px\" borderRadius=\"12px\" bg=\"none\" borderColor=\"primary\" marginLeft=\"8px\">\n                <Text fontSize=\"12px\" color=\"primary\">\n                  {feeDisplay}\n                </Text>\n              </Block>\n            </Flex>\n          </Box>\n          <Flex flexDirection=\"column\">\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '2px',\n                alignItems: 'flex-end !important'\n              }}\n              title=\"APY\"\n              titleStyle={{\n                color: 'primary',\n                fontSize: '12px'\n              }}\n              valueTooltip={\n                <VaultsAprTooltipContent\n                  vaultsLstApyDisplay={apiVaultInfo?.vaultsLstApyDisplay}\n                  vaultsApyDisplay={apiVaultInfo?.vaultsApyDisplay}\n                  vaultsTotalApyDisplay={apiVaultInfo?.vaultsTotalApyDisplay}\n                  vaultsAprDisplay={apiVaultInfo?.vaultsAprDisplay}\n                  category={apiVaultInfo?.category}\n                />\n              }\n              value={apiVaultInfo?.category == 'cetus' ? apiVaultInfo?.vaultsTotalApyDisplay : apiVaultInfo?.vaultsApyDisplay || '-'}\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n      <VaultPositionRange minPrice={minPrice} maxPrice={maxPrice} currPrice={currPrice} />\n    </VStack>\n  )\n}\n\nexport default VaultInfo\n","import useGetPythLastPrice from '@/hooks/vault-v2/pyth-price/useGetPythLastPrice'\nimport useCurrentVaultDetail from '@/hooks/vault-v2/useCurrentVaultDetail'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport { useAccountBalance, useInterval } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PoweredByHaedal from '../common/PoweredByHaedal'\nimport VaultsAction from '../detail/VaultsAction'\nimport VaultInfo from './VaultInfo'\n\ntype VaultModalProps = {\n  isOpen: boolean\n  setIsOpen: (status: boolean) => void\n  displayTokenA?: Token | undefined\n  displayTokenB?: Token | undefined\n  feeDisplay: string\n  clmmPool: string\n  vaultId: string\n  isReverse: boolean\n  category: string\n}\nfunction VaultModal(props: VaultModalProps) {\n  const { currentAccount } = useAccountStore()\n  const { isOpen, setIsOpen, vaultId, category, displayTokenA, displayTokenB, feeDisplay, clmmPool, isReverse } = props\n  const { isOpenWalletModal } = useAccountStore()\n  const { getCurrentVaultDetail, getCurrentVaultContractInfo } = useCurrentVaultDetail()\n  const { clearVaultsActionData } = useVaultsActionStore()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const navigate = useNavigate()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n\n  const currentVaultPool = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj, vaultId])\n\n  useEffect(() => {\n    if (vaultId) {\n      getCurrentVaultDetail(vaultId as string)\n    }\n  }, [currentAccount?.address, vaultId])\n\n  // useEffect(() => {\n  //   getCurrentVaultContractInfo(vaultId as string)\n  // }, [vaultId])\n\n  const { getPythLastPrice } = useGetPythLastPrice()\n\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n      clearVaultsActionData()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (currentVaultPool?.displayCoinTypeA && currentVaultPool?.displayCoinTypeB) {\n      getPythLastPrice([currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n    }\n  }, [currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n\n  useInterval({\n    interval: 20 * 1000,\n    callback: () => {\n      if (isMountedRef.current && category == 'haedal') {\n        getPythLastPrice([currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n      }\n    }\n  })\n\n  const autoRefresh = () => {\n    console.log('🚀🚀🚀 ~ VaultsDetailPage.tsx:142 ~ autoRefresh ~ autoRefresh:')\n    if (currentAccount?.address) {\n      // 刷新余额\n      fetchAccountBalance()\n      getCurrentVaultDetail(vaultId as string, true)\n    } else {\n      getCurrentVaultContractInfo(vaultId as string)\n    }\n  }\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen && !isOpenWalletModal}\n      onClose={() => {\n        setIsOpen(false)\n        // setCurrentActionTab('Deposit')\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '420px' }}>\n        <ModalBody p=\"0 0 8px\">\n          <VStack width=\"100%\">\n            <VStack\n              width=\"100%\"\n              p=\"6px 16px 16px\"\n              mb=\"-16px\"\n              gap=\"0\"\n              borderRadius=\"16px\"\n              sx={{\n                backgroundImage: \"url('/images/vault_modal_bg@2x.png')\",\n                backgroundPosition: 'top center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: '100% 320px'\n              }}\n            >\n              <HStack h=\"36px\" w=\"100%\" mb=\"12px\">\n                <Text color=\"text_caption\" fontWeight=\"500\" fontSize=\"16px\">\n                  Auto Vault\n                </Text>\n                <ModalCloseButton />\n              </HStack>\n              <VaultInfo\n                displayTokenA={displayTokenA}\n                displayTokenB={displayTokenB}\n                feeDisplay={feeDisplay}\n                clmmPool={clmmPool}\n                isReverse={isReverse}\n                minPrice={currentVaultPool?.minPrice}\n                maxPrice={currentVaultPool?.maxPrice}\n                currPrice={currentVaultPool?.currentPrice}\n                category={category}\n                vaultId={vaultId}\n              />\n              <VaultsAction vaultId={vaultId as string} isModal={true} autoRefresh={autoRefresh} />\n            </VStack>\n            <HStack\n              borderTop=\"1px solid\"\n              borderColor=\"border\"\n              width=\"100%\"\n              padding=\"12px 16px 4px\"\n              justifyContent={category == 'haedal' ? 'space-between' : 'center'}\n            >\n              <PoweredByHaedal mt=\"0\" category={category} />\n              <Text\n                fontSize=\"12px\"\n                _hover={{ color: 'primary' }}\n                whiteSpace=\"nowrap\"\n                cursor=\"pointer\"\n                onClick={() => {\n                  if (category && vaultId) {\n                    clearVaultsActionData()\n                    navigate(`/vaults-detail/${vaultId}/${category}`)\n                  }\n                }}\n              >\n                Vault Details &gt;\n              </Text>\n            </HStack>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\nexport default VaultModal\n","import { PoolApiInfo, PosPoolsRelated } from '@/types'\nimport { aprProcessing } from '@/utils/api-data-utils'\nimport { formatNumberWithDown, formatPercentage, isAvailableObject } from '@cetus/utils'\nimport { d, TickMath } from '@cetusprotocol/common-sdk'\n\nexport default function usePositionApr() {\n  const estPositionAPRWithMultiMethod = (lowerUserPrice: number, upperUserPrice: number, lowerHistPrice: number, upperHistPrice: number) => {\n    console.log(\n      '🚀🚀🚀 ~ usePositionApr.ts:8 ~ estPositionAPRWithMultiMethod ~ lowerUserPrice:',\n      lowerUserPrice,\n      upperUserPrice,\n      upperUserPrice,\n      upperHistPrice\n    )\n    // 交集部分最小价格\n    const retroLower = Math.max(lowerUserPrice, lowerHistPrice)\n    // 交集部分最大价格\n    const retroUpper = Math.min(upperUserPrice, upperHistPrice)\n    // 交集\n    const retroRange = retroUpper - retroLower\n    // 用户交集\n    const userRange = upperUserPrice - lowerUserPrice\n    // 历史交集\n    const histRange = upperHistPrice - lowerHistPrice\n\n    const retroRangeD = d(retroRange.toString())\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:27 ~ estPositionAPRWithMultiMethod ~ retroRange.toString():', retroRange.toString())\n    const userRangeD = d(userRange.toString())\n    const histRangeD = d(histRange.toString())\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:30 ~ estPositionAPRWithMultiMethod ~ histRange.toString():', histRange.toString())\n\n    if (retroRange <= 0) return d(0)\n    // 若用户区间在交集区间内或者等于交集区间 , 则m=历史交易区间/交集区间\n    if (userRange <= retroRange) return histRangeD.div(retroRangeD)\n    // 若有效区间=交集区间, 则m=交集部分/用户选择部分\n    if (retroRange === histRange) return retroRangeD.div(userRangeD)\n    //若用户选择区间一部分存在交集，另一部分在历史交易区间外，则 m=（交集部分/历史交易区间）*（交集部分/用户选择部分）\n    return retroRangeD.div(histRangeD).mul(retroRangeD.div(userRangeD))\n  }\n\n  const getPositionApr = (posPoolInfo: PoolApiInfo, posRangeInfo: PosPoolsRelated, dateType: 'day' | 'week' | 'month', range: any) => {\n    if (!isAvailableObject(posPoolInfo) || !isAvailableObject(posRangeInfo) || !isAvailableObject(range)) return\n    const { minPriceRaw, maxPriceRaw } = posRangeInfo\n    const { tokenA, tokenB, miningAprList, feeApr, feeApr7d, feeApr30d, isReverse } = posPoolInfo\n    const decimalA = tokenA?.decimals\n    const decimalB = tokenB?.decimals\n    const isFullRange = maxPriceRaw == '0' && minPriceRaw == '∞'\n    const lowerUserPrice = minPriceRaw\n    const upperUserPrice = isFullRange ? 2 ** 50 : maxPriceRaw\n\n    const { lower, upper } = range\n    const beforeContractPriceLowest = TickMath.tickIndexToPrice(lower, decimalA, decimalB).toNumber()\n    const beforeContractPriceHighest = TickMath.tickIndexToPrice(upper, decimalA, decimalB).toNumber()\n\n    const hisLowerPrice = isReverse\n      ? formatNumberWithDown(d(1).div(beforeContractPriceHighest).toString(), undefined, true)\n      : formatNumberWithDown(beforeContractPriceLowest, undefined, true)\n    const hisUpperPrice = isReverse\n      ? formatNumberWithDown(d(1).div(beforeContractPriceLowest).toString(), undefined, true)\n      : formatNumberWithDown(beforeContractPriceHighest, undefined, true)\n\n    const positionMulti = estPositionAPRWithMultiMethod(lowerUserPrice, upperUserPrice, hisLowerPrice, hisUpperPrice)\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:71 ~ getPositionApr ~ positionMulti:系数', positionMulti.toString())\n    const aprByFee = d(dateType == 'day' ? feeApr : dateType == 'month' ? feeApr30d : feeApr7d)\n      .mul(positionMulti)\n      .toString()\n    const posMiningReward: any = []\n    let aprPercentageTotal = d(aprByFee)\n    miningAprList?.forEach(reward => {\n      const posMiningRewardApr = d(positionMulti).mul(reward.apr).toString()\n      const posMiningRewardAprDisplay = aprProcessing(posMiningRewardApr, true)\n      posMiningReward.push({ ...reward, posMiningRewardApr, posMiningRewardAprDisplay })\n      aprPercentageTotal = aprPercentageTotal.add(posMiningRewardApr)\n    })\n\n    return {\n      aprPercentageTotal: aprPercentageTotal.toString(),\n      displayAprPercentageTotal: formatPercentage(aprPercentageTotal.mul(100).toNumber()),\n      aprByFee,\n      aprByFeeDisplay: aprProcessing(aprByFee, true),\n      posMiningReward\n    }\n  }\n  return { getPositionApr }\n}\n","import useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { TransactionStatusType } from '@cetus/types'\nimport { d, Decimal, formatNumberWithDown } from '@cetus/utils'\nimport { useState } from 'react'\nimport useTransaction from '../common/useTransaction'\nimport usePositionApr from './usePositionApr'\nimport usePositionList from './usePositionList'\nimport usePosRemove from './usePosRemove'\n\nexport default function usePositionListAction() {\n  const [isRemoveLoading, setIsRemoveLoading] = useState(false)\n\n  const { getPositionApr } = usePositionApr()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const { posPoolsRelatedData, posLiquidityData, posFeeData, farmsPosRewardsData, posRewardsData, posApiPoolData, poolRangeObj, setPosBaseList } =\n    usePositionStore()\n  const { mevProtect, transactionMode, maxCapForGas, customGasPrice } = useGlobalStore()\n  const { getCloseTsPayloadAll } = usePosRemove()\n  const { signAndExecuteTransaction, transactionConfirmation } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const { currentAccount } = useAccountStore()\n  const handleGetPositionList = async () => {\n    const list = await getPositionBaseList(currentAccount?.address)\n    getPosRelatedData(list as PosBaseInfo[])\n  }\n\n  const toCloseAllAction = async (closeAllPositionList: any) => {\n    setIsRemoveLoading(true)\n    try {\n      const paramsList = closeAllPositionList.map((posInfo: PosBaseInfo) => {\n        const currentPosLiquidityData = posLiquidityData[posInfo?.posId]\n        const currentPosRewardsData = posRewardsData[posInfo?.posId]\n        const currentPosPoolInfo = posApiPoolData[posInfo.clmmPool]\n\n        const rewarderCoinTypes =\n          !currentPosRewardsData || currentPosRewardsData?.length == 0\n            ? (currentPosPoolInfo?.miningRewardList || [])?.reduce((arr: string[], item: any) => {\n                arr.push(item.coinType)\n                return arr\n              }, [])\n            : (currentPosRewardsData || []).map((item: PosReward) => item.coin_address)\n        console.log('🚀 ~ paramsList ~ rewarderCoinTypes:', posInfo, posApiPoolData, currentPosPoolInfo, currentPosRewardsData, rewarderCoinTypes)\n\n        const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n        const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n\n        const isReverse = posInfo.isReverse\n        const [amountA, amountB] = isReverse\n          ? [\n              d(tokenBBalance).mul(Decimal.pow(10, posInfo.displayTokenB?.decimals)).toString(),\n              d(tokenABalance).mul(Decimal.pow(10, posInfo.displayTokenA?.decimals)).toString()\n            ]\n          : [\n              d(tokenABalance).mul(Decimal.pow(10, posInfo.displayTokenA?.decimals)).toString(),\n              d(tokenBBalance).mul(Decimal.pow(10, posInfo.displayTokenB?.decimals)).toString()\n            ]\n\n        const baseParams: any = {\n          posId: posInfo.posType === 'farms' ? posInfo.id : posInfo.posId,\n          poolAddress: posInfo.clmmPool,\n          coinTypeA: posInfo.coinTypeA,\n          coinTypeB: posInfo.coinTypeB,\n          amountA,\n          amountB,\n          liquidity: posInfo.liquidity,\n          lowerTick: posInfo.lowerTick,\n          upperTick: posInfo.upperTick,\n          posType: posInfo.posType,\n          rewarderCoinTypes\n        }\n\n        if (posInfo.posType === 'farms') {\n          baseParams.farmsPoolId = posInfo.farmsPool\n          baseParams.farmsPosId = posInfo.id\n        }\n\n        return baseParams\n      })\n\n      console.log('🚀 ~ toRemove ~ paramsList:', paramsList)\n\n      const toastInfo = {\n        getShowInfo: (status: TransactionStatusType) => {\n          const isSuccess = status === 'success'\n          return {\n            modalDescriptionText: isSuccess ? '' : 'Close all positions',\n            toastTitleText: isSuccess ? 'Close all positions successful' : 'Close all positions',\n            toastDescriptionContent: isSuccess ? '' : undefined\n          }\n        }\n      }\n\n      transactionConfirmation(toastInfo)\n\n      const { tx, msafeParams } = await getCloseTsPayloadAll(paramsList)\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n      if (res) {\n        fetchAccountBalance()\n        setPosBaseList([])\n        handleGetPositionList()\n      }\n    } catch (error) {\n      console.error('🚀 ~ toClaim ~ error:', error)\n    } finally {\n      setIsRemoveLoading(false)\n    }\n  }\n\n  const getPositionSortList = (sortByValue: string, sortRule: string, list: PosBaseInfo[]): PosBaseInfo[] | undefined => {\n    if (!list?.length) return\n\n    const getUSDRewards = (rewards: any[] = []) => {\n      return rewards\n        .map(reward => ({\n          ...reward,\n          amountUSD: getTokenAmountValue(reward?.token?.coin_type, reward?.display_amount_owed)\n        }))\n        .filter(r => d(r.display_amount_owed).gt(0))\n    }\n\n    const newList = list.map(positionInfo => {\n      const posId = positionInfo.posId\n      const poolId = positionInfo.clmmPool\n\n      const posPoolInfo = posApiPoolData[poolId]\n      const currentRangeObj = poolRangeObj[poolId]\n      const ranges = currentRangeObj?.ranges?.reduce((acc: any, item: any) => {\n        acc[item.dateType] = item\n        return acc\n      }, {})\n\n      const apr = getPositionApr(posPoolInfo, posPoolsRelatedData[posId], 'day', ranges?.['day'])\n\n      const currentPosData = posLiquidityData[posId]\n      const amountValueA = getTokenAmountValue(positionInfo.displayTokenA?.coin_type, currentPosData?.displayCoinAmountA)\n      const amountValueB = getTokenAmountValue(positionInfo.displayTokenB?.coin_type, currentPosData?.displayCoinAmountB)\n      const totalLiquidity = d(amountValueA).plus(amountValueB)\n\n      const currentPosFeeData = posFeeData[posId]\n      const feeA = getTokenAmountValue(positionInfo.displayTokenA?.coin_type, currentPosFeeData?.displayFeeOwedA)\n      const feeB = getTokenAmountValue(positionInfo.displayTokenB?.coin_type, currentPosFeeData?.displayFeeOwedB)\n      const totalFee = d(feeA).plus(feeB)\n\n      const miningRewards = getUSDRewards(posRewardsData[posId])\n      const farmRewards = getUSDRewards(farmsPosRewardsData[positionInfo.id])\n      const totalRewards = [...miningRewards, ...farmRewards].reduce((acc, cur) => acc.plus(cur.amountUSD), d(0))\n      const totalMiningAmount = miningRewards.reduce((acc, cur) => acc.plus(cur.display_amount_owed), d(0))\n      const totalFarmingAmount = farmRewards.reduce((acc, cur) => acc.plus(cur.display_amount_owed), d(0))\n\n      return {\n        ...positionInfo,\n        apr,\n        totalLiquidity: totalLiquidity.toString(),\n        totalFee: totalFee.toString(),\n        totalRewards: totalRewards.toString(),\n        totalMiningAmount: totalMiningAmount.toString(),\n        totalFarmingAmount: totalFarmingAmount.toString()\n      }\n    })\n\n    const sortMap: Record<string, (a: any, b: any) => number> = {\n      apr: (a, b) => {\n        const aprA = d(a.apr?.aprPercentageTotal ?? 0)\n        const aprB = d(b.apr?.aprPercentageTotal ?? 0)\n        return sortRule === 'asc' ? aprA.minus(aprB).toNumber() : aprB.minus(aprA).toNumber()\n      },\n      liquidity: (a, b) => {\n        const aVal = d(a.totalLiquidity),\n          bVal = d(b.totalLiquidity)\n        return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n      },\n      fees: (a, b) => {\n        const aVal = d(a.totalFee),\n          bVal = d(b.totalFee)\n        return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n      },\n      rewards: (a, b) => {\n        const aVal = d(a.totalRewards),\n          bVal = d(b.totalRewards)\n        return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n      }\n    }\n\n    if (sortMap[sortByValue]) {\n      newList.sort(sortMap[sortByValue])\n    }\n\n    return newList\n  }\n\n  return {\n    getPositionSortList,\n    toCloseAllAction,\n    isRemoveLoading\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { cancelBubble, d, formatCurrency, formatNumber } from '@cetus/utils'\nimport { Box, Center, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Portal, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\nconst PendingFeesBlock = ({ positionInfo, onFeesChange }: { positionInfo: PosBaseInfo; onFeesChange: (value: any) => void }) => {\n  const [isShowInfo, setIsShowInfo] = useState(false)\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const { posFeeData, posFeeDataLoading } = usePositionStore()\n\n  const currentPosData = posFeeData[positionInfo?.posId]\n\n  const amountValueA = getTokenAmountValue(positionInfo?.displayTokenA?.coin_type, currentPosData?.displayFeeOwedA, '--')\n  const amountValueB = getTokenAmountValue(positionInfo?.displayTokenB?.coin_type, currentPosData?.displayFeeOwedB, '--')\n\n  const amountValue = useMemo(() => {\n    if (amountValueA !== '--' && amountValueB !== '--') {\n      return formatCurrency(d(amountValueA).plus(amountValueB).toString(), 2)\n    }\n    return '$--'\n  }, [amountValueA, amountValueB])\n\n  const { isApp } = useWindowWidth()\n\n  useEffect(() => {\n    onFeesChange?.(amountValue) // 调用回调将数据传回父组件\n  }, [amountValue])\n  return (\n    <VStack\n      w={{ base: 'unset', lg: 'unset' }}\n      justify={{ base: 'space-between', lg: 'unset' }}\n      align=\"flex-end\"\n      flexDirection={{ base: 'row', lg: 'column' }}\n    >\n      <Box\n        p=\"12px 0\"\n        onClick={e => cancelBubble(e)}\n        onMouseEnter={Number(amountValueA) == 0 && Number(amountValueB) == 0 ? () => {} : () => setIsShowInfo(true)}\n        onMouseLeave={() => setIsShowInfo(false)}\n      >\n        <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top-start\">\n          <PopoverTrigger>\n            <Center as=\"button\" cursor={Number(amountValueA) == 0 && Number(amountValueB) == 0 ? 'default' : 'help'}>\n              <Skeleton isLoaded={!!amountValue}>\n                <Text\n                  color=\"text_caption\"\n                  // textDecoration={Number(amountValueA) == 0 && Number(amountValueB) == 0 ? 'none' : 'underline dotted'}\n                  // textUnderlineOffset=\"3px\"\n                  borderColor=\"text_caption\"\n                >\n                  {amountValue}\n                </Text>\n              </Skeleton>\n            </Center>\n          </PopoverTrigger>\n          {isShowInfo && amountValue !== '--' && (\n            <Portal>\n              <PopoverContent zIndex=\"2\" w=\"fit-content\" p=\"4px \">\n                <PopoverBody p=\"8px\">\n                  <VStack align=\"flex-start\" minW=\"200px\">\n                    <HStack\n                      w=\"100%\"\n                      justify=\"space-between\"\n                      borderBottom=\"1px solid\"\n                      borderColor=\"border\"\n                      pb=\"8px\"\n                      sx={{\n                        _last: {\n                          borderBottom: 'none',\n                          pb: '0px'\n                        }\n                      }}\n                    >\n                      <SingleTokenInfo\n                        token={positionInfo?.displayTokenA}\n                        imgBoxStyle={{ w: '20px', h: '20px' }}\n                        haveName={false}\n                        symbolFontSize=\"12px\"\n                        warningIcon={{ iconW: '10px', iconH: '10px' }}\n                      />\n                      <VStack align=\"flex-end\" gap=\"4px\">\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          {formatNumber(currentPosData?.displayFeeOwedA)}\n                        </Text>\n                        <Text fontSize=\"12px\">{formatCurrency(amountValueA, 2)}</Text>\n                      </VStack>\n                    </HStack>\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <SingleTokenInfo\n                        token={positionInfo?.displayTokenB}\n                        imgBoxStyle={{ w: '20px', h: '20px' }}\n                        haveName={false}\n                        symbolFontSize=\"12px\"\n                        warningIcon={{ iconW: '10px', iconH: '10px' }}\n                      />\n                      <VStack align=\"flex-end\" gap=\"4px\">\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          {formatNumber(currentPosData?.displayFeeOwedB)}\n                        </Text>\n                        <Text fontSize=\"12px\">{formatCurrency(amountValueB, 2)}</Text>\n                      </VStack>\n                    </HStack>\n                  </VStack>\n                </PopoverBody>\n              </PopoverContent>\n            </Portal>\n          )}\n        </Popover>\n      </Box>\n    </VStack>\n  )\n}\n\nexport default PendingFeesBlock\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { cancelBubble, d, formatCurrency, formatNumber } from '@cetus/utils'\nimport { Box, Center, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Portal, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\nconst PendingRewardsBlock = ({ positionInfo, onRewardsChange }: { positionInfo: PosBaseInfo; onRewardsChange: (value: any) => void }) => {\n  const { getTokenAmountValue } = useTokenPrice()\n  const { coinPriceObj } = useTokenPriceStore()\n  const { posRewardsData, posRewardsDataLoading, posApiPoolData, farmsPosRewardsData, farmsPosRewardsDataLoading } = usePositionStore()\n\n  const haveMining = posApiPoolData[positionInfo?.clmmPool]?.haveMining\n  const haveFarming = posApiPoolData[positionInfo?.clmmPool]?.haveFarming\n\n  const currentPosData = posRewardsData[positionInfo?.posId]\n  const currentPosFarmsData = farmsPosRewardsData[positionInfo?.id]\n\n  const rewardsMiningInfo = useMemo(() => {\n    const list = currentPosData?.map((reward: any) => {\n      console.log('🚀 ~ list ~ reward:', reward)\n      const amountUSD = getTokenAmountValue(reward?.token?.coin_type, reward?.display_amount_owed, '--')\n      return {\n        ...reward,\n        amountUSD\n      }\n    })\n    if (list && list.length > 0) {\n      return list.filter((ele: any) => d(ele.display_amount_owed).gt(0))\n    }\n    return []\n  }, [positionInfo, currentPosData, coinPriceObj])\n\n  const rewardsFarmsInfo = useMemo(() => {\n    const list = currentPosFarmsData?.map((reward: any) => {\n      console.log('🚀 ~ list ~ reward:', reward)\n      const amountUSD = getTokenAmountValue(reward?.token?.coin_type, reward?.display_amount_owed, '--')\n      return {\n        ...reward,\n        amountUSD\n      }\n    })\n    if (list && list.length > 0) {\n      return list.filter((ele: any) => d(ele.display_amount_owed).gt(0))\n    }\n    return []\n  }, [positionInfo, currentPosFarmsData, coinPriceObj])\n\n  const totalUSD = useMemo(() => {\n    let total: any\n    const arr = rewardsMiningInfo.concat(rewardsFarmsInfo)\n    console.log('🚀 ~ totalUSD ~ arr:', arr, rewardsMiningInfo, rewardsFarmsInfo)\n    if (arr?.length > 0) {\n      arr.forEach((ele: any) => {\n        const eleUSD = ele?.amountUSD\n        total = eleUSD == '--' || total == '--' ? '--' : d(total).plus(eleUSD).toString()\n      })\n      return total == '--' ? '$--' : formatCurrency(total, 2)\n    }\n    return '$0'\n  }, [rewardsMiningInfo, rewardsFarmsInfo])\n\n  const { isApp } = useWindowWidth()\n\n  useEffect(() => {\n    onRewardsChange?.(totalUSD) // 调用回调将数据传回父组件\n  }, [totalUSD])\n  return (\n    <>\n      {/* {(rewardsMiningInfo?.length > 0 || haveMining || positionInfo?.posType == 'farms') && ( */}\n      <VStack\n        w={{ base: 'unset', lg: 'unset' }}\n        justify={{ base: 'space-between', lg: 'unset' }}\n        align={{ base: 'flex-end', lg: 'flex-end' }}\n        flexDirection={{ base: 'row', lg: 'column' }}\n      >\n        <Box p=\"12px 0\" onClick={e => cancelBubble(e)}>\n          <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top-start\">\n            <PopoverTrigger>\n              <Center as=\"button\" cursor={totalUSD == '$0' ? 'text' : 'help'}>\n                <Skeleton h=\"14px\" isLoaded={!!totalUSD && !posRewardsDataLoading && !farmsPosRewardsDataLoading}>\n                  <Text\n                    color=\"text_caption\"\n                    // textDecoration={totalUSD == '$0' ? 'none' : 'underline dotted'} textUnderlineOffset=\"3px\"\n                  >\n                    {totalUSD}\n                  </Text>\n                </Skeleton>\n              </Center>\n            </PopoverTrigger>\n            {totalUSD !== '$0' && (\n              <Portal>\n                <PopoverContent zIndex=\"2\" w=\"fit-content\" p=\"4px\">\n                  <PopoverBody borderRadius=\"12px\" p=\"8px\">\n                    <VStack align=\"flex-start\">\n                      {haveMining && (\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          Mining Rewards\n                        </Text>\n                      )}\n                      {rewardsMiningInfo?.map((item: any) => {\n                        return (\n                          <HStack\n                            key={item?.token?.coin_type}\n                            minW=\"200px\"\n                            justify=\"space-between\"\n                            borderBottom=\"1px solid\"\n                            borderColor=\"border\"\n                            pb=\"8px\"\n                            sx={{\n                              _last: {\n                                borderBottom: 'none',\n                                pb: '0px'\n                              }\n                            }}\n                          >\n                            <SingleTokenInfo\n                              token={item?.token}\n                              imgBoxStyle={{ w: '20px', h: '20px' }}\n                              haveName={false}\n                              symbolFontSize=\"12px\"\n                              warningIcon={{ iconW: '10px', iconH: '10px' }}\n                            />\n                            <VStack align=\"flex-end\" gap=\"4px\">\n                              <Text fontSize=\"12px\" color=\"text_caption\">\n                                {formatNumber(item?.display_amount_owed)}\n                              </Text>\n                              <Text fontSize=\"12px\"> {formatCurrency(item?.amountUSD, 2)}</Text>\n                            </VStack>\n                          </HStack>\n                        )\n                      })}\n                      {haveFarming && (\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          Farming Rewards\n                        </Text>\n                      )}\n                      {rewardsFarmsInfo?.map((item: any) => {\n                        return (\n                          <HStack\n                            key={item?.token?.coin_type}\n                            minW=\"200px\"\n                            justify=\"space-between\"\n                            borderBottom=\"1px solid\"\n                            borderColor=\"border\"\n                            pb=\"8px\"\n                            sx={{\n                              _last: {\n                                borderBottom: 'none',\n                                pb: '0px'\n                              }\n                            }}\n                          >\n                            <SingleTokenInfo\n                              token={item?.token}\n                              imgBoxStyle={{ w: '20px', h: '20px' }}\n                              haveName={false}\n                              symbolFontSize=\"12px\"\n                              warningIcon={{ iconW: '10px', iconH: '10px' }}\n                            />\n                            <VStack align=\"flex-end\" gap=\"4px\">\n                              <Text fontSize=\"12px\" color=\"text_caption\">\n                                {formatNumber(item?.display_amount_owed)}\n                              </Text>\n                              <Text fontSize=\"12px\"> {formatCurrency(item?.amountUSD, 2)}</Text>\n                            </VStack>\n                          </HStack>\n                        )\n                      })}\n                    </VStack>\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            )}\n          </Popover>\n        </Box>\n      </VStack>\n      {/* )} */}\n    </>\n  )\n}\n\nexport default PendingRewardsBlock\n","import ExamplePieChart from '@/components/common/aprTooltip/ExamplePieChart'\nimport { CetusTooltip } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { cancelBubble, textEllipses } from '@cetus/utils'\nimport { d, fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Center, HStack, PlacementWithLogical, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { Suspense, useState } from 'react'\nconst PositionAprBlock = ({\n  totalAprDisplay,\n  farmingAprDisplay,\n  placement = 'top',\n  poolInfo,\n  positionApr\n}: {\n  totalAprDisplay?: string\n  farmingAprDisplay?: string\n  poolInfo: any\n  positionApr: any\n  placement?: PlacementWithLogical | undefined\n}) => {\n  const { getTokenListInfo } = useGetToken()\n  const [tokenMap, setTokenMap] = useState<Map<string, any>>(new Map())\n\n  useDeepCompareEffect(() => {\n    if (positionApr?.posMiningReward?.length == 0) return\n    const coinTypeList = positionApr?.posMiningReward?.map((item: any) => item?.coinType)\n    getTokenListInfo(coinTypeList).then((res: any) => {\n      if (res && res?.size > 0) {\n        setTokenMap(res)\n      }\n    })\n  }, [positionApr?.posMiningReward])\n\n  const { isApp } = useWindowWidth()\n\n  const feesData = d(poolInfo?.feeApr).gt(0)\n    ? [\n        {\n          name: 'Fees',\n          value: Number(positionApr?.aprByFee),\n          displayValue: positionApr?.aprByFeeDisplay,\n          color: '#68FFD8'\n        }\n      ]\n    : []\n\n  const COLORS = ['#6868FF', '#FFCA68', '#C8FF00', '#FF562B', '#0A05FF', '#FF65F8', '#FF3232', '#842CFF', '#31D829']\n  // 确保除去sui以外的奖励颜色按照COLORS的顺序展示\n  let colorIndex = -1\n\n  const miningData = positionApr?.posMiningReward\n    ?.map((item: any) => {\n      const { symbol, coinType, posMiningRewardApr, posMiningRewardAprDisplay } = item || {}\n      const isSuiToken = fixCoinType(coinType || '') == fixCoinType(envConfigs?.sui_coin?.coin_type || '')\n      colorIndex = isSuiToken ? colorIndex : colorIndex + 1\n      return {\n        name: `${textEllipses(`${symbol || tokenMap?.get(coinType)?.symbol || ''}`, 8)} Rewards`,\n        value: Number(posMiningRewardApr),\n        displayValue: posMiningRewardAprDisplay,\n        color: isSuiToken ? '#65C8FF' : COLORS[colorIndex]\n      }\n    })\n    .sort((a: any, b: any) => b.value - a.value)\n\n  const originData = feesData.concat(miningData)\n  return (\n    <HStack\n      justify=\"flex-end\"\n      w=\"100%\"\n      onClick={e => {\n        isApp ? cancelBubble(e) : ''\n      }}\n    >\n      {poolInfo?.haveMining && totalAprDisplay !== '--' ? (\n        <CetusTooltip\n          placement={placement}\n          tooltip={\n            <VStack w=\"100%\" p=\"4px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <Text color=\"text_caption\">Total APR</Text>\n                <Text color=\"text_caption\" fontSize=\"16px\">\n                  {totalAprDisplay}\n                </Text>\n              </HStack>\n              <TooltipInfo originData={originData} />\n            </VStack>\n          }\n        >\n          <Center>\n            <AprInfo poolInfo={poolInfo} totalAprDisplay={totalAprDisplay} farmingAprDisplay={farmingAprDisplay} />\n          </Center>\n        </CetusTooltip>\n      ) : (\n        <Center>\n          <AprInfo poolInfo={poolInfo} totalAprDisplay={totalAprDisplay} farmingAprDisplay={farmingAprDisplay} />\n        </Center>\n      )}\n    </HStack>\n  )\n}\nexport default PositionAprBlock\n\nconst AprInfo = ({\n  poolInfo,\n  totalAprDisplay,\n  farmingAprDisplay\n}: {\n  haveFarming?: boolean\n  poolInfo?: any\n  totalAprDisplay?: string\n  farmingAprDisplay?: string\n}) => {\n  return (\n    <VStack align=\"flex-end\" gap=\"4px\">\n      <Text as=\"span\" color=\"primary\" cursor={poolInfo?.haveMining ? 'help' : 'text'}>\n        {totalAprDisplay}\n      </Text>\n      {poolInfo?.haveFarming && (\n        <Text fontWeight=\"500\" p=\"2px 4px\" fontSize=\"12px\" color=\"primary_yellow\" bg=\"primary_yellow_opacity.10\" borderRadius=\"4px\">\n          {farmingAprDisplay == '--' ? '--' : '+' + farmingAprDisplay}\n        </Text>\n      )}\n    </VStack>\n  )\n}\n\nconst TooltipInfo = ({ originData }: { originData?: any }) => {\n  return (\n    <Suspense\n      fallback={\n        <HStack justify=\"space-between\" gap=\"20px\" w=\"100%\">\n          <SkeletonCircle w=\"64px\" h=\"64px\" />\n          <VStack w=\"calc(100% - 84px)\">\n            <HStack justify=\"space-between\" w=\"100%\">\n              <Skeleton w=\"40%\" h=\"16px\" />\n              <Skeleton w=\"30%\" h=\"16px\" />\n            </HStack>\n            <HStack justify=\"space-between\" w=\"100%\">\n              <Skeleton w=\"40%\" h=\"16px\" />\n              <Skeleton w=\"30%\" h=\"16px\" />\n            </HStack>\n            <HStack justify=\"space-between\" w=\"100%\">\n              <Skeleton w=\"40%\" h=\"16px\" />\n              <Skeleton w=\"30%\" h=\"16px\" />\n            </HStack>\n          </VStack>\n        </HStack>\n      }\n    >\n      <ExamplePieChart originData={originData} />\n    </Suspense>\n  )\n}\n","export default \"__VITE_PUBLIC_ASSET__364637ab__\"","import { CetusTooltip } from '@cetus/design'\nimport { cancelBubble } from '@cetus/utils'\nimport { Center, Flex, HStack, HTMLChakraProps, Image, Skeleton, Text } from '@chakra-ui/react'\nimport icon_active from '/images/icon_active_new@2x.png'\ninterface StatusPositionProps extends HTMLChakraProps<'div'> {\n  isActive: boolean\n  isLoading?: boolean\n  imgStyle?: {\n    imgW?: string\n    imgH?: string\n  }\n}\nfunction StatusPosition({ isActive, isLoading, imgStyle = {}, ...rest }: StatusPositionProps) {\n  const { imgW = '16px', imgH = '12px' } = imgStyle\n  return (\n    <Flex borderRadius=\"8px\" align=\"center\" justifyContent=\"center\" bg={'bg_secondary'} h=\"18px\" p=\"0px 8px\" {...rest}>\n      <CetusTooltip\n        placement=\"top\"\n        tooltip={\n          <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"240px\" textAlign=\"left\">\n            {isActive\n              ? 'The price of this pool is currently within your position price range.'\n              : 'The price of this pool is currently out of your position price range.'}\n          </Text>\n        }\n      >\n        <Center onClick={e => cancelBubble(e)}>\n          <HStack align=\"center\">\n            {isActive && <Image w={imgW} h={imgH} src={icon_active} />}\n            <Skeleton w=\"100%\" isLoaded={!isLoading}>\n              <Text fontSize=\"12px\" color={isActive ? 'primary' : 'primary_gray'} fontWeight=\"500\">\n                {isActive ? 'Active' : 'Inactive'}\n              </Text>\n            </Skeleton>\n          </HStack>\n        </Center>\n      </CetusTooltip>\n    </Flex>\n  )\n}\n\nexport default StatusPosition\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport { AddressCopyLink, CetusTooltip } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, d } from '@cetus/utils'\nimport { Box, Center, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport StatusPosition from './StatusPosition'\n\nfunction PositionPriceRange({\n  positionInfo,\n  tokenName,\n  priceDirect,\n  isShowIcon\n}: {\n  positionInfo: PosBaseInfo\n  tokenName: string | undefined\n  priceDirect?: boolean\n  isShowIcon?: boolean\n}) {\n  const { posPoolsRelatedData } = usePositionStore()\n  const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const { isApp } = useWindowWidth()\n\n  const minPrice = useMemo(() => {\n    return currentPosPoolsRelatedData?.minPriceOrigin\n  }, [currentPosPoolsRelatedData])\n\n  const maxPrice = useMemo(() => {\n    return currentPosPoolsRelatedData?.maxPriceOrigin\n  }, [currentPosPoolsRelatedData])\n\n  const currPrice = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentPriceOrigin\n  }, [currentPosPoolsRelatedData])\n\n  const [elementWidth, setElementWidth] = useState<number>(0)\n  const elementRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const updateWidths = () => {\n      if (elementRef.current) setElementWidth(elementRef.current.offsetWidth)\n    }\n    const resizeObserver = new ResizeObserver(updateWidths)\n    if (elementRef.current) resizeObserver.observe(elementRef.current)\n    return () => {\n      if (elementRef.current) resizeObserver.unobserve(elementRef.current)\n    }\n  }, [minPrice, maxPrice, currPrice])\n\n  const sliderML = useMemo(() => {\n    if (maxPrice === '∞') return '0px'\n    if (currPrice && minPrice && maxPrice && elementWidth) {\n      if (d(currPrice).lessThanOrEqualTo(maxPrice) && d(currPrice).greaterThanOrEqualTo(minPrice)) {\n        const relativePosition = d(currPrice)\n          .sub(minPrice)\n          .div(d(maxPrice).sub(d(minPrice)))\n          .toString()\n        return `${d(elementWidth).mul(relativePosition).toFixed(0)}px`\n      }\n      if (d(currPrice).lt(minPrice)) {\n        return '6px'\n      }\n      if (d(currPrice).gt(maxPrice)) {\n        return 'calc(100% + 6px)'\n      }\n    }\n    return '0px'\n  }, [currPrice, minPrice, maxPrice, elementWidth])\n\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack align={{ base: 'flex-end', lg: 'flex-start' }} gap={{ base: '4px', lg: '8px' }} w=\"100%\" maxW=\"100%\">\n      <HStack\n        justify={{ base: 'flex-end', lg: 'flex-start' }}\n        maxW=\"100%\"\n        w={{ base: '100%', lg: 'unset' }}\n        borderRadius=\"12px\"\n        pr={{ base: '0', lg: '16px' }}\n      >\n        <Skeleton isLoaded={!!currentPosPoolsRelatedData?.minPrice && !!currentPosPoolsRelatedData?.maxPrice} borderRadius=\"4px\">\n          {priceDirect ? (\n            <Text lineHeight=\"1\" fontSize=\"14px\" color=\"text_caption\" textAlign=\"right\">\n              {`${currentPosPoolsRelatedData?.minPrice} - ${currentPosPoolsRelatedData?.maxPrice}`}\n            </Text>\n          ) : (\n            <Text lineHeight=\"1\" fontSize=\"14px\" color=\"text_caption\" textAlign=\"right\">\n              {`${currentPosPoolsRelatedData?.minPriceResever} - ${currentPosPoolsRelatedData?.maxPriceResever}`}\n            </Text>\n          )}\n        </Skeleton>\n        {!isApp && <StatusPosition isActive={isActive} isLoading={currentPosPoolsRelatedData?.currentStatus == ''} />}\n\n        {isShowIcon && !isApp && (\n          <HStack onClick={e => cancelBubble(e)}>\n            <CetusTooltip\n              placement=\"top\"\n              tooltip={\n                <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n                  <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                    <Text fontSize={{ base: '14px', lg: '12px' }}>ID</Text>\n                    <Skeleton isLoaded={!!tokenName}>\n                      <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                        {tokenName?.split('|')[1]}\n                      </Text>\n                    </Skeleton>\n                  </HStack>\n                  <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                    <Text fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                      Address\n                    </Text>\n                    <AddressCopyLink\n                      fontWeight=\"500\"\n                      color=\"text_caption\"\n                      address={positionInfo?.id}\n                      showLink={false}\n                      fontSize={{ base: '14px', lg: '12px' }}\n                      onClickLink={() => {\n                        window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                      }}\n                    />\n                  </HStack>\n                </HStack>\n              }\n            >\n              <Center border=\"1px solid\" borderColor=\"border\" borderRadius=\"50%\">\n                <Icon xlinkHref=\"#icon-icon_info\" width=\"16px\" height=\"16px\" />\n              </Center>\n            </CetusTooltip>\n          </HStack>\n        )}\n      </HStack>\n      <HStack>\n        {isApp && <StatusPosition isActive={isActive} isLoading={currentPosPoolsRelatedData?.currentStatus == ''} />}\n        <Skeleton h=\"6px\" isLoaded={!!currentPosPoolsRelatedData?.currentPriceOrigin} borderRadius=\"4px\">\n          <Box w=\"88px\" h=\"6px\" bgImage={maxPrice === '∞' ? 'none' : \"url('/images/img_inactive_bg@2x.png')\"} bgSize=\"88px 6px\">\n            <Box\n              w={maxPrice === '∞' ? '88px' : '56px'}\n              h={maxPrice === '∞' ? '2px' : '6px'}\n              position=\"relative\"\n              ref={elementRef}\n              background={\n                maxPrice === '∞' ? 'linear-gradient(135deg, #68FFD8 0%, #0091FF 100%)' : isActive ? \"url('/images/img_range@2x.png')\" : 'none'\n              }\n              ml={maxPrice === '∞' ? '0px' : '16px'}\n              bgSize=\"100% 6px\"\n              bgPosition=\"center\"\n              bgRepeat=\"no-repeat\"\n            >\n              {maxPrice !== '∞' && (\n                <Box\n                  w=\"2px\"\n                  h=\"8px\"\n                  bg=\"#fff\"\n                  borderRadius=\"8px\"\n                  position=\"absolute\"\n                  top=\"50%\"\n                  left={sliderML}\n                  transform=\"translateY(-50%)\"\n                  zIndex=\"5\"\n                />\n              )}\n            </Box>\n          </Box>\n        </Skeleton>\n      </HStack>\n    </VStack>\n  )\n}\n\nexport default PositionPriceRange\n","import useClaimPosition from '@/hooks/position/useClaimPosition'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionApr from '@/hooks/position/usePositionApr'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosBaseInfo } from '@/types'\nimport { AddressCopyLink, Block, TooltipIcon } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Button, HStack, Image, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport LiquidityValueBlock from './LiquidityValueBlock'\nimport PendingFeesBlock from './PendingFeesBlock'\nimport PendingRewardsBlock from './PendingRewardsBlock'\nimport PositionAprBlock from './PositionAprBlock'\nimport PositionPriceRange from './PositionPriceRange'\n\nfunction PositionItemContent({\n  positionInfo,\n  positionItemWidth = [],\n  priceDirect,\n  showMiningIcon,\n  showFarmingIcon\n}: {\n  positionInfo: PosBaseInfo\n  positionItemWidth?: string[]\n  priceDirect?: boolean\n  showMiningIcon?: boolean\n  showFarmingIcon?: boolean\n}) {\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  const { getClmmPosName } = usePosHelper()\n  const navigate = useNavigate()\n  const { setCurrentPosDetailTab } = usePositionDetailStore()\n  const { posPoolsOriginalData, posPoolsRelatedData, posApiPoolData, poolRangeObj } = usePositionStore()\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n  const posPoolInfo = posApiPoolData[positionInfo?.clmmPool]\n\n  const tokenName = useMemo(() => {\n    if (positionInfo?.tokenName) {\n      return positionInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[positionInfo?.clmmPool]?.index\n      return getClmmPosName(Number(positionInfo?.index), position_index)\n    }\n  }, [positionInfo?.tokenName, positionInfo?.index, positionInfo?.clmmPool, posPoolsOriginalData])\n\n  const clickDetail = () => {\n    console.log('🚀 ~ PoolItem ~ poolInfo:', positionInfo)\n    navigate(`/position-detail/${positionInfo?.id}`)\n  }\n\n  const [isShowAction, setIsShowAction] = useState(false)\n\n  const { getPositionApr } = usePositionApr()\n  const positionApr = useMemo(() => {\n    if (isAvailableObject(currentPosPoolsRelatedData) && isAvailableObject(posPoolInfo) && isAvailableObject(poolRangeObj)) {\n      const currentRangeObj = poolRangeObj[positionInfo?.clmmPool]\n      if (currentRangeObj) {\n        const ranges = currentRangeObj?.ranges.reduce((acc: any, item: any) => {\n          acc[item.dateType] = item\n          return acc\n        }, {})\n        return getPositionApr(posPoolInfo, currentPosPoolsRelatedData, 'day', ranges['day'])\n      }\n    }\n  }, [currentPosPoolsRelatedData, posPoolInfo, positionInfo, poolRangeObj])\n\n  const { toClaimPosition, isClaimLoading } = useClaimPosition()\n  const toClaim = () => {\n    toClaimPosition(positionInfo, null, true)\n  }\n\n  const [fees, setFees] = useState(null)\n  const [rewards, setRewards] = useState(null)\n\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  return (\n    <Block\n      onMouseEnter={() => {\n        setTimeout(() => {\n          setIsShowAction(true)\n        }, 40)\n      }}\n      onMouseLeave={() => {\n        setTimeout(() => {\n          setIsShowAction(false)\n        }, 80)\n      }}\n      w=\"100%\"\n      bg=\"position_bg\"\n      border=\"none\"\n      p={{ base: '16px 8px 12px', lg: '20px 16px ' }}\n      borderRadius=\"16px\"\n      onClick={clickDetail}\n    >\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <VStack w=\"100%\" align=\"flex-start\" gap=\"12px\">\n          {isApp && (\n            <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n              <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }}>\n                  NFT ID\n                </Text>\n                <Skeleton isLoaded={!!tokenName}>\n                  <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                    {tokenName?.split('|')[1]}\n                  </Text>\n                </Skeleton>\n              </HStack>\n              <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                  Address\n                </Text>\n                <AddressCopyLink\n                  fontWeight=\"500\"\n                  color=\"text_caption\"\n                  address={positionInfo?.id}\n                  showLink={false}\n                  fontSize={{ base: '14px', lg: '12px' }}\n                  onClickLink={() => {\n                    window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                  }}\n                />\n              </HStack>\n            </HStack>\n          )}\n          <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} gap={{ base: '12px', lg: '8px' }}>\n            <HStack w={{ base: '100%', lg: positionItemWidth[0] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && (\n                <Text color=\"primary_gray\" whiteSpace=\"nowrap\">\n                  Price Range\n                </Text>\n              )}\n              <PositionPriceRange positionInfo={positionInfo} tokenName={tokenName} priceDirect={priceDirect} isShowIcon={isShowAction} />\n            </HStack>\n            <HStack w={{ base: '100%', lg: positionItemWidth[1] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && (\n                <HStack gap=\"2px\">\n                  <Text color=\"primary_gray\">APR</Text>\n                  <TooltipIcon\n                    tooltipCon={\n                      <span>\n                        APR based on the past 24h historical trade fees and emissions. Only positions in range earn yield. Past performance is not\n                        indicative of future results. <br />\n                        Calculations are an estimate and only for reference.\n                      </span>\n                    }\n                  />\n                </HStack>\n              )}\n              <Skeleton isLoaded={!!positionApr}>\n                <PositionAprBlock\n                  poolInfo={posPoolInfo}\n                  positionApr={positionApr}\n                  farmingAprDisplay={isActive ? positionApr?.displayAprPercentageTotal : '0%'}\n                  totalAprDisplay={isActive ? positionApr?.displayAprPercentageTotal : '0%'}\n                />\n                {/* <Text textAlign=\"right\" color=\"primary\">\n                  {isActive ? positionApr?.displayAprPercentageTotal : '0%'}\n                </Text> */}\n              </Skeleton>\n            </HStack>\n            <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[2] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && <Text color=\"primary_gray\">Liquidity</Text>}\n              <LiquidityValueBlock positionInfo={positionInfo} fontSize=\"14px\" isPosList />\n            </HStack>\n            <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && <Text color=\"primary_gray\">Pending Fees</Text>}\n              <PendingFeesBlock positionInfo={positionInfo} onFeesChange={setFees} />\n            </HStack>\n            {(showMiningIcon || showFarmingIcon) && (\n              <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Pending Rewards</Text>}\n                <HStack gap=\"4px\">\n                  {isApp && showMiningIcon && <Image w=\"16px\" h=\"16px\" src=\"/images/icon_mining.png\" />}\n                  {isApp && showFarmingIcon && <Image w=\"18px\" h=\"18px\" src=\"/images/icon_farms.png\" />}\n                  <PendingRewardsBlock positionInfo={positionInfo} onRewardsChange={setRewards} />\n                </HStack>\n              </HStack>\n            )}\n          </HStack>\n          {isApp && (\n            <Button\n              w={{ base: '100%', lg: '32px' }}\n              h={{ base: '40px', lg: '90px' }}\n              borderRadius=\"8px\"\n              variant=\"ghost\"\n              p=\"0 !important\"\n              _hover={{\n                svg: {\n                  fill: 'text_caption'\n                }\n              }}\n            >\n              <Text color=\"primary_gray\">Manage</Text>\n              <Icon xlinkHref=\"#icon-icon_list_token\" w=\"14px\" h=\"14px\" />\n            </Button>\n          )}\n        </VStack>\n      </HStack>\n      {/* 暂时不做 后面加了move range一起 */}\n      {/* <Box\n        sx={{\n          maxHeight: isShowAction ? '44px' : '0',\n          opacity: isShowAction ? 1 : 0,\n          overflow: 'hidden',\n          transition: 'all 0.2s ease'\n        }}\n      >\n        <HStack w=\"100%\" justify=\"space-between\" mt=\"12px\">\n          <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n            <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n              <Text fontSize={{ base: '14px', lg: '12px' }}>NFT ID</Text>\n              <Skeleton isLoaded={!!tokenName}>\n                <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                  {tokenName?.split('|')[1]}\n                </Text>\n              </Skeleton>\n            </HStack>\n            <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n              <Text fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                Address\n              </Text>\n              <AddressCopyLink\n                fontWeight=\"500\"\n                color=\"text_caption\"\n                address={positionInfo?.id}\n                showLink={false}\n                fontSize={{ base: '14px', lg: '12px' }}\n                onClickLink={() => {\n                  window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                }}\n              />\n            </HStack>\n          </HStack>\n          <HStack>\n            <Button\n              variant=\"outline\"\n              fontSize=\"12px\"\n              bg=\"none\"\n              w=\"96px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              onClick={() => setCurrentPosDetailTab('increase')}\n            >\n              Increase\n            </Button>\n            <Button variant=\"outline\" fontSize=\"12px\" bg=\"none\" w=\"96px\" h=\"32px\" borderRadius=\"8px\" onClick={() => setCurrentPosDetailTab('remove')}>\n              Remove\n            </Button>\n            <Button\n              variant=\"outline\"\n              fontSize=\"12px\"\n              bg=\"none\"\n              w=\"96px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              onClick={e => {\n                cancelBubble(e)\n                toClaim()\n              }}\n              isLoading={isClaimLoading}\n              disabled={isClaimLoading || (fees == '$0' && rewards == '$0')}\n            >\n              Claim Yield\n            </Button>\n           <Button variant=\"outline\" fontSize=\"12px\" bg=\"none\" w=\"96px\" h=\"32px\" borderRadius=\"8px\">\n              Move Range\n            </Button> \n          </HStack>\n        </HStack>\n      </Box> */}\n    </Block>\n  )\n}\n\nexport default PositionItemContent\n","import usePositionListAction from '@/hooks/position/usePositionListAction'\nimport { TableSortTh } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { HStack, Image, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport PositionItemContent from './PositionItemContent'\n\nconst itemWidth = ['480px', '20%', '20%', '20%', '20%']\n\nconst SORT_BY_LIST = [\n  { label: 'APR', value: 'apr' },\n  { label: 'Liquidity', value: 'liquidity' },\n  { label: 'Pending Fees', value: 'fees' },\n  { label: 'Pending Rewards', value: 'rewards' }\n]\n\nconst SORT_BY_OBJECT = SORT_BY_LIST.reduce((obj: any, item) => {\n  obj[item.value] = item\n  return obj\n}, {})\n\nfunction PositionItem({ poolInfo, priceDirect }: { poolInfo: any; priceDirect?: boolean }) {\n  const { coinPriceObj } = useTokenPriceStore()\n  const { getPositionSortList } = usePositionListAction()\n\n  const [sortRule, setSortRule] = useState<'asc' | 'desc'>('desc')\n  const [sortBy, setSortBy] = useState<{ label: string; value: string }>({ label: '', value: '' })\n\n  const handleClickSort = (item: any) => {\n    if (item?.value === sortBy.value) {\n      setSortRule(prev => (prev === 'desc' ? 'asc' : 'desc'))\n    } else {\n      setSortRule('desc')\n      setSortBy(item)\n    }\n  }\n  const [sortList, setSortList] = useState([])\n  const positionList = useMemo(() => {\n    if (!isAvailableObject(poolInfo)) return []\n    const sortedList: any = getPositionSortList(sortBy.value, sortRule, poolInfo.list)\n    const list = sortBy.value ? sortedList : poolInfo.list\n\n    console.log('🚀 ~ positionList ~ sortedList:', list, sortedList)\n    setSortList(sortedList)\n    return list\n  }, [sortBy.value, sortRule, poolInfo?.list, coinPriceObj])\n\n  const hasPositiveAmount = (key: 'totalMiningAmount' | 'totalFarmingAmount') => sortList.some((item: any) => d(item[key]).gt(0))\n\n  const showMiningIcon = useMemo(() => hasPositiveAmount('totalMiningAmount'), [sortList])\n  const showFarmingIcon = useMemo(() => hasPositiveAmount('totalFarmingAmount'), [sortList])\n\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack gap=\"12px\" w=\"100%\">\n      {!isApp && (\n        <HStack w=\"100%\" p=\"0 16px\">\n          <Text w={itemWidth[0]}>Price Range</Text>\n          {SORT_BY_LIST.map((item, idx) => {\n            if (item.value !== 'rewards' || showMiningIcon || showFarmingIcon) {\n              return (\n                <HStack key={item.value} gap=\"4px\" w={itemWidth[idx + 1]} justify=\"flex-end\">\n                  {showMiningIcon && item.value === 'rewards' && <Image w=\"16px\" h=\"16px\" src=\"/images/icon_mining.png\" />}\n                  {showFarmingIcon && item.value === 'rewards' && <Image w=\"18px\" h=\"18px\" src=\"/images/icon_farms.png\" />}\n                  <TableSortTh\n                    labelInfo={SORT_BY_OBJECT[item.value]}\n                    sortRule={sortRule}\n                    sortBy={sortBy}\n                    clickSort={handleClickSort}\n                    tooltip={{\n                      content:\n                        item.value === 'apr' ? (\n                          <span>\n                            APR based on the past 24h historical trade fees and emissions. Only positions in range earn yield. Past performance is not\n                            indicative of future results. <br />\n                            Calculations are an estimate and only for reference.\n                          </span>\n                        ) : (\n                          ''\n                        )\n                    }}\n                  />\n                </HStack>\n              )\n            }\n            return null\n          })}\n        </HStack>\n      )}\n      <VStack w=\"100%\" maxH=\"440px\" overflow=\"auto\" gap=\"12px\">\n        {positionList.map((item: any) => (\n          <PositionItemContent\n            key={item?.id}\n            positionInfo={item}\n            positionItemWidth={itemWidth}\n            priceDirect={priceDirect}\n            showMiningIcon={showMiningIcon}\n            showFarmingIcon={showFarmingIcon}\n          />\n        ))}\n      </VStack>\n    </VStack>\n  )\n}\n\nexport default PositionItem\n"],"names":["useQueryParams","search","useLocation","queryParams","setQueryParams","useState","useLayoutEffect","searchParams","FarmingIcon","tooltip","rest","navigate","useNavigate","isApp","useWindowWidth","jsx","HStack","e","cancelBubble","CetusTooltip","Text","Center","Image","VaultPositionRange","props","minPrice","maxPrice","currPrice","elementWidth","setElementWidth","currPriceWidth","setCurrPriceWidth","elementRef","useRef","currPriceRef","useEffect","updateWidths","resizeObserver","priceResizeObserver","sliderML","useMemo","d","relativePosition","priceLeft","left","jsxs","Box","Popover","PopoverTrigger","PopoverContent","PopoverBody","formatNumberWithDown","Skeleton","VaultInfo","vaultId","displayTokenA","displayTokenB","feeDisplay","vaultListObj","useVaultsListV2Store","apiVaultInfo","isAvailableObject","VStack","Flex","CoinPairImage","Block","VTextLabelBox","VaultsAprTooltipContent","VaultModal","currentAccount","useAccountStore","isOpen","setIsOpen","category","clmmPool","isReverse","isOpenWalletModal","getCurrentVaultDetail","getCurrentVaultContractInfo","useCurrentVaultDetail","clearVaultsActionData","useVaultsActionStore","fetchAccountBalance","useAccountBalance","vaultsPoolObj","useVaultsPoolStore","currentVaultPool","getPythLastPrice","useGetPythLastPrice","isMountedRef","useInterval","autoRefresh","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","VaultsAction","PoweredByHaedal","usePositionApr","estPositionAPRWithMultiMethod","lowerUserPrice","upperUserPrice","lowerHistPrice","upperHistPrice","retroLower","retroRange","userRange","histRange","retroRangeD","userRangeD","histRangeD","posPoolInfo","posRangeInfo","dateType","range","minPriceRaw","maxPriceRaw","tokenA","tokenB","miningAprList","feeApr","feeApr7d","feeApr30d","decimalA","decimalB","isFullRange","lower","upper","beforeContractPriceLowest","TickMath","beforeContractPriceHighest","hisLowerPrice","hisUpperPrice","positionMulti","aprByFee","posMiningReward","aprPercentageTotal","reward","posMiningRewardApr","posMiningRewardAprDisplay","aprProcessing","formatPercentage","usePositionListAction","isRemoveLoading","setIsRemoveLoading","getPositionApr","getTokenAmountValue","useTokenPrice","posPoolsRelatedData","posLiquidityData","posFeeData","farmsPosRewardsData","posRewardsData","posApiPoolData","poolRangeObj","setPosBaseList","usePositionStore","mevProtect","transactionMode","maxCapForGas","customGasPrice","useGlobalStore","getCloseTsPayloadAll","usePosRemove","signAndExecuteTransaction","transactionConfirmation","useTransaction","getPositionBaseList","getPosRelatedData","usePositionList","handleGetPositionList","list","sortByValue","sortRule","getUSDRewards","rewards","_a","r","newList","positionInfo","posId","poolId","currentRangeObj","ranges","acc","item","apr","currentPosData","amountValueA","_b","amountValueB","_c","totalLiquidity","currentPosFeeData","feeA","_d","feeB","_e","totalFee","miningRewards","farmRewards","totalRewards","cur","totalMiningAmount","totalFarmingAmount","sortMap","a","b","aprA","aprB","aVal","bVal","closeAllPositionList","paramsList","posInfo","currentPosLiquidityData","currentPosRewardsData","currentPosPoolInfo","rewarderCoinTypes","arr","tokenABalance","tokenBBalance","amountA","amountB","Decimal","baseParams","toastInfo","status","isSuccess","tx","msafeParams","res","error","PendingFeesBlock","onFeesChange","isShowInfo","setIsShowInfo","posFeeDataLoading","amountValue","formatCurrency","Portal","SingleTokenInfo","formatNumber","PendingRewardsBlock","onRewardsChange","coinPriceObj","useTokenPriceStore","posRewardsDataLoading","farmsPosRewardsDataLoading","haveMining","haveFarming","currentPosFarmsData","rewardsMiningInfo","amountUSD","ele","rewardsFarmsInfo","totalUSD","total","eleUSD","Fragment","PositionAprBlock","totalAprDisplay","farmingAprDisplay","placement","poolInfo","positionApr","getTokenListInfo","useGetToken","tokenMap","setTokenMap","useDeepCompareEffect","coinTypeList","feesData","COLORS","colorIndex","miningData","symbol","coinType","isSuiToken","fixCoinType","envConfigs","textEllipses","originData","TooltipInfo","AprInfo","Suspense","SkeletonCircle","ExamplePieChart","icon_active","StatusPosition","isActive","isLoading","imgStyle","imgW","imgH","PositionPriceRange","tokenName","priceDirect","isShowIcon","currentPosPoolsRelatedData","getExplorerUrl","useExplorer","AddressCopyLink","Icon","PositionItemContent","positionItemWidth","showMiningIcon","showFarmingIcon","getClmmPosName","usePosHelper","setCurrentPosDetailTab","usePositionDetailStore","posPoolsOriginalData","position_index","clickDetail","isShowAction","setIsShowAction","useClaimPosition","fees","setFees","setRewards","TooltipIcon","LiquidityValueBlock","Button","itemWidth","SORT_BY_LIST","SORT_BY_OBJECT","obj","PositionItem","getPositionSortList","setSortRule","sortBy","setSortBy","handleClickSort","prev","sortList","setSortList","positionList","sortedList","hasPositiveAmount","key","idx","TableSortTh"],"mappings":"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"}