{"version":3,"file":"Limit-BVe4GbF9.js","sources":["../../src/components/limit/OrdersCard.tsx","../../src/components/limit/HistoryCard.tsx","../../src/components/limit/HistoryTableItem.tsx","../../src/components/limit/HistoryTableList.tsx","../../src/store/limit/useLimitAction.ts","../../src/hooks/common/useGetPairPrice.ts","../../src/hooks/limit/useRefreshCoinMarketPrice.ts","../../src/hooks/limit/useLimitAddAction.ts","../../src/components/limit/ConfirmModal.tsx","../../src/components/limit/CustomExpiryModal.tsx","../../src/components/limit/LimitExpires.tsx","../../src/components/limit/LimitPrice.tsx","../../src/components/limit/LimitAction.tsx","../../src/components/limit/OrderTableItem.tsx","../../src/components/limit/OrderTableList.tsx","../../src/pages/Limit.tsx"],"sourcesContent":["import useLimitListStore from '@/store/limit/useLimitList'\nimport { LimitOrderInfo } from '@/types/limit'\nimport { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { NoData, Pagination } from '@cetus/ui-kit'\nimport { Center, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { CoinInfoBlock } from './OrderItemBlock/CoinInfoBlock'\nimport { ExpiryBlock } from './OrderItemBlock/ExpiryBlock'\nimport { FilledSizeBlock } from './OrderItemBlock/FilledSizeBlock'\nimport { OrderActionBlock } from './OrderItemBlock/OrderActionBlock'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\n\nexport function OrdersCard() {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { myOrderList, orderListLoading } = useLimitListStore()\n  const pageSize = 10\n  const [paginationList, setPaginationList] = useState<LimitOrderInfo[]>([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  useEffect(() => {\n    if (myOrderList?.length > 0) {\n      setTotal(myOrderList?.length)\n      const start = (currentPage - 1) * pageSize\n      const end = start + pageSize\n      setPaginationList(myOrderList.slice(start, end))\n    }\n  }, [currentPage, myOrderList])\n  return (\n    <VStack w=\"100%\">\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} borderRadius=\"16px\" />\n      ) : orderListLoading ? (\n        <Block p={{ base: '12px', lg: '20px 16px' }} borderRadius=\"16px\">\n          <VStack\n            gap=\"20px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '20px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {[{}, {}].map((item, index) => (\n              <OrdersCardLoading key={index} />\n            ))}\n          </VStack>\n        </Block>\n      ) : myOrderList.length === 0 ? (\n        <NoData type=\"nodata\" text=\"You don't have any open orders yet.\" borderRadius=\"16px\" />\n      ) : (\n        <Block borderRadius=\"16px\" p={{ base: '12px', lg: '20px 16px' }} h={paginationList?.length > 8 ? '927px' : 'unset'} overflowY=\"auto\">\n          <VStack\n            gap=\"20px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '20px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {paginationList?.map((orderInfo: any) => <OrdersCardItem key={orderInfo?.order_id} orderInfo={orderInfo} />)}\n          </VStack>\n          {!orderListLoading && myOrderList?.length > pageSize && (\n            <Center mt=\"12px\">\n              <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n            </Center>\n          )}\n        </Block>\n      )}\n    </VStack>\n  )\n}\n\nconst OrdersCardItem = ({ orderInfo }: { orderInfo: any }) => {\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <CoinInfoBlock info={orderInfo} imgSize=\"28px\" />\n        {!isApp && <OrderActionBlock orderInfo={orderInfo} />}\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Price</Text>\n        <PriceBlock info={orderInfo} />\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Filled Size</Text>\n        <FilledSizeBlock info={orderInfo} />\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Expiry</Text>\n        <ExpiryBlock info={orderInfo} />\n      </HStack>\n      {isApp && <OrderActionBlock orderInfo={orderInfo} />}\n    </VStack>\n  )\n}\n\nexport const OrdersCardLoading = () => {\n  return (\n    <VStack w=\"100%\" gap=\"12px\" align=\"flex-start\">\n      <HStack w=\"100%\" gap=\"0\" justify=\"space-between\">\n        <HStack gap=\"0\">\n          <HStack gap=\"0px\" mr=\"8px\" align=\"flex-start\">\n            <SkeletonCircle size=\"8\" />\n            <SkeletonCircle size=\"8\" />\n          </HStack>\n          <Skeleton height=\"4\" width=\"100px\" />\n        </HStack>\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Skeleton height=\"4\" width=\"180px\" />\n        <Skeleton height=\"4\" width=\"150px\" />\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Skeleton height=\"4\" width=\"180px\" />\n        <Skeleton height=\"4\" width=\"150px\" />\n      </HStack>\n    </VStack>\n  )\n}\n","import { LimitOrderInfo } from '@/types/limit'\nimport { Block } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { NoData, Pagination } from '@cetus/ui-kit'\nimport { Box, Center, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { CoinInfoBlock } from './OrderItemBlock/CoinInfoBlock'\nimport { ExpiryBlock } from './OrderItemBlock/ExpiryBlock'\nimport { FilledSizeBlock } from './OrderItemBlock/FilledSizeBlock'\nimport { LimitExpendBlock } from './OrderItemBlock/LimitExpendBlock'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\nimport { StatusBlock } from './OrderItemBlock/StatusBlock'\nimport { OrdersCardLoading } from './OrdersCard'\n\ntype HistoryTableListProps = {\n  historyOrderList: LimitOrderInfo[]\n  historyOrderLoading: boolean\n}\nexport function HistoryCard(props: HistoryTableListProps) {\n  const { historyOrderList, historyOrderLoading } = props\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const pageSize = 10\n  const [paginationList, setPaginationList] = useState<LimitOrderInfo[]>([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  useEffect(() => {\n    if (historyOrderList?.length > 0) {\n      setTotal(historyOrderList?.length)\n      const start = (currentPage - 1) * pageSize\n      const end = start + pageSize\n      setPaginationList(historyOrderList.slice(start, end))\n    }\n  }, [currentPage, historyOrderList])\n  return (\n    <VStack w=\"100%\">\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} borderRadius=\"16px\" />\n      ) : historyOrderLoading ? (\n        <Block p={{ base: '12px', lg: '20px 16px' }} borderRadius=\"16px\">\n          <VStack\n            gap=\"20px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '20px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {[{}, {}].map((item, index) => (\n              <OrdersCardLoading key={index} />\n            ))}\n          </VStack>\n        </Block>\n      ) : historyOrderList.length === 0 ? (\n        <NoData type=\"nodata\" text=\"You don't have any order history.\" borderRadius=\"16px\" />\n      ) : (\n        <Block borderRadius=\"16px\" p={{ base: '12px', lg: '20px 16px' }} h={paginationList?.length > 8 ? '927px' : 'unset'} overflowY=\"auto\">\n          <VStack\n            gap=\"20px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '20px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {paginationList?.map((historyInfo: any) => <OrdersCardItem key={historyInfo?.order_id} historyInfo={historyInfo} />)}\n          </VStack>\n          {!historyOrderLoading && historyOrderList?.length > pageSize && (\n            <Center mt=\"12px\">\n              <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n            </Center>\n          )}\n        </Block>\n      )}\n    </VStack>\n  )\n}\n\nconst OrdersCardItem = ({ historyInfo }: { historyInfo: any }) => {\n  const [openExpendItemObj, setOpenExpendItemObj] = useState<Record<string, boolean>>({})\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <CoinInfoBlock info={historyInfo} imgSize=\"28px\" />\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Limit Price</Text>\n        <PriceBlock info={historyInfo} />\n      </HStack>\n\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Expiry</Text>\n        <ExpiryBlock info={historyInfo} />\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Filled Size</Text>\n        <FilledSizeBlock info={historyInfo} />\n      </HStack>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text>Status</Text>\n        <Box\n          cursor=\"pointer\"\n          onClick={() => {\n            if (openExpendItemObj[historyInfo?.order_id]) {\n              openExpendItemObj[historyInfo?.order_id] = false\n            } else {\n              openExpendItemObj[historyInfo?.order_id] = true\n            }\n            setOpenExpendItemObj({ ...openExpendItemObj })\n          }}\n        >\n          <StatusBlock historyInfo={historyInfo} openExpendItemObj={openExpendItemObj} />\n        </Box>\n      </HStack>\n      {openExpendItemObj[historyInfo?.order_id] && <LimitExpendBlock historyInfo={historyInfo} p=\"0\" border=\"none\" type=\"card\" />}\n    </VStack>\n  )\n}\n","import { LimitOrderInfo } from '@/types/limit'\nimport { Td, Tr } from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { CoinInfoBlock } from './OrderItemBlock/CoinInfoBlock'\nimport { ExpiryBlock } from './OrderItemBlock/ExpiryBlock'\nimport { FilledSizeBlock } from './OrderItemBlock/FilledSizeBlock'\nimport { LimitExpendBlock } from './OrderItemBlock/LimitExpendBlock'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\nimport { StatusBlock } from './OrderItemBlock/StatusBlock'\n\ntype HistoryTableItemProps = {\n  historyInfo: LimitOrderInfo\n}\n\nexport function HistoryTableItem({ historyInfo }: HistoryTableItemProps) {\n  const [openExpendItemObj, setOpenExpendItemObj] = useState<Record<string, boolean>>({})\n  return (\n    <React.Fragment key={historyInfo?.order_id}>\n      <Tr\n        cursor=\"pointer\"\n        onClick={() => {\n          if (openExpendItemObj[historyInfo?.order_id]) {\n            openExpendItemObj[historyInfo?.order_id] = false\n          } else {\n            openExpendItemObj[historyInfo?.order_id] = true\n          }\n          setOpenExpendItemObj({ ...openExpendItemObj })\n        }}\n        sx={{\n          td: {\n            pb: openExpendItemObj[historyInfo?.order_id] ? '20px !important' : '16px !important'\n          }\n        }}\n      >\n        <Td w=\"30%\">\n          <CoinInfoBlock info={historyInfo} />\n        </Td>\n        <Td w=\"20%\" textAlign=\"right\">\n          <PriceBlock info={historyInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <ExpiryBlock info={historyInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <FilledSizeBlock info={historyInfo} />\n        </Td>\n\n        <Td textAlign=\"right\">\n          <StatusBlock historyInfo={historyInfo} openExpendItemObj={openExpendItemObj} />\n        </Td>\n      </Tr>\n\n      {!openExpendItemObj[historyInfo?.order_id] && <Tr h=\"16px\" />}\n\n      <Tr\n        position=\"relative\"\n        top=\"-20px\"\n        left=\"0px\"\n        sx={{\n          td: {\n            p: '0 !important',\n            bg: 'transparent !important',\n            border: 'none !important',\n            _first: {\n              borderRadius: ' 16px !important'\n            },\n            _last: {\n              borderRadius: '0 0 16px 0 !important'\n            }\n          },\n          _hover: {\n            bg: 'transparent !important',\n            td: {\n              bg: 'transparent !important'\n            }\n          }\n        }}\n      >\n        {openExpendItemObj[historyInfo?.order_id] && (\n          <Td colSpan={5}>\n            <LimitExpendBlock historyInfo={historyInfo} />\n          </Td>\n        )}\n      </Tr>\n    </React.Fragment>\n  )\n}\n","import { LimitOrderInfo } from '@/types/limit'\nimport { useAccountStore } from '@cetus/stores'\nimport { NoData, Pagination } from '@cetus/ui-kit'\nimport { Center, Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { SkipViewPc } from '../farms/FarmsTable'\nimport { HistoryTableItem } from './HistoryTableItem'\n\ntype HistoryTableListProps = {\n  historyOrderList: LimitOrderInfo[]\n  historyOrderLoading: boolean\n}\n\nexport function HistoryTableList(props: HistoryTableListProps) {\n  const { historyOrderList, historyOrderLoading } = props\n  console.log('🚀 ~ HistoryTableList ~ historyOrderList:', historyOrderList)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const pageSize = 10\n  const [paginationList, setPaginationList] = useState<LimitOrderInfo[]>([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  useEffect(() => {\n    if (historyOrderList?.length > 0) {\n      setTotal(historyOrderList?.length)\n      const start = (currentPage - 1) * pageSize\n      const end = start + pageSize\n      setPaginationList(historyOrderList.slice(start, end))\n    }\n  }, [currentPage, historyOrderList])\n  return (\n    <Table variant=\"simple_list\" w=\"100%\" sx={{ td: { h: '66px !important' } }}>\n      <Thead>\n        <Tr>\n          <Th>Order Info</Th>\n          <Th textAlign=\"right\">Limit Price</Th>\n          <Th textAlign=\"right\">Expiry</Th>\n          <Th textAlign=\"right\">Filled Size</Th>\n          <Th textAlign=\"right\">Status</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {!currentAccount?.address ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData\n                type=\"nowallet\"\n                onboard={() => {\n                  onWalletModal(true)\n                }}\n              />\n            </Td>\n          </Tr>\n        ) : historyOrderLoading ? (\n          <SkipViewPc itemList={[1, 2, 3]} skeletonNum={5} rowStyle={{ h: '66px' }} />\n        ) : historyOrderList.length === 0 ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData type=\"nodata\" text=\"You don't have any order history.\" />\n            </Td>\n          </Tr>\n        ) : (\n          <React.Fragment>\n            {paginationList.map((historyInfo: any) => {\n              return <HistoryTableItem key={historyInfo.order_id} historyInfo={historyInfo} />\n            })}\n            {!historyOrderLoading && historyOrderList?.length > pageSize && (\n              <Td colSpan={5} w=\"100%\" pt=\"0px !important\">\n                <Center w=\"100%\">\n                  <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n                </Center>\n              </Td>\n            )}\n          </React.Fragment>\n        )}\n      </Tbody>\n    </Table>\n  )\n}\n","import { Token } from '@cetus/types/src/common-types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { StateCreator, create } from 'zustand'\n\ninterface LimitActionState {\n  // 支付coin\n  payCoin?: Token\n  // 目标coin\n  targetCoin?: Token\n  // 周期\n  //展示的计价coin\n  quoteToken?: Token\n  expiresIn?: string\n  customExpiresVal?: any\n  refreshPriceLoading?: boolean\n  setPayCoin: (coin: Token) => void\n  setTargetCoin: (coin: Token) => void\n  setQuoteToken: (coin: Token) => void\n  setExpiresIn: (expiresIn: string) => void\n  setCustomExpiresVal: (customExpiresVal: any) => void\n  setRefreshPriceLoading: (refreshPriceLoading: boolean) => void\n}\n\nconst store: StateCreator<LimitActionState> = (set, get) => ({\n  quoteToken: undefined,\n  payCoin: envConfigs.clmm_swap.from_coin,\n  targetCoin: envConfigs.clmm_swap.to_coin,\n  setPayCoin: (coin: Token) => {\n    set(() => ({\n      payCoin: coin\n    }))\n  },\n  setTargetCoin: (coin: Token) => {\n    set(() => ({\n      targetCoin: coin\n    }))\n  },\n  setQuoteToken: (coin: Token) => {\n    set(() => ({\n      quoteToken: coin\n    }))\n  },\n  expiresIn: '7 Days',\n  setExpiresIn: (expiresIn: string) => {\n    set(() => ({\n      expiresIn\n    }))\n  },\n  customExpiresVal: null,\n  setCustomExpiresVal: (customExpiresVal: any) => {\n    set(() => ({\n      customExpiresVal\n    }))\n  },\n  refreshPriceLoading: false,\n  setRefreshPriceLoading: (refreshPriceLoading: boolean) => {\n    set(() => ({\n      refreshPriceLoading\n    }))\n  }\n})\n\nconst useLimitActionStore = create(store)\nexport default useLimitActionStore\n","import useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useMemo } from 'react'\n// 从市场价  计算交易对的价格\nexport function useGetPairPrice(baseCoinType?: string, quoteCoinType?: string) {\n  const { getTokenPrice } = useTokenPrice()\n\n  const basePrice = getTokenPrice(baseCoinType)\n  const quotePrice = getTokenPrice(quoteCoinType)\n\n  const priceInfo = useMemo(() => {\n    if (basePrice && quotePrice) {\n      const price = d(basePrice.price).div(quotePrice.price).toString()\n      const displayPrice = price.toString()\n      return {\n        price,\n        displayPrice\n      }\n    }\n    return undefined\n  }, [basePrice, quotePrice])\n\n  return {\n    price: priceInfo?.price,\n    displayPrice: priceInfo?.displayPrice\n  }\n}\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\n\n// 刷新token的市场价格\nexport default function useRefreshCoinMarketPrice() {\n  const { payCoin, targetCoin, setRefreshPriceLoading } = useLimitActionStore()\n  const { fetchTokenPrices } = useTokenPrice()\n  const refreshCoinMarketPrice = () => {\n    const list = []\n    if (payCoin) {\n      list.push(payCoin.coin_type)\n    }\n\n    if (targetCoin) {\n      list.push(targetCoin.coin_type)\n    }\n\n    if (list.length > 0) {\n      setRefreshPriceLoading(true)\n      fetchTokenPrices(list).finally(() => {\n        setRefreshPriceLoading(false)\n      })\n    }\n  }\n  return { refreshCoinMarketPrice }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport useLimitActionStore from '@/store/limit/useLimitAction'\nimport { AggregatorServerErrorCode, SwapRouterData } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenStore from '@cetus/stores/src/token'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CoinType, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d, formatNumber } from '@cetus/utils'\nimport { PlaceLimitOrderParams } from '@cetusprotocol/cetus-periphery-sdk'\nimport { fixCoinType, toDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useGetPairPrice } from '../common/useGetPairPrice'\nimport useInsufficientBalanceToast from '../common/useInsufficientBalanceToast'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useGetMyLimitOrder from './useGetMyLimitOrder'\nimport useRefreshCoinMarketPrice from './useRefreshCoinMarketPrice'\n\nexport default function useLimitAddAction() {\n  const { refreshCoinMarketPrice } = useRefreshCoinMarketPrice()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { fetchMyLimitOrder } = useGetMyLimitOrder()\n  const { signAndExecuteTransaction } = useTransaction()\n  const { peripherySdk } = usePeripherySDKStore()\n  const { findBestRouters } = useFindBestRouting()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const navigate = useNavigate()\n  const { pay, target } = useParams()\n  const { getTokenListInfo } = useGetToken()\n\n  const {\n    payCoin,\n    targetCoin,\n    quoteToken,\n    expiresIn,\n    setPayCoin,\n    setTargetCoin,\n    setQuoteToken,\n    customExpiresVal,\n    setExpiresIn,\n    // 计算市场价loading\n    setRefreshPriceLoading\n  } = useLimitActionStore()\n\n  // 支付数量\n  const [payAmount, setPayAmount] = useState<string>('')\n  // 目标数量\n  const [targetAmount, setTargetAmount] = useState<string>('')\n  // 固定输入方向\n  const [fixPayCoin, setFixPayCoin] = useState<boolean>(true)\n\n  // 是否使用市场价格\n  const [useMarketPrice, setUseMarketPrice] = useState<boolean>(true)\n\n  // 当前输入的价格\n  const [inputPrice, setInputPrice] = useState<string>('')\n\n  // 市场价格\n  const { displayPrice: marketPrice } = useGetPairPrice(\n    quoteToken?.coin_type === payCoin?.coin_type ? targetCoin?.coin_type : payCoin?.coin_type,\n    quoteToken?.coin_type\n  )\n\n  // 余额\n  const { balanceInfo: payBalanceInfo } = useGetTokenBalance(payCoin)\n  const { balanceInfo: targetBalanceInfo } = useGetTokenBalance(targetCoin)\n\n  // 价值\n  const payAmountValue = getTokenAmountValue(payCoin?.coin_type, payAmount)\n  const targetAmountValue = getTokenAmountValue(targetCoin?.coin_type, targetAmount)\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef(uuid)\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const [routerData, setRouterData] = useState<SwapRouterData | undefined>(undefined)\n\n  // 价差\n  const [priceImpact, setPriceImpact] = useState<string>('')\n\n  const payAmountRef = useRef<string>(payAmount)\n  const targetAmountRef = useRef<string>(targetAmount)\n\n  useEffect(() => {\n    payAmountRef.current = payAmount\n  }, [payAmount])\n\n  useEffect(() => {\n    targetAmountRef.current = targetAmount\n  }, [targetAmount])\n\n  // 处理导航Token\n  useEffect(() => {\n    const fetTokenInfo = async () => {\n      const coinTypeList: any[] = [pay, target].filter(Boolean)\n      const tokenMap = await getTokenListInfo(coinTypeList)\n      const payCoinInfo = tokenMap?.get((pay || '') as CoinType)\n      if (payCoinInfo) {\n        setPayCoin(payCoinInfo)\n      } else {\n        setPayCoin(envConfigs.clmm_swap.from_coin)\n      }\n      const targetCoinInfo = tokenMap?.get((target || '') as CoinType)\n      if (targetCoinInfo) {\n        setTargetCoin(targetCoinInfo)\n      } else {\n        setTargetCoin(envConfigs.clmm_swap.to_coin)\n      }\n    }\n\n    fetTokenInfo()\n  }, [pay, target])\n\n  // 监听token 变更 计算市场价  和   路由路径\n  useEffect(() => {\n    setRouterData(undefined)\n    refreshCoinMarketPrice()\n    findAvailableRouter()\n\n    // 设置默认的baseToken\n    if (payCoin && targetCoin) {\n      const payCoinRank = payCoin.extensions ? payCoin.extensions['rank'] || '0' : '0'\n      const targetCoinRank = targetCoin.extensions ? targetCoin.extensions['rank'] || '0' : '0'\n      console.log('🚀 ~ useEffect ~ payCoinRank:', payCoin, targetCoin)\n      if (d(payCoinRank).gte(targetCoinRank)) {\n        setQuoteToken({ ...payCoin })\n      } else {\n        setQuoteToken({ ...targetCoin })\n      }\n    }\n  }, [payCoin?.coin_type, targetCoin?.coin_type])\n\n  // 判断该交易对，是否存在可用路由\n  const findAvailableRouter = async () => {\n    if (payCoin && targetCoin) {\n      const newUuid = `${payCoin.coin_type}_${targetCoin.coin_type}`\n      setUuid(newUuid)\n      const providersKeys = Object.entries(AggregatorDexMap).map(([key, value]) => value.id)\n      const result = await findBestRouters({\n        fromToken: payCoin,\n        toToken: targetCoin,\n        amount: toDecimalsAmount(1, payCoin.decimals).toFixed(0),\n        providersKeys: providersKeys as string[],\n        by_amount_in: true,\n        uuid: newUuid\n      })\n\n      if (newUuid === uuidRef.current) {\n        setRouterData(result)\n      }\n    }\n  }\n\n  // 市场价格变化，更新价格输入框\n  useEffect(() => {\n    console.log('🚀 ~ useEffect ~ useMarketPrice:', useMarketPrice, marketPrice)\n    if (useMarketPrice) {\n      setInputPrice(marketPrice || '')\n    } else {\n      calculatePriceImpact()\n    }\n  }, [marketPrice])\n\n  // quote 变化 重新计算价格\n  useEffect(() => {\n    if (quoteToken && !useMarketPrice && +inputPrice) {\n      setInputPrice(formatNumber(d(1).div(inputPrice).toFixed(quoteToken.decimals)).toString())\n    }\n  }, [quoteToken])\n\n  // 监听 输入价格  更新输入框内容\n  useEffect(() => {\n    handleAmountChange(fixPayCoin ? payAmount : targetAmount, fixPayCoin)\n    calculatePriceImpact()\n  }, [inputPrice])\n\n  const [priceImpactInfo, setPriceImpactInfo] = useState({ tooltip: '', color: '', text: '', bg: '' })\n  const [priceImpactInfoLoading, setPriceImpactInfoLoading] = useState(false)\n  // 计算价差\n  const calculatePriceImpact = () => {\n    if (!useMarketPrice && marketPrice && inputPrice) {\n      setPriceImpactInfoLoading(true)\n      const impact = d(inputPrice).sub(marketPrice).div(marketPrice).mul(100).toFixed(2)\n      setPriceImpact(impact)\n\n      const isGtZero = d(impact).gt(0)\n      const ratioAbs = isGtZero ? impact : impact.split('-')[1]\n      const impactInfo: any = { tooltip: '', color: '', text: '', bg: '' }\n      impactInfo['tooltip'] = `Limit order price is ${ratioAbs}% ${isGtZero ? 'higher' : 'lower'} than the market.`\n      if (quoteToken?.coin_type?.toLowerCase() == targetCoin?.coin_type?.toLowerCase()) {\n        if (Number(inputPrice) > Number(marketPrice)) {\n          impactInfo['text'] = ''\n          impactInfo['color'] = '#68FFD8'\n        } else if (Number(marketPrice) > Number(inputPrice)) {\n          impactInfo['text'] = `Your limit order price is ${ratioAbs}% ${\n            isGtZero ? 'higher' : 'lower'\n          } than market. You are selling at a much ${isGtZero ? 'higher' : 'lower'} rate. We recommend you to use`\n          impactInfo['color'] = '#ffb62d'\n          impactInfo['bg'] = 'rgba(255,202,104,0.1)'\n        }\n      } else {\n        if (Number(inputPrice) > Number(marketPrice)) {\n          impactInfo['text'] = `Your limit order price is ${ratioAbs}% ${\n            isGtZero ? 'higher' : 'lower'\n          } than market. You are buying at a much ${isGtZero ? 'higher' : 'lower'} rate. We recommend you to use`\n          impactInfo['color'] = '#ffb62d'\n          impactInfo['bg'] = 'rgba(255,202,104,0.1)'\n        } else if (Number(marketPrice) > Number(inputPrice)) {\n          impactInfo['text'] = ''\n          impactInfo['color'] = '#68FFD8'\n        }\n      }\n      setPriceImpactInfo(impactInfo)\n      setPriceImpactInfoLoading(false)\n      return\n    }\n    setPriceImpact('')\n  }\n\n  // 点击市场价格\n  const handleMarketPriceClick = (isUse: boolean = true) => {\n    console.log('🚀 ~ handleMarketPriceClick ~ marketPrice:', marketPrice)\n    setUseMarketPrice(isUse)\n    if (isUse) {\n      setInputPrice(marketPrice || '')\n      refreshCoinMarketPrice()\n    }\n  }\n  // 处理数量输入\n  const handleAmountChange = (amount: string, fixPayCoin: boolean) => {\n    setFixPayCoin(fixPayCoin)\n    if (fixPayCoin) {\n      setPayAmount(amount)\n    } else {\n      setTargetAmount(amount)\n    }\n    if (quoteToken && payCoin && targetCoin && +inputPrice && +amount) {\n      if (fixPayCoin) {\n        if (quoteToken.coin_type === payCoin.coin_type) {\n          setTargetAmount(d(amount).div(inputPrice).toString().toString())\n        } else {\n          setTargetAmount(d(amount).mul(inputPrice).toString().toString())\n        }\n        return\n      } else {\n        if (quoteToken.coin_type === targetCoin.coin_type) {\n          setPayAmount(d(amount).div(inputPrice).toString().toString())\n        } else {\n          setPayAmount(d(amount).mul(inputPrice).toString().toString())\n        }\n        return\n      }\n    }\n\n    if (fixPayCoin) {\n      setTargetAmount('')\n    } else {\n      setPayAmount('')\n    }\n  }\n\n  // 处理token选择\n  const handleSelectToken = (token: Token, isPay: boolean) => {\n    resetInputAmount()\n    setFixPayCoin(isPay)\n    setUseMarketPrice(true)\n    if (isPay) {\n      // 如果选择token 和 对象token重复，  则交换顺序\n      if (fixCoinType(token?.coin_type) === fixCoinType(targetCoin?.coin_type)) {\n        navigate(`/limit/${token?.coin_type}/${payCoin?.coin_type}`)\n      } else {\n        navigate(`/limit/${token?.coin_type}/${targetCoin?.coin_type}`)\n      }\n    } else {\n      if (fixCoinType(token?.coin_type) === fixCoinType(payCoin?.coin_type)) {\n        navigate(`/limit/${targetCoin?.coin_type}/${token?.coin_type}`)\n      } else {\n        navigate(`/limit/${payCoin?.coin_type}/${token?.coin_type}`)\n      }\n    }\n  }\n\n  const onReverseClick = async () => {\n    setInputPrice(marketPrice || '')\n    if (targetCoin) {\n      handleSelectToken(targetCoin, true)\n      setPayAmount(targetAmount)\n      setTargetAmount(payAmount)\n    }\n  }\n\n  // 清空输入\n  const resetInputAmount = () => {\n    setPayAmount('')\n    setTargetAmount('')\n  }\n\n  useEffect(() => {\n    return () => {\n      setExpiresIn('7 Days')\n    }\n  }, [])\n\n  const [submitOrderLoading, setSubmitOrderLoading] = useState<boolean>(false)\n  const getExpiresTime = (time: string) => {\n    switch (time) {\n      case '5 Minutes':\n        return 300000\n      case '10 Minutes':\n        return 600000\n      case '30 Minutes':\n        return 1800000\n      case '1 Hour':\n        return 3600000\n      case '1 Day':\n        return 86400000\n      case '3 Days':\n        return 259200000\n      case '7 Days':\n        return 604800000\n      case '1 Month':\n        return 2592000000\n      default:\n        return 0\n    }\n  }\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const { transactionConfirmation } = useTransaction()\n  const { clmmSdk } = useClmmSDKStore()\n  const { addToken } = useTokenStore()\n  // 提交现价单\n  const handleSubmitOrder = async () => {\n    // 构建 交易提示\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = `Creating order`\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          info.toastDescriptionContent = ''\n          info.modalDescriptionText = 'Created order successfully'\n          info.toastTitleText = 'Created order successfully'\n        }\n        if (status === 'rejected') {\n          info.toastTitleText = 'Create order'\n        }\n\n        return info\n      }\n    }\n    transactionConfirmation(toastInfo)\n    const expired_ts = Date.parse(new Date().toString()) + (getExpiresTime(expiresIn) || customExpiresVal)\n    console.log(' ~ handleSubmitOrder ~ expired_ts:', expired_ts)\n    setSubmitOrderLoading(true)\n    const coinsInfo = await clmmSdk.CetusConfig.getTokenListByCoinTypes([payCoin?.coin_type, targetCoin?.coin_type])\n    const payCoinLocalDecimals = payCoin?.decimals\n    const targetCoinLocalDecimals = targetCoin?.decimals\n    const payCoinChainDecimals = coinsInfo[payCoin?.coin_type]?.decimals\n    const targetCoinChainDecimals = coinsInfo[targetCoin?.coin_type]?.decimals\n\n    if (payCoinLocalDecimals !== payCoinChainDecimals) {\n      addToken({ ...payCoin, decimals: payCoinChainDecimals })\n    }\n    if (targetCoinLocalDecimals !== targetCoinChainDecimals) {\n      addToken({ ...targetCoin, decimals: targetCoinChainDecimals })\n    }\n    let price\n    if (quoteToken?.coin_type === targetCoin?.coin_type) {\n      price = inputPrice\n    } else {\n      price = d(1).div(inputPrice).toFixed(targetCoinChainDecimals)\n    }\n\n    try {\n      const params: PlaceLimitOrderParams = {\n        pay_coin_type: payCoin!.coin_type,\n        target_coin_type: targetCoin!.coin_type,\n        expired_ts,\n        target_decimal: targetCoinChainDecimals,\n        pay_decimal: payCoinChainDecimals,\n        price: Number(price),\n        pay_coin_amount: Number(toDecimalsAmount(payAmount, payCoinChainDecimals).toFixed(0))\n      }\n\n      const txb = await peripherySdk.LimitOrder.placeLimitOrder(params)\n\n      const res = await signAndExecuteTransaction(txb, toastInfo)\n      setSubmitOrderLoading(false)\n\n      if (res) {\n        // 刷新余额\n        fetchAccountBalance()\n        // 刷新订单\n        fetchMyLimitOrder()\n        resetInputAmount()\n      }\n    } catch (error) {\n      showInsufficientBalanceToast(String(error))\n      setSubmitOrderLoading(false)\n    }\n  }\n  const { currentAccount } = useAccountStore()\n\n  const minOrderAmount = useMemo(() => {\n    const amountUsd = getTokenAmountValue(payCoin?.coin_type, payAmount)\n    if (Number(amountUsd) == 0 && Number(payAmount) > 0) {\n      return false\n    } else {\n      if (Number(amountUsd) < 5) {\n        return true\n      }\n    }\n    return false\n  }, [payCoin, payAmount])\n\n  const buttonTextStatus = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Place Limit Order',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.disabled = false\n      btnInfo.text = 'Connect Wallet'\n      return btnInfo\n    }\n    if (!payCoin || !targetCoin) {\n      btnInfo.disabled = true\n      btnInfo.text = ' Select a token'\n      return btnInfo\n    }\n    if (!Number(payAmount) || !Number(targetAmount)) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n    if (minOrderAmount) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Order size should be higher than $5'\n      return btnInfo\n    }\n    if (Number(payAmount) > Number(payBalanceInfo?.balanceFormat) || !payBalanceInfo?.balanceFormat) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${payCoin?.symbol} balance`\n      return btnInfo\n    }\n    if (routerData && routerData.errorCode) {\n      if (routerData.errorCode === AggregatorServerErrorCode.NoRouter || routerData.errorCode === AggregatorServerErrorCode.HoneyPot) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    console.log('🚀 ~ buttonTextStatus ~ priceImpact:', 12, priceImpactInfo.color, priceImpactInfo, priceImpact)\n    if (priceImpactInfo.color.toLowerCase() == '#ffb62d' && (Number(priceImpact) < -10 || Number(priceImpact) > 10)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    payCoin,\n    targetCoin,\n    routerData,\n    payAmount,\n    targetAmount,\n    minOrderAmount,\n    payBalanceInfo,\n    JSON.stringify(priceImpactInfo),\n    priceImpact\n  ])\n\n  return {\n    priceImpactInfoLoading,\n    priceImpactInfo,\n    fixPayCoin,\n    onReverseClick,\n    handleSelectToken,\n    marketPrice,\n    payCoin,\n    targetCoin,\n    handleAmountChange,\n    payAmount,\n    targetAmount,\n    payBalanceInfo,\n    targetBalanceInfo,\n    payAmountValue,\n    targetAmountValue,\n    useMarketPrice,\n    handleMarketPriceClick,\n    inputPrice,\n    setInputPrice,\n    priceImpact,\n    quoteToken,\n    setQuoteToken,\n    handleSubmitOrder,\n    submitOrderLoading,\n    buttonTextStatus\n  }\n}\n","import { Block, TradeConfirmAmountInfo } from '@cetus/design'\nimport { d, formatNumber } from '@cetus/utils'\nimport {\n  Button,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Skeleton,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onClose: () => void\n  handleSubmitOrder: () => void\n  confirmData: any\n  submitOrderLoading: boolean\n}\n\nconst ConfirmModal = ({ confirmData, isOpen, onClose, handleSubmitOrder, submitOrderLoading }: ConfirmModalProps) => {\n  const { payAmount, targetAmount, payCoin, targetCoin, inputPrice, expiresIn, quoteToken } = confirmData\n\n  const price = useMemo(() => {\n    console.log('🚀 ~ price ~ inputPrice:', inputPrice)\n    if (inputPrice) {\n      return quoteToken?.coin_type?.toLowerCase() == targetCoin?.coin_type?.toLowerCase() ? inputPrice : d(1).div(inputPrice).toString()\n    }\n    return ''\n  }, [quoteToken, targetCoin, inputPrice])\n\n  const reseverPrice = useMemo(() => {\n    if (inputPrice) {\n      return quoteToken?.coin_type?.toLowerCase() == targetCoin?.coin_type?.toLowerCase() ? d(1).div(inputPrice).toString() : inputPrice\n    }\n    return ''\n  }, [quoteToken, targetCoin, inputPrice])\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Review your order\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"16px\" p=\"16px\">\n            <TradeConfirmAmountInfo\n              coinA={{\n                amount: formatNumber(payAmount, payCoin?.decimals).toString() || '0',\n                ...payCoin\n              }}\n              iconParams={{\n                xlinkHref: '#icon-a-icon_trade',\n                svgFill: 'text_caption',\n                fontSize: '12px'\n              }}\n              coinB={{\n                amount: formatNumber(targetAmount, targetCoin?.decimals).toString() || '0',\n                ...targetCoin\n              }}\n            />\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Text>Price</Text>\n              <Skeleton isLoaded={!!inputPrice}>\n                <PriceBlock info={{ pay_coin: payCoin, target_coin: targetCoin, price, reseverPrice }} />\n              </Skeleton>\n            </HStack>\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Text>Expires in</Text>\n              <Text color=\"text_caption\">{expiresIn}</Text>\n            </HStack>\n            <Block borderRadius=\"12px\" p=\"8px\">\n              <Text lineHeight=\"20px\" textAlign=\"left\" fontSize=\"12px\">\n                You will receive exactly what you have specified if your order is fully filled in the end.\n              </Text>\n            </Block>\n            <Block borderRadius=\"12px\" p=\"8px\">\n              <Text lineHeight=\"20px\" textAlign=\"left\" fontSize=\"12px\">\n                Please note that your order may not be filled immediately after the price is triggered, depending on pending sequence and liquidity\n                depth.\n              </Text>\n            </Block>\n            <Button\n              onClick={() => {\n                handleSubmitOrder()\n                onClose()\n              }}\n              disabled={submitOrderLoading}\n              w=\"calc(100% + 32px)\"\n              mb=\"-30px\"\n              h=\"52px\"\n              fontWeight=\"500\"\n            >\n              Place Order\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport { InputBox } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Button, HStack, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\ninterface CustomExpiryModalProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst CustomExpiryModal = ({ isOpen, onClose }: CustomExpiryModalProps) => {\n  const { isApp } = useWindowWidth()\n  const { setCustomExpiresVal, setExpiresIn } = useLimitActionStore()\n  const [hourVal, setHourVal] = useState('')\n  const [minuteVal, setMinuteVal] = useState('')\n  const handleInputHourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    setHourVal(value)\n  }\n  const handleInputMinuteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    setMinuteVal(value)\n  }\n  const [timeInfo, setTimeInfo] = useState({})\n  const calculateTime = (hours: string, minutes: string) => {\n    const totalMinutes = Number(hours ? hours : 0) * 60 + Number(minutes || 0)\n    const d = Math.floor(totalMinutes / (60 * 24))\n    const h = Math.floor((totalMinutes % (60 * 24)) / 60)\n    const m = totalMinutes % 60\n\n    let result = ''\n    if (d > 0) {\n      result += d + 'd '\n    }\n    if (h > 0) {\n      result += h + 'h '\n    }\n    if (m > 0) {\n      result += m + 'm '\n    }\n    setTimeInfo({\n      timeText: result.trim() || '0 m',\n      time: totalMinutes * 60 * 1000\n    })\n  }\n  useEffect(() => {\n    calculateTime(hourVal, minuteVal)\n  }, [hourVal, minuteVal])\n  const btnDisabled = useMemo(() => {\n    if (!hourVal && !minuteVal) {\n      return true\n    }\n    if (Number(hourVal) == 0 && !minuteVal) {\n      return true\n    }\n    if (Number(minuteVal) == 0 && !hourVal) {\n      return true\n    }\n    if (Number(hourVal) == 0 && Number(minuteVal) == 0) {\n      return true\n    }\n    return false\n  }, [hourVal, minuteVal])\n  const clickSetPeriod = () => {\n    setExpiresIn(timeInfo?.timeText)\n    setCustomExpiresVal(timeInfo?.time)\n    onClose()\n  }\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent maxW=\"1200px\" w={isApp ? 'calc(100vw - 32px)' : '440px'}>\n        <ModalHeader mr=\"-10px\">\n          <HStack w=\"100%\" gap=\"24px\" justify=\"space-between\" align=\"center\">\n            <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Custom Expiry Period\n            </Text>\n            <HStack gap=\"0\" align=\"center\">\n              <ModalCloseButton mt=\"0\" position=\"static\" />\n            </HStack>\n          </HStack>\n        </ModalHeader>\n\n        <ModalBody p={{ base: '8px 16px', lg: '16px' }} pt=\"0 !important\">\n          <VStack w=\"100%\">\n            <InputBox>\n              <HStack>\n                <Input\n                  value={hourVal}\n                  onChange={handleInputHourChange}\n                  placeholder=\"0.0\"\n                  style={{\n                    width: 'calc(100% - 8px)',\n                    background: 'none',\n                    whiteSpace: 'nowrap',\n                    opacity: 1,\n                    outline: 'none',\n                    color: 'var(--chakra-colors-text_caption)',\n                    fontSize: '20px',\n                    touchAction: 'manipulation',\n                    transition: 'all 0.3s'\n                  }}\n                />\n                <Text>Hours</Text>\n              </HStack>\n            </InputBox>\n            <InputBox>\n              <HStack>\n                <Input\n                  value={minuteVal}\n                  onChange={handleInputMinuteChange}\n                  placeholder=\"0.0\"\n                  style={{\n                    width: 'calc(100% - 8px)',\n                    background: 'none',\n                    whiteSpace: 'nowrap',\n                    opacity: 1,\n                    outline: 'none',\n                    color: 'var(--chakra-colors-text_caption)',\n                    fontSize: '20px',\n                    touchAction: 'manipulation',\n                    transition: 'all 0.3s'\n                  }}\n                />\n                <Text>Minutes</Text>\n              </HStack>\n            </InputBox>\n            <Button onClick={clickSetPeriod} disabled={btnDisabled} w=\"calc(100% + 32px)\" mb=\"-30px\" mt=\"12px\" h=\"52px\" fontWeight=\"500\">\n              Set Period\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default CustomExpiryModal\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport { CetusTooltip, InputBox } from '@cetus/design'\nimport { Icon } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport MenuDropBlock from '../common/MenuDropBlock'\nimport CustomExpiryModal from './CustomExpiryModal'\n\ntype LimitExpiresProps = object\n\nexport function LimitExpires(props: LimitExpiresProps) {\n  const { expiresIn, setExpiresIn } = useLimitActionStore()\n  const [isOpenExpiryModal, setIsOpenExpiryModal] = useState(false)\n  const expiresList = ['5 Minutes', '10 Minutes', '30 Minutes', '1 Hour', '1 Day', '3 Days', '7 Days', '1 Month', 'Custom']\n  return (\n    <InputBox w=\"156px\" borderRadius=\"16px\">\n      <VStack\n        w=\"100%\"\n        h=\"100%\"\n        gap=\"20px\"\n        alignItems=\"start\"\n        justify=\"space-between\"\n        sx={{\n          button: {\n            w: '100%',\n            h: '23px',\n            '>span': {\n              '>div': {\n                display: 'flex',\n                justifyContent: 'space-between',\n                p: {\n                  fontSize: '16px'\n                }\n              }\n            }\n          }\n        }}\n      >\n        <CetusTooltip\n          placement=\"top\"\n          tooltip={\n            <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"280px\">\n              No extra cancellation fee will be charged for order expiry or cancellation. Gas will be consumed upon manual cancellation.\n            </Text>\n          }\n        >\n          <HStack gap=\"4px\">\n            <Text fontSize=\"13px\" fontWeight=\"500\">\n              Expires in\n            </Text>\n            <Icon xlinkHref=\"#icon-icon_tips\" />\n          </HStack>\n        </CetusTooltip>\n        <MenuDropBlock\n          label={expiresIn || ''}\n          list={expiresList}\n          onListItemClick={item => {\n            if (item == 'Custom') {\n              setIsOpenExpiryModal(true)\n            } else {\n              setExpiresIn(item)\n            }\n          }}\n        />\n      </VStack>\n      {isOpenExpiryModal && <CustomExpiryModal isOpen={isOpenExpiryModal} onClose={() => setIsOpenExpiryModal(false)} />}\n    </InputBox>\n  )\n}\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport { CetusTooltip, InputBox } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon, NumericFormatInput } from '@cetus/ui-kit'\nimport { d, formatNumberWithDown, formatPercentage, textEllipses } from '@cetus/utils'\nimport { Button, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\n\ntype LimitPriceProps = {\n  inputPrice?: string\n  priceImpact?: string\n  marketPrice?: string\n  priceImpactInfo?: any\n  priceImpactInfoLoading?: boolean\n  handleMarketPriceClick: (isUse: boolean) => void\n  setInputPrice: (price: string) => void\n}\n\nexport function LimitPrice(props: LimitPriceProps) {\n  const { isApp } = useWindowWidth()\n  const { marketPrice, priceImpactInfo, priceImpactInfoLoading, priceImpact, inputPrice, handleMarketPriceClick, setInputPrice } = props\n  const { payCoin, targetCoin, quoteToken, refreshPriceLoading, setQuoteToken } = useLimitActionStore()\n  return (\n    <InputBox w=\"calc(100% - 156px)\">\n      <VStack w=\"100%\" gap=\"20px\">\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <HStack>\n            <Text fontSize=\"13px\" fontWeight=\"500\">\n              {quoteToken?.coin_type === payCoin?.coin_type\n                ? `Buy ${textEllipses(targetCoin?.symbol, 10)} at rate`\n                : `Sell ${textEllipses(payCoin?.symbol, 10)} at rate`}\n            </Text>\n\n            {Number(priceImpact) !== 0 &&\n              !refreshPriceLoading &&\n              (priceImpactInfoLoading ? (\n                <Spinner size=\"sm\" />\n              ) : (\n                <CetusTooltip\n                  placement=\"top\"\n                  tooltip={\n                    <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"220px\">\n                      {priceImpactInfo.tooltip}\n                    </Text>\n                  }\n                >\n                  <Text color={priceImpactInfo.color}>\n                    {d(priceImpact).gt(0) ? '+' : ''}\n                    {Number(priceImpact) > 10000 ? '>10000%' : formatPercentage(priceImpact)}\n                  </Text>\n                </CetusTooltip>\n              ))}\n          </HStack>\n          {(marketPrice || refreshPriceLoading) && (\n            <Button\n              isLoading={refreshPriceLoading}\n              loadingText=\"Market\"\n              minW=\"58px\"\n              h=\"22px\"\n              pl=\"4px\"\n              pr=\"4px\"\n              color=\"primary_gray\"\n              borderRadius=\"4px\"\n              variant=\"outline\"\n              fontWeight=\"500\"\n              fontSize=\"12px\"\n              onClick={() => handleMarketPriceClick(true)}\n            >\n              Market\n            </Button>\n          )}\n        </HStack>\n\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <NumericFormatInput\n            value={inputPrice ? formatNumberWithDown(inputPrice).toString() : ''}\n            onChange={(value: string) => {\n              console.log('🚀 ~ useEffect ~ useMarketPrice:', inputPrice, value)\n              handleMarketPriceClick(false)\n              setInputPrice(value)\n            }}\n            decimals={18}\n            placeholder=\"0.0\"\n            style={{\n              width: 'calc(100% - 8px)',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n\n          <HStack gap=\"4px\">\n            <Text textColor=\"text_caption\">{quoteToken?.symbol}</Text>\n            <Icon\n              xlinkHref=\"#icon-icon_swap1\"\n              onClick={() => {\n                if (targetCoin && payCoin) {\n                  if (quoteToken?.coin_type === payCoin?.coin_type) {\n                    setQuoteToken(targetCoin)\n                  } else {\n                    setQuoteToken(payCoin)\n                  }\n                }\n              }}\n            />\n          </HStack>\n        </HStack>\n      </VStack>\n    </InputBox>\n  )\n}\n","import useLimitAddAction from '@/hooks/limit/useLimitAddAction'\nimport useLimitActionStore from '@/store/limit/useLimitAction'\nimport { TradeInputGroup } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { ChartOrderIcon } from '../common/ChartOrderIcon'\nimport { TradeTab } from '../common/TradeTab'\nimport { TradeTabs } from '../swap'\nimport ConfirmModal from './ConfirmModal'\nimport { LimitExpires } from './LimitExpires'\nimport { LimitPrice } from './LimitPrice'\n\nexport function LimitAction() {\n  const { expiresIn } = useLimitActionStore()\n  const {\n    buttonTextStatus,\n    payBalanceInfo,\n    targetBalanceInfo,\n    payAmountValue,\n    targetAmountValue,\n    payAmount,\n    targetAmount,\n    payCoin,\n    targetCoin,\n    marketPrice,\n    handleAmountChange,\n    handleMarketPriceClick,\n    handleSelectToken,\n    inputPrice,\n    setInputPrice,\n    priceImpact,\n    quoteToken,\n    handleSubmitOrder,\n    submitOrderLoading,\n    onReverseClick,\n    priceImpactInfoLoading,\n    priceImpactInfo\n  } = useLimitAddAction()\n  const confirmData = useMemo(() => {\n    return { payAmount, targetAmount, payCoin, targetCoin, inputPrice, expiresIn, quoteToken }\n  }, [payAmount, targetAmount, payCoin, targetCoin, inputPrice, expiresIn, quoteToken])\n\n  const { onWalletModal } = useAccountStore()\n  const [tradeIcon, setTradeIcon] = useState<string>('#icon-a-icon_trade')\n  const toggleTradeIcon = (hovered: boolean) => setTradeIcon(hovered ? '#icon-icon_swap1' : '#icon-a-icon_trade')\n  const [isOpenConfirmModal, setIsOpenConfirmModal] = useState(false)\n  const navigate = useNavigate()\n\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (payCoin) {\n      list.push(payCoin)\n    }\n\n    if (targetCoin) {\n      list.push(targetCoin)\n    }\n\n    return list\n  }, [payCoin, targetCoin])\n  return (\n    <VStack w={{ base: '100%', lg: '470px' }} gap=\"8px\" mb=\"8px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\" mb=\"8px\">\n        <TradeTab currTradeTab={TradeTabs.Limit} />\n        <ChartOrderIcon />\n      </HStack>\n      <TradeInputGroup\n        onClick={onReverseClick}\n        from={{\n          title: 'You Pay',\n          balance: payBalanceInfo?.balanceFormat || '',\n          value: payAmount,\n          amountValue: payAmountValue,\n          onChange: value => {\n            handleAmountChange(value, true)\n          },\n          selectable: true,\n          placeholder: '0.0',\n          token: payCoin,\n          onTokenChange: (token: any) => {\n            handleSelectToken(token, true)\n          }\n        }}\n        to={{\n          title: 'You Receive',\n          balance: targetBalanceInfo?.balanceFormat || '',\n          value: targetAmount,\n          amountValue: targetAmountValue,\n          onTokenChange: (token: any) => {\n            handleSelectToken(token, false)\n          },\n          onChange: value => {\n            handleAmountChange(value, false)\n          },\n          selectable: true,\n          placeholder: '0.0',\n          token: targetCoin,\n          half: false,\n          max: false\n        }}\n        iconParams={{\n          xlinkHref: tradeIcon,\n          svgFill: 'text_caption',\n          transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n          fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n          onMouseEnter: () => toggleTradeIcon(true),\n          onMouseLeave: () => toggleTradeIcon(false)\n        }}\n      />\n\n      <HStack\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        gap=\"8px\"\n        flexDirection={{ base: 'column', lg: 'row' }}\n        sx={{\n          '>div': {\n            w: {\n              base: '100% !important'\n            }\n          }\n        }}\n      >\n        <LimitPrice\n          marketPrice={marketPrice}\n          priceImpactInfoLoading={priceImpactInfoLoading}\n          priceImpactInfo={priceImpactInfo}\n          priceImpact={priceImpact}\n          inputPrice={inputPrice}\n          setInputPrice={setInputPrice}\n          handleMarketPriceClick={handleMarketPriceClick}\n        />\n        <LimitExpires />\n      </HStack>\n      {priceImpactInfo?.text && marketPrice && Number(priceImpact) !== 0 && inputPrice && (\n        <Text color={priceImpactInfo?.color} lineHeight=\"20px\" bg={priceImpactInfo?.bg} p=\"12px\" borderRadius=\"8px\">\n          {priceImpactInfo?.text}&nbsp;\n          <Text\n            color={priceImpactInfo?.color}\n            textDecoration=\"underline\"\n            as=\"span\"\n            cursor=\"pointer\"\n            onClick={() => navigate(`/swap/${payCoin?.coin_type}/${targetCoin?.coin_type}`)}\n          >\n            Cetus Swap\n          </Text>\n          &nbsp;instead.\n        </Text>\n      )}\n      <Button\n        disabled={buttonTextStatus?.disabled || submitOrderLoading}\n        isLoading={submitOrderLoading}\n        mt=\"-1px\"\n        w=\"100%\"\n        borderRadius=\"12px\"\n        h=\"56px\"\n        fontSize=\"20px\"\n        fontWeight=\"500\"\n        onClick={buttonTextStatus?.text == 'Connect Wallet' ? () => onWalletModal(true) : () => setIsOpenConfirmModal(true)}\n      >\n        {buttonTextStatus?.text}\n      </Button>\n      {isOpenConfirmModal && (\n        <ConfirmModal\n          confirmData={confirmData}\n          isOpen={isOpenConfirmModal}\n          onClose={() => setIsOpenConfirmModal(false)}\n          handleSubmitOrder={handleSubmitOrder}\n          submitOrderLoading={submitOrderLoading}\n        />\n      )}\n      {(payCoin || targetCoin) && (\n        <WarningTokenTipsModal\n          addToken\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            tokenInfo.forEach(coin => {\n              const hasFind = coin.coin_type === payCoin?.coin_type || coin.coin_type === targetCoin?.coin_type\n              if (hasFind) {\n                handleSelectToken(undefined, coin.coin_type === payCoin?.coin_type)\n              }\n            })\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import { LimitOrderInfo } from '@/types/limit'\nimport { Td, Tr } from '@chakra-ui/react'\nimport React from 'react'\nimport { CoinInfoBlock } from './OrderItemBlock/CoinInfoBlock'\nimport { ExpiryBlock } from './OrderItemBlock/ExpiryBlock'\nimport { FilledSizeBlock } from './OrderItemBlock/FilledSizeBlock'\nimport { OrderActionBlock } from './OrderItemBlock/OrderActionBlock'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\n\ntype OrderTableItemProps = {\n  orderInfo: LimitOrderInfo\n}\n\nexport function OrderTableItem({ orderInfo }: OrderTableItemProps) {\n  return (\n    <React.Fragment key={orderInfo?.order_id}>\n      <Tr\n        cursor=\"pointer\"\n        sx={{\n          td: {\n            pb: '16px !important'\n          }\n        }}\n      >\n        <Td w=\"30%\">\n          <CoinInfoBlock info={orderInfo} />\n        </Td>\n        <Td w=\"20%\" textAlign=\"right\">\n          <PriceBlock info={orderInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <FilledSizeBlock info={orderInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <ExpiryBlock info={orderInfo} />\n        </Td>\n\n        <Td textAlign=\"right\">\n          <OrderActionBlock orderInfo={orderInfo} />\n        </Td>\n      </Tr>\n      <Tr h=\"16px\" />\n    </React.Fragment>\n  )\n}\n","import useLimitListStore from '@/store/limit/useLimitList'\nimport { LimitOrderInfo } from '@/types/limit'\nimport { useAccountStore } from '@cetus/stores'\nimport { NoData, Pagination } from '@cetus/ui-kit'\nimport { Center, Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { SkipViewPc } from '../farms/FarmsTable'\nimport { OrderTableItem } from './OrderTableItem'\n\nexport function OrderTableList() {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { myOrderList, orderListLoading } = useLimitListStore()\n  const pageSize = 10\n  const [paginationList, setPaginationList] = useState<LimitOrderInfo[]>([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  useEffect(() => {\n    if (myOrderList?.length > 0) {\n      setTotal(myOrderList?.length)\n      const start = (currentPage - 1) * pageSize\n      const end = start + pageSize\n      setPaginationList(myOrderList.slice(start, end))\n    }\n  }, [currentPage, myOrderList])\n  return (\n    <Table variant=\"simple_list\" w=\"100%\" sx={{ td: { h: '60px !important' } }}>\n      <Thead>\n        <Tr>\n          <Th>Order Info</Th>\n          <Th textAlign=\"right\">Price</Th>\n          <Th textAlign=\"right\">Filled Size</Th>\n          <Th textAlign=\"right\">Expiry</Th>\n          <Th textAlign=\"right\">Action</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {!currentAccount?.address ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              },\n              _hover: {\n                bg: 'none !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData\n                type=\"nowallet\"\n                onboard={() => {\n                  onWalletModal(true)\n                }}\n                borderRadius=\"16px\"\n              />\n            </Td>\n          </Tr>\n        ) : orderListLoading ? (\n          <SkipViewPc itemList={[1, 2, 3]} skeletonNum={5} rowStyle={{ h: '66px' }} />\n        ) : myOrderList.length === 0 ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              },\n              _hover: {\n                bg: 'none !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData type=\"nodata\" text=\"You don't have any open orders yet.\" borderRadius=\"16px\" />\n            </Td>\n          </Tr>\n        ) : (\n          <React.Fragment>\n            {paginationList.map((orderInfo: any) => {\n              return <OrderTableItem key={orderInfo.order_id} orderInfo={orderInfo} />\n            })}\n            {!orderListLoading && myOrderList?.length > pageSize && (\n              <Td colSpan={5} w=\"100%\" pt=\"0px !important\">\n                <Center w=\"100%\">\n                  <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n                </Center>\n              </Td>\n            )}\n          </React.Fragment>\n        )}\n      </Tbody>\n    </Table>\n  )\n}\n","import { HistoryCard } from '@/components/limit/HistoryCard'\nimport { HistoryTableList } from '@/components/limit/HistoryTableList'\nimport { LimitAction } from '@/components/limit/LimitAction'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart'\nimport { OrdersCard } from '@/components/limit/OrdersCard'\nimport { OrderTableList } from '@/components/limit/OrderTableList'\nimport useGetLimitOrderHistory from '@/hooks/limit/useGetLimitOrderHistory'\nimport useGetMyLimitOrder from '@/hooks/limit/useGetMyLimitOrder'\nimport useLimitCancelAction from '@/hooks/limit/useLimitCancelAction'\nimport useRefreshCoinMarketPrice from '@/hooks/limit/useRefreshCoinMarketPrice'\nimport useGlobalStore from '@/store/common/global'\nimport useLimitActionStore from '@/store/limit/useLimitAction'\nimport useLimitListStore from '@/store/limit/useLimitList'\nimport SelectTab, { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { RefreshButton } from '@cetus/ui-kit'\nimport { Box, Button, HStack, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\nenum LimitTabType {\n  OpenOrders = 'Open Orders',\n  OrderHistory = 'Order History'\n}\n\nfunction Limit() {\n  const { currentAccount } = useAccountStore()\n  const { getLimitOrderHistory, historyOrderList, historyOrderLoading } = useGetLimitOrderHistory()\n  const { fetchMyLimitOrder } = useGetMyLimitOrder()\n  const { setMyOrderList, myOrderList, orderListLoading } = useLimitListStore()\n  const { payCoin, targetCoin } = useLimitActionStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [])\n  const { isShowTradeChart, isShowTradeOrders } = useGlobalStore()\n  const [pageHistoryList, setPageHistoryList] = useState<any>([])\n  const [currTab, setCurrTab] = useState<Tab<object>>({\n    label: LimitTabType.OpenOrders\n  })\n\n  const tabList = useMemo(() => {\n    console.log('🚀 ~ Limit ~ myOrderList:', myOrderList)\n\n    const list: Tab<object>[] = []\n\n    list.push({\n      label: LimitTabType.OpenOrders,\n      num: currTab.label === LimitTabType.OpenOrders && myOrderList.length > 0 && !orderListLoading ? myOrderList.length.toString() : undefined\n    })\n\n    list.push({\n      label: LimitTabType.OrderHistory,\n      num:\n        currTab.label === LimitTabType.OrderHistory && pageHistoryList.length > 0 && !historyOrderLoading\n          ? pageHistoryList.length.toString()\n          : undefined\n    })\n    return list\n  }, [currTab.label, myOrderList, pageHistoryList, historyOrderLoading, orderListLoading])\n\n  useEffect(() => {\n    getOrderList(true)\n  }, [currTab.label, currentAccount, isShowTradeOrders])\n\n  useRpcListener({\n    onRpcChange: () => {\n      getOrderList(true)\n      if (currentAccount?.address) {\n        fetchAccountBalance()\n      }\n    }\n  })\n\n  const getOrderList = (isLoading?: boolean) => {\n    if (!isShowTradeOrders) return\n    setRefreshCount(0)\n    console.log('🚀  ~ currentAccount:', currTab.label === LimitTabType.OpenOrders, currentAccount?.address)\n    if (currentAccount?.address) {\n      if (currTab.label === LimitTabType.OpenOrders) {\n        fetchMyLimitOrder(currentAccount.address, isLoading)\n      } else {\n        console.log('🚀 ~  ~ currentAccount:', currentAccount)\n        getLimitOrderHistory(currentAccount.address, isLoading)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentAccount?.address && historyOrderList?.length > 0) {\n      setPageHistoryList(historyOrderList)\n    } else {\n      setPageHistoryList([])\n      setMyOrderList([])\n    }\n  }, [historyOrderList, currentAccount?.address])\n\n  const handleChangeTab = (tab: Tab<object>) => {\n    setCurrTab(tab)\n  }\n  const { windowWidth, isApp } = useWindowWidth()\n\n  const { refreshCoinMarketPrice } = useRefreshCoinMarketPrice()\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n  useInterval({\n    interval: 1000,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= 20) {\n        setRefreshCount(0)\n        // 每20秒 刷新一次  市场价格\n        refreshCoinMarketPrice()\n        if (currentAccount?.address) {\n          fetchAccountBalance()\n        }\n        getOrderList(false)\n      }\n    }\n  })\n  return (\n    <VStack\n      mt={windowWidth && windowWidth < 1024 ? '28px' : '42px'}\n      w=\"100%\"\n      gap=\"0px\"\n      className={isApp || isShowTradeChart || isShowTradeOrders ? '' : 'bg_img'}\n    >\n      <HStack\n        w=\"100%\"\n        justifyContent=\"center\"\n        alignItems=\"start\"\n        gap=\"16px\"\n        flexDirection={{ base: isShowTradeChart ? 'column' : 'column-reverse', lg: 'row' }}\n      >\n        {/* 左边区域 */}\n        {(isShowTradeOrders || isShowTradeChart) && (\n          <HStack gap=\"8px\" w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n            {isShowTradeChart ? (\n              <LimitPriceChart baseToken={payCoin} quoteToken={targetCoin} />\n            ) : (\n              <VStack w=\"100%\">\n                <OrderAndHistoryTab\n                  tabList={tabList}\n                  currTab={currTab}\n                  myOrderList={myOrderList}\n                  handleChangeTab={handleChangeTab}\n                  handleGetOrderList={getOrderList}\n                />\n                {currTab.label === LimitTabType.OpenOrders && <OrdersCard />}\n                {currTab.label === LimitTabType.OrderHistory && (\n                  <HistoryCard historyOrderList={pageHistoryList} historyOrderLoading={historyOrderLoading} />\n                )}\n              </VStack>\n            )}\n          </HStack>\n        )}\n\n        {/* 右边区域 */}\n        <LimitAction />\n      </HStack>\n      {isShowTradeOrders && isShowTradeChart && (\n        <VStack w=\"100%\" gap=\"0\" align=\"flex-start\" mt={{ base: '8px', lg: '0px' }}>\n          <OrderAndHistoryTab\n            handleGetOrderList={() => getOrderList(true)}\n            tabList={tabList}\n            currTab={currTab}\n            myOrderList={myOrderList}\n            handleChangeTab={handleChangeTab}\n          />\n          {isApp && <Box h=\"16px\" />}\n          {currTab.label === LimitTabType.OpenOrders && (isApp ? <OrdersCard /> : <OrderTableList />)}\n          {currTab.label === LimitTabType.OrderHistory &&\n            (isApp ? (\n              <HistoryCard historyOrderList={pageHistoryList} historyOrderLoading={historyOrderLoading} />\n            ) : (\n              <HistoryTableList historyOrderList={pageHistoryList} historyOrderLoading={historyOrderLoading} />\n            ))}\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n\nconst OrderAndHistoryTab = ({\n  tabList,\n  currTab,\n  myOrderList,\n  handleChangeTab,\n  handleGetOrderList\n}: {\n  tabList: any\n  currTab: any\n  myOrderList: any\n  handleGetOrderList: () => void\n  handleChangeTab: (tab: Tab<object>) => void\n}) => {\n  const { handleCancelOrder, cancelOrderLoading } = useLimitCancelAction()\n  const { isApp } = useWindowWidth()\n  const isShowCancelAllBtn = currTab.label === LimitTabType.OpenOrders && myOrderList.length > 1\n  return (\n    <HStack\n      w=\"100%\"\n      justifyContent=\"space-between\"\n      flexDirection={{ base: currTab.label === LimitTabType.OpenOrders && myOrderList.length > 1 ? 'column' : 'row', lg: 'row' }}\n      gap={{ base: '16px', lg: '8px' }}\n    >\n      <HStack\n        w={{\n          base: '100%',\n          lg: '395px'\n        }}\n        justifyContent=\"space-between\"\n      >\n        <SelectTab\n          type=\"borderTab\"\n          wrapStyle={{\n            w: '100%',\n            h: '52px',\n            gap: '32px',\n            bg: 'none',\n            border: 'none',\n            mb: { base: '0px', lg: '8px' }\n          }}\n          itemStyle={{\n            fontSize: '16px'\n          }}\n          tabList={tabList}\n          currentTab={currTab.label}\n          handleChangeTab={handleChangeTab}\n        />\n        {isApp && <RefreshButton handleRefresh={handleGetOrderList} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n      </HStack>\n      {(!isApp || isShowCancelAllBtn) && (\n        <HStack gap=\"8px\" w={{ base: '100%', lg: 'unset' }}>\n          {isShowCancelAllBtn && (\n            <Button\n              onClick={() => {\n                handleCancelOrder(myOrderList)\n              }}\n              disabled={cancelOrderLoading}\n              isLoading={cancelOrderLoading}\n              h=\"28px\"\n              minH=\"unset\"\n              borderRadius=\"8px\"\n              fontSize=\"14px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              w={{ base: '100%', lg: '92px' }}\n              mb={{ base: '-8px', lg: '0' }}\n              _hover={{\n                color: 'text_caption'\n              }}\n            >\n              Cancel All\n            </Button>\n          )}\n          {!isApp && <RefreshButton handleRefresh={handleGetOrderList} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      )}\n    </HStack>\n  )\n}\n\nexport default Limit\n"],"names":["OrdersCard","currentAccount","onWalletModal","useAccountStore","myOrderList","orderListLoading","useLimitListStore","pageSize","paginationList","setPaginationList","useState","total","setTotal","currentPage","setCurrentPage","useEffect","start","end","jsx","VStack","Block","item","index","OrdersCardLoading","NoData","jsxs","orderInfo","OrdersCardItem","Center","Pagination","isApp","useWindowWidth","HStack","CoinInfoBlock","OrderActionBlock","Text","PriceBlock","FilledSizeBlock","ExpiryBlock","SkeletonCircle","Skeleton","HistoryCard","props","historyOrderList","historyOrderLoading","historyInfo","openExpendItemObj","setOpenExpendItemObj","Box","StatusBlock","LimitExpendBlock","HistoryTableItem","React","Tr","Td","HistoryTableList","Table","Thead","Th","Tbody","SkipViewPc","store","set","get","envConfigs","coin","expiresIn","customExpiresVal","refreshPriceLoading","useLimitActionStore","create","useGetPairPrice","baseCoinType","quoteCoinType","getTokenPrice","useTokenPrice","basePrice","quotePrice","priceInfo","useMemo","price","d","displayPrice","useRefreshCoinMarketPrice","payCoin","targetCoin","setRefreshPriceLoading","fetchTokenPrices","list","useLimitAddAction","refreshCoinMarketPrice","fetchAccountBalance","useAccountBalance","fetchMyLimitOrder","useGetMyLimitOrder","signAndExecuteTransaction","useTransaction","peripherySdk","usePeripherySDKStore","findBestRouters","useFindBestRouting","getTokenAmountValue","navigate","useNavigate","pay","target","useParams","getTokenListInfo","useGetToken","quoteToken","setPayCoin","setTargetCoin","setQuoteToken","setExpiresIn","payAmount","setPayAmount","targetAmount","setTargetAmount","fixPayCoin","setFixPayCoin","useMarketPrice","setUseMarketPrice","inputPrice","setInputPrice","marketPrice","payBalanceInfo","useGetTokenBalance","targetBalanceInfo","payAmountValue","targetAmountValue","uuid","setUuid","uuidRef","useRef","routerData","setRouterData","priceImpact","setPriceImpact","payAmountRef","targetAmountRef","coinTypeList","tokenMap","payCoinInfo","targetCoinInfo","findAvailableRouter","payCoinRank","targetCoinRank","newUuid","providersKeys","AggregatorDexMap","key","value","result","toDecimalsAmount","calculatePriceImpact","formatNumber","handleAmountChange","priceImpactInfo","setPriceImpactInfo","priceImpactInfoLoading","setPriceImpactInfoLoading","impact","isGtZero","ratioAbs","impactInfo","_a","_b","handleMarketPriceClick","isUse","amount","handleSelectToken","token","isPay","resetInputAmount","fixCoinType","onReverseClick","submitOrderLoading","setSubmitOrderLoading","getExpiresTime","time","showInsufficientBalanceToast","useInsufficientBalanceToast","transactionConfirmation","clmmSdk","useClmmSDKStore","addToken","useTokenStore","handleSubmitOrder","toastInfo","status","balanceChanges","description","info","expired_ts","coinsInfo","payCoinLocalDecimals","targetCoinLocalDecimals","payCoinChainDecimals","targetCoinChainDecimals","params","txb","res","error","minOrderAmount","amountUsd","buttonTextStatus","btnInfo","AggregatorServerErrorCode","ConfirmModal","confirmData","isOpen","onClose","reseverPrice","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","TradeConfirmAmountInfo","Button","CustomExpiryModal","setCustomExpiresVal","hourVal","setHourVal","minuteVal","setMinuteVal","handleInputHourChange","event","handleInputMinuteChange","timeInfo","setTimeInfo","calculateTime","hours","minutes","totalMinutes","h","m","btnDisabled","clickSetPeriod","InputBox","Input","LimitExpires","isOpenExpiryModal","setIsOpenExpiryModal","expiresList","CetusTooltip","Icon","MenuDropBlock","LimitPrice","textEllipses","Spinner","formatPercentage","NumericFormatInput","formatNumberWithDown","LimitAction","tradeIcon","setTradeIcon","toggleTradeIcon","hovered","isOpenConfirmModal","setIsOpenConfirmModal","warningTokenList","TradeTab","TradeTabs","ChartOrderIcon","TradeInputGroup","WarningTokenTipsModal","tokenInfo","OrderTableItem","OrderTableList","Limit","getLimitOrderHistory","useGetLimitOrderHistory","setMyOrderList","isShowTradeChart","isShowTradeOrders","useGlobalStore","pageHistoryList","setPageHistoryList","currTab","setCurrTab","tabList","getOrderList","useRpcListener","isLoading","setRefreshCount","handleChangeTab","tab","windowWidth","refreshCount","useInterval","LimitPriceChart","OrderAndHistoryTab","handleGetOrderList","handleCancelOrder","cancelOrderLoading","useLimitCancelAction","isShowCancelAllBtn","SelectTab","RefreshButton"],"mappings":"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"}