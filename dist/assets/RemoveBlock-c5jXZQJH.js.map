{"version":3,"file":"RemoveBlock-c5jXZQJH.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_trimmedEndIndex.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseTrim.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/toNumber.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/now.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/debounce.js","../../src/components/zap/ZapTabs.tsx","../../src/store/zap/index.ts","../../src/hooks/zap/useZap.ts","../../src/components/zap/ZapDeposite.tsx","../../src/store/liquidity/addLiquidity.ts","../../src/hooks/zap/useZapSubmit.ts","../../src/components/zap/ZapSubmiteInfo.tsx","../../src/hooks/position/useCurrentApiPool.ts","../../src/hooks/liquidity/useGetCurrentPrice.ts","../../src/hooks/pool/useGetContractPoolInfo.ts","../../src/hooks/position/usePosRemove.ts","../../src/hooks/position/usePosRemovePage.ts","../../src/assets/images/img_farming@2x.png","../../src/components/position/details/FarmsBlock.tsx","../../src/assets/images/bg_alerts@2x.png","../../src/components/position/details/RangeAlerts.tsx","../../src/components/zap/ZapSwitch.tsx","../../src/components/position/details/TradeTitle.tsx","../../src/components/position/details/RemoveBlock.tsx"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import { SelectTab } from '@cetus/design'\nimport { Box } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nexport default function ZapTabs({ tokens, current, onSelect }: { tokens: any; current: any; onSelect: (value: string) => void }) {\n  const zapTabList = useMemo(() => {\n    return tokens?.map((item: any) => {\n      return {\n        label: item?.symbol,\n        value: item?.coin_type\n      }\n    })\n  }, [tokens])\n\n  const currentTab = useMemo(() => {\n    return zapTabList?.filter((item: any) => item?.value === current?.coin_type)?.[0]\n  }, [zapTabList, current?.coin_type])\n\n  const handleChangeTab = (item: any) => {\n    const currentToken = tokens?.filter((token: any) => token?.coin_type === item?.value)?.[0]\n    onSelect(currentToken)\n  }\n\n  return (\n    <Box w=\"100%\" mb=\"8px\">\n      <SelectTab\n        wrapStyle={{\n          w: '100%',\n          h: '48px',\n          borderRadius: '12px',\n          p: '3px'\n        }}\n        itemStyle={{\n          w: '50%',\n          fontSize: '14px',\n          borderRadius: '8px',\n          fontWeight: '500'\n        }}\n        type=\"outlineTab\"\n        currentTab={currentTab?.label}\n        tabList={zapTabList}\n        handleChangeTab={handleChangeTab}\n      />\n    </Box>\n  )\n}\n","import { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface zapState {\n  currentTokens: Token[]\n  setCurrentTokens: (data: Token[]) => void\n  zapAmount: string\n  setZapAmount: (value: string) => void\n  zapAmountRate: string\n  setZapAmountRate: (value: string) => void\n  currentZapToken: Token | undefined\n  setCurrentZapToken: (value: Token) => void\n  zapTokenBalance: any\n  setZapTokenBalance: (value: any) => void\n  preDepositeData: any\n  setPreDepositeData: (data: any) => void\n  isPreLoading: boolean\n  setIsPreLoading: (value: any) => void\n  zapApiPool: any\n  setZapApiPool: (data: any) => void\n  lower: number\n  setLower: (value: number) => void\n  upper: number\n  setUpper: (value: number) => void\n  liquidity: string\n  setLiquidity: (value: string) => void\n  zapCurrPriceData: any\n  setZapCurrPriceData: (data: any) => void\n  zapSlideValue: number\n  setZapSlideValue: (value: number | string) => void\n  resetZapData: () => void\n  posOriginAmounts: any\n  setPosOriginAmounts: (data: any) => void\n}\n\nconst store: StateCreator<zapState> = (set, get) => ({\n  currentTokens: [],\n  setCurrentTokens: (data: Token[]) => {\n    set(() => ({\n      currentTokens: data\n    }))\n  },\n  zapAmount: '',\n  setZapAmount: (value: string) => {\n    set(() => ({\n      zapAmount: value\n    }))\n  },\n  currentZapToken: undefined,\n  setCurrentZapToken: (value: Token) => {\n    set(() => ({\n      currentZapToken: value\n    }))\n  },\n  zapAmountRate: '',\n  setZapAmountRate: (value: string) => {\n    set(() => ({\n      zapAmountRate: value\n    }))\n  },\n  zapTokenBalance: undefined,\n  setZapTokenBalance: (value: any) => {\n    set(() => ({\n      zapTokenBalance: value\n    }))\n  },\n  isPreLoading: false,\n  setIsPreLoading: (value: any) => {\n    set(() => ({\n      isPreLoading: value\n    }))\n  },\n  preDepositeData: undefined,\n  setPreDepositeData: (data: any) => {\n    set(() => ({\n      preDepositeData: data,\n      isPreLoading: false\n    }))\n  },\n  zapApiPool: undefined,\n  setZapApiPool: (data: any) => {\n    set(() => ({\n      zapApiPool: data\n    }))\n  },\n  lower: 0,\n  setLower: (value: number) => {\n    set(() => ({\n      lower: value\n    }))\n  },\n  upper: 0,\n  setUpper: (value: number) => {\n    set(() => ({\n      upper: value\n    }))\n  },\n  liquidity: '',\n  setLiquidity: (value: string) => {\n    set(() => ({\n      liquidity: value\n    }))\n  },\n  zapCurrPriceData: {},\n  setZapCurrPriceData: (data: any) => {\n    set(() => ({\n      zapCurrPriceData: data\n    }))\n  },\n  zapSlideValue: 0,\n  setZapSlideValue: (value: number | string) => {\n    set(() => ({\n      zapSlideValue: Number(value === '--' ? 0 : value)\n    }))\n  },\n  posOriginAmounts: {},\n  setPosOriginAmounts: (data: any) => {\n    set(() => ({\n      posOriginAmounts: data\n    }))\n  },\n  resetZapData: () => {\n    set(() => ({\n      zapAmount: '',\n      zapAmountRate: '',\n      lower: 0,\n      upper: 0,\n      preDepositeData: undefined,\n      isPreLoading: false,\n      liquidity: '',\n      zapSlideValue: 0,\n      posOriginAmounts: {}\n    }))\n  }\n})\n\nconst useZapStore = create(store)\nexport default useZapStore\n","import useZapStore from '@/store/zap/index'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\n\nimport useGlobalStore from '@/store/common/global'\n// import { useDebounceValue } from '@cetus/hooks'\nimport { Token } from '@cetus/types'\n// import { d, fixDown } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\nimport { useEffect, useState } from 'react'\n\nexport default function useZap(\n  action: 'Deposit' | 'Withdraw',\n  apiPoolInfo: any,\n  currentSqrtPrice: string,\n  lowerTick?: any,\n  upperTick?: any,\n  onlyAmountA?: string,\n  onlyAmountB?: string,\n  liquidity?: string,\n  slideValue?: string,\n  currentPosLiquidityData?: any\n) {\n  const {\n    currentTokens,\n    setCurrentTokens,\n    zapAmount,\n    setZapAmount,\n    currentZapToken,\n    setCurrentZapToken,\n    zapAmountRate,\n    setZapAmountRate,\n    setZapTokenBalance,\n    zapTokenBalance,\n    setPreDepositeData,\n    setIsPreLoading,\n    setZapApiPool,\n    lower,\n    upper,\n    setLower,\n    setUpper,\n    setZapCurrPriceData,\n    resetZapData,\n    setLiquidity,\n    setZapSlideValue,\n    setPosOriginAmounts\n  } = useZapStore()\n  const { zapSlippage } = useGlobalStore()\n  const { balanceInfo } = useGetTokenBalance(currentZapToken)\n  const { getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n\n  useEffect(() => {\n    setLower(lowerTick)\n  }, [lowerTick])\n\n  useEffect(() => {\n    setUpper(upperTick)\n  }, [upperTick])\n\n  useEffect(() => {\n    setLiquidity(liquidity || '')\n  }, [liquidity])\n\n  useEffect(() => {\n    setZapSlideValue(slideValue || 0)\n  }, [slideValue])\n\n  useEffect(() => {\n    setPosOriginAmounts({\n      coinAmountA: currentPosLiquidityData?.coinAmountA,\n      coinAmountB: currentPosLiquidityData?.coinAmountB\n    })\n  }, [currentPosLiquidityData])\n\n  useEffect(() => {\n    if (apiPoolInfo?.poolAddress && currentSqrtPrice) {\n      const decimalsA = apiPoolInfo?.tokenA?.decimals\n      const decimalsB = apiPoolInfo?.tokenB?.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      setZapCurrPriceData({\n        currentPrice,\n        currentSqrtPrice\n      })\n    }\n  }, [currentSqrtPrice, apiPoolInfo?.poolAddress])\n\n  useEffect(() => {\n    let arr: Token[] = []\n    if (apiPoolInfo?.poolAddress) {\n      arr = [apiPoolInfo?.displayTokenA, apiPoolInfo?.displayTokenB]\n      setCurrentZapToken(apiPoolInfo?.displayTokenA)\n    }\n    setCurrentTokens(arr)\n    setZapApiPool(apiPoolInfo)\n  }, [apiPoolInfo?.poolAddress])\n\n  const handleChangeAmount = (value: string) => {\n    setZapAmount(value)\n  }\n\n  const handleChangeZapToken = (value: any) => {\n    setCurrentZapToken(value)\n    setZapAmount('')\n  }\n\n  useEffect(() => {\n    let rate\n    if (zapAmount && currentZapToken?.coin_type) {\n      rate = getTokenAmountValue(currentZapToken?.coin_type, zapAmount)\n    }\n    setZapAmountRate(rate || '')\n  }, [zapAmount, currentZapToken?.coin_type])\n\n  useEffect(() => {\n    if (action === 'Deposit') {\n      setZapTokenBalance(balanceInfo)\n    } else {\n      const isCoinA = currentZapToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n      if (isCoinA) {\n        setZapTokenBalance({ balanceFormat: onlyAmountA })\n      } else {\n        setZapTokenBalance({ balanceFormat: onlyAmountB })\n      }\n    }\n  }, [action, balanceInfo, onlyAmountA, onlyAmountB, currentZapToken?.coin_type, apiPoolInfo?.poolAddress])\n\n  useEffect(() => {\n    return () => {\n      resetZapData()\n    }\n  }, [])\n\n  return {\n    currentTokens,\n    zapAmount,\n    zapAmountRate,\n    handleChangeAmount,\n    currentZapToken,\n    handleChangeZapToken,\n    zapTokenBalance,\n    zapSlippage\n    // zapProgressRef,\n    // handleResetZapProgress\n  }\n}\n","import ZapTabs from '@/components/zap/ZapTabs'\nimport useZap from '@/hooks/zap/useZap'\n\nimport { TradeInput } from '@cetus/design'\nimport { d } from '@cetus/utils'\nimport { VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nexport default function ZapDeposite({\n  action,\n  apiPoolInfo,\n  currentSqrtPrice,\n  lowerTick,\n  upperTick,\n  onlyAmountA,\n  onlyAmountB,\n  liquidity,\n  slideValue,\n  currentPosLiquidityData\n}: {\n  action: 'Deposit' | 'Withdraw'\n  apiPoolInfo: any\n  currentSqrtPrice: string\n  lowerTick?: any\n  upperTick?: any\n  onlyAmountA?: string\n  onlyAmountB?: string\n  liquidity?: string\n  slideValue?: string\n  currentPosLiquidityData?: any\n}) {\n  const { currentTokens, currentZapToken, handleChangeZapToken, zapAmount, zapAmountRate, handleChangeAmount, zapTokenBalance } = useZap(\n    action,\n    apiPoolInfo,\n    currentSqrtPrice,\n    lowerTick,\n    upperTick,\n    onlyAmountA,\n    onlyAmountB,\n    liquidity,\n    slideValue,\n    currentPosLiquidityData\n  )\n\n  useEffect(() => {\n    if (action === 'Withdraw') {\n      if (d(zapAmount).gt(zapTokenBalance?.balanceFormat || '0')) {\n        handleChangeAmount(zapTokenBalance?.balanceFormat)\n      }\n    }\n  }, [zapAmount, action, zapTokenBalance?.balanceFormat])\n\n  return (\n    <VStack w=\"100%\">\n      <ZapTabs tokens={currentTokens} current={currentZapToken} onSelect={handleChangeZapToken} />\n      <TradeInput\n        wrapStyle={{ h: '108px' }}\n        placeholder=\"0.0\"\n        value={zapAmount}\n        onChange={handleChangeAmount}\n        balance={zapTokenBalance?.balanceFormat || ''}\n        amountValue={zapAmountRate}\n        token={currentZapToken}\n        needRemainBalance={action === 'Withdraw' ? false : true}\n        balanceLabel={action === 'Withdraw' ? 'Available' : undefined}\n      />\n    </VStack>\n  )\n}\n","import { TokensMap } from '@/types'\nimport { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface AddLiquidityState {\n  fromAmount: string\n  setFromAmount: (value: string) => void\n  fromAmountValue: string\n  setFromAmountValue: (value: string) => void\n  toAmount: string\n  setToAmount: (value: string) => void\n  toAmountValue: string\n  setToAmountValue: (value: string) => void\n  liquidityAmount: string\n  setLiquidityAmount: (value: string) => void\n  byAmountIn: boolean\n  tokenMaxA: string\n  setTokenMaxA: (value?: string) => void\n  tokenMaxB: string\n  setTokenMaxB: (value?: string) => void\n  setByAmountIn: (value: boolean) => void\n  isTokenA: boolean\n  setIsTokenA: (value: boolean) => void\n  percentMap: TokensMap\n  setPercentMap: (value: TokensMap) => void\n  isFullRange: boolean\n  setIsFullRange: (value: boolean) => void\n  fromToken: Token | undefined\n  setFromToken: (token?: Token) => void\n  fromTokenLock: boolean\n  setFromTokenLock: (lock: boolean) => void\n  toToken: Token | undefined\n  setToToken: (token?: Token) => void\n  toTokenLock: boolean\n  setToTokenLock: (lock: boolean) => void\n  totalAmount: string | undefined\n  setTotalAmount: (value?: string) => void\n  autoStakePosition: boolean\n  setAutoStakePosition: (autoStake: boolean) => void\n  isFarmRewardsRange: boolean\n  setIsFarmRewardsRange: (isRange: boolean) => void\n  resetAddLiquidity: () => void\n  useZapIn: boolean\n  setUseZapIn: (value: boolean) => void\n  confirmModalOpen: boolean\n  setConfirmModalOpen: (value: boolean) => void\n  nftOpen: boolean\n  setNftOpen: (value: boolean) => void\n  relatedPosId: string\n  setRelatedPosId: (value: string) => void\n}\n\nconst store: StateCreator<AddLiquidityState> = (set, get) => ({\n  fromAmount: '',\n  setFromAmount: (value: string) => {\n    set(() => ({\n      fromAmount: value\n    }))\n  },\n  fromAmountValue: '',\n  setFromAmountValue: (value: string) => {\n    set(() => ({\n      fromAmountValue: value\n    }))\n  },\n  toAmount: '',\n  setToAmount: (value: string) => {\n    set(() => ({\n      toAmount: value\n    }))\n  },\n  toAmountValue: '',\n  setToAmountValue: (value: string) => {\n    set(() => ({\n      toAmountValue: value\n    }))\n  },\n  liquidityAmount: '',\n  setLiquidityAmount: (value: string) => {\n    set(() => ({\n      liquidityAmount: value\n    }))\n  },\n  tokenMaxA: '',\n  setTokenMaxA: (value?: string) => {\n    set(() => ({\n      tokenMaxA: value\n    }))\n  },\n  tokenMaxB: '',\n  setTokenMaxB: (value?: string) => {\n    set(() => ({\n      tokenMaxB: value\n    }))\n  },\n  byAmountIn: true,\n  setByAmountIn: (value: boolean) => {\n    set(() => ({\n      byAmountIn: value\n    }))\n  },\n\n  isTokenA: true,\n  setIsTokenA: (value: boolean) => {\n    set(() => ({\n      isTokenA: value\n    }))\n  },\n  percentMap: { percentA: '0', percentB: '0' },\n  setPercentMap: (value: TokensMap) => {\n    set(() => ({\n      percentMap: value\n    }))\n  },\n  isFullRange: false,\n  setIsFullRange: (value: boolean) => {\n    set(() => ({\n      isFullRange: value\n    }))\n  },\n  fromToken: undefined,\n  setFromToken: (token?: Token) => {\n    set(() => ({\n      fromToken: token\n    }))\n  },\n  fromTokenLock: false,\n  setFromTokenLock: (lock: boolean) => {\n    set(() => ({\n      fromTokenLock: lock\n    }))\n  },\n  toToken: undefined,\n  setToToken: (token?: Token) => {\n    set(() => ({\n      toToken: token\n    }))\n  },\n  toTokenLock: false,\n  setToTokenLock: (lock: boolean) => {\n    set(() => ({\n      toTokenLock: lock\n    }))\n  },\n  totalAmount: undefined,\n  setTotalAmount: (value?: string) => {\n    set(() => ({\n      totalAmount: value\n    }))\n  },\n  autoStakePosition: false,\n  setAutoStakePosition: (autoStake: boolean) => {\n    set(() => ({\n      autoStakePosition: autoStake\n    }))\n  },\n  isFarmRewardsRange: false,\n  setIsFarmRewardsRange: (isRange: boolean) => {\n    set(() => ({\n      isFarmRewardsRange: isRange\n    }))\n  },\n  useZapIn: false,\n  setUseZapIn: (value: boolean) => {\n    set(() => ({\n      useZapIn: value\n    }))\n  },\n  confirmModalOpen: false,\n  setConfirmModalOpen: (value: boolean) => {\n    set(() => ({\n      confirmModalOpen: value\n    }))\n  },\n  nftOpen: false,\n  setNftOpen: (value: boolean) => {\n    set(() => ({\n      nftOpen: value\n    }))\n  },\n  relatedPosId: '',\n  setRelatedPosId: (value: string) => {\n    set(() => ({\n      relatedPosId: value\n    }))\n  },\n  resetAddLiquidity: () => {\n    set(() => ({\n      isFarmRewardsRange: false,\n      autoStakePosition: false,\n      totalAmount: undefined,\n      fromTokenLock: false,\n      fromToken: undefined,\n      toTokenLock: false,\n      toToken: undefined,\n      isFullRange: false,\n      percentMap: { percentA: '0', percentB: '0' },\n      fromAmount: '',\n      toAmount: '',\n      fromAmountValue: '',\n      toAmountValue: '',\n      liquidityAmount: '',\n      byAmountIn: true,\n      isTokenA: true,\n      useZapIn: false,\n      nftOpen: false,\n      relatedPosId: ''\n    }))\n  }\n})\n\nconst useAddLiquidityStore = create(store)\nexport default useAddLiquidityStore\n","import { FreshProgressRef } from '@/components/swap/FreshProgressV2'\nimport useGlobalStore from '@/store/common/global'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport useZapStore from '@/store/zap/index'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { bnToAmount, d, fixDown, formatNumberWithDown, getBalanceChanges, textEllipses } from '@cetus/utils'\nimport { WithdrawCalculationOptions } from '@cetusprotocol/zap-sdk'\nimport { debounce } from 'lodash-es'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\n\nexport default function useZapSubmit(type = 'Deposit') {\n  const {\n    zapAmount,\n    currentZapToken,\n    zapAmountRate,\n    zapTokenBalance,\n    isPreLoading,\n    preDepositeData,\n    zapApiPool,\n    setIsPreLoading,\n    lower,\n    upper,\n    liquidity,\n    zapCurrPriceData,\n    setPreDepositeData,\n    zapSlideValue\n  } = useZapStore()\n  console.log('🚀 ~ useZapSubmit ~ zapCurrPriceData:', zapCurrPriceData)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { setConfirmModalOpen } = useAddLiquidityStore()\n  const zapSdk = useSdk('zap')\n  const { zapSlippage, slippage } = useGlobalStore()\n  const [uuid, setUuid] = useState<string>('')\n  const [zapNotAvailable, setZapNotAvailable] = useState<boolean>(false)\n\n  const { getTokenPrice } = useTokenPrice()\n\n  const tokenAPrice = getTokenPrice(zapApiPool?.tokenA?.coin_type)\n  const tokenBPrice = getTokenPrice(zapApiPool?.tokenB?.coin_type)\n\n  const marketPrice = useMemo(() => {\n    if (tokenAPrice && tokenBPrice) {\n      return d(tokenAPrice.price).div(tokenBPrice.price).toString()\n    }\n    return undefined\n  }, [tokenAPrice?.price, tokenBPrice?.price])\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: type === 'Withdraw' ? 'Zap Out' : 'Zap In',\n      disabled: false\n    }\n\n    // if (isPreLoading) {\n    //   btnInfo.disabled = true\n    //   return btnInfo\n    // }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!zapAmount || (zapAmount && !+zapAmount)) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //判断余额\n    if (d(zapAmount).gt(zapTokenBalance?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(zapTokenBalance?.symbol, 10)} Balance`\n      return btnInfo\n    }\n\n    if (d(zapAmountRate).gt(10000) || (d(zapAmountRate).gt(0) && d(zapAmountRate).lt(0.0001))) {\n      btnInfo.disabled = true\n    }\n\n    return btnInfo\n  }, [currentAccount?.address, zapAmount, currentZapToken?.coin_type, isPreLoading, type, zapTokenBalance?.balanceFormat])\n\n  const handleZapIn = debounce(\n    () => {\n      if (!currentAccount) {\n        onWalletModal(true)\n      } else {\n        setConfirmModalOpen(true)\n      }\n    },\n    300,\n    {\n      leading: true,\n      trailing: false\n    }\n  )\n\n  const getSubmitBaseInfo = () => {\n    const amountA = preDepositeData?.amount_a\n    const amountB = preDepositeData?.amount_b\n    const tokenA = zapApiPool?.tokenA\n    const tokenB = zapApiPool?.tokenB\n    const displayTokenA = zapApiPool?.displayTokenA\n    const displayTokenB = zapApiPool?.displayTokenB\n    const dispalyAmountA = bnToAmount(!zapApiPool?.isReverse ? amountA : amountB, !zapApiPool?.isReverse ? tokenA?.decimals : tokenB?.decimals)\n    const dispalyAmountB = bnToAmount(!zapApiPool?.isReverse ? amountB : amountA, !zapApiPool?.isReverse ? tokenB?.decimals : tokenA?.decimals)\n\n    return {\n      amountA,\n      amountB,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      dispalyAmountA,\n      dispalyAmountB\n    }\n  }\n\n  const getZapDepositToastInfo = () => {\n    const { displayTokenA, displayTokenB, dispalyAmountA, dispalyAmountB } = getSubmitBaseInfo()\n    // toDo: 是否为单边，可能还是需要用价格区间判断后得到fromTokenLock, toTokenLock, 暂直接用数量判断\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description =\n          !dispalyAmountA && !dispalyAmountB\n            ? `Add ${dispalyAmountA} ${displayTokenA?.symbol} and ${dispalyAmountB} ${displayTokenB?.symbol}`\n            : !dispalyAmountA\n              ? `Add ${dispalyAmountA} ${displayTokenA?.symbol}`\n              : !dispalyAmountB\n                ? `Add ${dispalyAmountB} ${displayTokenB?.symbol}`\n                : 'Add Liquidity'\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          let amountAF = dispalyAmountA\n          let amountBF = dispalyAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || dispalyAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || dispalyAmountB\n          }\n          const description =\n            !dispalyAmountA && !dispalyAmountB\n              ? `Add ${amountAF} ${displayTokenA?.symbol} and ${amountBF} ${displayTokenB?.symbol}`\n              : !dispalyAmountA && dispalyAmountB\n                ? `Add ${amountAF} ${displayTokenA?.symbol}`\n                : !dispalyAmountB && dispalyAmountA\n                  ? `Add ${amountBF} ${displayTokenB?.symbol}`\n                  : 'Add Liquidity'\n\n          info.toastDescriptionContent = description\n          info.modalDescriptionText = description\n          info.toastTitleText = 'Supplied Successful'\n        }\n\n        return info\n      }\n    }\n\n    return toastInfo\n  }\n\n  const getZapDepositTx = async (lower?: any, upper?: any, isFarm?: boolean, posObj?: any) => {\n    console.log('🚀 ~ getZapDepositTx ~ isFarm:', isFarm)\n    const { tokenA, tokenB } = getSubmitBaseInfo()\n\n    // transactionConfirmation(toastInfo)\n\n    const params: any = {\n      deposit_obj: preDepositeData,\n      pool_id: zapApiPool?.poolAddress,\n      coin_type_a: tokenA?.coin_type,\n      coin_type_b: tokenB?.coin_type,\n      tick_lower: lower,\n      tick_upper: upper,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage)\n    }\n\n    if (posObj) {\n      params['pos_obj'] = posObj\n    }\n\n    if (isFarm) {\n      params['farms_pool_id'] = zapApiPool?.farmsPoolAddress\n    }\n\n    console.log('getZapTx buildDepositPayload params: ', params)\n\n    const tx = await zapSdk!.Zap.buildDepositPayload(params)\n    console.log('🚀 ~ getZapTx ~ tx:', tx)\n\n    // const res = await signAndExecuteTransaction(tx, toastInfo, {\n    //   useDevInspect: true,\n    //   useMev: mevProtect,\n    //   showSuccessModal: false,\n    //   useFastMode: transactionMode === 'Fast Mode',\n    //   maxCapForGas,\n    //   customGasPrice\n    // })\n\n    return tx\n  }\n\n  const getZapWithdrawToastInfo = (showDisplayTokenALock: boolean, showDisplayTokenBLock: boolean) => {\n    const { displayTokenA, displayTokenB, dispalyAmountA, dispalyAmountB } = getSubmitBaseInfo()\n\n    const toastInfo = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = `Withdraw ${formatNumberWithDown(zapAmount, currentZapToken?.decimals)} ${currentZapToken?.symbol}`\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          let amountAF = dispalyAmountA\n          let amountBF = dispalyAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || dispalyAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || dispalyAmountB\n          }\n\n          info.toastDescriptionContent = ''\n          info.modalDescriptionText = ''\n          info.toastTitleText = 'Remove Liquidity Successful'\n        }\n\n        return info\n      }\n    }\n\n    return toastInfo\n  }\n\n  const getZapWithdrawTx = async (posId: string, liquidity: string, lower: any, upper: any, collect_rewarder_types: any, isFarm?: boolean) => {\n    console.log('🚀 ~ getZapWithdrawTx ~ isFarm:', isFarm)\n    console.log('🚀 ~ useZapSubmit ~ getZapWithdrawTx preDepositeData:', preDepositeData)\n    const { tokenA, tokenB } = getSubmitBaseInfo()\n\n    const params: any = {\n      withdraw_obj: preDepositeData,\n      pool_id: zapApiPool?.poolAddress,\n      pos_id: posId,\n      close_pos: preDepositeData?.burn_liquidity === liquidity ? true : false,\n      collect_fee: true,\n      collect_rewarder_types,\n      coin_type_a: tokenA?.coin_type,\n      coin_type_b: tokenB?.coin_type,\n      tick_lower: lower,\n      tick_upper: upper,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage)\n    }\n\n    if (isFarm) {\n      params['farms_pool_id'] = zapApiPool?.farmsPoolAddress\n    }\n    console.log('🚀 ~ useZapSubmit ~ getZapWithdrawTx params:', params)\n\n    const tx = await zapSdk!.Zap.buildWithdrawPayload(params)\n\n    return tx\n  }\n\n  const preZapParamsRef = useRef<any>({})\n  const zapProgressRef = useRef<FreshProgressRef>(null)\n  const zapUuidRef = useRef<string>('')\n\n  useEffect(() => {\n    preZapParamsRef.current = {\n      currentZapToken,\n      zapApiPool,\n      zapAmount,\n      currentSqrtPrice: zapCurrPriceData?.currentSqrtPrice,\n      lower,\n      upper,\n      liquidity,\n      zapSlippage,\n      zapAmountRate,\n      marketPrice\n    }\n  }, [\n    currentZapToken?.coin_type,\n    zapApiPool?.poolAddress,\n    zapAmount,\n    zapCurrPriceData?.currentSqrtPrice,\n    lower,\n    upper,\n    liquidity,\n    zapSlippage,\n    zapAmountRate,\n    marketPrice\n  ])\n\n  const isMinimumPrecision = useMemo(() => {\n    if (currentZapToken?.decimals && d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).eq(1)) return true\n    return false\n  }, [currentZapToken?.decimals, zapAmount])\n\n  const preZapIn = async (uuid?: string) => {\n    console.log('🚀 ~ preZapIn ~ preZapIn:', preZapIn)\n    const { currentZapToken, zapApiPool, zapAmount, currentSqrtPrice, lower, upper, liquidity, zapSlippage, marketPrice } = preZapParamsRef.current\n\n    setIsPreLoading(true)\n    const isCoinA = currentZapToken?.coin_type === zapApiPool?.tokenA?.coin_type\n    const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n    const coinAmount = fixDown(d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString(), 0)\n    console.log('🚀 ~ preZapIn ~ options.zapSlippage:', slippage, zapSlippage)\n    const options = {\n      pool_id: zapApiPool?.poolAddress,\n      tick_lower: lower,\n      tick_upper: upper,\n      current_sqrt_price: currentSqrtPrice,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage),\n      // mark_price: marketPrice ? (isCoinA ? marketPrice : d(1).div(marketPrice).toString()) : undefined\n      mark_price: marketPrice\n    }\n    console.log('🚀 ~ preZapIn ~ options123:', options)\n\n    const modeOptions = {\n      mode,\n      coin_amount: coinAmount,\n      coin_type_a: zapApiPool?.tokenA?.coin_type,\n      coin_type_b: zapApiPool?.tokenB?.coin_type,\n      coin_decimal_a: zapApiPool?.tokenA?.decimals,\n      coin_decimal_b: zapApiPool?.tokenB?.decimals,\n      max_remain_rate: 0.01\n    }\n    console.log('🚀 ~ preZapIn ~ modeOptions:', modeOptions)\n\n    let res: any\n    try {\n      res = await zapSdk!.Zap.preCalculateDepositAmount(options, modeOptions as any)\n      console.log('🚀 ~ preZapIn ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ preZapIn ~ error:', error)\n      setZapNotAvailable(true)\n    }\n\n    if (uuid === zapUuidRef.current) {\n      setPreDepositeData(res)\n    }\n    setIsPreLoading(false)\n  }\n\n  const preZapOut = async (uuid?: string) => {\n    setIsPreLoading(true)\n    const { currentZapToken, zapApiPool, zapAmount, currentSqrtPrice, lower, upper, liquidity, zapSlippage } = preZapParamsRef.current\n\n    const isCoinA = currentZapToken?.coin_type === zapApiPool?.tokenA?.coin_type\n    const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n    const coinAmount = d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString()\n    const options = {\n      mode,\n      pool_id: zapApiPool?.poolAddress,\n      tick_lower: lower,\n      tick_upper: upper,\n      current_sqrt_price: currentSqrtPrice,\n      coin_type_a: zapApiPool?.tokenA?.coin_type,\n      coin_type_b: zapApiPool?.tokenB?.coin_type,\n      coin_decimal_a: zapApiPool?.tokenA?.decimals,\n      coin_decimal_b: zapApiPool?.tokenB?.decimals\n    } as WithdrawCalculationOptions\n\n    if (d(zapAmount).gte(zapTokenBalance?.balanceFormat)) {\n      options['burn_liquidity'] = liquidity\n    } else {\n      options['burn_liquidity'] = fixDown(d(liquidity).mul(d(zapSlideValue).div(100)).toString(), 0)\n    }\n\n    console.log('🚀 ~ preZapInRemove ~ options:', options)\n\n    let res: any\n    try {\n      res = await zapSdk!.Zap.preCalculateWithdrawAmount(options)\n      console.log('🚀 ~ preZapInRemove ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ preZapOut ~ error:', error)\n      setZapNotAvailable(true)\n    }\n\n    if (uuid === zapUuidRef.current) {\n      setPreDepositeData(res)\n    }\n    setIsPreLoading(false)\n  }\n\n  const debouncedPreZapIn = useDebounceFunction(preZapIn, 300)\n  const debouncedPreZapOut = useDebounceFunction(preZapOut, 300)\n\n  useEffect(() => {\n    // if (!Number(zapAmount) || d(zapAmountRate).gt(10000) || d(zapAmountRate).lt(0.0001)) {\n    //   setPreDepositeData(undefined)\n    //   return\n    // }\n    // if (type === 'Deposit') {\n    //   setIsPreLoading(true)\n    //   debouncedPreZapIn()\n    // } else {\n    //   if (zapSlideValue) {\n    //     setIsPreLoading(true)\n    //     debouncedPreZapOut()\n    //   }\n    // }\n    reCalculateZapData()\n  }, [zapAmount, currentZapToken?.coin_type, zapCurrPriceData?.currentSqrtPrice, lower, upper, zapSlideValue, zapAmountRate])\n\n  const handleResetZapProgress = () => {\n    zapProgressRef.current?.reset()\n  }\n\n  const reCalculateZapData = () => {\n    setZapNotAvailable(false)\n    const { zapAmount, zapAmountRate } = preZapParamsRef.current\n    console.log('🚀 ~ reCalculateZapData ~ zapAmount:', zapAmount)\n    console.log('🚀 ~ reCalculateZapData ~ zapAmountRate:', zapAmountRate)\n    console.log('🚀 ~ reCalculateZapData ~ zapAmountRate:', zapAmountRate)\n    if (!Number(zapAmount) || d(zapAmountRate).gt(10000) || d(zapAmountRate).lt(0.0001) || isMinimumPrecision) {\n      const uuid = v4()\n      zapUuidRef.current = uuid\n      setPreDepositeData(undefined)\n      setIsPreLoading(false)\n      return\n    }\n\n    setIsPreLoading(true)\n    const uuid = v4()\n    zapUuidRef.current = uuid\n    if (type == 'Deposit') {\n      debouncedPreZapIn(uuid)\n    } else {\n      debouncedPreZapOut(uuid)\n    }\n  }\n\n  useEffect(() => {\n    handleResetZapProgress()\n  }, [zapAmount, zapApiPool?.poolAddress, type])\n\n  useEffect(() => {\n    return () => {\n      handleResetZapProgress()\n      preZapParamsRef.current = null\n    }\n  }, [])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled,\n    handleZapIn,\n    isPreLoading,\n    getZapDepositToastInfo,\n    getZapDepositTx,\n    getZapWithdrawToastInfo,\n    getZapWithdrawTx,\n    zapProgressRef,\n    handleResetZapProgress,\n    reCalculateZapData,\n    isMinimumPrecision,\n    zapNotAvailable\n  }\n}\n","// import { Item } from '@/components/liquidity/provideLiquidity/common'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\n// import useLiquidityStore from '@/store/liquidity'\n// import usePriceRangeStore from '@/store/liquidity/priceRange'\nimport DepositRatio from '@/components/common/DepositRatio'\nimport FreshProgressV2 from '@/components/swap/FreshProgressV2'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useGlobalStore from '@/store/common/global'\nimport useZapStore from '@/store/zap/index'\nimport { calcCoinProportion, checkFullRange } from '@/utils/pool'\nimport { ErrorTips, MarketSource, MarketType } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { bnToAmount, d, formatCurrencyWithKMB, formatNumberWithDown, formatPrice, textEllipses } from '@cetus/utils'\nimport { Box, Button, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport Slippage from '../common/Slippage'\n\nexport default function ZapSubmiteInfo({\n  action,\n  onClick,\n  hideAmountInfo,\n  otherLoading,\n  isReverse,\n  inConfirmModal,\n  hideDepositRatio\n}: {\n  action: 'Deposit' | 'Withdraw'\n  onClick?: () => void\n  hideAmountInfo?: boolean\n  otherLoading?: boolean\n  isReverse?: boolean\n  inConfirmModal?: boolean\n  hideDepositRatio?: boolean\n}) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { btnDisabled, btnText, handleZapIn, zapProgressRef, reCalculateZapData, isMinimumPrecision, zapNotAvailable } = useZapSubmit(action)\n\n  const handleOnClick = () => {\n    if (!currentAccount) {\n      onWalletModal(true)\n      return\n    }\n    onClick ? onClick() : handleZapIn()\n  }\n\n  const [isOpen, setIsOpen] = useState(false)\n  const { zapSlippage } = useGlobalStore()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const {\n    zapSlideValue,\n    preDepositeData,\n    currentTokens,\n    currentZapToken,\n    zapAmount,\n    isPreLoading,\n    zapApiPool,\n    lower,\n    upper,\n    zapCurrPriceData,\n    posOriginAmounts,\n    zapAmountRate\n  } = useZapStore()\n  const { fromCoin, toCoin } = useMemo(() => {\n    const fromCoin = currentZapToken\n    const toCoin = currentTokens?.filter((item: any) => item?.coin_type !== currentZapToken?.coin_type)?.[0]\n    if (action === 'Withdraw') {\n      return {\n        fromCoin: toCoin,\n        toCoin: fromCoin\n      }\n    } else {\n      return {\n        fromCoin,\n        toCoin\n      }\n    }\n  }, [currentZapToken?.coin_type, currentTokens, action])\n\n  const { fromAmount, toAmount } = useMemo(() => {\n    let fromAmount, toAmount\n    if (preDepositeData && fromCoin?.coin_type && toCoin?.coin_type) {\n      fromAmount = bnToAmount(preDepositeData?.swap_result?.swap_in_amount, fromCoin?.decimals)\n      toAmount = bnToAmount(preDepositeData?.swap_result?.swap_out_amount, toCoin?.decimals)\n    }\n    return {\n      fromAmount,\n      toAmount\n    }\n  }, [preDepositeData, fromCoin?.coin_type, toCoin?.coin_type])\n\n  const { sources, priceImpactTextInfo, showPriceImpactTips } = usePriceImpact(fromCoin, toCoin, fromAmount, toAmount)\n\n  const [isToggle, setIsToggle] = useState(false)\n\n  const handleToggleRate = () => {\n    setIsToggle(!isToggle)\n  }\n\n  const minimumReceived = useMemo(() => {\n    if (toAmount) {\n      return formatNumberWithDown(d(toAmount).sub(d(toAmount).mul(zapSlippage)).toString())\n    }\n    return '--'\n  }, [zapSlippage, toAmount])\n\n  const currentPriceRate = useMemo(() => {\n    return preDepositeData?.swap_result?.swap_price\n  }, [preDepositeData])\n\n  const handleRefresh = () => {\n    console.log('ZapRoute handleRefresh')\n    reCalculateZapData()\n  }\n\n  const {\n    tokenA,\n    tokenB,\n    coinAmountA,\n    coinAmountB,\n    displayCoinAmountA,\n    displayCoinAmountB,\n    displayTokenA,\n    displayTokenB,\n    displayAmountARate,\n    displayAmountBRate,\n    amountARate,\n    amountBRate\n  } = useMemo(() => {\n    let coinAmountA, coinAmountB, tokenA, tokenB, amountARate, amountBRate\n    const isReverse = zapApiPool?.isReverse\n    if (preDepositeData && zapApiPool?.poolAddress) {\n      tokenA = zapApiPool?.tokenA\n      tokenB = zapApiPool?.tokenB\n      coinAmountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n      coinAmountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n      amountARate = getTokenAmountValue(tokenA?.coin_type, coinAmountA)\n      amountBRate = getTokenAmountValue(tokenB?.coin_type, coinAmountB)\n    }\n\n    return {\n      displayCoinAmountA: !isReverse ? coinAmountA : coinAmountB,\n      displayCoinAmountB: !isReverse ? coinAmountB : coinAmountA,\n      displayTokenA: !isReverse ? tokenA : tokenB,\n      displayTokenB: !isReverse ? tokenB : tokenA,\n      displayAmountARate: !isReverse ? amountARate : amountBRate,\n      displayAmountBRate: !isReverse ? amountBRate : amountARate,\n      tokenA,\n      tokenB,\n      coinAmountA,\n      coinAmountB,\n      amountARate,\n      amountBRate\n    }\n  }, [preDepositeData, zapApiPool?.poolAddress])\n\n  const { originPosAmountA, originPosAmountB } = useMemo(() => {\n    let originPosAmountA = ''\n    let originPosAmountB = ''\n    if (zapApiPool?.poolAddress && (posOriginAmounts?.coinAmountA || posOriginAmounts?.coinAmountB)) {\n      const tokenA = zapApiPool?.tokenA\n      const tokenB = zapApiPool?.tokenB\n      originPosAmountA = bnToAmount(posOriginAmounts?.coinAmountA, tokenA?.decimals)\n      originPosAmountB = bnToAmount(posOriginAmounts?.coinAmountB, tokenB?.decimals)\n    }\n\n    return { originPosAmountA, originPosAmountB }\n  }, [posOriginAmounts, zapApiPool?.poolAddress])\n\n  // 占比\n  const [percentMap, setPercentMap] = useState<any>({})\n  useEffect(() => {\n    if (coinAmountA || coinAmountB) {\n      const isFullRange = checkFullRange(lower, upper)\n      const rateMap = calcCoinProportion(coinAmountA || 0, coinAmountB || 0, zapCurrPriceData?.currentPrice, isFullRange)\n      setPercentMap(rateMap)\n    }\n  }, [coinAmountA, coinAmountB, zapCurrPriceData?.currentPrice])\n\n  const { isApp } = useWindowWidth()\n\n  const errorTips = useMemo(() => {\n    if (d(zapAmountRate).gt(10000)) {\n      return 'In Zap mode, each request should be within $10,000.'\n    } else if (d(zapAmountRate).gt(0) && (d(zapAmountRate).lt(0.0001) || isMinimumPrecision)) {\n      return 'The input is too small. Zap mode is not available.'\n    } else if (zapNotAvailable) {\n      return 'Zap mode is not available.'\n    }\n    return ''\n  }, [zapAmountRate, action, isMinimumPrecision, zapNotAvailable])\n\n  return (\n    <>\n      <VStack\n        gap=\"0px\"\n        w=\"100%\"\n        borderRadius=\"16px\"\n        border=\"1px solid\"\n        borderColor={inConfirmModal ? 'rgba(0,0,0,0)' : 'border'}\n        bg={inConfirmModal ? 'none' : 'bg_six'}\n        p={{ base: inConfirmModal ? '0px' : '0px 8px', lg: inConfirmModal ? '0px' : '0px 16px' }}\n      >\n        {!inConfirmModal && (\n          <Button\n            w={{ base: 'calc(100% + 16px)', lg: 'calc(100% + 34px)' }}\n            h=\"52px\"\n            margin=\"-1px -1px 0px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            borderRadius=\"12px\"\n            isDisabled={(isPreLoading || btnDisabled || otherLoading || showPriceImpactTips || !!errorTips) && currentAccount?.address}\n            isLoading={isPreLoading || otherLoading}\n            onClick={handleOnClick}\n          >\n            {btnText}\n          </Button>\n        )}\n\n        {!!Number(zapAmount) && (\n          <VStack w=\"100%\" gap=\"0px\">\n            {errorTips ? (\n              <Box w=\"100%\" p=\"12px 0px\">\n                <ErrorTips tips={errorTips} />\n              </Box>\n            ) : (\n              <>\n                {showPriceImpactTips && (\n                  <Box w=\"100%\" pt=\"12px\">\n                    <ErrorTips tips=\"High price difference. Be cautious before submitting your order.\" />\n                  </Box>\n                )}\n                {inConfirmModal && (\n                  <HStack w=\"100%\" justify=\"space-between\">\n                    <Text fontSize=\"14px\" color=\"text_paragraph\">\n                      Zap Amount\n                    </Text>\n                    <Text fontSize=\"14px\" color=\"text_caption\">\n                      {formatCurrencyWithKMB(zapAmountRate, 2)}\n                    </Text>\n                  </HStack>\n                )}\n                {Number(zapAmount) > 0 && Number(fromAmount) > 0 && (\n                  <VStack w=\"100%\" gap=\"12px\" pt=\"16px\" pb={inConfirmModal ? '0px' : '16px'}>\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <Text fontSize=\"14px\" color=\"text_paragraph\">\n                        Zap Route\n                      </Text>\n                    </HStack>\n                    <VStack\n                      w=\"100%\"\n                      bg={inConfirmModal ? 'bg_secondary' : 'none'}\n                      borderRadius=\"12px\"\n                      p={inConfirmModal ? '0px 12px' : '0px'}\n                      gap={inConfirmModal ? '4px' : '12px'}\n                      border=\"1px solid\"\n                      borderColor={inConfirmModal ? 'border' : 'rgba(0,0,0,0)'}\n                      flexDirection={action === 'Withdraw' ? 'column-reverse' : 'column'}\n                    >\n                      <VStack\n                        w=\"100%\"\n                        align=\"flex-start\"\n                        bg={inConfirmModal ? 'none' : 'button_outline_hov_bg'}\n                        p={inConfirmModal ? '16px 0px' : '16px 12px'}\n                        borderRadius={inConfirmModal ? '0px' : '12px'}\n                        borderBottom=\"1px solid\"\n                        borderColor={inConfirmModal ? 'border' : 'rgba(0,0,0,0)'}\n                      >\n                        <HStack w=\"100%\" align=\"center\">\n                          <VStack\n                            w=\"100%\"\n                            align=\"flex-start\"\n                            onClick={() => {\n                              setIsOpen(!isOpen)\n                            }}\n                          >\n                            <HStack w=\"100%\" justify=\"flex-start\">\n                              {isPreLoading ? (\n                                <Skeleton w=\"100%\" h=\"16px\" />\n                              ) : (\n                                <Text w=\"100%\" fontSize=\"12px\" color=\"text_caption\" textAlign=\"left\">\n                                  Swap {formatNumberWithDown(fromAmount)} {fromCoin?.symbol} for {minimumReceived} {toCoin?.symbol}\n                                </Text>\n                              )}\n                            </HStack>\n                            {isPreLoading ? (\n                              <Skeleton w=\"150px\" h=\"16px\" />\n                            ) : (\n                              <HStack\n                                w=\"100%\"\n                                justify=\"space-between\"\n                                align={{ base: 'flex-start', lg: 'center' }}\n                                flexDirection={{ base: 'column', lg: 'row' }}\n                              >\n                                <HStack gap=\"4px\" justify=\"space-between\" w={{ base: '100%', lg: 'unset' }}>\n                                  <HStack gap=\"4px\">\n                                    <FreshProgressV2\n                                      callbackInterval={20}\n                                      ref={zapProgressRef}\n                                      min={0}\n                                      max={20}\n                                      size=\"14px\"\n                                      noBg={true}\n                                      thickness=\"16px\"\n                                      onClick={handleRefresh}\n                                    />\n                                    <HStack flexWrap=\"wrap\">\n                                      <Text fontSize=\"12px\" color=\"text_paragraph\">\n                                        Price Difference\n                                      </Text>\n                                      <Text color={priceImpactTextInfo?.textColor} fontSize=\"12px\">\n                                        {priceImpactTextInfo?.priceImpactText}\n                                      </Text>\n                                      {sources?.map((source: any) => {\n                                        return <MarketSource key={source} market={source as MarketType} />\n                                      })}\n                                    </HStack>\n                                  </HStack>\n                                  {isApp && (\n                                    <Icon\n                                      xlinkHref=\"#icon-icon_arrow\"\n                                      svgW=\"12px\"\n                                      svgH=\"12px\"\n                                      transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                                    />\n                                  )}\n                                </HStack>\n                                <HStack align=\"center\" gap=\"2px\">\n                                  {inConfirmModal ? (\n                                    <HStack gap=\"4px\">\n                                      <Text fontSize=\"12px\" color=\"text_paragraph\">\n                                        Slippage\n                                      </Text>\n                                      <Text fontSize=\"12px\" color=\"text_caption\">\n                                        {d(zapSlippage).mul(100).toString()}%\n                                      </Text>\n                                    </HStack>\n                                  ) : (\n                                    <Slippage slippageType=\"zap\" toolTipText=\"Slippage Tolerance\" />\n                                  )}\n                                  {!isApp && (\n                                    <Icon\n                                      xlinkHref=\"#icon-icon_arrow\"\n                                      svgW=\"12px\"\n                                      svgH=\"12px\"\n                                      transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                                    />\n                                  )}\n                                </HStack>\n                              </HStack>\n                            )}\n                            {/* {showPriceImpactTips && (\n                              <Text fontSize=\"12px\" color=\"primary_red\" w=\"100%\">\n                                High price difference. Be cautious before submitting your order.\n                              </Text>\n                            )} */}\n                          </VStack>\n                        </HStack>\n                        {isOpen && (\n                          <HStack w=\"100%\" justify=\"space-between\" bg=\"bg_fifth\" h=\"52px\" borderRadius=\"12px\" p=\"0px 8px\">\n                            <Text fontSize=\"12px\" color=\"text_paragraph\">\n                              Swap Rate\n                            </Text>\n                            {isPreLoading ? (\n                              <Skeleton w=\"150px\" h=\"16px\" />\n                            ) : (\n                              <HStack>\n                                {isToggle ? (\n                                  <Text fontSize=\"12px\" color=\"text_caption\">\n                                    1 {toCoin?.symbol} = {formatPrice(1 / currentPriceRate)} {fromCoin?.symbol}\n                                  </Text>\n                                ) : (\n                                  <Text fontSize=\"12px\" color=\"text_caption\">\n                                    1 {fromCoin?.symbol} = {formatPrice(currentPriceRate)} {toCoin?.symbol}\n                                  </Text>\n                                )}\n                                <Icon xlinkHref=\"#icon-icon_swap1\" svgW=\"16px\" svgH=\"16px\" onClick={handleToggleRate} />\n                              </HStack>\n                            )}\n                          </HStack>\n                        )}\n                      </VStack>\n\n                      <VStack\n                        w=\"100%\"\n                        p={inConfirmModal ? '16px 0px' : '16px 12px'}\n                        bg={inConfirmModal ? 'none' : 'button_outline_hov_bg'}\n                        borderRadius=\"12px\"\n                        gap=\"12px\"\n                      >\n                        {hideDepositRatio ? (\n                          <Text w=\"100%\" textAlign=\"left\" fontSize=\"12px\" color=\"text_caption\">\n                            {action === 'Withdraw' ? 'Expected Amounts of Remove' : 'Expected Amounts to Add'}\n                          </Text>\n                        ) : (\n                          <DepositRatio\n                            tokenA={tokenA}\n                            tokenB={tokenB}\n                            percentMap={percentMap}\n                            type=\"zap\"\n                            isLoading={isPreLoading}\n                            isReverse={isReverse}\n                            label=\"Expected Amounts to Add\"\n                          />\n                        )}\n                        <HStack bg=\"text_highlight_opacity.10\" w=\"100%\" h=\"52px\" justify=\"space-between\" align=\"center\" borderRadius=\"12px\">\n                          <PosAmountInfo\n                            token={!isReverse ? tokenA : tokenB}\n                            amount={\n                              !isReverse\n                                ? formatNumberWithDown(zapSlideValue == 100 ? originPosAmountA : coinAmountA)\n                                : formatNumberWithDown(zapSlideValue == 100 ? originPosAmountB : coinAmountB)\n                            }\n                            rate={!isReverse ? amountARate : amountBRate}\n                            loading={isPreLoading}\n                          />\n                          <Box bg=\"bg_fifth\" w=\"1px\" h=\"100%\" />\n                          <PosAmountInfo\n                            token={!isReverse ? tokenB : tokenA}\n                            amount={\n                              !isReverse\n                                ? formatNumberWithDown(zapSlideValue == 100 ? originPosAmountB : coinAmountB)\n                                : formatNumberWithDown(zapSlideValue == 100 ? originPosAmountA : coinAmountA)\n                            }\n                            loading={isPreLoading}\n                            rate={!isReverse ? amountBRate : amountARate}\n                            align=\"right\"\n                          />\n                        </HStack>\n                      </VStack>\n                      {/* )} */}\n                    </VStack>\n                  </VStack>\n                )}\n              </>\n            )}\n          </VStack>\n        )}\n      </VStack>\n    </>\n  )\n}\n\nfunction PosAmountInfo({ token, amount, rate, loading, align = 'left' }: { token: any; amount: any; rate: any; loading: boolean; align?: string }) {\n  return (\n    <HStack flex=\"1\" gap=\"8px\" p=\"12px\" justify=\"flex-start\" flexDirection={align === 'left' ? 'row' : 'row-reverse'}>\n      {loading ? <SkeletonCircle size=\"20px\" /> : <SingleCoinImage imageUrl={token?.logo_url} w=\"20px\" h=\"20px\" />}\n      <VStack align={`flex-${align === 'left' ? 'start' : 'end'}`} gap=\"4px\">\n        {loading ? (\n          <Skeleton w=\"50px\" h=\"14px\" />\n        ) : (\n          <Text fontSize=\"12px\" color=\"text_caption\" textAlign={`${align === 'left' ? 'left' : 'right'}`}>\n            {amount} {textEllipses(token?.symbol, 10)}\n          </Text>\n        )}\n        {loading ? (\n          <Skeleton w={{ base: '70px', lg: '100px' }} h=\"12px\" />\n        ) : (\n          <Text fontSize=\"12px\" color=\"text_paragraph\">\n            {/* {rate && !!+rate ? `${formatCurrencyWithKMB(rate, 2)}` : null} */}\n            {formatCurrencyWithKMB(rate, 2)}\n          </Text>\n        )}\n      </VStack>\n    </HStack>\n  )\n}\n","import { useMemo } from 'react'\n\nexport default function useCurrentApiPool(currentPosBaseInfo: any, posApiPoolData: any) {\n  const currentApiPoolInfo = useMemo(() => {\n    if (currentPosBaseInfo?.clmmPool) {\n      return posApiPoolData?.[currentPosBaseInfo?.clmmPool]\n    }\n    return undefined\n  }, [currentPosBaseInfo?.clmmPool, posApiPoolData])\n\n  return {\n    currentApiPoolInfo\n  }\n}\n","import useLiquidityStore from '@/store/liquidity'\nimport { PoolApiInfo } from '@/types'\nimport { d } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\n\nexport default function useGetCurrentPrice() {\n  const { setCurrentPriceData } = useLiquidityStore()\n\n  const getCurrentPrice = (currentSqrtPrice: string, apiPoolInfo: PoolApiInfo) => {\n    if (apiPoolInfo.tokenA && apiPoolInfo.tokenB) {\n      const decimalsA = apiPoolInfo.tokenA.decimals\n      const decimalsB = apiPoolInfo.tokenB.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      const reverseCurrentPrice = d(1).div(currentPrice).toString()\n\n      const data = {\n        currentPrice,\n        reverseCurrentPrice,\n        currentSqrtPrice,\n        pool: apiPoolInfo.poolAddress\n      }\n      setCurrentPriceData(data)\n    }\n  }\n\n  return {\n    getCurrentPrice\n  }\n}\n","import useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport { PoolApiInfo, PoolContractInfo } from '@/types'\nimport { getPoolDirection } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { d } from '@cetusprotocol/common-sdk'\nimport useGetCurrentPrice from '../liquidity/useGetCurrentPrice'\n\nexport default function useGetContractPoolInfo() {\n  const clmmSdk = useSdk('clmm')\n  const { fetchTokenInfo } = useGetToken()\n  const { contractPoolInfo, setContractPoolInfo, setContractPoolInfoLoading, apiPoolInfo, setApiPoolInfo, setApiPoolInfoLoading } =\n    useLiquidityStore()\n  const { setFromToken, setToToken } = useAddLiquidityStore()\n  const { getCurrentPrice } = useGetCurrentPrice()\n\n  const getContractPoolInfo = async (poolAddress: string): Promise<PoolContractInfo | null> => {\n    setContractPoolInfoLoading(true)\n    let poolInfo: PoolContractInfo | null = null\n    try {\n      const res = await clmmSdk!.Pool.getPool(poolAddress)\n      poolInfo = {\n        ...res,\n        coinAmountA: String(res.coin_amount_a),\n        coinAmountB: String(res.coin_amount_b),\n        coinTypeA: res.coin_type_a,\n        coinTypeB: res.coin_type_b,\n        poolAddress: res.id,\n        poolType: res.pool_type,\n        tickSpacing: Number(res.tick_spacing),\n        current_sqrt_price: String(res.current_sqrt_price),\n        fee_growth_global_a: String(res.fee_growth_global_a),\n        fee_growth_global_b: String(res.fee_growth_global_b),\n        fee_protocol_coin_a: String(res.fee_protocol_coin_a),\n        fee_protocol_coin_b: String(res.fee_protocol_coin_b),\n        fee_rate: String(res.fee_rate),\n        liquidity: String(res.liquidity),\n        rewarder_infos: res.rewarder_infos.map(r => {\n          return {\n            coinAddress: r.coin_type,\n            emissionsEveryDay: r.emissions_per_second,\n            emissions_per_second: String(r.emissions_per_second),\n            growth_global: String(r.growth_global)\n          }\n        })\n      }\n      console.log(poolAddress, poolInfo, 'poolAddress')\n      console.log('🚀 ~ getContractPoolInfo ~ poolInfo:', {\n        poolInfo,\n        apiPoolInfo\n      })\n\n      // 如果没拿到apiPoolInfo 信息，则用合约信息转化一份\n      if (apiPoolInfo?.displayTokenA === undefined) {\n        const apiPool = await formatApiPoolByContractPool(poolInfo)\n\n        if (apiPool) {\n          setApiPoolInfo(apiPool)\n          setApiPoolInfoLoading(false)\n          getCurrentPrice(poolInfo?.current_sqrt_price, apiPool)\n          setFromToken(apiPool?.displayTokenA)\n          setToToken(apiPool?.displayTokenB)\n        }\n      }\n    } catch (error) {\n      console.log('getContractPoolInfo ~ error:', error)\n    } finally {\n      setContractPoolInfoLoading(false)\n    }\n    if (!contractPoolInfo) {\n      setContractPoolInfo(poolInfo || null)\n\n      return poolInfo\n    } else {\n      if (poolInfo) {\n        setContractPoolInfo(poolInfo)\n        return poolInfo\n      } else {\n        return contractPoolInfo\n      }\n    }\n  }\n\n  async function formatApiPoolByContractPool(cPool: PoolContractInfo) {\n    const tokenA = await fetchTokenInfo(cPool.coinTypeA)\n    const tokenB = await fetchTokenInfo(cPool.coinTypeB)\n\n    if (tokenA && tokenB) {\n      const name = `${tokenA?.symbol} - ${tokenB?.symbol}`\n      const feeRate = d(cPool.fee_rate).div(100).toString()\n      const fee = d(cPool.fee_rate).div(10000).toString()\n      const feeDisplay = d(feeRate).div(100).toString() + '%'\n      const isReverse = !getPoolDirection(cPool.coinTypeA, cPool.coinTypeB)\n\n      const pool: PoolApiInfo = {\n        poolAddress: cPool.poolAddress,\n        name,\n        isReverse,\n        tokenA,\n        tokenB,\n        displayTokenA: isReverse ? tokenB : tokenA,\n        displayTokenB: isReverse ? tokenA : tokenB,\n        haveMining: false,\n        miningRewardList: null,\n        miningAprList: null,\n        haveFarming: false,\n        farmsRewarderList: null,\n        farmsApr: '',\n        farmingAprDisplay: '',\n        feeApr: '',\n        feeAprDisplay: '',\n        miningAprTotal: '',\n        feeAndMiningAprDisplay: '',\n        totalAprDisplay: '',\n        fee,\n        feeRate,\n        feeDisplay,\n        tvlDisplay: '0',\n        volume24Display: '0',\n        fees24Display: '0',\n        isVaults: false,\n        tickSpacing: cPool.tickSpacing.toString()\n      } as PoolApiInfo\n\n      return pool\n    }\n\n    return undefined\n  }\n\n  return {\n    getContractPoolInfo\n  }\n}\n","import useGlobalStore from '@/store/common/global'\nimport { MsafeTransactionSubType } from '@/types'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { d, fixDown } from '@cetus/utils'\n\ntype GetRemoveParams = {\n  posId: string\n  poolAddress: string\n  coinTypeA: string\n  coinTypeB: string\n  amountA: string\n  amountB: string\n  liquidity: string\n  lowerTick: number\n  upperTick: number\n  posType: 'clmm' | 'farms'\n  rewarderCoinTypes: any\n  farmsPoolId?: string\n  farmsPosId?: string\n}\n\nexport default function usePosRemove() {\n  const clmmSdk = useSdk('clmm')\n  const farmsSdk = useSdk('farms')\n  const { slippage } = useGlobalStore()\n\n  const getRemoveTsPayload = async (params: GetRemoveParams) => {\n    const {\n      posId,\n      poolAddress,\n      coinTypeA,\n      coinTypeB,\n      amountA,\n      amountB,\n      liquidity,\n      lowerTick,\n      upperTick,\n      posType,\n      rewarderCoinTypes,\n      farmsPoolId,\n      farmsPosId\n    } = params\n    const minAmountA = d(amountA).mul(d(1).sub(d(slippage)))\n    const minAmountB = d(amountB.toString()).mul(d(1).sub(d(slippage)))\n    console.log('🚀 ~ getRemoveTsPayload ~ minAmountA:', minAmountA, minAmountB)\n\n    if (posType === 'clmm') {\n      const parameter = {\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        pool_id: poolAddress,\n        pos_id: posId,\n        delta_liquidity: liquidity,\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        collect_fee: true,\n        rewarder_coin_types: rewarderCoinTypes\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ parameter:', parameter)\n\n      const tx = await clmmSdk!.Position.removeLiquidityPayload(parameter)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.DecreaseLiquidity,\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ msafeParams:', tx, msafeParams)\n      return {\n        tx,\n        msafeParams\n      }\n    } else {\n      const parameter = {\n        pool_id: farmsPoolId || '',\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        position_nft_id: farmsPosId || '',\n        clmm_pool_id: poolAddress,\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        collect_rewarder: false,\n        clmm_rewarder_types: rewarderCoinTypes,\n        delta_liquidity: liquidity,\n        unstake: false,\n        close_position: false\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ parameter:', parameter)\n\n      const tx = await farmsSdk!.Farms.removeLiquidityPayload(parameter)\n\n      const msafeParams = {\n        action: 'FarmingDecreaseLiquidity',\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ msafeParams:', msafeParams, tx)\n      return {\n        tx,\n        msafeParams\n      }\n    }\n  }\n\n  // 移除并关闭仓位\n  const getCloseTsPayload = async (params: GetRemoveParams) => {\n    const {\n      posId,\n      poolAddress,\n      coinTypeA,\n      coinTypeB,\n      amountA,\n      amountB,\n      liquidity,\n      lowerTick,\n      upperTick,\n      posType,\n      rewarderCoinTypes,\n      farmsPoolId,\n      farmsPosId\n    } = params\n\n    const minAmountA = d(amountA).mul(d(1).sub(d(slippage)))\n    const minAmountB = d(amountB.toString()).mul(d(1).sub(d(slippage)))\n    console.log('🚀 ~ getCloseTsPayload ~ minAmountA:', params, minAmountA.toString(), minAmountB.toString())\n    console.log('🚀 ~ getCloseTsPayload ~ parameter.rewarderCoinTypes:', rewarderCoinTypes)\n\n    if (posType === 'clmm') {\n      const parameter = {\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        pool_id: poolAddress,\n        pos_id: posId || '',\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        rewarder_coin_types: rewarderCoinTypes,\n        collect_fee: false\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ parameter:', parameter)\n\n      const tx = await clmmSdk!.Position.closePositionPayload(parameter)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.RemoveLiquidity,\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ msafeParams:', tx, msafeParams)\n      return {\n        tx,\n        msafeParams\n      }\n    } else {\n      const parameter = {\n        pool_id: farmsPoolId || '',\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        position_nft_id: farmsPosId || '',\n        clmm_pool_id: poolAddress,\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        collect_fee: true,\n        collect_rewarder: true,\n        clmm_rewarder_types: rewarderCoinTypes,\n        delta_liquidity: liquidity,\n        unstake: true,\n        close_position: true,\n        clmm_position_id: posId\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ parameter:', parameter)\n      const tx = await farmsSdk!.Farms.removeLiquidityPayload(parameter)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.FarmingRemoveLiquidity,\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ msafeParams:', msafeParams, tx)\n      return {\n        tx,\n        msafeParams\n      }\n    }\n  }\n  return {\n    getRemoveTsPayload,\n    getCloseTsPayload\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useCurrentApiPool from '@/hooks/position/useCurrentApiPool'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, Token, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, getBalanceChanges, isAvailableObject } from '@cetus/utils'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport useCurrentPos from './useCurrentPos'\nimport useGetPosLiquiditys from './useGetPosLiquiditys'\nimport usePosAdd from './usePosAdd'\nimport usePosHelper from './usePosHelper'\nimport usePosRemove from './usePosRemove'\n\nexport default function usePosRemovePage() {\n  const { transactionConfirmation } = useTransactionModal()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { getCoinAmountFromLiquidity } = useGetPosLiquiditys()\n  const { currentPosBaseInfo, posLiquidityData, posRewardsData, setPosBaseList, posApiPoolData } = usePositionStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const { preAdd } = usePosAdd()\n  const { getRemoveTsPayload, getCloseTsPayload } = usePosRemove()\n  const { getTokenALock, getTokenBLock } = usePosHelper()\n  const {\n    setTokenAmountAfterA,\n    setTokenAmountAfterB,\n    currentPosPoolInfo,\n    currentPoolSqrtPrice,\n    setIsFixedDisplayTokenA,\n    slideValue,\n    setSlideValue,\n    isFixedDisplayTokenA,\n    isPosDetailRefresh,\n    currentPosDetailTab,\n    useZapIn,\n    curPosContractPoolInfo\n  } = usePositionDetailStore()\n\n  const { getZapWithdrawToastInfo, getZapWithdrawTx, reCalculateZapData } = useZapSubmit('Withdraw')\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n\n  const { preDepositeData, currentZapToken, setZapAmount, zapAmount } = useZapStore()\n\n  const { currentApiPoolInfo } = useCurrentApiPool(currentPosBaseInfo, posApiPoolData)\n\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId as string]\n\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n  const [preRemoveLoading, setPreRemoveLoading] = useState(false)\n  const [removeLiquidityAmount, setRemoveLiquidityAmount] = useState('')\n\n  const displayTokenA: Token | undefined = currentPosBaseInfo?.displayTokenA\n  const displayTokenB: Token | undefined = currentPosBaseInfo?.displayTokenB\n\n  const currentPosLiquidityData = posLiquidityData[currentPosBaseInfo?.posId as string]\n  // 余额\n  const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n  const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  useEffect(() => {\n    if (+tokenAmountA || +tokenAmountB) {\n      const amountA = +tokenAmountA\n      const amountB = +tokenAmountB\n      const numA = d(+tokenABalance).sub(amountA)\n      const numB = d(tokenBBalance).sub(amountB)\n      console.log('🚀 ~ useEffect ~ numA.gt(0):', numA.toString(), numB.toString())\n      setTokenAmountAfterA(numA.gt(0) ? numA.toString() : '0')\n      setTokenAmountAfterB(numB.gt(0) ? numB.toString() : '0')\n    } else {\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosRemovePage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setPreRemoveLoading(false)\n    setUuid('')\n    setSlideValue('--')\n  }\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showDisplayTokenALock = !currentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock\n  const showDisplayTokenBLock = !currentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [showDisplayTokenALock, showDisplayTokenBLock])\n\n  const debouncedPreCalculate = useDebounceFunction((amount, is_fixed_displaytokenA, uuid) => {\n    console.log('🚀 ~ debouncedPreCalculate ~ params:', amount)\n    const decimals = is_fixed_displaytokenA ? currentPosBaseInfo?.displayTokenA?.decimals : currentPosBaseInfo?.displayTokenB?.decimals\n    const amountBN = amountToBN(amount, decimals)\n    const tokenA = currentPosBaseInfo?.tokenA\n    const tokenB = currentPosBaseInfo?.tokenB\n    const lowerTick = currentPosBaseInfo?.lowerTick\n    const upperTick = currentPosBaseInfo?.upperTick\n    const isReverse = currentPosBaseInfo?.isReverse\n    // const curSqrtPrice = currentPosPoolsOriginalData.current_sqrt_price\n    const curSqrtPrice = currentPoolSqrtPrice\n    const params = {\n      amount: amountBN,\n      tokenA,\n      tokenB,\n      isTokenA: isReverse ? !is_fixed_displaytokenA : is_fixed_displaytokenA,\n      lowerTick,\n      upperTick,\n      curSqrtPrice,\n      isReverse,\n      roundUp: false\n    }\n    console.log('🚀 ~ debouncedPreCalculate ~ params:', params)\n    const { displayCoinAmountA, displayCoinAmountB, liquidityAmount } = preAdd(params)\n    console.log('🚀 ~ debouncedPreCalculate:', displayCoinAmountA, displayCoinAmountB, params, is_fixed_displaytokenA, uuid)\n    if (uuidRef.current === uuid) {\n      setRemoveLiquidityAmount(liquidityAmount)\n      console.log('🚀 ~ debouncedPreCalculate ~ liquidityAmount:', removeLiquidityAmount, liquidityAmount)\n\n      const slide = formatNumber(d(liquidityAmount).div(currentPosBaseInfo?.liquidity).mul(100).toNumber(), 2, true)\n      if (d(slide).gt(100) || d(slide).eq(100)) {\n        setSlideValue(100)\n        setTokenAmountA(tokenABalance as string)\n        setTokenAmountB(tokenBBalance as string)\n      } else {\n        setSlideValue(slide)\n        if (is_fixed_displaytokenA) {\n          setTokenAmountB(displayCoinAmountB || '')\n        } else {\n          setTokenAmountA(displayCoinAmountA || '')\n        }\n      }\n    } else {\n      resetInputAmount()\n    }\n    setPreRemoveLoading(false)\n  }, 500)\n  const [isUpdateSlider, setIsUpdateSlider] = useState(false)\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(currentPosBaseInfo)) {\n      console.log('🚀 ~ reCalculateResult ~ isFixedDisplayTokenA:', isUpdateSlider, slideValue)\n      if (slideValue === '--') return\n      if (isUpdateSlider || Number(slideValue) == 100) {\n        changeSlideFun(Number(slideValue))\n      } else {\n        console.log('🚀 ~ reCalculateResult ~ currentPosBaseInfo:', currentPosBaseInfo)\n        const amount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n        if (+amount) {\n          const uuid = v4()\n          setUuid(uuid)\n          debouncedPreCalculate(amount, isFixedDisplayTokenA, uuid)\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentPosDetailTab == 'remove') {\n      console.log('🚀 ~ usePosRemovePage ~ tokenABalance, tokenBBalance:', isPosDetailRefresh, tokenABalance, tokenBBalance)\n      reCalculateResult()\n    }\n  }, [tokenABalance, tokenBBalance])\n\n  /**\n   * 输入数量监听\n   * @param amount\n   */\n\n  const handleAmountChange = (amount: string, is_fixed_displaytokenA: boolean) => {\n    console.log('🚀 ~ h111andleAmountChange ~ amount:', amount)\n    setIsUpdateSlider(false)\n    setRemoveLiquidityAmount('')\n    if (!amount) {\n      resetInputAmount()\n      return\n    }\n    setPreRemoveLoading(true)\n    setIsFixedDisplayTokenA(is_fixed_displaytokenA)\n    if (is_fixed_displaytokenA) {\n      setTokenAmountA(amount)\n      if (d(amount).eq(tokenABalance)) {\n        setTokenAmountB(tokenBBalance as string)\n        setSlideValue(100)\n        setUuid('')\n        setPreRemoveLoading(false)\n        return\n      }\n    } else {\n      setTokenAmountB(amount)\n      if (d(amount).eq(tokenBBalance)) {\n        setTokenAmountA(tokenABalance as string)\n        setSlideValue(100)\n        setUuid('')\n        setPreRemoveLoading(false)\n        return\n      }\n    }\n\n    console.log('🚀 ~ handleAmountChange ~ amount:', amount, +amount)\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n      debouncedPreCalculate(amount, is_fixed_displaytokenA, uuid)\n    } else {\n      setPreRemoveLoading(false)\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB('')\n      } else {\n        setTokenAmountA('')\n      }\n    }\n  }\n\n  // //滑杆数值改变时用流动性改变input的值\n  const changeSlideFun = (num: number) => {\n    setIsUpdateSlider(true)\n    console.log('🚀 ~ changeSlideFun ~ changeSlideFun:', tokenABalance, tokenBBalance, num)\n\n    if (!useZapIn) {\n      if (num == 100) {\n        setTokenAmountA(tokenABalance)\n        setTokenAmountB(tokenBBalance)\n      } else {\n        const tokenA: Token = currentPosBaseInfo?.tokenA\n        const tokenB: Token = currentPosBaseInfo?.tokenB\n        const liquidity = formatNumberWithDown(d(currentPosBaseInfo?.liquidity).mul(num).div(100).toString() || '0', 0, true)\n        console.log('🚀 ~ changeSlideFun ~ liquidity1111111:', currentPosBaseInfo?.liquidity, liquidity)\n        const lowerTick = currentPosBaseInfo?.lowerTick\n        const upperTick = currentPosBaseInfo?.upperTick\n        const isReverse = currentPosBaseInfo?.isReverse\n        const params = { tokenA, tokenB, liquidity, currentSqrtPrice: currentPoolSqrtPrice, lowerTick, upperTick, roundUp: false }\n        try {\n          const { amountA, amountB } = getCoinAmountFromLiquidity(params)\n          setRemoveLiquidityAmount(liquidity)\n          const displayCoinAmountA = !isReverse ? amountA : amountB\n          const displayCoinAmountB = !isReverse ? amountB : amountA\n          console.log('🚀 ~ changeSlideFun ~  coinAmountA, coinAmountB:', amountA, amountB)\n          setTokenAmountA(d(displayCoinAmountA).gt(0) ? displayCoinAmountA : '')\n          setTokenAmountB(d(displayCoinAmountB).gt(0) ? displayCoinAmountB : '')\n        } catch (error) {\n          console.log('🚀 ~ changeSlideFun ~ error:', error)\n          setTokenAmountA('')\n          setTokenAmountB('')\n        }\n      }\n    } else {\n      const isCoin = currentApiPoolInfo?.tokenA?.coin_type === currentZapToken?.coin_type\n      const balance = isCoin ? onlyAmountA : onlyAmountB\n      if (num === 100) {\n        setZapAmount(balance)\n      } else {\n        const value = d(balance).mul(d(num).div(100)).toString()\n        setZapAmount(value)\n      }\n    }\n  }\n\n  const { currentAccount } = useAccountStore()\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Remove',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenABalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBBalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n\n    if (currentPosBaseInfo?.posType == 'burn') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    return btnInfo\n  }, [tokenAmountA, tokenAmountB, tokenABalance, tokenBBalance, currentAccount?.address])\n\n  const { signAndExecuteTransaction } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const [isRemoveLoading, setIsRemoveLoading] = useState(false)\n  const navigate = useNavigate()\n  const toRemove = async () => {\n    setIsRemoveLoading(true)\n    const isClosed = slideValue == 100\n    console.log('🚀 ~ toRemove ~ currentPosRewardsData:', currentPosRewardsData)\n    console.log('🚀 ~ toRemove ~ currentPosPoolInfo?.miningRewardList:', currentPosPoolInfo?.miningRewardList)\n    const rewarderCoinTypes = isClosed\n      ? !currentPosRewardsData || currentPosRewardsData?.length == 0\n        ? (currentPosPoolInfo?.miningRewardList || [])?.reduce((arr: string[], item: any) => {\n            arr.push(item.coinType)\n            return arr\n          }, [])\n        : (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n            arr.push(item.coin_address)\n            return arr\n          }, [])\n      : (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n          if (d(item?.amount_owed).gt(0)) {\n            arr.push(item.coin_address)\n          }\n          return arr\n        }, [])\n    console.log('🚀 ~ toRemove ~ rewarderCoinTypes:', rewarderCoinTypes)\n\n    try {\n      let tx\n      let msafeParams\n      let toastInfo\n      if (!useZapIn) {\n        const amountA = !currentPosBaseInfo?.isReverse\n          ? d(tokenAmountA).mul(Decimal.pow(10, displayTokenA.decimals)).toString()\n          : d(tokenAmountB).mul(Decimal.pow(10, displayTokenB.decimals)).toString()\n        const amountB = !currentPosBaseInfo?.isReverse\n          ? d(tokenAmountB).mul(Decimal.pow(10, displayTokenB.decimals)).toString()\n          : d(tokenAmountA).mul(Decimal.pow(10, displayTokenA.decimals)).toString()\n\n        console.log('🚀 ~ toAdd ~ rewarderCoinTypes:', currentPosPoolInfo, currentPosRewardsData, rewarderCoinTypes)\n\n        const params: any = {\n          posId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n          poolAddress: currentPosBaseInfo?.clmmPool,\n          coinTypeA: currentPosBaseInfo?.coinTypeA,\n          coinTypeB: currentPosBaseInfo?.coinTypeB,\n          amountA,\n          amountB,\n          liquidity: removeLiquidityAmount,\n          lowerTick: currentPosBaseInfo?.lowerTick,\n          upperTick: currentPosBaseInfo?.upperTick,\n          posType: currentPosBaseInfo?.posType,\n          rewarderCoinTypes\n        }\n        if (currentPosBaseInfo?.posType == 'farms') {\n          params['farmsPoolId'] = currentPosBaseInfo?.farmsPool\n          params['farmsPosId'] = currentPosBaseInfo?.id\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Remove ' +\n              [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n                .filter(Boolean)\n                .join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = tokenAmountA\n              let amountBF = tokenAmountB\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n                amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n              }\n\n              info.toastDescriptionContent = ''\n              info.modalDescriptionText = ''\n              info.toastTitleText = 'Remove Liquidity Successful'\n            }\n\n            return info\n          }\n        }\n        transactionConfirmation(toastInfo)\n\n        console.log('🚀 ~ toAdd ~ params:', removeLiquidityAmount, isClosed, slideValue, params)\n        const payload = isClosed ? await getCloseTsPayload(params) : await getRemoveTsPayload(params)\n        tx = payload.tx\n        msafeParams = payload.msafeParams\n      } else {\n        const posId = currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId\n        toastInfo = getZapWithdrawToastInfo(showDisplayTokenALock, showDisplayTokenBLock)\n        transactionConfirmation(toastInfo)\n        tx = await getZapWithdrawTx(\n          posId,\n          currentPosBaseInfo?.liquidity,\n          currentPosBaseInfo?.lowerTick,\n          currentPosBaseInfo?.upperTick,\n          rewarderCoinTypes,\n          currentPosBaseInfo?.posType == 'farms'\n        )\n      }\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n\n      if (res) {\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        if (isClosed) {\n          setPosBaseList([])\n          navigate('/pools?tab=positions')\n        } else {\n          getCurrentPosBaseInfo(currentAccount?.address, currentPosBaseInfo?.id, true)\n          // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n        }\n      } else {\n        if (currentPosBaseInfo?.clmmPool) {\n          getContractPoolInfo(currentPosBaseInfo?.clmmPool).then(res => {\n            console.log('🚀 ~ toClaim ~ res:', res)\n            if (useZapIn) {\n              reCalculateZapData()\n            } else {\n              reCalculateResult()\n            }\n          })\n        }\n      }\n      setIsRemoveLoading(false)\n    } catch (error) {\n      reCalculateResult()\n      setIsRemoveLoading(false)\n      console.log('🚀 ~ toClaim ~ error:', error)\n    }\n  }\n\n  const amountBalance = useMemo(() => {\n    if (currentPosBaseInfo?.posId) {\n      const tokenA: Token = currentPosBaseInfo?.tokenA\n      const tokenB: Token = currentPosBaseInfo?.tokenB\n      const liquidity = currentPosBaseInfo?.liquidity\n      const lowerTick = currentPosBaseInfo?.lowerTick\n      const upperTick = currentPosBaseInfo?.upperTick\n\n      const params = { tokenA, tokenB, liquidity, currentSqrtPrice: currentPoolSqrtPrice, lowerTick, upperTick, roundUp: false }\n      const { amountA, amountB } = getCoinAmountFromLiquidity(params)\n    }\n  }, [currentPosBaseInfo?.posId, currentPoolSqrtPrice])\n\n  // 为方便zap时候展示某个币总额\n  const { onlyAmountA, onlyAmountB } = useMemo(() => {\n    return {\n      onlyAmountA: currentPosLiquidityData?.onlyAmountA,\n      onlyAmountB: currentPosLiquidityData?.onlyAmountB\n    }\n  }, [currentPosLiquidityData])\n\n  useEffect(() => {\n    if (useZapIn) {\n      if (zapAmount) {\n        const isCoin = currentApiPoolInfo?.tokenA?.coin_type === currentZapToken?.coin_type\n        const balance = isCoin ? onlyAmountA : onlyAmountB\n        if (balance) {\n          const value = formatNumber(d(zapAmount).div(balance).mul(100).toString(), 2, true)\n          setSlideValue(value)\n        } else {\n          setSlideValue('--')\n        }\n      } else {\n        setSlideValue('--')\n      }\n    } else {\n      setSlideValue('--')\n    }\n  }, [useZapIn, zapAmount])\n\n  // zapIn时候根据计算结果设置amountA,B,  主要为了左侧after相关展示\n  useEffect(() => {\n    if (currentPosDetailTab === 'increase') return\n    if (useZapIn) {\n      console.log('🚀 ~ usePosRemovePage111 ~ preDepositeData:', preDepositeData)\n      if (preDepositeData?.amount_a || preDepositeData?.amount_b) {\n        const tokenA = currentPosBaseInfo?.tokenA\n        const tokenB = currentPosBaseInfo?.tokenB\n        const amountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n        const amountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n\n        // 100%时候after设置为0\n        if (slideValue == 100) {\n          setTokenAmountA(String(tokenABalance))\n          setTokenAmountB(String(tokenBBalance))\n        } else {\n          const a = !currentPosBaseInfo?.isReverse ? amountA : amountB\n          const b = !currentPosBaseInfo?.isReverse ? amountB : amountA\n          setTokenAmountA(d(a).gt(tokenABalance) ? String(tokenABalance) : a)\n          setTokenAmountB(d(b).gt(tokenBBalance) ? String(tokenBBalance) : b)\n        }\n\n        return\n      }\n\n      setTokenAmountA('')\n      setTokenAmountB('')\n    }\n  }, [useZapIn, preDepositeData, slideValue])\n\n  useEffect(() => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n  }, [])\n\n  return {\n    tokenAmountA,\n    tokenAmountB,\n    resetInputAmount,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    currentPosLiquidityData,\n    tokenABalance,\n    tokenBBalance,\n    displayTokenA,\n    displayTokenB,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    preRemoveLoading,\n    handleAmountChange,\n    btnStatusText,\n    changeSlideFun,\n    toRemove,\n    isRemoveLoading,\n    onlyAmountA,\n    onlyAmountB,\n    currentApiPoolInfo,\n    currentPoolSqrtPrice\n  }\n}\n","export default \"__VITE_ASSET__D__rUlmk__\"","import bg_farming from '@/assets/images/img_farming@2x.png'\nimport AprTooltip from '@/components/common/aprTooltip'\nimport { RewardsCoin } from '@/components/farms/ExpendItem'\nimport useFarmsActions from '@/hooks/farms/useFarmsAction'\nimport useCurrentPos from '@/hooks/position/useCurrentPos'\nimport useGetFarmsPosRewards from '@/hooks/position/useGetFarmsPosRewards'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosReward } from '@/types'\nimport { Block, CetusTooltip } from '@cetus/design/src/components/common'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Box, Button, HStack, Image, Text, VStack } from '@chakra-ui/react'\nimport React, { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ntype FarmsBlockProps = {\n  haveFarming: boolean\n}\n\nfunction FarmsBlock({ haveFarming }: FarmsBlockProps) {\n  const { isApp } = useWindowWidth()\n  const { currentPosBaseInfo, farmsPosRewardsData, posPoolsRelatedData, posBaseListLoading, posPoolsOriginalData } = usePositionStore()\n  const { currentPosPoolInfo } = usePositionDetailStore()\n  const { currentAccount } = useAccountStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const { getFarmsRewardsData } = useGetFarmsPosRewards()\n\n  const { getClmmPosName } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (currentPosBaseInfo?.tokenName) {\n      return currentPosBaseInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool as string]?.index\n      return getClmmPosName(currentPosBaseInfo?.index as number, position_index) || ''\n    }\n  }, [currentPosBaseInfo?.tokenName, currentPosBaseInfo?.index, currentPosBaseInfo?.clmmPool, posPoolsOriginalData])\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId as string]\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n\n  const posFarmsData = farmsPosRewardsData[currentPosBaseInfo?.id as string]\n  const farmsRewarderList = currentPosPoolInfo?.farmsRewarderList || []\n  const totalRewards = posFarmsData?.reduce((sum: number, item: any) => sum + item.display_amount_owed, 0)\n\n  const { toStakePos, toUnStakePos, toClaimPos, unstakeLoading, claimLoading } = useFarmsActions()\n\n  const navigate = useNavigate()\n\n  const stakeRefresh = (events: any) => {\n    navigate(`/position-detail/${events[0].parsedJson.wrapped_position_id}`, { replace: true })\n    setTimeout(() => {\n      getCurrentPosBaseInfo(currentAccount?.address as string, events[0].parsedJson.wrapped_position_id, true)\n    }, 2000)\n  }\n  const toStake = async () => {\n    toStakePos(currentPosBaseInfo?.id as string, currentPosPoolInfo?.farmsPoolAddress, tokenName, stakeRefresh)\n  }\n\n  const unstakeRefresh = () => {\n    navigate(`/position-detail/${currentPosBaseInfo?.posId}`, { replace: true })\n    setTimeout(() => {\n      getCurrentPosBaseInfo(currentAccount?.address as string, currentPosBaseInfo?.posId as string, true)\n      // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n    }, 2000)\n  }\n  const toUnstack = async () => {\n    toUnStakePos(currentPosBaseInfo?.id as string, currentPosBaseInfo?.farmsPool as string, tokenName, unstakeRefresh)\n  }\n\n  const claimRefresh = () => {\n    setTimeout(() => {\n      getFarmsRewardsData([currentPosBaseInfo])\n      // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n    }, 2000)\n  }\n\n  const toClaim = async () => {\n    toClaimPos(currentPosBaseInfo?.id as string, currentPosBaseInfo?.farmsPool as string, claimRefresh)\n  }\n\n  // 计算仓位的amount 判断用哪个list做奖励的循环展示\n  const totalAmount = useMemo(() => {\n    if (posFarmsData?.length > 0) {\n      return posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n        return d(sum).plus(rewardData?.display_amount_owed).toString()\n      }, '0')\n    }\n    return '0'\n  }, [posFarmsData, currentAccount?.address, claimLoading, unstakeLoading])\n\n  const isCanStake = useMemo(() => {\n    if (currentPosBaseInfo && currentPosPoolInfo) {\n      return currentPosBaseInfo.posType == 'clmm' && currentPosPoolInfo.haveFarming === true\n    }\n    return false\n  }, [currentPosBaseInfo?.posType, currentPosPoolInfo?.haveFarming])\n\n  if (!haveFarming && d(totalRewards).eq(0)) {\n    return null\n  }\n\n  return (\n    <>\n      {(currentPosPoolInfo?.farmsPoolAddress || d(totalAmount).gt(0)) && (\n        <VStack w=\"100%\">\n          {haveFarming && (\n            <HStack w=\"100%\" zIndex=\"1\" p={{ base: '12px 8px', lg: '12px 16px' }} bgImage={bg_farming} bgSize=\"100% 100%\" justify=\"space-between\">\n              <VStack align=\"flex-start\">\n                <HStack>\n                  <Image src=\"/images/icon_farms.png\" w=\"24px\" h=\"24px\" />\n                  <Text color=\"primary_yellow\" fontSize=\"20px\">\n                    Farming\n                  </Text>\n                </HStack>\n                <Text color=\"primary_yellow\" fontSize=\"14px\">\n                  Stake Position to Earn\n                </Text>\n              </VStack>\n              <HStack gap=\"4px\" bg=\"primary_yellow_opacity.10\" p=\"12px 16px\" borderRadius=\"100px\">\n                <Text color=\"primary\" fontSize=\"12px\" fontWeight=\"500\">\n                  APR\n                </Text>\n                <Text color=\"primary\" fontSize=\"12px\" fontWeight=\"500\">\n                  <AprTooltip poolInfo={currentPosPoolInfo} isPosition={true} showAprSize=\"12px\" />\n                </Text>\n                <HStack\n                  gap=\"4px\"\n                  cursor=\"pointer\"\n                  onClick={() => navigate('/farms')}\n                  sx={{\n                    _hover: {\n                      p: {\n                        color: 'text_caption'\n                      },\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }\n                  }}\n                >\n                  <Text fontSize=\"12px\" ml=\"8px\" fontWeight=\"500\">\n                    View\n                  </Text>\n                  <Icon boxW=\"14px\" boxH=\"14px\" xlinkHref=\"#icon-icon_list_token\" />\n                </HStack>\n              </HStack>\n            </HStack>\n          )}\n\n          <Block\n            mt={haveFarming ? '-20px' : '0px'}\n            bg=\"bg_six\"\n            p={{ base: '28px 8px 12px', lg: '28px 16px 16px' }}\n            zIndex=\"0\"\n            borderRadius={haveFarming ? '0 0 12px 12px' : '12px'}\n            borderTop={haveFarming ? 'none' : 'border'}\n          >\n            <Text>Farming Rewards</Text>\n            <HStack w=\"100%\" flexWrap=\"wrap\">\n              {posFarmsData?.length > 0 && d(totalAmount).gt(0) ? (\n                posFarmsData?.map((item: any) => {\n                  return (\n                    <React.Fragment key={item?.rewarder_type}>\n                      {d(item?.display_amount_owed).gt(0) && (\n                        <RewardsCoin\n                          key={item?.coinType}\n                          coinType={item?.token?.coin_type}\n                          amount={item?.display_amount_owed}\n                          tokenInfo={item?.token}\n                          boxStyle={{ mt: '16px', w: 'calc(50% - 4px) ' }}\n                          textAlign=\"left\"\n                        />\n                      )}\n                    </React.Fragment>\n                  )\n                })\n              ) : farmsRewarderList?.length > 0 ? (\n                farmsRewarderList?.map((item: any) => {\n                  return (\n                    <RewardsCoin\n                      key={item?.coinType}\n                      coinType={item?.coinType}\n                      amount=\"0\"\n                      boxStyle={{ mt: '16px', w: 'calc(50% - 4px) ' }}\n                      textAlign=\"left\"\n                    />\n                  )\n                })\n              ) : (\n                <Text textColor=\"text_caption\" textAlign=\"right\" mt=\"8px\">\n                  --\n                </Text>\n              )}\n            </HStack>\n            <HStack w=\"100%\" justify=\"space-between\" mt=\"16px\">\n              {currentPosBaseInfo?.posType == 'farms' && (\n                <Button\n                  disabled={claimLoading || unstakeLoading}\n                  isLoading={unstakeLoading}\n                  variant=\"outline\"\n                  h=\"40px\"\n                  w=\"50%\"\n                  fontSize=\"14px\"\n                  onClick={toUnstack}\n                >\n                  Unstake\n                </Button>\n              )}\n              {isCanStake && !isActive && (\n                <Box w=\"50%\" sx={{ '>button': { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" w=\"200px\">\n                        Farming rewards are only available for active positions.\n                      </Text>\n                    }\n                  >\n                    <Box w=\"100%\">\n                      <Button disabled={true} h=\"40px\" w=\"100%\" fontSize=\"14px\">\n                        Stake\n                      </Button>\n                    </Box>\n                  </CetusTooltip>\n                </Box>\n              )}\n\n              {isCanStake && isActive && (\n                <Button disabled={claimLoading || unstakeLoading} isLoading={unstakeLoading} h=\"40px\" w=\"50%\" fontSize=\"14px\" onClick={toStake}>\n                  Stake\n                </Button>\n              )}\n              <Button\n                disabled={claimLoading || unstakeLoading || d(totalRewards).eq(0)}\n                isLoading={claimLoading}\n                variant=\"outline\"\n                h=\"40px\"\n                w=\"50%\"\n                fontSize=\"14px\"\n                onClick={toClaim}\n              >\n                Claim rewards\n              </Button>\n            </HStack>\n          </Block>\n        </VStack>\n      )}\n    </>\n  )\n}\nexport default FarmsBlock\n","export default \"__VITE_ASSET__DeOUS1Sq__\"","import bg_alert from '@/assets/images/bg_alerts@2x.png'\nimport useNotifiSubscription from '@/hooks/notifi/useNotifiSubscription'\nimport usePositionStore from '@/store/position'\nimport { useNotifiHelper } from '@cetus/design/src/hook/useNotifi/useNotifiHelper'\nimport { useAccountStore } from '@cetus/stores'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { Button, HStack, StackProps, Switch, Text, VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\ninterface RangeAlertsProps {\n  subscriptionSource: string\n  title?: string\n  description?: string\n  wrapStyle?: StackProps\n}\n\nfunction RangeAlerts({\n  subscriptionSource,\n  title = 'Range Alerts',\n  description = 'Receive alerts via Telegram, SMS, or email when this position goes out of range.',\n  wrapStyle = {}\n}: RangeAlertsProps) {\n  const { getPositionNotifiStatus } = useNotifiHelper()\n  const {\n    isChecked,\n    setIsChecked,\n    notifiAuthenticated,\n    notifiSourceGroups,\n    setIsShowNotifi,\n    notifiSubscriptionLoading,\n    notifiStatus,\n    notifiSources\n  } = useNotifiStore()\n  const { currentAccount } = useAccountStore()\n  const { notifiUnSubscription, notifiSubscription } = useNotifiSubscription()\n  const { currentPosBaseInfo } = usePositionStore()\n  console.log('🚀🚀🚀 ~ RangeAlerts.tsx:29 ~ currentPosBaseInfo:', currentPosBaseInfo)\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ file: RangeAlerts.tsx:42 ~ notifiSubscriptionLoading:', notifiSubscriptionLoading)\n    if (\n      currentAccount?.address &&\n      subscriptionSource == 'PositionDetail' &&\n      currentPosBaseInfo &&\n      notifiStatus == 'authenticated' &&\n      !notifiSubscriptionLoading\n    ) {\n      const { isSubscription } = getPositionNotifiStatus(currentPosBaseInfo.posId, String(currentPosBaseInfo.index))\n      setIsChecked(isSubscription)\n    }\n  }, [currentAccount, subscriptionSource, currentPosBaseInfo, notifiAuthenticated, notifiSourceGroups, notifiSubscriptionLoading, notifiSources])\n  const { createNotifiSubscriptionVerify } = useNotifiHelper()\n\n  const changeSwitch = async (checked: any) => {\n    setIsChecked(checked)\n    console.log('🚀🚀🚀 ~ RangeAlerts.tsx:46 ~ changeSwitch ~ checked:', checked)\n    if (checked) {\n      const canSubscription = await createNotifiSubscriptionVerify()\n      console.log('🚀🚀🚀 ~ RangeAlerts.tsx:49 ~ changeSwitch ~ canSubscription:', canSubscription)\n      if (!canSubscription) {\n        setIsChecked(false)\n        return false\n      }\n    }\n\n    if (subscriptionSource == 'AddLiquidity') {\n      setIsChecked(checked)\n    } else if (subscriptionSource == 'PositionDetail') {\n      console.log('🚀🚀🚀 ~ changeSwitch ~ checked:', checked)\n      if (checked) {\n        // const canSubscription = await createNotifiSubscriptionVerify()\n        // if (!canSubscription) {\n        //   setIsChecked(false)\n        // } else {\n        const params = {\n          subscriptionSource: 'PositionDetail',\n          position: currentPosBaseInfo?.posId,\n          pool: currentPosBaseInfo?.clmmPool,\n          posIndex: String(currentPosBaseInfo?.index)\n        }\n        notifiSubscription(params)\n        // }\n      } else {\n        notifiUnSubscription(currentPosBaseInfo?.posId, currentPosBaseInfo?.clmmPool, currentPosBaseInfo?.index)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      setIsChecked(false)\n    }\n  }, [])\n\n  return (\n    <HStack w=\"100%\" bgImage={bg_alert} bgSize=\"100% 100%\" p=\"16px\" borderRadius=\"8px\" {...wrapStyle}>\n      <VStack w=\"100%\" gap=\"8px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text color=\"primary\">{title}</Text>\n          {notifiStatus == 'authenticated' ? (\n            <Switch isChecked={isChecked} disabled={notifiSubscriptionLoading} onChange={e => changeSwitch(e.target.checked)} />\n          ) : (\n            <Button w=\"112px\" h=\"28px\" borderRadius=\"8px\" fontWeight=\"500\" fontSize=\"14px\" onClick={() => setIsShowNotifi(true)}>\n              Set up\n            </Button>\n          )}\n        </HStack>\n        <Text color=\"primary_gray\" lineHeight=\"20px\" textAlign=\"left\">\n          {description}\n        </Text>\n      </VStack>\n    </HStack>\n  )\n}\nexport default RangeAlerts\n","import { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Switch, Text } from '@chakra-ui/react'\n\ntype ZapSwitchProps = {\n  value: boolean\n  action: 'Deposit' | 'Withdraw'\n  onChange: () => void\n}\nfunction ZapSwitch(props: ZapSwitchProps) {\n  const { value, action, onChange } = props\n  const { isApp } = useWindowWidth()\n  return (\n    <Block padding=\"6px 8px\" borderRadius=\"8px\" width=\"unset\">\n      <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top\" autoFocus={false} returnFocusOnClose={false}>\n        <PopoverTrigger>\n          <HStack h=\"14px\" cursor=\"pointer\">\n            <Text whiteSpace=\"nowrap\" fontSize=\"14px\" color={value ? 'primary' : ''} fontWeight=\"500\">\n              Zap {action === 'Deposit' ? 'In' : 'Out'}\n            </Text>\n            <Switch\n              isChecked={value}\n              onChange={() => {\n                onChange()\n              }}\n            />\n          </HStack>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody p=\"12px\" lineHeight=\"20px\" fontSize=\"12px\">\n            {action == 'Deposit'\n              ? 'Through Zap-In, you can deposit your liquidity in single token or with customized token ratio. Tokens will be auto converted to match the required ratio. '\n              : 'Through Zap-Out, you can withdraw your liquidity in one token. The liquidity will be auto converted to one token you selected.'}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Block>\n  )\n}\n\nexport default ZapSwitch\n","import ZapSwitch from '@/components/zap/ZapSwitch'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { HStack, Text } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nexport default function TradeTitle({\n  action,\n  haveZap,\n  resetInputAmount\n}: {\n  action: 'Deposit' | 'Withdraw'\n  haveZap?: boolean\n  resetInputAmount?: () => void\n}) {\n  const { useZapIn, setUseZapIn } = usePositionDetailStore()\n  const { setZapAmount, setPreDepositeData } = useZapStore()\n\n  const handleChangeZap = () => {\n    resetInputAmount?.()\n    setUseZapIn(!useZapIn)\n    setZapAmount('')\n  }\n\n  useEffect(() => {\n    setUseZapIn(false)\n    setPreDepositeData(undefined)\n  }, [action])\n\n  return (\n    <HStack w=\"100%\" justify=\"space-between\" align=\"center\" mb=\"16px\">\n      <Text color=\"primary_gray\" fontSize=\"14px\">\n        {action === 'Withdraw' ? 'Remove Amounts' : 'Deposit Amounts'}\n      </Text>\n      <ZapSwitch action={action} value={useZapIn} onChange={handleChangeZap} />\n    </HStack>\n  )\n}\n","import ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\n\nimport usePosRemovePage from '@/hooks/position/usePosRemovePage'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { Block, SelectTab, TradeInputGroup } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { Box, Button, HStack, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\nimport FarmsBlock from './FarmsBlock'\nimport RangeAlerts from './RangeAlerts'\nimport TradeTitle from './TradeTitle'\n\nexport default function RemoveBlock() {\n  const { currentPosBaseInfo, posPoolsRelatedData, posApiPoolData } = usePositionStore()\n  const { isFixedDisplayTokenA, slideValue, setSlideValue, curPosContractPoolInfo, useZapIn, currentPosPoolInfo } = usePositionDetailStore()\n  const {\n    tokenAmountA,\n    tokenAmountB,\n    tokenABalance,\n    tokenBBalance,\n    displayTokenA,\n    displayTokenB,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    preRemoveLoading,\n    handleAmountChange,\n    changeSlideFun,\n    btnStatusText,\n    toRemove,\n    isRemoveLoading,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    resetInputAmount,\n    onlyAmountA,\n    onlyAmountB,\n    currentApiPoolInfo,\n    currentPoolSqrtPrice,\n    currentPosLiquidityData\n  } = usePosRemovePage()\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  const changeSlideValue = (value: string | number) => {\n    console.log('🚀 ~ changeSlideValue ~ value:', value)\n    if (value == 'MAX' || value == 100) {\n      setSlideValue(100)\n\n      changeSlideFun(100)\n    } else {\n      setSlideValue(Number((value + '').split('%')[0]))\n      changeSlideFun(Number((value + '').split('%')[0]))\n    }\n  }\n  useEffect(() => {\n    return setSlideValue('--')\n  }, [])\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId]\n\n  return (\n    <VStack w=\"100%\" gap=\"8px\">\n      <Box w=\"100%\" position=\"relative\" bg=\"bg_six\" p={{ base: '8px', lg: '16px' }} border=\"1px solid\" borderColor=\"border\" borderRadius=\"16px\">\n        {currentApiPoolInfo?.haveZap && currentPosBaseInfo?.posType !== 'burn' && !showDisplayTokenALock && !showDisplayTokenBLock && (\n          <TradeTitle action=\"Withdraw\" resetInputAmount={resetInputAmount} />\n        )}\n        {useZapIn ? (\n          <ZapDeposite\n            action=\"Withdraw\"\n            apiPoolInfo={currentApiPoolInfo}\n            currentSqrtPrice={currentPoolSqrtPrice}\n            onlyAmountA={onlyAmountA}\n            onlyAmountB={onlyAmountB}\n            liquidity={currentPosBaseInfo?.liquidity}\n            lowerTick={currentPosBaseInfo?.lowerTick}\n            upperTick={currentPosBaseInfo?.upperTick}\n            slideValue={String(slideValue)}\n            currentPosLiquidityData={currentPosLiquidityData}\n            changeSlideValue={changeSlideValue}\n          />\n        ) : (\n          <>\n            <TradeInputGroup\n              from={{\n                wrapStyle: {\n                  h: '108px',\n                  borderRadius: '12px'\n                },\n                balance: tokenABalance || '',\n                value: tokenAmountA,\n                amountValue: tokenAmountValueA,\n                loading: !isFixedDisplayTokenA && preRemoveLoading,\n                onChange: value => {\n                  handleAmountChange(value, true)\n                },\n                needRemainBalance: false,\n                placeholder: '0.0',\n                balanceLabel: 'Available',\n                token: displayTokenA,\n                half: false,\n                lock: {\n                  isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenALock,\n                  style: {\n                    borderRadius: '12px'\n                  }\n                }\n              }}\n              to={{\n                wrapStyle: {\n                  h: '108px',\n                  borderRadius: '12px'\n                },\n                balance: tokenBBalance || '',\n                value: tokenAmountB,\n                amountValue: tokenAmountValueB,\n                loading: isFixedDisplayTokenA && preRemoveLoading,\n                onChange: value => {\n                  handleAmountChange(value, false)\n                },\n                needRemainBalance: false,\n                placeholder: '0.0',\n                balanceLabel: 'Available',\n                token: displayTokenB,\n                half: false,\n                lock: {\n                  isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenBLock,\n                  style: {\n                    borderRadius: '12px'\n                  }\n                }\n              }}\n              lock={{\n                isLock: !currentPosBaseInfo || !curPosContractPoolInfo || (currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn'),\n                text: currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn' ? 'Your liquidity has been permanently locked' : undefined,\n                style: {\n                  h: '224px',\n                  borderRadius: '12px'\n                }\n              }}\n            />\n          </>\n        )}\n\n        {currentPosBaseInfo?.posType !== 'burn' && (\n          <Block borderRadius=\"12px\" p=\"16px\" mt=\"8px\">\n            <Text color=\"primary_gray\">Amount</Text>\n            <PositionSlider percentage={slideValue} onChange={(value: string | number) => changeSlideValue(value)} />\n          </Block>\n        )}\n      </Box>\n\n      {useZapIn ? (\n        <ZapSubmiteInfo\n          action=\"Withdraw\"\n          onClick={toRemove}\n          hideDepositRatio={true}\n          otherLoading={isRemoveLoading}\n          isReverse={currentPosBaseInfo?.isReverse}\n        />\n      ) : (\n        <Button\n          isLoading={isRemoveLoading}\n          onClick={toRemove}\n          disabled={btnStatusText.disabled || isRemoveLoading}\n          w=\"100%\"\n          h=\"56px\"\n          fontSize=\"20px\"\n          fontWeight=\"500\"\n        >\n          {btnStatusText.text}\n        </Button>\n      )}\n      {currentPosBaseInfo?.posType !== 'burn' && <FarmsBlock haveFarming={currentPosPoolInfo?.haveFarming} />}\n      {currentPosPoolsRelatedData && currentPosPoolsRelatedData?.minPrice !== '0' && currentPosPoolsRelatedData?.maxPrice !== '∞' && (\n        <RangeAlerts subscriptionSource=\"PositionDetail\" />\n      )}\n    </VStack>\n  )\n}\n\nexport function PercentageTab(props: {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  wrapStyle?: {}\n  selectTabStyle?: {}\n  selectTabItemStyle?: {}\n  selectTabItemTextStyle?: {}\n  textFontSize?: string\n  isShowPercentageText?: boolean\n  percentageTextMinW?: string\n}) {\n  const {\n    percentage,\n    onChange,\n    wrapStyle,\n    textFontSize,\n    selectTabStyle,\n    selectTabItemStyle,\n    selectTabItemTextStyle,\n    isShowPercentageText = true,\n    percentageTextMinW = '62px'\n  } = props\n  const tabList: Tab[] = [{ label: '25%' }, { label: '50%' }, { label: '75%' }, { label: 'MAX' }]\n  const currentTab = useMemo(() => {\n    if (percentage !== 100) {\n      return `${percentage}%`\n    } else {\n      return 'MAX'\n    }\n  }, [percentage])\n\n  return (\n    <HStack w=\"100%\" {...wrapStyle}>\n      {isShowPercentageText && (\n        <Text minW={percentageTextMinW} fontSize={textFontSize} color=\"text_caption\">\n          {percentage == '--' ? '--' : d(percentage).gt(0) && Number(percentage) < 0.01 ? '<0.01' : formatNumberWithDown(percentage, 2)}%\n        </Text>\n      )}\n\n      <SelectTab\n        type=\"outlineTab\"\n        tabList={tabList}\n        currentTab={currentTab}\n        handleChangeTab={tab => {\n          if (tab.label === 'MAX') {\n            onChange(100)\n          } else {\n            onChange(tab.label.replace('%', ''))\n          }\n        }}\n        wrapStyle={selectTabStyle}\n        itemStyle={selectTabItemStyle}\n        selectTabItemTextStyle={selectTabItemTextStyle}\n      />\n    </HStack>\n  )\n}\n\nexport function PositionSlider(props: { percentage: string | number; onChange: (value: string | number) => void; percentageTextMinW?: '62px' }) {\n  const { percentage, onChange, percentageTextMinW } = props\n\n  return (\n    <Box w=\"100%\">\n      <PercentageTab\n        percentage={percentage}\n        onChange={onChange}\n        percentageTextMinW={percentageTextMinW}\n        wrapStyle={{\n          justifyContent: 'space-between',\n          m: '10px 0'\n        }}\n        selectTabStyle={{\n          w: { base: '220px', lg: '310px' },\n          h: '32px',\n          p: '3px',\n          borderRadius: '8px'\n        }}\n        selectTabItemStyle={{\n          flex: '1',\n          fontSize: '14px',\n          margin: '0px'\n        }}\n        textFontSize=\"24px\"\n      />\n      <Slider\n        aria-label=\"slider-ex-1\"\n        min={0}\n        max={100}\n        focusThumbOnChange={false}\n        value={percentage == '--' ? 0 : Number(percentage)}\n        onChange={value => onChange(value + '%')}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Box>\n  )\n}\n"],"names":["reWhitespace","trimmedEndIndex","string","index","reTrimStart","baseTrim","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","value","isSymbol","isObject","other","isBinary","now","root","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","ZapTabs","tokens","current","onSelect","zapTabList","useMemo","item","currentTab","_a","handleChangeTab","currentToken","token","jsx","Box","SelectTab","store","set","get","data","useZapStore","create","useZap","action","apiPoolInfo","currentSqrtPrice","lowerTick","upperTick","onlyAmountA","onlyAmountB","liquidity","slideValue","currentPosLiquidityData","currentTokens","setCurrentTokens","zapAmount","setZapAmount","currentZapToken","setCurrentZapToken","zapAmountRate","setZapAmountRate","setZapTokenBalance","zapTokenBalance","setPreDepositeData","setIsPreLoading","setZapApiPool","lower","upper","setLower","setUpper","setZapCurrPriceData","resetZapData","setLiquidity","setZapSlideValue","setPosOriginAmounts","zapSlippage","useGlobalStore","balanceInfo","useGetTokenBalance","getTokenAmountValue","useTokenPrice","uuid","setUuid","useState","useEffect","decimalsA","decimalsB","_b","currentPrice","TickMath","BN","arr","handleChangeAmount","handleChangeZapToken","rate","isCoinA","ZapDeposite","d","jsxs","VStack","TradeInput","lock","autoStake","isRange","useAddLiquidityStore","useZapSubmit","type","isPreLoading","preDepositeData","zapApiPool","zapCurrPriceData","zapSlideValue","currentAccount","onWalletModal","useAccountStore","setConfirmModalOpen","zapSdk","useSdk","slippage","zapNotAvailable","setZapNotAvailable","getTokenPrice","tokenAPrice","tokenBPrice","marketPrice","submitBtnInfo","btnInfo","textEllipses","handleZapIn","getSubmitBaseInfo","amountA","amountB","tokenA","tokenB","displayTokenA","displayTokenB","dispalyAmountA","bnToAmount","dispalyAmountB","getZapDepositToastInfo","status","balanceChanges","description","info","amountAF","amountBF","getBalanceChanges","getZapDepositTx","isFarm","posObj","params","tx","getZapWithdrawToastInfo","showDisplayTokenALock","showDisplayTokenBLock","formatNumberWithDown","getZapWithdrawTx","posId","collect_rewarder_types","preZapParamsRef","useRef","zapProgressRef","zapUuidRef","isMinimumPrecision","preZapIn","mode","coinAmount","fixDown","modeOptions","res","error","preZapOut","debouncedPreZapIn","useDebounceFunction","debouncedPreZapOut","reCalculateZapData","handleResetZapProgress","v4","ZapSubmiteInfo","onClick","hideAmountInfo","otherLoading","isReverse","inConfirmModal","hideDepositRatio","btnDisabled","btnText","handleOnClick","isOpen","setIsOpen","posOriginAmounts","fromCoin","toCoin","fromAmount","toAmount","sources","priceImpactTextInfo","showPriceImpactTips","usePriceImpact","isToggle","setIsToggle","handleToggleRate","minimumReceived","currentPriceRate","handleRefresh","coinAmountA","coinAmountB","displayCoinAmountA","displayCoinAmountB","displayAmountARate","displayAmountBRate","amountARate","amountBRate","originPosAmountA","originPosAmountB","percentMap","setPercentMap","isFullRange","checkFullRange","rateMap","calcCoinProportion","isApp","useWindowWidth","errorTips","Fragment","Button","ErrorTips","HStack","Text","formatCurrencyWithKMB","Skeleton","FreshProgressV2","source","MarketSource","Icon","Slippage","formatPrice","DepositRatio","PosAmountInfo","amount","loading","align","SkeletonCircle","SingleCoinImage","useCurrentApiPool","currentPosBaseInfo","posApiPoolData","useGetCurrentPrice","setCurrentPriceData","useLiquidityStore","reverseCurrentPrice","useGetContractPoolInfo","clmmSdk","fetchTokenInfo","useGetToken","contractPoolInfo","setContractPoolInfo","setContractPoolInfoLoading","setApiPoolInfo","setApiPoolInfoLoading","setFromToken","setToToken","getCurrentPrice","getContractPoolInfo","poolAddress","poolInfo","r","apiPool","formatApiPoolByContractPool","cPool","name","feeRate","fee","feeDisplay","getPoolDirection","usePosRemove","farmsSdk","coinTypeA","coinTypeB","posType","rewarderCoinTypes","farmsPoolId","farmsPosId","minAmountA","minAmountB","parameter","msafeParams","MsafeTransactionSubType","usePosRemovePage","transactionConfirmation","useTransactionModal","getCoinAmountFromLiquidity","useGetPosLiquiditys","posLiquidityData","posRewardsData","setPosBaseList","usePositionStore","getCurrentPosBaseInfo","useCurrentPos","preAdd","usePosAdd","getRemoveTsPayload","getCloseTsPayload","getTokenALock","getTokenBLock","usePosHelper","setTokenAmountAfterA","setTokenAmountAfterB","currentPosPoolInfo","currentPoolSqrtPrice","setIsFixedDisplayTokenA","setSlideValue","isFixedDisplayTokenA","isPosDetailRefresh","currentPosDetailTab","useZapIn","curPosContractPoolInfo","usePositionDetailStore","currentApiPoolInfo","currentPosRewardsData","mevProtect","maxCapForGas","transactionMode","customGasPrice","tokenAmountA","setTokenAmountA","tokenAmountB","setTokenAmountB","preRemoveLoading","setPreRemoveLoading","removeLiquidityAmount","setRemoveLiquidityAmount","tokenABalance","tokenBBalance","tokenAmountValueA","tokenAmountValueB","numA","numB","uuidRef","resetInputAmount","showTokenALock","showTokenBLock","debouncedPreCalculate","is_fixed_displaytokenA","decimals","amountBN","amountToBN","liquidityAmount","slide","formatNumber","isUpdateSlider","setIsUpdateSlider","reCalculateResult","isAvailableObject","changeSlideFun","handleAmountChange","num","balance","btnStatusText","signAndExecuteTransaction","useTransaction","fetchAccountBalance","useAccountBalance","isRemoveLoading","setIsRemoveLoading","navigate","useNavigate","toRemove","isClosed","_c","toastInfo","Decimal","formatDescription","payload","a","b","bg_farming","FarmsBlock","haveFarming","farmsPosRewardsData","posPoolsRelatedData","posBaseListLoading","posPoolsOriginalData","getFarmsRewardsData","useGetFarmsPosRewards","getClmmPosName","tokenName","position_index","currentPosPoolsRelatedData","isActive","posFarmsData","farmsRewarderList","totalRewards","sum","toStakePos","toUnStakePos","toClaimPos","unstakeLoading","claimLoading","useFarmsActions","stakeRefresh","events","toStake","unstakeRefresh","toUnstack","claimRefresh","toClaim","totalAmount","rewardData","isCanStake","Image","AprTooltip","Block","React","RewardsCoin","CetusTooltip","bg_alert","RangeAlerts","subscriptionSource","title","wrapStyle","getPositionNotifiStatus","useNotifiHelper","isChecked","setIsChecked","notifiAuthenticated","notifiSourceGroups","setIsShowNotifi","notifiSubscriptionLoading","notifiStatus","notifiSources","useNotifiStore","notifiUnSubscription","notifiSubscription","useNotifiSubscription","isSubscription","createNotifiSubscriptionVerify","changeSwitch","checked","canSubscription","Switch","e","ZapSwitch","props","onChange","Popover","PopoverTrigger","PopoverContent","PopoverBody","TradeTitle","haveZap","setUseZapIn","handleChangeZap","RemoveBlock","changeSlideValue","TradeInputGroup","PositionSlider","PercentageTab","percentage","textFontSize","selectTabStyle","selectTabItemStyle","selectTabItemTextStyle","isShowPercentageText","percentageTextMinW","tabList","tab","Slider","SliderTrack","SliderFilledTrack","SliderThumb"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}