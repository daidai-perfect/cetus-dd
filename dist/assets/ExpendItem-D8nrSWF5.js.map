{"version":3,"file":"ExpendItem-D8nrSWF5.js","sources":["../../src/hooks/farms/useFarms.ts","../../src/hooks/farms/useFarmsAction.ts","../../src/components/farms/ExpendItem.tsx"],"sourcesContent":["import { MsafeTransactionSubType } from '@/types'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\n\ntype HarvestParams = {\n  pool_id: string\n  position_nft_id: string\n}\n\nexport default function useFarms() {\n  const { peripherySdk } = usePeripherySDKStore()\n\n  /**\n   * Farms Stake Transaction Payload\n   * @param clmmPosId\n   * @param poolId\n   * @returns\n   */\n  const getStakeTxPayload = async (clmmPosId: string, poolId: string) => {\n    const parameter = {\n      pool_id: poolId,\n      clmm_position_id: clmmPosId\n    }\n    const tx = await peripherySdk.Farms.depositPayload(parameter)\n    const msafeParams = {\n      action: MsafeTransactionSubType.FarmingStake,\n      txbParams: parameter\n    }\n\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * Farms Unstake Transaction Payload\n   * @param poolId\n   * @param positionNftId 传posBaseInfo里的id就行\n   * @returns\n   */\n  const getUnstakeTxPayload = async (poolId: string, positionNftId: string) => {\n    const parameter = {\n      pool_id: poolId,\n      position_nft_id: positionNftId\n    }\n\n    const tx = await peripherySdk.Farms.withdrawPayload(parameter)\n\n    const msafeParams = {\n      action: MsafeTransactionSubType.FarmingUnstake,\n      txbParams: parameter\n    }\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * Farms claim rewards\n   * @param poolId\n   * @param positionNftId\n   * @returns\n   */\n  const getHarvestFarmsTxPayload = async (poolId: string, positionNftId: string) => {\n    const parameter = {\n      pool_id: poolId,\n      position_nft_id: positionNftId\n    }\n    const tx = await peripherySdk.Farms.harvestPayload(parameter)\n\n    const msafeParams = {\n      action: MsafeTransactionSubType.FarmingHarvest,\n      txbParams: parameter\n    }\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * Batch Harvest Farms rewards\n   * @param params\n   * @returns\n   */\n  const getBatchHarvestFarmsTxPayload = async (params: HarvestParams[]) => {\n    const tx = await peripherySdk.Farms.batchHarvestPayload(params)\n    const msafeParams = {\n      action: 'FarmingBatchHarvest',\n      txbParams: params\n    }\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  return {\n    getStakeTxPayload,\n    getUnstakeTxPayload,\n    getHarvestFarmsTxPayload,\n    getBatchHarvestFarmsTxPayload\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport { PosBaseInfo } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { CommonTypeInfo } from '@cetus/types'\nimport { useState } from 'react'\nimport useFarms from './useFarms'\n\nexport default function useFarmsActions() {\n  const { getBatchHarvestFarmsTxPayload, getStakeTxPayload, getUnstakeTxPayload, getHarvestFarmsTxPayload } = useFarms()\n  const { signAndExecuteTransaction } = useTransaction()\n  const [claimLoading, setClaimLoading] = useState(false)\n  const [unstakeLoading, setUnstakeLoading] = useState(false)\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const toClaimAllPos = async (list: PosBaseInfo[], refreshFun: () => void) => {\n    setClaimLoading(true)\n    try {\n      const params: any = []\n      list.forEach((position: any) => {\n        if (position?.farmsPool) {\n          params.push({\n            pool_id: position.farmsPool,\n            position_nft_id: position.id\n          })\n        }\n      })\n      console.log('🚀 ~ list.forEach  toClaimAllPos ~ params:', params)\n      const { tx, msafeParams } = await getBatchHarvestFarmsTxPayload(params)\n      console.log('🚀 ~ toClaimAllPos ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: ` Claim rewards`,\n              toastTitleText: ' Claim'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toClaimAllPos ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        setTimeout(async () => {\n          fetchAccountBalance()\n          refreshFun()\n        }, 2000)\n      }\n      setClaimLoading(false)\n    } catch (error) {\n      setClaimLoading(false)\n      console.log('🚀 ~ toClaimAllPos ~ error:', error)\n    }\n  }\n\n  const toStakePos = async (posId: string, farmsPool: string, tokenName: string, refreshFun: (events: any) => void) => {\n    setUnstakeLoading(true)\n    try {\n      const { tx, msafeParams } = await getStakeTxPayload(posId, farmsPool)\n      console.log('🚀 ~ toStakePos ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: `Stake ${tokenName}`,\n              toastTitleText: 'Stake'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n\n      if (res) {\n        console.log('🚀 ~ toStakePos ~ res:', res)\n        refreshFun(res.events)\n      }\n      setUnstakeLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ toStakePos ~ error:', error)\n      setUnstakeLoading(false)\n    }\n  }\n\n  const toUnStakePos = async (posId: string, farmsPool: string, tokenName: string, refreshFun: () => void) => {\n    setUnstakeLoading(true)\n    try {\n      const { tx, msafeParams } = await getUnstakeTxPayload(farmsPool, posId)\n      console.log('🚀 ~ toUnstack ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: `Unstake ${tokenName}`,\n              toastTitleText: 'Unstake'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toUnStakePos ~ res:', res)\n\n      if (res) {\n        // 重新拿数据\n        fetchAccountBalance()\n        refreshFun()\n      }\n      setUnstakeLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ toUnStakePos ~ error:', error)\n      setUnstakeLoading(false)\n    }\n  }\n\n  const toClaimPos = async (posId: string, farmsPool: string, refreshFun: () => void) => {\n    setClaimLoading(true)\n    try {\n      const { tx, msafeParams } = await getHarvestFarmsTxPayload(farmsPool, posId)\n      console.log('🚀 ~ toClaimPos ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: ` Claim rewards`,\n              toastTitleText: ' Claim'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toClaimPos ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        fetchAccountBalance()\n        refreshFun()\n      }\n      setClaimLoading(false)\n    } catch (error) {\n      setClaimLoading(false)\n      console.log('🚀 ~ toClaimPos ~ error:', error)\n    }\n  }\n  return {\n    toStakePos,\n    toUnStakePos,\n    toClaimPos,\n    toClaimAllPos,\n    claimLoading,\n    unstakeLoading\n  }\n}\n","import useFarmsActions from '@/hooks/farms/useFarmsAction'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionList from '@/hooks/position/usePositionList'\nimport usePositionStore from '@/store/position'\nimport { PosReward } from '@/types'\nimport { CetusTooltip } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/cetus-burn-sdk'\nimport { d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Button, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport React, { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport LiquidityValueBlock from '../position/list/LiquidityValueBlock'\nimport PriceRange from '../position/PriceRange'\n\ntype ExpendItemProps = {\n  positionInfo: any\n  apiInfo: any\n}\n\nexport function ExpendItem({ positionInfo, apiInfo }: ExpendItemProps) {\n  const { farmsPosRewardsData, posPoolsRelatedData, posPoolsOriginalData } = usePositionStore()\n  const { getPositionBaseList } = usePositionList()\n  const { currentAccount } = useAccountStore()\n  const { isApp } = useWindowWidth()\n\n  const posFarmsData = farmsPosRewardsData[positionInfo?.id]\n  const totalRewards = posFarmsData?.reduce((sum: number, item: any) => sum + item.display_amount_owed, 0)\n  const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const { getClmmPosName } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (positionInfo?.tokenName) {\n      return positionInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[positionInfo?.clmmPool]?.index\n      return getClmmPosName(positionInfo?.index, position_index)\n    }\n  }, [positionInfo?.tokenName, positionInfo?.index, positionInfo?.clmmPool, posPoolsOriginalData])\n\n  const navigate = useNavigate()\n  const getPositionList = () => {\n    setTimeout(async () => {\n      await getPositionBaseList(currentAccount?.address)\n    }, 2000)\n  }\n\n  const { toStakePos, toUnStakePos, toClaimPos, unstakeLoading, claimLoading } = useFarmsActions()\n\n  const toStake = async (events: any) => {\n    toStakePos(positionInfo?.id, apiInfo?.farmsPoolAddress, tokenName, getPositionList)\n  }\n  const toUnstack = async () => {\n    toUnStakePos(positionInfo?.id, positionInfo?.farmsPool, tokenName, getPositionList)\n  }\n  const toClaim = async () => {\n    toClaimPos(positionInfo?.id, positionInfo?.farmsPool, getPositionList)\n  }\n  // 计算仓位的farms奖励数量 来判断是否展示\n  // 如果总的farms奖励数量大于0 并且farms奖励列表>0 用farms奖励列表做循环展示数量\n  // 否则 用api接口返回来的释放速率大于0的奖励列表做循环 数量写死为0\n  // 要求：释放速率为0的奖励不展示 （api接口有过滤 但是posFarmsData用sdk请求回来的没有屏蔽释放速率为0的奖励）\n  const totalAmount = useMemo(() => {\n    if (posFarmsData?.length > 0) {\n      return posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n        return d(sum).plus(rewardData?.display_amount_owed).toString()\n      }, '0')\n    }\n    return '0'\n  }, [posFarmsData, currentAccount?.address, claimLoading, unstakeLoading])\n  console.log('🚀 ~ totalAmount ~ totalAmount:', totalAmount)\n\n  return (\n    <HStack\n      bg=\"bg_primary\"\n      w=\"100%\"\n      gap=\"16px\"\n      borderRadius={{ base: '12px', lg: '20px' }}\n      border={{ base: 'none', lg: '1px solid' }}\n      borderColor=\"border !important\"\n      p=\"12px\"\n      justifyContent=\"space-between\"\n      flexDirection={{ base: 'column', lg: 'row' }}\n    >\n      <PriceRange\n        positionInfo={positionInfo}\n        symbolEllipsesDecimals={10}\n        labelInfo={{ text: tokenName, style: { color: 'text_caption', mb: '-2px' } }}\n        children={\n          <HStack\n            justify=\"center\"\n            h={{ base: '14px', lg: '20px' }}\n            borderRadius=\"4px\"\n            p=\"0px\"\n            mb={{ base: '0', lg: '-2px' }}\n            cursor=\"pointer\"\n            onClick={e => {\n              cancelBubble(e)\n              navigate(`/position-detail/${positionInfo?.id}`)\n            }}\n            sx={{\n              _hover: {\n                p: {\n                  color: 'text_caption'\n                },\n                svg: {\n                  fill: 'text_caption'\n                }\n              }\n            }}\n          >\n            <Text fontSize=\"12px\" color=\"primary\">\n              Manage position\n            </Text>\n            <Icon\n              ml=\"-8px\"\n              svgW=\"12px\"\n              svgH=\"12px\"\n              xlinkHref=\"#icon-icon_arrow\"\n              variant=\"gray\"\n              transition=\"transform 0.5s\"\n              transform=\"rotate(-90deg)\"\n            />\n          </HStack>\n        }\n      />\n      <HStack w={{ base: '100%', lg: 'unset' }} gap={{ base: '8px', lg: '40px' }} flexDirection={{ base: 'column', lg: 'row' }}>\n        <VStack w={{ base: '100%', lg: 'unset' }} align=\"flex-start\" justify=\"space-between\" gap=\"4px\" flexDirection={{ base: 'row', lg: 'column' }}>\n          <Text color=\"primary_gray\" mb=\"-12px\" mt=\"12px\">\n            Liquidity\n          </Text>\n          <LiquidityValueBlock positionInfo={positionInfo} fontSize=\"14px\" />\n        </VStack>\n        <VStack\n          justify=\"space-between\"\n          w={{ base: '100%', lg: 'unset' }}\n          minW={{ base: '100%', lg: '180px' }}\n          align=\"flex-end\"\n          gap=\"4px\"\n          flexDirection={{ base: 'row', lg: 'column' }}\n        >\n          <HStack gap=\"4px\">\n            <Text color=\"primary_gray\">Earnings</Text>\n            {!isApp && (\n              <Button\n                isLoading={claimLoading}\n                disabled={unstakeLoading || claimLoading || d(totalRewards).eq(0)}\n                onClick={unstakeLoading || claimLoading || d(totalRewards).eq(0) ? () => {} : toClaim}\n                h=\"20px\"\n                w=\"48px\"\n                fontSize=\"12px\"\n                borderRadius=\"4px\"\n                variant=\"outline\"\n              >\n                Claim\n              </Button>\n            )}\n          </HStack>\n          <HStack>\n            <Skeleton isLoaded={!!totalAmount}>\n              <VStack align=\"flex-end\">\n                {posFarmsData && posFarmsData?.length > 0 && d(totalAmount).gt(0) ? (\n                  posFarmsData?.map((item: any) => {\n                    console.log(\n                      '🚀 ~ ExpendItem ~ posFarmsData && posFarmsData?.length > 0 && d(totalAmount).gt(0) :',\n                      posFarmsData,\n                      posFarmsData?.length > 0,\n                      totalAmount,\n                      d(totalAmount).gt(0)\n                    )\n                    return (\n                      <React.Fragment key={item?.rewarder_type}>\n                        {d(item?.display_amount_owed).gt(0) && (\n                          <RewardsCon\n                            key={item?.coinType}\n                            coinType={item?.token?.coin_type}\n                            amount={item?.display_amount_owed || 0}\n                            tokenInfo={item?.token}\n                          />\n                        )}\n                      </React.Fragment>\n                    )\n                  })\n                ) : apiInfo?.farmsRewarderList?.length > 0 ? (\n                  apiInfo?.farmsRewarderList?.map((item: any) => {\n                    console.log('🚀 ~ apiInfo?.farmsRewarderList?.map ~ item:', item)\n                    return <RewardsCon key={item?.coinType} coinType={item?.coinType} amount=\"0\" />\n                  })\n                ) : (\n                  <Text textColor=\"text_caption\" textAlign=\"right\">\n                    --\n                  </Text>\n                )}\n              </VStack>\n            </Skeleton>\n            {isApp && (\n              <Button\n                isLoading={claimLoading}\n                disabled={unstakeLoading || claimLoading || d(totalRewards).eq(0)}\n                onClick={unstakeLoading || claimLoading || d(totalRewards).eq(0) ? () => {} : toClaim}\n                h=\"20px\"\n                w=\"48px\"\n                fontSize=\"12px\"\n                borderRadius=\"4px\"\n                variant=\"outline\"\n              >\n                Claim\n              </Button>\n            )}\n          </HStack>\n        </VStack>\n        <VStack mt={{ base: '8px', lg: '0' }} w={{ base: '100%', lg: 'unset' }}>\n          {positionInfo?.posType == 'farms' && (\n            <Button\n              disabled={unstakeLoading}\n              isLoading={unstakeLoading}\n              variant=\"outline\"\n              w={{ base: '100%', lg: '100px' }}\n              h=\"32px\"\n              borderRadius=\"8px\"\n              fontSize=\"14px\"\n              onClick={toUnstack}\n            >\n              Unstake\n            </Button>\n          )}\n          {positionInfo?.posType == 'clmm' && !isActive && (\n            <CetusTooltip\n              placement=\"top\"\n              tooltip={\n                <Text fontSize=\"12px\" lineHeight=\"20px\" w=\"200px\">\n                  Farming rewards are only available for active positions.\n                </Text>\n              }\n            >\n              <Button disabled={true} borderRadius=\"8px\" w={{ base: 'calc(100vw - 68px)', lg: '100px' }} h=\"32px\" fontSize=\"14px\">\n                Stake\n              </Button>\n            </CetusTooltip>\n          )}\n          {positionInfo?.posType == 'clmm' && isActive && (\n            <Button\n              disabled={unstakeLoading}\n              isLoading={unstakeLoading}\n              w={{ base: '100%', lg: '100px' }}\n              h=\"32px\"\n              borderRadius=\"8px\"\n              fontSize=\"14px\"\n              onClick={toStake}\n            >\n              Stake\n            </Button>\n          )}\n        </VStack>\n      </HStack>\n    </HStack>\n  )\n}\n\nexport const RewardsCon = ({\n  coinType,\n  amount,\n  tokenInfo,\n  boxStyle,\n  textAlign = 'right'\n}: {\n  coinType: string\n  amount: string\n  tokenInfo?: any\n  boxStyle?: any\n  textAlign?: 'right' | 'left' | 'center'\n}) => {\n  console.log('🚀 ~ RewardsCon ~ coinType:', coinType, amount)\n  const { getTokenInfo } = useGetToken()\n  const fetchToken = (coinType: string) => {\n    if (!coinType) return\n    try {\n      const coinInfo = getTokenInfo(coinType)\n      return coinInfo\n    } catch (error) {\n      console.error('Error fetching token info:', error)\n    }\n  }\n  return (\n    <HStack {...boxStyle}>\n      <SingleTokenInfo\n        token={tokenInfo || fetchToken(fixCoinType(coinType))}\n        coinType={fixCoinType(coinType)}\n        imgBoxStyle={{ w: '20px', h: '20px' }}\n        warningIcon={{ iconW: '10px', iconH: '10px' }}\n        haveName={false}\n        haveSymbol={false}\n      />\n      <Text textColor=\"text_caption\" textAlign={textAlign}>\n        {amount} {tokenInfo?.symbol || fetchToken(fixCoinType(coinType))?.symbol}\n      </Text>\n    </HStack>\n  )\n}\n"],"names":["useFarms","peripherySdk","usePeripherySDKStore","clmmPosId","poolId","parameter","tx","msafeParams","MsafeTransactionSubType","positionNftId","params","useFarmsActions","getBatchHarvestFarmsTxPayload","getStakeTxPayload","getUnstakeTxPayload","getHarvestFarmsTxPayload","signAndExecuteTransaction","useTransaction","claimLoading","setClaimLoading","useState","unstakeLoading","setUnstakeLoading","fetchAccountBalance","useAccountBalance","posId","farmsPool","tokenName","refreshFun","res","error","list","position","ExpendItem","positionInfo","apiInfo","farmsPosRewardsData","posPoolsRelatedData","posPoolsOriginalData","usePositionStore","getPositionBaseList","usePositionList","currentAccount","useAccountStore","isApp","useWindowWidth","posFarmsData","totalRewards","sum","item","currentPosPoolsRelatedData","isActive","getClmmPosName","usePosHelper","useMemo","position_index","_a","navigate","useNavigate","getPositionList","toStakePos","toUnStakePos","toClaimPos","toStake","events","toUnstack","toClaim","totalAmount","rewardData","d","jsxs","HStack","jsx","PriceRange","e","cancelBubble","Text","Icon","VStack","LiquidityValueBlock","Button","Skeleton","React","RewardsCon","_b","CetusTooltip","coinType","amount","tokenInfo","boxStyle","textAlign","getTokenInfo","useGetToken","fetchToken","SingleTokenInfo","fixCoinType"],"mappings":"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"}