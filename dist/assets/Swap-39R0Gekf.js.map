{"version":3,"mappings":";kPAUA,MAAMA,EAAYC,OAAK,IAAMC,EAAA,WAAO,oBAA6B,4IAAC,EAC5DC,EAAkBF,EAAA,KAAK,UAAM,OAAO,+BAAyC,+BAAE,KAAKG,IAAW,CAAE,QAASA,EAAO,iBAAkB,CAAC,EAE1I,SAASC,GAAO,CACd,KAAM,CAAE,YAAAC,EAAa,MAAAC,CAAM,EAAIC,EAAe,EACxC,CAAE,iBAAAC,CAAiB,EAAIC,EAAe,EACtC,CAAE,SAAAC,EAAU,OAAAC,CAAO,EAAIC,EAAa,EAExC,OAAAC,EAAA,IAACC,EAAA,CACC,GAAI,CAAE,KAAM,OAAQ,GAAIT,GAAeA,EAAc,KAAO,IAAM,MAAO,EACzE,EAAG,CAAE,KAAM,IAAK,GAAIG,EAAmB,IAAM,SAAU,EACvD,UAAWF,GAASE,EAAmB,GAAK,SAC5C,EAAE,OAEF,gBAACO,EAAM,GAAE,OAAO,QAAS,CAAE,KAAM,SAAU,GAAI,OAAS,IAAI,OAAO,MAAM,aAAa,QAAQ,SAC3F,UACCP,GAAAK,MAACG,GAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,oBAAqB,EAClD,SAACH,EAAA,IAAAI,EAAA,UAAS,SAAWJ,EAAA,WAAI,GACvB,SAACA,EAAA,IAAAX,EAAA,CAAgB,UAAWQ,EAAU,WAAYC,CAAQ,GAC5D,CACF,GAEDO,OAAAF,EAAA,CAAO,IAAI,OAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,SAAW,WAAW,QAC9D,UAACH,MAAAM,EAAA,CAAS,aAAcC,EAAU,IAAM,GACxCP,MAACI,YAAS,SAAUJ,EAAA,IAAC,QAAI,EACvB,SAAAA,MAACd,GAAU,EACb,GACF,GACF,GACF,CAEJ","names":["SwapTrade","lazy","__vitePreload","LimitPriceChart","module","Swap","windowWidth","isApp","useWindowWidth","isShowTradeChart","useGlobalStore","fromCoin","toCoin","useSwapStore","jsx","Box","Stack","VStack","Suspense","jsxs","TradeTab","TradeTabs"],"ignoreList":[],"sources":["../../src/pages/Swap.tsx"],"sourcesContent":["import { TradeTab } from '@/components/common/TradeTab'\n// import { LimitPriceChart } from '@/components/limit/LimitPriceChart.tsx'\n// import { SwapTrade } from '@/components/swap'\nimport { TradeTabs } from '@/components/swap/type'\nimport useGlobalStore from '@/store/common/global.ts'\nimport useSwapStore from '@/store/swap/swap.ts'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Box, Stack, VStack } from '@chakra-ui/react'\nimport { lazy, Suspense } from 'react'\n\nconst SwapTrade = lazy(() => import('../components/swap/Swap.tsx'))\nconst LimitPriceChart = lazy(() => import('../components/limit/LimitPriceChart.tsx').then(module => ({ default: module.LimitPriceChart })))\n\nfunction Swap() {\n  const { windowWidth, isApp } = useWindowWidth()\n  const { isShowTradeChart } = useGlobalStore()\n  const { fromCoin, toCoin } = useSwapStore()\n  return (\n    <Box\n      mt={{ base: '28px', lg: windowWidth && windowWidth < 1024 ? '0' : '42px' }}\n      p={{ base: '0', lg: isShowTradeChart ? '0' : '0 345px' }}\n      className={isApp || isShowTradeChart ? '' : 'bg_img'}\n      w=\"100%\"\n    >\n      <Stack w=\"100%\" flexDir={{ base: 'column', lg: 'row' }} gap=\"16px\" align=\"flex-start\" justify=\"center\">\n        {isShowTradeChart && (\n          <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n            <Suspense fallback={<div />}>\n              <LimitPriceChart baseToken={fromCoin} quoteToken={toCoin} />\n            </Suspense>\n          </VStack>\n        )}\n        <VStack gap=\"16px\" w={{ base: '100%', lg: '470px' }} alignItems=\"start\">\n          <TradeTab currTradeTab={TradeTabs.Swap} />\n          <Suspense fallback={<div />}>\n            <SwapTrade />\n          </Suspense>\n        </VStack>\n      </Stack>\n    </Box>\n  )\n}\n\nexport default Swap\n"],"file":"assets/Swap-39R0Gekf.js"}