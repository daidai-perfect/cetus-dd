{"version":3,"file":"useGetPoolList-BxPVC45v.js","sources":["../../src/constant/pool.ts","../../src/constant/sui-priority.ts","../../src/utils/pool.ts","../../src/hooks/pool/useGetPoolList.ts"],"sourcesContent":["export const PoolTickSpace = {\n  '0.0001': 2,\n  '0.0005': 10,\n  '0.0025': 60,\n  '0.01': 200\n} as const\n\nexport const TICK_SPACINGS = {\n  '100': 2,\n  '500': 10,\n  '1000': 20,\n  '2500': 60,\n  '10000': 200,\n  '20000': 220\n}\n\nexport const SupportedTickSpacings = Object.values(TICK_SPACINGS)\nexport const SupportedFeeRate = Object.keys(TICK_SPACINGS)\n","export const suiPriorityConfigs = [\n  '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC',\n  '0x5d4b302506645c37ff133b98c4b50a5ae14841659738d6d733d59d0d217a93bf::coin::COIN',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_usdc_coin::CELER_USDC_COIN',\n  '0xcf72ec52c0f8ddead746252481fb44ff6e8485a39b803825bde6b00d77cdb0bb::coin::COIN',\n  '0xe32d3ebafa42e6011b87ef1087bbc6053b499bf6f095807b9013aff5a6ecd7bb::coin::COIN',\n  '0xc3f8927de33d3deb52c282a836082a413bc73c6ee0bd4d7ec7e3b6b4c28e9abf::coin::COIN',\n  '0x909cba62ce96d54de25bec9502de5ca7b4f28901747bbf96b76c2e63ec5f1cba::coin::COIN',\n  '0xb231fcda8bbddb31f2ef02e6161444aec64a514e2c89279584ac9806ce9cf037::coin::COIN',\n  '0xc060006111016b8a020ad5b33834984a437aaa7d3c74c18e09a95d48aceab08c::coin::COIN',\n  '0x2053d08c1e2bd02791056171aab0fd12bd7cd7efad2ab8f6b9c8902f14df2ff2::ausd::AUSD',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_usdt_coin::CELER_USDT_COIN',\n  '0xf16e6b723f242ec745dfd7634ad072c42d5c1d9ac9d62a39c381303eaa57693a::fdusd::FDUSD',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_dai_coin::CELER_DAI_COIN',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_wsteth_coin::CELER_WSTETH_COIN',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_frax_coin::CELER_FRAX_COIN',\n  '0xce7ff77a83ea0cb6fd39bd8748e2ec89a3f41e8efdc3f4eb123e0ca37b184db2::buck::BUCK',\n  '0x2::sui::SUI',\n  '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n  '0x7016aae72cfc67f2fadf55769c0a7dd54291a583b63051a5ed71081cce836ac6::sca::SCA',\n  '0x5ca17430c1d046fae9edeaa8fd76c7b4193a00d764a0ecfa9418d733ad27bc1e::scallop_sca::SCALLOP_SCA',\n  '0xaf8cd5edc19c4512f4259f0bee101a40d41ebed738ade5874359610ef8eeced5::coin::COIN',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_weth_coin::CELER_WETH_COIN',\n  '0xf325ce1300e8dac124071d3152c5c5ee6174914f8bc2161e88329cf579246efc::afsui::AFSUI',\n  '0x549e8b69270defbfafd4f94e17ec44cdbdd99820b33bda2278dea3b9a32d3f55::cert::CERT',\n  '0x027792d9fed7f9844eb4839566001bb6f6cb4804f66aa2da6fe1ee242d896881::coin::COIN',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_wbtc_coin::CELER_WBTC_COIN',\n  '0xb7844e289a8410e50fb3ca48d69eb9cf29e27d223ef90353fe1bd8e27ff8f3f8::coin::COIN',\n  '0xb848cce11ef3a8f62eccea6eb5b35a12c4c2b1ee1af7755d02d7bd6218e8226f::coin::COIN',\n  '0xdbe380b13a6d0f5cdedd58de8f04625263f113b3f9db32b3e1983f49e2841676::coin::COIN',\n  '0x1e8b532cca6569cab9f9b9ebc73f8c13885012ade714729aa3b450e0339ac766::coin::COIN',\n  '0x6081300950a4f1e2081580e919c210436a1bed49080502834950d31ee55a2396::coin::COIN',\n  '0xa198f3be41cda8c07b3bf3fee02263526e535d682499806979a111e88a5a8d0f::coin::COIN',\n  '0x66f87084e49c38f76502d17f87d17f943f183bb94117561eb573e075fdc5ff75::coin::COIN',\n  '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS',\n  '0xbde4ba4c2e274a60ce15c1cfff9e5c42e41654ac8b6d906a57efa4bd3c29f47d::hasui::HASUI',\n  '0xe4239cd951f6c53d9c41e25270d80d31f925ad1655e5ba5b543843d4a66975ee::SUIP::SUIP',\n  '0x1d58e26e85fbf9ee8596872686da75544342487f95b1773be3c9a49ab1061b19::suia_token::SUIA_TOKEN',\n  '0x3a5143bb1196e3bcdfab6203d1683ae29edd26294fc8bfeafe4aaa9d2704df37::coin::COIN',\n  '0x202591744d54ee4f4af736ef3b8508f3d46d982c36747d9587032bd549122179::luck::LUCK',\n  '0xd2013e206f7983f06132d5b61f7c577638ff63171221f4f600a98863febdfb47::toce::TOCE',\n  '0x934692a74595c4f5a0c026130eb2143eea6fc313742f5d7dd9e45fd6ddbb00f1::suime::SUIME',\n  '0x94e7a8e71830d2b34b3edaa195dc24c45d142584f06fa257b73af753d766e690::celer_fxs_coin::CELER_FXS_COIN',\n  '0x6907963ca849faff0957b9a8269a7a07065e3def2eef49cc33b50ab946ea5a9f::coin::COIN',\n  '0x361dd589b98e8fcda9a7ee53b85efabef3569d00416640d2faa516e3801d7ffc::TOKEN::TOKEN',\n  '0x9a7ca7b6de5b6e9a4dadec42fada7cd84068aebd7adbd1faeb713622c4628ca9::meadow::MEADOW',\n  '0x32d5056aaac1be1f9ae44c1d0728792255a05f1475d458287ee463cc26806ca0::mover_usd::MOVER_USD',\n  '0x9fe1780ac27ec50c9c441fb31822f5c148f841f09ee455c6a0daf7c634a30a27::aifrens::AIFRENS',\n  '0xbff8dc60d3f714f678cd4490ff08cabbea95d308c6de47a150c79cc875e0c7c6::sbox::SBOX',\n  '0x9a5502414b5d51d01c8b5641db7436d789fa15a245694b24aa37c25c2a6ce001::scb::SCB',\n  '0x4e56b39acd75721999cf833062dfb77b1d51e749b02d90f049a5688e21919a64::prl::PRL',\n  '0x76cb819b01abed502bee8a702b4c2d547532c12f25001c9dea795a5e631c26f1::fud::FUD',\n  '0xc44d97a4bc4e5a33ca847b72b123172c88a6328196b71414f32c3070233604b2::slp::SLP',\n  '0x8f16fb4ed30b4ff29cec3ddf82ed2ecae3836d20dbd31c8ba9e85d1ef6bfc172::sbbg::SBBG',\n  '0xb6baa75577e4bbffba70207651824606e51d38ae23aa94fb9fb700e0ecf50064::kimchi::KIMCHI',\n  '0x9c6d76eb273e6b5ba2ec8d708b7fa336a5531f6be59f326b5be8d4d8b12348a4::coin::COIN'\n]\n","import { SupportedTickSpacings } from '@/constant/pool'\nimport { suiPriorityConfigs } from '@/constant/sui-priority'\nimport { PoolPercent } from '@/types'\nimport { d, fixRounding, formatNumberWithDown } from '@cetus/utils'\nimport { fixCoinType, TickUtil } from '@cetusprotocol/cetus-sui-clmm-sdk'\n\nexport function getPoolDirection(coinTypeA: string, coinTypeB: string): boolean {\n  const indexA = suiPriorityConfigs.indexOf(coinTypeA)\n  const indexB = suiPriorityConfigs.indexOf(coinTypeB)\n\n  if (indexA === -1 && indexB === -1) {\n    return true\n  }\n\n  if (indexA !== -1 && indexB === -1) {\n    return false\n  }\n\n  if (indexA === -1 && indexB !== -1) {\n    return true\n  }\n\n  return indexA > indexB\n}\n\n// 计算coinA,coinB占比\nexport const calcCoinProportion = (amountA: string | number, amountB: string | number, currentPrice: string, isFullRange: boolean): PoolPercent => {\n  if (isFullRange) {\n    return {\n      percentA: '50',\n      percentB: '50'\n    }\n  }\n  if (d(amountA).eq(0) && d(amountB).eq(0)) {\n    return {\n      percentA: '0',\n      percentB: '0'\n    }\n  }\n  const totalAmount = d(amountB).plus(d(amountA).mul(currentPrice))\n  const originPercentB = d(amountB).div(totalAmount).mul(100)\n  const originPercentA = d(100).sub(originPercentB)\n  const percentA = originPercentA.lt(0.01) && originPercentA.gt(0) ? '<0.01' : fixRounding(originPercentA.toString(), 2)\n  const percentB = originPercentB.lt(0.01) && originPercentB.gt(0) ? '<0.01' : fixRounding(originPercentB.toString(), 2)\n\n  return {\n    percentA,\n    percentB\n  }\n}\n\n// 格式化请求池子列表时的cointype参数\nexport const formatCoinTypesParams = (coinTypes: string | undefined) => {\n  if (!coinTypes) return ''\n  const coinTypeArr = coinTypes?.split(',')\n  const result = coinTypeArr?.map((item: string) => fixCoinType(item, false))?.join(',')\n  return result\n}\n\n// 获取反向价格\nexport const getReversePrice = (price: string) => {\n  const reversePrice = price === '0' || !price ? '∞' : price === '∞' ? '0' : d(1).div(price).toString()\n  return reversePrice\n}\n\nexport const getDisplayPrice = (price: string) => {\n  return price === '∞' ? '∞' : formatNumberWithDown(price, 6)\n}\n\nexport const getDisplayReversePrice = (price: string) => {\n  return getDisplayPrice(getReversePrice(price))\n}\n\nexport const checkIsMinOrMaxIndex = (index: number, type: 'min' | 'max') => {\n  for (let i = 0; i < SupportedTickSpacings.length; i++) {\n    const item = SupportedTickSpacings[i]\n    if (type === 'min') {\n      if (index == TickUtil.getMinIndex(item)) {\n        return true\n      }\n    } else {\n      if (index == TickUtil.getMaxIndex(item)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport const checkFullRange = (lowerTick: number, upperTick: number) => {\n  const isMinTick = checkIsMinOrMaxIndex(lowerTick, 'min')\n  const isMaxTick = checkIsMinOrMaxIndex(upperTick, 'max')\n  if (isMinTick && isMaxTick) return true\n  return false\n}\n","import { StatsPoolsPath } from '@/apis/path'\nimport { PoolApiInfo } from '@/types'\nimport { formatCoinTypesParams } from '@/utils/pool'\nimport { useFetch } from '@cetus/hooks'\nimport { extractStructTagFromType, normalizeCoinType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport useWrapPoolData from './useWrapPoolData'\n\nexport type GetPoolListParams = {\n  is_vaults?: boolean\n  display_all_pools?: boolean\n  has_mining?: boolean\n  has_farming?: boolean\n  no_incentives?: boolean\n  order_by?: string\n  limit?: number\n  offset?: number\n  coin_type?: string\n  pool?: string\n}\n\nexport default function useGetPoolList() {\n  const { fetchByApi } = useFetch()\n  const { wrapPoolData } = useWrapPoolData()\n\n  const getPoolList = async (\n    params: GetPoolListParams\n  ): Promise<{\n    list: PoolApiInfo[]\n    total: number\n    isLocal?: boolean\n  }> => {\n    try {\n      const apiParams = { ...params }\n      const coinTypes = formatCoinTypesParams(params?.coin_type)\n      if (coinTypes) {\n        apiParams['coin_type'] = coinTypes\n      }\n\n      const res = await fetchByApi(StatsPoolsPath, 'GET', apiParams)\n\n      if (res?.lp_list) {\n        const poolList = res?.lp_list?.map((item: any) => {\n          return wrapPoolData(item)\n        })\n        console.log('🚀 ~ file: useGetPoolList.ts:42 ~ poolList ~ poolList:', poolList)\n\n        return {\n          list: poolList,\n          total: res?.total\n        }\n      }\n    } catch (error) {\n      console.log('🚀 ~ useGetPoolList ~ error:', error)\n\n      return await getLocalJsonPoolList(params)\n    }\n\n    return {\n      list: [],\n      total: 0\n    }\n  }\n\n  // 获取本地Json pool list数据\n  const getLocalJsonPoolList = async (\n    params: GetPoolListParams\n  ): Promise<{\n    list: PoolApiInfo[]\n    total: number\n    isLocal: boolean\n  }> => {\n    try {\n      const res = await fetch('/data/pools.json', { cache: 'no-cache' }).then(rsp => {\n        return rsp.json()\n      })\n      console.log(res, 'getLocalJsonPoolList')\n      if (res?.data?.lp_list) {\n        const originList = res?.data?.lp_list\n        let list = originList\n        // 支持pool筛选\n        if (params?.pool) {\n          list = originList?.filter((item: any) => params?.pool?.toLocaleLowerCase() == item?.address.toLocaleLowerCase())\n        }\n\n        // 支持coin_type筛选\n        if (params?.coin_type) {\n          const coinArr = params?.coin_type?.split(',')?.map(item => extractStructTagFromType(item).source_address)\n          list = originList?.filter((item: any) => {\n            const coinTypeA = extractStructTagFromType(item?.coin_a?.address).source_address\n            const coinTypeB = extractStructTagFromType(item?.coin_b?.address).source_address\n            if (coinArr?.length > 1 && coinArr.includes(coinTypeA) && coinArr.includes(coinTypeB)) {\n              return true\n            } else if (coinArr?.length === 1 && (coinArr.includes(coinTypeA) || coinArr.includes(coinTypeB))) {\n              return true\n            } else {\n              return false\n            }\n          })\n        }\n\n        // 支持vaults筛选\n        if (params?.is_vaults) {\n          list = originList?.filter((item: any) => item?.is_vaults)\n        }\n\n        // 支持farms筛选\n        if (params?.has_farming && !params?.is_vaults && !params?.has_mining && !params?.no_incentives) {\n          list = originList?.filter((item: any) => item?.has_farming)\n        }\n\n        // 走本地数据时 页面只渲染40条数据\n        const resultList = JSON.parse(JSON.stringify(list)).splice(0, 40)\n        const poolList = resultList?.map((item: any) => {\n          return wrapPoolData(item, true)\n        })\n\n        return {\n          list: poolList,\n          total: list?.length || 0,\n          isLocal: true\n        }\n      }\n    } catch (error) {\n      console.error('getLocalJsonPoolList Error:', error)\n    }\n\n    return {\n      list: [],\n      total: 0,\n      isLocal: false\n    }\n  }\n\n  const formatCoinAddress = (address: string) => {\n    return normalizeCoinType(address) === '0x2::sui::SUI'\n      ? '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n      : normalizeCoinType(address)\n  }\n\n  const getLocalJsonPoolAddress = async (from_type: string, to_type: string): Promise<string[]> => {\n    try {\n      const from = formatCoinAddress(from_type)\n      const to = formatCoinAddress(to_type)\n\n      const res = await fetch('/data/all-pools.json').then(rsp => {\n        return rsp.json()\n      })\n      if (res) {\n        const poolList = res[`${from.toLocaleLowerCase()}-${to.toLocaleLowerCase()}`] || res[`${to.toLocaleLowerCase()}-${from.toLocaleLowerCase()}`]\n\n        console.log('🚀 --------------------------------------------------🚀')\n        console.log(\n          '🚀 ~ getLocalJsonPoolAddress ~ poolList:',\n          poolList,\n          `${from.toLocaleLowerCase()}-${to.toLocaleLowerCase()}`,\n          `${to.toLocaleLowerCase()}-${from.toLocaleLowerCase()}`\n        )\n        console.log('🚀 --------------------------------------------------🚀')\n        return poolList as string[]\n      }\n    } catch (error) {\n      console.error('getLocalJsonPoolAddress Error:', error)\n    }\n\n    return []\n  }\n\n  return {\n    getPoolList,\n    getLocalJsonPoolList,\n    getLocalJsonPoolAddress\n  }\n}\n"],"names":["TICK_SPACINGS","SupportedTickSpacings","suiPriorityConfigs","getPoolDirection","coinTypeA","coinTypeB","indexA","indexB","calcCoinProportion","amountA","amountB","currentPrice","isFullRange","d","totalAmount","originPercentB","originPercentA","percentA","fixRounding","percentB","formatCoinTypesParams","coinTypes","coinTypeArr","_a","item","fixCoinType","getReversePrice","price","getDisplayPrice","formatNumberWithDown","getDisplayReversePrice","checkIsMinOrMaxIndex","index","type","i","TickUtil","checkFullRange","lowerTick","upperTick","isMinTick","isMaxTick","useGetPoolList","fetchByApi","useFetch","wrapPoolData","useWrapPoolData","getPoolList","params","apiParams","res","StatsPoolsPath","poolList","error","getLocalJsonPoolList","rsp","originList","_b","list","coinArr","_d","_c","extractStructTagFromType","resultList","formatCoinAddress","address","normalizeCoinType","from_type","to_type","from","to"],"mappings":"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"}