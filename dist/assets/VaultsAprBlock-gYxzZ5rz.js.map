{"version":3,"file":"VaultsAprBlock-gYxzZ5rz.js","sources":["../../src/store/vaults/useVaultsList.ts","../../src/utils/vaults.ts","../../src/constant/vaults.ts","../../src/hooks/vaults/useGetVaultList.ts","../../src/hooks/vaults/useGetApiVaultInfo.ts","../../src/store/unstable-vaults/useVaultsAdd.ts","../../src/store/unstable-vaults/useVaultsList.ts","../../src/store/vaults/useVaultsDetail.ts","../../src/hooks/unstable-vault/useVaultsHelper.ts","../../src/hooks/unstable-vault/useGetContractVaultInfo.ts","../../src/hooks/vaults/useVaultsHelper.ts","../../src/hooks/vaults/useGetContractVaultInfo.ts","../../src/hooks/unstable-vault/useVaultsAdd.ts","../../src/hooks/vaults/useVaultsAdd.ts","../../src/hooks/unstable-vault/useVaultsButtonStatus.ts","../../src/hooks/vaults/useVaultsButtonStatus.ts","../../src/hooks/unstable-vault/useVaultsRemove.ts","../../src/hooks/vaults/useVaultsRemove.ts","../../src/hooks/vault-interface/index.ts","../../src/components/vaults/list/common/VaultsAprBlock.tsx"],"sourcesContent":["import { VaultBaseInfo, VaultStatItem } from '@/types'\nimport { Pool } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Vault } from '@cetusprotocol/vaults-sdk'\nimport { StateCreator, create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface VaultsState {\n  vaultStatsLoading: boolean\n  setVaultStatsLoading: (isLoading: boolean) => void\n  vaultStatsObj: Record<string, VaultStatItem>\n  setVaultStatsObj: (data: Record<string, VaultStatItem>) => void\n\n  vaultBaseListLoading: boolean\n  setVaultBaseListLoading: (isLoading: boolean) => void\n  vaultBaseList: VaultBaseInfo[]\n  setVaultBaseList: (list: VaultBaseInfo[]) => void\n\n  contractVaultObjLoading: boolean\n  setContractVaultObjLoading: (isLoading: boolean) => void\n  contractVaultObj: Record<string, Vault>\n  setContractVaultObj: (vault: Vault) => void\n\n  contractClmmPoolObjLoading: boolean\n  setContractClmmPoolObjLoading: (isLoading: boolean) => void\n  contractClmmPoolObj: Record<string, Pool>\n  setContractClmmPoolObj: (pool: Pool) => void\n\n  holdTotalValue: Record<string, string>\n  setHoldTotalValue: (vaultId: string, value: string) => void\n\n  detailRefreshCount: number\n  setDetailRefreshCount: (count: number) => void\n\n  lpTokenInfo: any\n  setLpTokenInfo: (data: any) => void\n}\n\nconst store: StateCreator<VaultsState> = (set, get) => ({\n  detailRefreshCount: 0,\n  contractClmmPoolObjLoading: false,\n  contractVaultObjLoading: false,\n  vaultBaseListLoading: false,\n  vaultStatsLoading: false,\n  holdVaultsObj: {},\n  holdTotalValue: {},\n  vaultStatsObj: {},\n  contractClmmPoolObj: {},\n  contractVaultObj: {},\n  isYourHoldings: false,\n  setVaultStatsObj: (data: Record<string, VaultStatItem>) => {\n    set(() => ({\n      vaultStatsObj: data\n    }))\n  },\n  vaultBaseList: [],\n  setVaultBaseList: (list: VaultBaseInfo[]) => {\n    set(() => ({\n      vaultBaseList: list\n    }))\n  },\n  setVaultBaseListLoading: (isLoading: boolean) => {\n    set(() => ({\n      vaultBaseListLoading: isLoading\n    }))\n  },\n  setVaultStatsLoading: (isLoading: boolean) => {\n    set(() => ({\n      vaultStatsLoading: isLoading\n    }))\n  },\n  setContractVaultObj: (vault: Vault) => {\n    const contractVaultObj = get().contractVaultObj\n    contractVaultObj[vault.id] = vault\n    set(() => ({\n      contractVaultObj: { ...contractVaultObj }\n    }))\n  },\n  setContractVaultObjLoading: (isLoading: boolean) => {\n    set(() => ({\n      contractVaultObjLoading: isLoading\n    }))\n  },\n  setContractClmmPoolObjLoading: (isLoading: boolean) => {\n    set(() => ({\n      contractClmmPoolObjLoading: isLoading\n    }))\n  },\n  setContractClmmPoolObj: (pool: Pool) => {\n    const contractClmmPoolObj = get().contractClmmPoolObj\n    contractClmmPoolObj[pool.poolAddress] = pool\n    set(() => ({\n      contractClmmPoolObj: { ...contractClmmPoolObj }\n    }))\n  },\n  setHoldTotalValue: (vaultId: string, value: string) => {\n    const holdTotalValue = get().holdTotalValue\n    holdTotalValue[vaultId] = value\n    set(() => ({\n      holdTotalValue: { ...holdTotalValue }\n    }))\n  },\n  setDetailRefreshCount: (count: number) => {\n    set(() => ({\n      detailRefreshCount: count\n    }))\n  },\n  lpTokenInfo: {} as any,\n  setLpTokenInfo: (data: any) => {\n    set(() => ({\n      lpTokenInfo: {\n        ...get().lpTokenInfo,\n        ...data\n      }\n    }))\n  }\n})\n\nconst useVaultsListStore = create(\n  persist(store, {\n    name: 'useVaultsStore2',\n    partialize: state => {\n      const { vaultBaseList, vaultStatsObj, contractVaultObj, contractClmmPoolObj, lpTokenInfo } = state\n      return { vaultBaseList, vaultStatsObj, contractVaultObj, contractClmmPoolObj, lpTokenInfo }\n    }\n  })\n)\nexport default useVaultsListStore\n","import { VaultApiInfo, VaultBaseInfo, VaultStatItem } from '@/types/vaults'\n\nexport function formatVaultApiInfo(baseInfo: VaultBaseInfo, statsItem?: VaultStatItem): VaultApiInfo {\n  return {\n    ...baseInfo,\n    vaultsTvl: statsItem?.vaultsTvl || '--',\n    vaultsTvlDisplay: statsItem?.vaultsTvlDisplay || '--',\n    vaultsApy: statsItem?.vaultsApy || '--',\n    vaultsApyDisplay: statsItem?.vaultsApyDisplay || '--',\n    vaultsTotalApy: statsItem?.vaultsTotalApy || '--',\n    vaultsTotalApyDisplay: statsItem?.vaultsTotalApyDisplay || '--',\n    vaultsLstApy: statsItem?.vaultsLstApy || '--',\n    vaultsLstApyDisplay: statsItem?.vaultsLstApyDisplay || '--',\n    vaultsApr: statsItem?.vaultsApr || '--',\n    vaultsAprDisplay: statsItem?.vaultsAprDisplay || '--',\n    vaultsId: statsItem?.vaultsId || '',\n    clmmPoolAddress: statsItem?.clmmPoolAddress || '',\n    amountPerLpA: statsItem?.amountPerLpA || '0',\n    amountPerLpB: statsItem?.amountPerLpB || '0',\n    category: statsItem?.category || '',\n    hardCapUSD: statsItem?.hardCapUSD || '--',\n    depositRatioDisplay: statsItem?.depositRatioDisplay || '--',\n    depositRatio: statsItem?.depositRatio || 0,\n    lpTokenType: statsItem?.lpTokenType || ''\n  }\n}\n","import { Token } from '@cetus/types'\n\nexport const vaultsMaps: Record<string, { vaults_id: string; clmm_pool: string; isUnstableVault?: boolean; lpToken: Token }> = {\n  '0xa528b26eae41bcfca488a9feaa3dca614b2a1d9b9b5c78c256918ced051d4c50': {\n    vaults_id: '0xff4cc0af0ad9d50d4a3264dfaafd534437d8b66c8ebe9f92b4c39d898d6870a3',\n    clmm_pool: '0xa528b26eae41bcfca488a9feaa3dca614b2a1d9b9b5c78c256918ced051d4c50',\n    lpToken: {\n      coin_type: '0x0c8a5fcbe32b9fc88fe1d758d33dd32586143998f68656f43f3a6ced95ea4dc3::lp_token::LP_TOKEN',\n      decimals: 9,\n      description: '',\n      logo_url: 'https://j5w37hib4ojxo6bymogsbg5r5qkkdhuvfprizrw4kxakm3jxz24q.arweave.net/T22_nQHjk3d4OGONIJux7BShnpUr4ozG3FXApm03zrk',\n      name: '',\n      symbol: ''\n    }\n  },\n  '0x6c545e78638c8c1db7a48b282bb8ca79da107993fcb185f75cedc1f5adb2f535': {\n    vaults_id: '0x5732b81e659bd2db47a5b55755743dde15be99490a39717abc80d62ec812bcb6',\n    clmm_pool: '0x6c545e78638c8c1db7a48b282bb8ca79da107993fcb185f75cedc1f5adb2f535',\n    lpToken: {\n      coin_type: '0xb490d6fa9ead588a9d72da07a02914da42f6b5b1339b8118a90011a42b67a44f::lp_token::LP_TOKEN',\n      decimals: 9,\n      logo_url: 'https://tke7enjn3akurmshmxw2yr2yo4ru6joi6sxpnbsyk452k36vfdoa.arweave.net/monyNS3YFUiyR2XtrEdYdyNPJcj0rvaGWFc7pW_VKNw',\n      description: '',\n      name: '',\n      symbol: ''\n    }\n  },\n  '0x871d8a227114f375170f149f7e9d45be822dd003eba225e83c05ac80828596bc': {\n    vaults_id: '0xde97452e63505df696440f86f0b805263d8659b77b8c316739106009d514c270',\n    clmm_pool: '0x871d8a227114f375170f149f7e9d45be822dd003eba225e83c05ac80828596bc',\n    lpToken: {\n      coin_type: '0x828b452d2aa239d48e4120c24f4a59f451b8cd8ac76706129f4ac3bd78ac8809::lp_token::LP_TOKEN',\n      decimals: 9,\n      logo_url: 'https://dzuxtnuvuq7xqcurpbk4udj74zm2h5c52ftpaxsmgvxdt3fxtgva.arweave.net/Hml5tpWkP3gKkXhVyg0_5lmj9F3RZvBeTDVuOey3mao',\n      description: '',\n      name: '',\n      symbol: ''\n    }\n  }\n}\n\nexport const staticVaultsList: any = [\n  {\n    poolAddress: '0x871d8a227114f375170f149f7e9d45be822dd003eba225e83c05ac80828596bc',\n    name: 'haSUI - SUI',\n    isReverse: false,\n    tokenA: {\n      name: 'Haedal staked SUI',\n      symbol: 'haSUI',\n      decimals: 9,\n      address: '0xbde4ba4c2e274a60ce15c1cfff9e5c42e41654ac8b6d906a57efa4bd3c29f47d::hasui::HASUI',\n      balance: '9808420.561870547',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/hasui.png',\n      coingecko_id: 'haedal-staked-sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xbde4ba4c2e274a60ce15c1cfff9e5c42e41654ac8b6d906a57efa4bd3c29f47d::hasui::HASUI'\n    },\n    tokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '4906526.459378922',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenA: {\n      name: 'Haedal staked SUI',\n      symbol: 'haSUI',\n      decimals: 9,\n      address: '0xbde4ba4c2e274a60ce15c1cfff9e5c42e41654ac8b6d906a57efa4bd3c29f47d::hasui::HASUI',\n      balance: '9808420.561870547',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/hasui.png',\n      coingecko_id: 'haedal-staked-sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xbde4ba4c2e274a60ce15c1cfff9e5c42e41654ac8b6d906a57efa4bd3c29f47d::hasui::HASUI'\n    },\n    displayTokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '4906526.459378922',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    haveMining: false,\n    miningRewardList: [],\n    miningAprList: [],\n    haveFarming: true,\n    farmsRewarderList: [{ coinType: '0x2::sui::SUI', emissionsEveryDay: '1660' }],\n    farmsApr: '0.0518854671450343098098316019470933000166085972573126523381066642',\n    farmingAprDisplay: '5.18%',\n    feeApr: '0.0024026852043393462354559911502367355412380011356114481601412655',\n    feeAprDisplay: '0.24%',\n    miningAprTotal: '0',\n    feeAndMiningAprDisplay: '0.24%',\n    totalAprDisplay: '5.42%',\n    fee: '0.0001',\n    feeRate: '1',\n    feeDisplay: '0.01%',\n    tvlDisplay: '$34,493,018.28',\n    tvl: '34493018.281195',\n    volume24Display: '$2,280,261.01',\n    fees24Display: '$228.02',\n    isVaults: true,\n    farmsStatedTvl: '26486362.741908405324614107895615170922538233',\n    farmsStatedTvlDisplay: '$26,486,362.74',\n    feeAndFarmsApr: '0.0542881523493736560452875930973300355578465983929241004982479297',\n    feeAndFarmsAprDisplay: '5.42%',\n    farmsEffectiveTickLower: 458,\n    farmsEffectiveTickUpper: 630,\n    displayFarmsEffectMinPrice: '1.04686261985650299343324213325963175512302823358939922365776382',\n    displayFarmsEffectMaxPrice: '1.065023484625683903423611073362171479042941553679249804326112882',\n    farmsPoolAddress: '0x9f5fd63b2a2fd8f698ff6b7b9720dbb2aa14bedb9fc4fd6411f20e5b531a4b89',\n    tickSpacing: '2',\n    index: 171,\n    object: {\n      coin_a: 9808458908401888,\n      coin_b: 4906587775647608,\n      tick_spacing: 2,\n      fee_rate: 100,\n      liquidity: '4518573584291114825',\n      current_sqrt_price: '18904297306631983245',\n      rewarder_manager: {\n        fields: {\n          rewarders: [\n            {\n              fields: {\n                reward_coin: { fields: { name: '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' } },\n                emissions_per_second: '0',\n                growth_global: '1257881454428453'\n              }\n            }\n          ],\n          points_released: '891294616929869525730459648000000',\n          points_growth_global: '21523796564358466',\n          last_updated_time: 1742298390\n        }\n      },\n      is_pause: false,\n      index: 171\n    },\n    isUnstableVault: false,\n    vaultId: '0xde97452e63505df696440f86f0b805263d8659b77b8c316739106009d514c270',\n    vaultsRewards: [\n      'bde4ba4c2e274a60ce15c1cfff9e5c42e41654ac8b6d906a57efa4bd3c29f47d::hasui::HASUI',\n      '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n    ],\n    category: 'cetus',\n    vaultsTvl: '--',\n    vaultsTvlDisplay: '--',\n    vaultsApy: '--',\n    vaultsApyDisplay: '--',\n    vaultsTotalApy: '--',\n    vaultsTotalApyDisplay: '--',\n    vaultsLstApy: '--',\n    vaultsLstApyDisplay: '--',\n    vaultsApr: '--',\n    vaultsAprDisplay: '--',\n    vaultsId: '0xde97452e63505df696440f86f0b805263d8659b77b8c316739106009d514c270',\n    clmmPoolAddress: '0x871d8a227114f375170f149f7e9d45be822dd003eba225e83c05ac80828596bc',\n    amountPerLpA: '0',\n    amountPerLpB: '0',\n    hardCapUSD: '0',\n    depositRatioDisplay: '--',\n    depositRatio: null\n  },\n  {\n    poolAddress: '0xa528b26eae41bcfca488a9feaa3dca614b2a1d9b9b5c78c256918ced051d4c50',\n    name: 'afSUI - SUI',\n    isReverse: false,\n    tokenA: {\n      name: 'Aftermath Staked SUI',\n      symbol: 'afSUI',\n      decimals: 9,\n      address: '0xf325ce1300e8dac124071d3152c5c5ee6174914f8bc2161e88329cf579246efc::afsui::AFSUI',\n      balance: '658417.270250603',\n      logo_url: 'https://aftermath.finance/coins/afsui.svg',\n      coingecko_id: '',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xf325ce1300e8dac124071d3152c5c5ee6174914f8bc2161e88329cf579246efc::afsui::AFSUI'\n    },\n    tokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '728051.794256833',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenA: {\n      name: 'Aftermath Staked SUI',\n      symbol: 'afSUI',\n      decimals: 9,\n      address: '0xf325ce1300e8dac124071d3152c5c5ee6174914f8bc2161e88329cf579246efc::afsui::AFSUI',\n      balance: '658417.270250603',\n      logo_url: 'https://aftermath.finance/coins/afsui.svg',\n      coingecko_id: '',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xf325ce1300e8dac124071d3152c5c5ee6174914f8bc2161e88329cf579246efc::afsui::AFSUI'\n    },\n    displayTokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '728051.794256833',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    haveMining: false,\n    miningRewardList: [],\n    miningAprList: [],\n    haveFarming: true,\n    farmsRewarderList: [{ coinType: '0x2::sui::SUI', emissionsEveryDay: '179' }],\n    farmsApr: '0.0464023636393077740203769764174118048604573922372862799918758555',\n    farmingAprDisplay: '4.64%',\n    feeApr: '0.0033899366954780440962433422983686951853302867916998498680873725',\n    feeAprDisplay: '0.33%',\n    miningAprTotal: '0',\n    feeAndMiningAprDisplay: '0.33%',\n    totalAprDisplay: '4.97%',\n    fee: '0.0001',\n    feeRate: '1',\n    feeDisplay: '0.01%',\n    tvlDisplay: '$3,208,847.14',\n    tvl: '3208847.148567',\n    volume24Display: '$299,303.7',\n    fees24Display: '$29.93',\n    isVaults: true,\n    farmsStatedTvl: '3193543.9222334375613019913559132207271233416',\n    farmsStatedTvlDisplay: '$3,193,543.92',\n    feeAndFarmsApr: '0.049792300334785818116620318715780500045787679028986129859963228',\n    feeAndFarmsAprDisplay: '4.97%',\n    farmsEffectiveTickLower: 246,\n    farmsEffectiveTickUpper: 630,\n    displayFarmsEffectMinPrice: '1.024903815942060126071216020214630750602010709809178108739814341',\n    displayFarmsEffectMaxPrice: '1.065023484625683903423611073362171479042941553679249804326112882',\n    farmsPoolAddress: '0xa67a2c2ea1bfad784e44eaf079fbf4523f549dcbe2e1c838989aef9383e372da',\n    tickSpacing: '2',\n    index: 177,\n    object: {\n      coin_a: 658460129348399,\n      coin_b: 728098232825595,\n      tick_spacing: 2,\n      fee_rate: 100,\n      liquidity: '118870647915638752',\n      current_sqrt_price: '18838643734050246682',\n      rewarder_manager: {\n        fields: {\n          rewarders: [\n            {\n              fields: {\n                reward_coin: { fields: { name: '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' } },\n                emissions_per_second: '0',\n                growth_global: '116212414799563023'\n              }\n            }\n          ],\n          points_released: '807216091435844318162583552000000',\n          points_growth_global: '16349896683785349254',\n          last_updated_time: 1742298232\n        }\n      },\n      is_pause: false,\n      index: 177\n    },\n    isUnstableVault: false,\n    vaultId: '0xff4cc0af0ad9d50d4a3264dfaafd534437d8b66c8ebe9f92b4c39d898d6870a3',\n    vaultsRewards: [\n      'f325ce1300e8dac124071d3152c5c5ee6174914f8bc2161e88329cf579246efc::afsui::AFSUI',\n      '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n    ],\n    category: 'cetus',\n    vaultsTvl: '--',\n    vaultsTvlDisplay: '--',\n    vaultsApy: '--',\n    vaultsApyDisplay: '--',\n    vaultsTotalApy: '--',\n    vaultsTotalApyDisplay: '--',\n    vaultsLstApy: '--',\n    vaultsLstApyDisplay: '--',\n    vaultsApr: '--',\n    vaultsAprDisplay: '--',\n    vaultsId: '0xff4cc0af0ad9d50d4a3264dfaafd534437d8b66c8ebe9f92b4c39d898d6870a3',\n    clmmPoolAddress: '0xa528b26eae41bcfca488a9feaa3dca614b2a1d9b9b5c78c256918ced051d4c50',\n    amountPerLpA: '0',\n    amountPerLpB: '0',\n    hardCapUSD: '0',\n    depositRatioDisplay: '--',\n    depositRatio: null\n  },\n  {\n    poolAddress: '0x6c545e78638c8c1db7a48b282bb8ca79da107993fcb185f75cedc1f5adb2f535',\n    name: 'vSUI - SUI',\n    isReverse: false,\n    tokenA: {\n      name: 'Volo Staked SUI',\n      symbol: 'vSUI',\n      decimals: 9,\n      address: '0x549e8b69270defbfafd4f94e17ec44cdbdd99820b33bda2278dea3b9a32d3f55::cert::CERT',\n      balance: '486628.267188103',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/vsui.png',\n      coingecko_id: 'volo-staked-sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x549e8b69270defbfafd4f94e17ec44cdbdd99820b33bda2278dea3b9a32d3f55::cert::CERT'\n    },\n    tokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '600110.710175814',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenA: {\n      name: 'Volo Staked SUI',\n      symbol: 'vSUI',\n      decimals: 9,\n      address: '0x549e8b69270defbfafd4f94e17ec44cdbdd99820b33bda2278dea3b9a32d3f55::cert::CERT',\n      balance: '486628.267188103',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/vsui.png',\n      coingecko_id: 'volo-staked-sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x549e8b69270defbfafd4f94e17ec44cdbdd99820b33bda2278dea3b9a32d3f55::cert::CERT'\n    },\n    displayTokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '600110.710175814',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    haveMining: false,\n    miningRewardList: [],\n    miningAprList: [],\n    haveFarming: true,\n    farmsRewarderList: [{ coinType: '0x2::sui::SUI', emissionsEveryDay: '185' }],\n    farmsApr: '0.0620621744498103516020273711367605077176330280935694176694522726',\n    farmingAprDisplay: '6.2%',\n    feeApr: '0.002839603128562170485549675399055637257215998153216582864163728',\n    feeAprDisplay: '0.28%',\n    miningAprTotal: '0',\n    feeAndMiningAprDisplay: '0.28%',\n    totalAprDisplay: '6.49%',\n    fee: '0.0001',\n    feeRate: '1',\n    feeDisplay: '0.01%',\n    tvlDisplay: '$2,510,926.42',\n    tvl: '2510926.429555',\n    volume24Display: '$196,180.07',\n    fees24Display: '$19.61',\n    isVaults: true,\n    farmsStatedTvl: '2467770.1483943725745405060221935259780125246',\n    farmsStatedTvlDisplay: '$2,467,770.14',\n    feeAndFarmsApr: '0.0649017775783725220875770465358161449748490262467860005336160006',\n    feeAndFarmsAprDisplay: '6.49%',\n    farmsEffectiveTickLower: 198,\n    farmsEffectiveTickUpper: 630,\n    displayFarmsEffectMinPrice: '1.019996310431884656665875778090597179747899267937297195270940555',\n    displayFarmsEffectMaxPrice: '1.065023484625683903423611073362171479042941553679249804326112882',\n    farmsPoolAddress: '0xf47709fd3cfb41252cda363f32dc29f34a6eaaf3729927753e75d73abc5f5181',\n    tickSpacing: '2',\n    index: 175,\n    object: {\n      coin_a: 486658132530526,\n      coin_b: 600167780501069,\n      tick_spacing: 2,\n      fee_rate: 100,\n      liquidity: '2321413517446008068',\n      current_sqrt_price: '18827542383370490467',\n      rewarder_manager: {\n        fields: {\n          rewarders: [\n            {\n              fields: {\n                reward_coin: { fields: { name: '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' } },\n                emissions_per_second: '0',\n                growth_global: '1622087936923460'\n              }\n            }\n          ],\n          points_released: '798552762549067364341645312000000',\n          points_growth_global: '31233269161567778',\n          last_updated_time: 1742298387\n        }\n      },\n      is_pause: false,\n      index: 175\n    },\n    isUnstableVault: false,\n    vaultId: '0x5732b81e659bd2db47a5b55755743dde15be99490a39717abc80d62ec812bcb6',\n    vaultsRewards: [\n      '549e8b69270defbfafd4f94e17ec44cdbdd99820b33bda2278dea3b9a32d3f55::cert::CERT',\n      '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n    ],\n    category: 'cetus',\n    vaultsTvl: '--',\n    vaultsTvlDisplay: '--',\n    vaultsApy: '--',\n    vaultsApyDisplay: '--',\n    vaultsTotalApy: '--',\n    vaultsTotalApyDisplay: '--',\n    vaultsLstApy: '--',\n    vaultsLstApyDisplay: '--',\n    vaultsApr: '--',\n    vaultsAprDisplay: '--',\n    vaultsId: '0x5732b81e659bd2db47a5b55755743dde15be99490a39717abc80d62ec812bcb6',\n    clmmPoolAddress: '0x6c545e78638c8c1db7a48b282bb8ca79da107993fcb185f75cedc1f5adb2f535',\n    amountPerLpA: '0',\n    amountPerLpB: '0',\n    hardCapUSD: '0',\n    depositRatioDisplay: '--',\n    depositRatio: null\n  },\n  {\n    poolAddress: '0xb8d7d9e66a60c239e7a60110efcf8de6c705580ed924d0dde141f4a0e2c90105',\n    name: 'SUI - USDC',\n    isReverse: true,\n    tokenA: {\n      name: 'Native USDC',\n      symbol: 'USDC',\n      decimals: 6,\n      address: '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC',\n      balance: '6994556.776019',\n      logo_url: 'https://gateway.irys.xyz/EGpc2cG886CrWwLMneF2RyVpZ7D33a6znz6XE8n8nU7h',\n      coingecko_id: 'usd-coin',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC'\n    },\n    tokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '6470393.713602128',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenA: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '6470393.713602128',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenB: {\n      name: 'Native USDC',\n      symbol: 'USDC',\n      decimals: 6,\n      address: '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC',\n      balance: '6994556.776019',\n      logo_url: 'https://gateway.irys.xyz/EGpc2cG886CrWwLMneF2RyVpZ7D33a6znz6XE8n8nU7h',\n      coingecko_id: 'usd-coin',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC'\n    },\n    haveMining: true,\n    miningRewardList: [\n      { coinType: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS', emissionsEveryDay: '30000000000000' },\n      { coinType: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI', emissionsEveryDay: '2936000000000' }\n    ],\n    miningAprList: [\n      {\n        coinType: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS',\n        apr: '0.0502302597554847335728918598923420349382548448020840644503019149',\n        aprDisplay: '5.02%'\n      },\n      {\n        coinType: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n        apr: '0.1121697952437793563166939156096767251552891223880879922231831828',\n        aprDisplay: '11.21%'\n      }\n    ],\n    haveFarming: false,\n    farmsRewarderList: [],\n    farmsApr: '0',\n    farmingAprDisplay: '',\n    feeApr: '1.039543323716705126378191733239089190848621545971870975717999998',\n    feeAprDisplay: '103.95%',\n    miningAprTotal: '0.1624000549992640898895857755020187600935439671901720566734850977',\n    feeAndMiningAprDisplay: '120.19%',\n    totalAprDisplay: '120.19%',\n    fee: '0.0025',\n    feeRate: '25',\n    feeDisplay: '0.25%',\n    tvlDisplay: '$21,669,273.38',\n    tvl: '21669273.389889',\n    volume24Display: '$25,196,763.83',\n    fees24Display: '$62,991.9',\n    isVaults: false,\n    farmsStatedTvl: '',\n    farmsStatedTvlDisplay: '',\n    feeAndFarmsApr: '1.201943378715969216267777508741107950942165513162043032391485095',\n    feeAndFarmsAprDisplay: '103.95%',\n    farmsEffectiveTickLower: 0,\n    farmsEffectiveTickUpper: 0,\n    displayFarmsEffectMinPrice: '',\n    displayFarmsEffectMaxPrice: '',\n    farmsPoolAddress: '',\n    tickSpacing: '60',\n    index: 3137,\n    object: {\n      coin_a: 7019812001233,\n      coin_b: 6481948428081738,\n      tick_spacing: 60,\n      fee_rate: 2500,\n      liquidity: '7919792326420544',\n      current_sqrt_price: '387301868084602258960',\n      rewarder_manager: {\n        fields: {\n          rewarders: [\n            {\n              fields: {\n                reward_coin: { fields: { name: '06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS' } },\n                emissions_per_second: '6405119470038038755555555556',\n                growth_global: '26676127812826120527'\n              }\n            },\n            {\n              fields: {\n                reward_coin: { fields: { name: '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' } },\n                emissions_per_second: '626847692134389392877037038',\n                growth_global: '5045177556068499952'\n              }\n            }\n          ],\n          points_released: '256416604813358187415601152000000',\n          points_growth_global: '270015129121818228',\n          last_updated_time: 1742298325\n        }\n      },\n      is_pause: false,\n      index: 3137\n    },\n    isUnstableVault: true,\n    vaultId: '0x41a4ab1e82f90f5965bbcd828b8ffa13bab7560bd2e352ab067e343db552f527',\n    vaultsRewards: [\n      '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      'dba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC',\n      '06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS'\n    ],\n    category: 'haedal',\n    vaultsTvl: '--',\n    vaultsTvlDisplay: '--',\n    vaultsApy: '--',\n    vaultsApyDisplay: '--',\n    vaultsTotalApy: '--',\n    vaultsTotalApyDisplay: '--',\n    vaultsLstApy: '--',\n    vaultsLstApyDisplay: '--',\n    vaultsApr: '--',\n    vaultsAprDisplay: '--',\n    vaultsId: '0x41a4ab1e82f90f5965bbcd828b8ffa13bab7560bd2e352ab067e343db552f527',\n    clmmPoolAddress: '0xb8d7d9e66a60c239e7a60110efcf8de6c705580ed924d0dde141f4a0e2c90105',\n    amountPerLpA: '0',\n    amountPerLpB: '0',\n    hardCapUSD: '0',\n    depositRatioDisplay: '--',\n    depositRatio: null\n  },\n  {\n    poolAddress: '0xe01243f37f712ef87e556afb9b1d03d0fae13f96d324ec912daffc339dfdcbd2',\n    name: 'DEEP - SUI',\n    isReverse: false,\n    tokenA: {\n      name: 'DeepBook Token',\n      symbol: 'DEEP',\n      decimals: 6,\n      address: '0xdeeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP',\n      balance: '38148087.736923',\n      logo_url: 'https://gateway.irys.xyz/5LqWyWG5EU9wPknvW5rY6qSQPtnNAfP27X1PnAiesyFG',\n      coingecko_id: 'deep',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xdeeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP'\n    },\n    tokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '768472.179325603',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenA: {\n      name: 'DeepBook Token',\n      symbol: 'DEEP',\n      decimals: 6,\n      address: '0xdeeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP',\n      balance: '38148087.736923',\n      logo_url: 'https://gateway.irys.xyz/5LqWyWG5EU9wPknvW5rY6qSQPtnNAfP27X1PnAiesyFG',\n      coingecko_id: 'deep',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0xdeeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP'\n    },\n    displayTokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '768472.179325603',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    haveMining: true,\n    miningRewardList: [\n      { coinType: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI', emissionsEveryDay: '1165000000000' },\n      { coinType: '0xdeeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP', emissionsEveryDay: '127192000000' }\n    ],\n    miningAprList: [\n      {\n        coinType: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n        apr: '0.1993884036768800515130263443019041050862350874457143530980956206',\n        aprDisplay: '19.93%'\n      },\n      {\n        coinType: '0xdeeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP',\n        apr: '0.7784493692315403527120642020519074423562040785734131037470931738',\n        aprDisplay: '77.84%'\n      }\n    ],\n    haveFarming: false,\n    farmsRewarderList: [],\n    farmsApr: '0',\n    farmingAprDisplay: '',\n    feeApr: '0.8393072486102057420293966869313929233028266682099922267918123755',\n    feeAprDisplay: '83.93%',\n    miningAprTotal: '0.9778377729084204042250905463538115474424391660191274568451887944',\n    feeAndMiningAprDisplay: '181.71%',\n    totalAprDisplay: '181.71%',\n    fee: '0.0025',\n    feeRate: '25',\n    feeDisplay: '0.25%',\n    tvlDisplay: '$4,837,157.78',\n    tvl: '4837157.781696',\n    volume24Display: '$4,467,927.46',\n    fees24Display: '$11,169.81',\n    isVaults: false,\n    farmsStatedTvl: '',\n    farmsStatedTvlDisplay: '',\n    feeAndFarmsApr: '1.817145021518626146254487233285204470745265834229119683637001169',\n    feeAndFarmsAprDisplay: '83.93%',\n    farmsEffectiveTickLower: 0,\n    farmsEffectiveTickUpper: 0,\n    displayFarmsEffectMinPrice: '',\n    displayFarmsEffectMaxPrice: '',\n    farmsPoolAddress: '',\n    tickSpacing: '60',\n    index: 5056,\n    object: {\n      coin_a: 38251906126071,\n      coin_b: 772407575970606,\n      tick_spacing: 60,\n      fee_rate: 2500,\n      liquidity: '8295811276552121',\n      current_sqrt_price: '110310797447865996218',\n      rewarder_manager: {\n        fields: {\n          rewarders: [\n            {\n              fields: {\n                reward_coin: { fields: { name: '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' } },\n                emissions_per_second: '248732139419810505007407408',\n                growth_global: '1792995150775002027'\n              }\n            },\n            {\n              fields: {\n                reward_coin: { fields: { name: 'deeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP' } },\n                emissions_per_second: '27155998521102607513220741',\n                growth_global: '449363617848666723'\n              }\n            }\n          ],\n          points_released: '247161190782047378116444160000000',\n          points_growth_global: '95762577535111090',\n          last_updated_time: 1742298343\n        }\n      },\n      is_pause: false,\n      index: 5056\n    },\n    isUnstableVault: true,\n    vaultId: '0xed754b6a3a6c7549c3d734cb7b464bccf9c805814b9e47b0cb99f43b4efcb4a6',\n    vaultsRewards: [\n      'deeb7a4662eec9f2f3def03fb937a663dddaa2e215b8078a284d026b7946c270::deep::DEEP',\n      '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n    ],\n    category: 'haedal',\n    vaultsTvl: '--',\n    vaultsTvlDisplay: '--',\n    vaultsApy: '--',\n    vaultsApyDisplay: '--',\n    vaultsTotalApy: '--',\n    vaultsTotalApyDisplay: '--',\n    vaultsLstApy: '-',\n    vaultsLstApyDisplay: '--',\n    vaultsApr: '--',\n    vaultsAprDisplay: '--',\n    vaultsId: '0xed754b6a3a6c7549c3d734cb7b464bccf9c805814b9e47b0cb99f43b4efcb4a6',\n    clmmPoolAddress: '0xe01243f37f712ef87e556afb9b1d03d0fae13f96d324ec912daffc339dfdcbd2',\n    amountPerLpA: '0',\n    amountPerLpB: '0',\n    hardCapUSD: '0',\n    depositRatioDisplay: '--',\n    depositRatio: null\n  },\n  {\n    poolAddress: '0x2e041f3fd93646dcc877f783c1f2b7fa62d30271bdef1f21ef002cebf857bded',\n    name: 'CETUS - SUI',\n    isReverse: false,\n    tokenA: {\n      name: 'CETUS Token',\n      symbol: 'CETUS',\n      decimals: 9,\n      address: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS',\n      balance: '18358179.80898744',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/cetus.png',\n      coingecko_id: 'cetus-protocol',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS'\n    },\n    tokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '690115.203159796',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    displayTokenA: {\n      name: 'CETUS Token',\n      symbol: 'CETUS',\n      decimals: 9,\n      address: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS',\n      balance: '18358179.80898744',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/cetus.png',\n      coingecko_id: 'cetus-protocol',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS'\n    },\n    displayTokenB: {\n      name: 'SUI Token',\n      symbol: 'SUI',\n      decimals: 9,\n      address: '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI',\n      balance: '690115.203159796',\n      logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n      coingecko_id: 'sui',\n      project_url: '',\n      labels: [],\n      is_verified: true,\n      coin_type: '0x2::sui::SUI'\n    },\n    haveMining: true,\n    miningRewardList: [\n      { coinType: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS', emissionsEveryDay: '30000000000000' }\n    ],\n    miningAprList: [\n      {\n        coinType: '0x06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS',\n        apr: '0.3210654055390594303577545548609292263307138720994575650218205418',\n        aprDisplay: '32.1%'\n      }\n    ],\n    haveFarming: false,\n    farmsRewarderList: [],\n    farmsApr: '0',\n    farmingAprDisplay: '',\n    feeApr: '0.590449737261882520842413517032433640716917602858166433470039506',\n    feeAprDisplay: '59.04%',\n    miningAprTotal: '0.3210654055390594303577545548609292263307138720994575650218205418',\n    feeAndMiningAprDisplay: '91.15%',\n    totalAprDisplay: '91.15%',\n    fee: '0.0025',\n    feeRate: '25',\n    feeDisplay: '0.25%',\n    tvlDisplay: '$3,390,129.27',\n    tvl: '3390129.276803',\n    volume24Display: '$2,082,915.62',\n    fees24Display: '$5,207.28',\n    isVaults: false,\n    farmsStatedTvl: '',\n    farmsStatedTvlDisplay: '',\n    feeAndFarmsApr: '0.9115151428009419512001680718933628670476314749576239984918600478',\n    feeAndFarmsAprDisplay: '59.04%',\n    farmsEffectiveTickLower: 0,\n    farmsEffectiveTickUpper: 0,\n    displayFarmsEffectMinPrice: '',\n    displayFarmsEffectMaxPrice: '',\n    farmsPoolAddress: '',\n    tickSpacing: '60',\n    index: 17,\n    object: {\n      coin_a: 18373571333894680,\n      coin_b: 690940315126143,\n      tick_spacing: 60,\n      fee_rate: 2500,\n      liquidity: '263293665799460652',\n      current_sqrt_price: '3861763937780779107',\n      rewarder_manager: {\n        fields: {\n          rewarders: [\n            {\n              fields: {\n                reward_coin: { fields: { name: '06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS' } },\n                emissions_per_second: '6405119470038038755555555556',\n                growth_global: '15090167137337694524'\n              }\n            },\n            {\n              fields: {\n                reward_coin: { fields: { name: '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' } },\n                emissions_per_second: '0',\n                growth_global: '111871157481137955'\n              }\n            }\n          ],\n          points_released: '1080698092786440464840523776000000',\n          points_growth_global: '59477561914930359',\n          last_updated_time: 1742298373\n        }\n      },\n      is_pause: false,\n      index: 17\n    },\n    isUnstableVault: true,\n    vaultId: '0xbbd2d4850e4f238d39c3aa24957d2dfbb5787fa43d6c7de306bf15abe27f29f2',\n    vaultsRewards: [\n      '06864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS',\n      '0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n    ],\n    category: 'haedal',\n    vaultsTvl: '--',\n    vaultsTvlDisplay: '--',\n    vaultsApy: '--',\n    vaultsApyDisplay: '--',\n    vaultsTotalApy: '--',\n    vaultsTotalApyDisplay: '--',\n    vaultsLstApy: '--',\n    vaultsLstApyDisplay: '--',\n    vaultsApr: '--',\n    vaultsAprDisplay: '--',\n    vaultsId: '0xbbd2d4850e4f238d39c3aa24957d2dfbb5787fa43d6c7de306bf15abe27f29f2',\n    clmmPoolAddress: '0x2e041f3fd93646dcc877f783c1f2b7fa62d30271bdef1f21ef002cebf857bded',\n    amountPerLpA: '0',\n    amountPerLpB: '0',\n    hardCapUSD: '0',\n    depositRatioDisplay: '--',\n    depositRatio: null\n  }\n]\n","import useVaultsStore from '@/store/vaults/useVaultsList'\nimport { QueryVaultListOptions, VaultApiInfo, VaultBaseInfo, VaultStatItem } from '@/types'\nimport { aprProcessing } from '@/utils/api-data-utils'\nimport { formatVaultApiInfo } from '@/utils/vaults'\nimport { useFetch } from '@cetus/hooks'\nimport { VAULT_FILTER } from '@cetus/types'\nimport { formatNumber, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { d, fixCoinType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { staticVaultsList } from '../../../src/constant/vaults'\nimport useFavoritePool from '../pool/useFavoritePool'\n\nexport default function useGetVaultList() {\n  const { fetchByApi } = useFetch()\n  const { getFavoritePoolList } = useFavoritePool()\n  const { setVaultStatsObj, setVaultBaseList, vaultBaseList, vaultStatsObj, setVaultStatsLoading, setVaultBaseListLoading } = useVaultsStore()\n\n  // 获取vaults基础信息列表\n  const getVaultBaseList = async (showLoading: boolean = true, pools: string[], statsObj: any): Promise<VaultBaseInfo[]> => {\n    try {\n      if (showLoading) {\n        setVaultBaseListLoading(true)\n      }\n\n      const res = await getFavoritePoolList({\n        is_vaults: false,\n        display_all_pools: false,\n        has_mining: true,\n        has_farming: true,\n        no_incentives: true,\n        order_by: '-vol',\n        limit: 100,\n        offset: 0,\n        pools\n      })\n\n      const list: VaultBaseInfo[] = res?.list.map((item: any) => {\n        const coinAB = [fixCoinType(item?.tokenA?.coin_type), fixCoinType(item?.tokenB?.coin_type)]\n        const disPlayCoinAB = item.isReverse ? coinAB.reverse() : coinAB\n        const farmingRewards = item?.miningRewardList?.map((fItem: any) => fixCoinType(fItem?.coinType))\n        const miningRewards = item?.miningRewardList?.map((mItem: any) => fixCoinType(mItem?.coinType))\n        const vaultsRewards = Array.from(new Set([...disPlayCoinAB, ...farmingRewards, ...miningRewards]))\n        return {\n          ...item,\n          vaultsRewards, // vaults奖励，因为farming和mining奖励拿不到详细信息，为保持统一只有coinType\n          category: statsObj[item.poolAddress]?.category // vault 来源 haedal cetus\n        }\n      })\n\n      console.log('🚀 ~ file: useGetVaultList.ts:42 ~ getVaultBaseList ~ list:', list)\n\n      if (list.length > 0) {\n        setVaultBaseList(list)\n      }\n\n      return list\n    } catch (error) {\n      console.log('getVaultBaseList Error:', error)\n    } finally {\n      setVaultBaseListLoading(false)\n    }\n    return []\n  }\n\n  // 获取vaults统计信息(目前不支持单条查询, 详情可直接调用，然后在store的vaultsStatsObj中用key查询展示)\n  const getVaultsStats = async () => {\n    try {\n      setVaultStatsLoading(true)\n      const res = await fetchByApi('/v3/sui/vaults/pools', 'GET')\n      const vaultsStatsObj: Record<string, VaultStatItem> = {}\n      if (res?.list) {\n        res?.list?.forEach((item: any) => {\n          if (item.display || !VAULT_FILTER) {\n            const clmmPoolAddress = item?.clmm_pool\n            const vaultsId = item?.id\n            // const vaultsTotalApy = d(item?.apy).div(100).toString()\n            const vaultsTotalApy = item.category == 'cetus' ? d(item?.apy).add(d(item.lst_apy)).toString() : d(item.apr).add(d(item.apy)).toString()\n            const vaultsTotalApyDisplay = aprProcessing(vaultsTotalApy, true, true)\n\n            const vaultsApy = item?.apy\n            const vaultsApyDisplay = aprProcessing(vaultsApy, true)\n\n            const vaultsLstApy = item?.lst_apy\n            const vaultsLstApyDisplay = aprProcessing(vaultsLstApy, true)\n\n            const vaultsTvl = item?.tvl\n            const vaultsTvlDisplay = symbolDataDisplayProcessing(vaultsTvl, '$')\n\n            const vaultsApr = item?.apr\n            const vaultsAprDisplay = aprProcessing(vaultsApr, true)\n\n            const hardCapUSD = item?.hard_cap_usd\n            // d(vaultsTvl).div(d(hardCapUSD)).mul(100).gt(100) ? '100' :\n            const depositRatio = d(vaultsTvl).div(d(hardCapUSD)).mul(100)\n            const depositRatioDisplay = formatNumber(depositRatio, 2)\n            //  `${d(depositRatio).gt(100) ? '100' : formatNumber(depositRatio, 2)}%`\n\n            vaultsStatsObj[clmmPoolAddress] = {\n              vaultsApy,\n              vaultsApyDisplay,\n              vaultsTotalApy,\n              vaultsTotalApyDisplay,\n              vaultsLstApy,\n              vaultsLstApyDisplay,\n              vaultsApr,\n              vaultsAprDisplay,\n              clmmPoolAddress,\n              vaultsId,\n              vaultsTvl,\n              vaultsTvlDisplay,\n              amountPerLpA: item?.reward_per_lp?.amount_a_per_lp,\n              amountPerLpB: item?.reward_per_lp?.amount_b_per_lp,\n              category: item.category,\n              hardCapUSD,\n              depositRatio,\n              depositRatioDisplay,\n              lpTokenType: item?.lp_type\n            }\n          }\n        })\n        setVaultStatsObj(vaultsStatsObj)\n\n        return {\n          vaultsStatsObj,\n          vaultsList: res?.list.filter((ele: any) => {\n            return ele.display || !VAULT_FILTER\n          })\n        }\n      }\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ useGetVaultList.ts:129 ~ getVaultsStats ~ error:', error)\n      return vaultStatsObj\n    } finally {\n      setVaultStatsLoading(false)\n    }\n\n    return {}\n  }\n\n  // 获取vaults列表\n  const getVaultList = async (options: QueryVaultListOptions): Promise<VaultApiInfo[]> => {\n    try {\n      const { vaultsStatsObj: statsObj, vaultsList } = await getVaultsStats()\n      const vaultsPoolList = vaultsList.map((vault: VaultStatItem) => vault.clmm_pool)\n      // const baseList = vaultBaseList.length > 0 ? vaultBaseList : await getVaultBaseList(true, vaultsPoolList, statsObj)\n      const baseList = await getVaultBaseList(true, vaultsPoolList, statsObj)\n\n      return sortVaultApiInfoList(options, baseList, statsObj)\n    } catch (error) {\n      console.error('getVaultList Error:', error)\n      return getVaultListFromCache(options)\n    }\n  }\n\n  const getVaultListFromCache = (options: QueryVaultListOptions): VaultApiInfo[] => {\n    try {\n      const baseList = vaultBaseList\n      const statsObj = vaultStatsObj\n      if (baseList && baseList.length > 0) {\n        return sortVaultApiInfoList(options, baseList, statsObj)\n      } else {\n        throw Error('Cache is null')\n      }\n    } catch (error) {\n      console.error('getVaultListFromCache Error:', error)\n      return staticVaultsList\n    }\n  }\n\n  const sortVaultApiInfoList = (options: QueryVaultListOptions, baseList: any[], statsObj: any) => {\n    const { sortRule, sortType } = options\n    const list = baseList?.map((item: any) => {\n      const statsItem = statsObj?.[item.poolAddress]\n      return formatVaultApiInfo(item, statsItem)\n    })\n\n    const result = list?.sort((a: any, b: any) => {\n      if (sortType === 'apr') {\n        return sortRule === 'desc'\n          ? b.vaultsTotalApy?.replace('%', '') - a.vaultsTotalApy?.replace('%', '')\n          : a.vaultsTotalApy?.replace('%', '') - b.vaultsTotalApy?.replace('%', '')\n      }\n\n      return sortRule === 'desc' ? b.vaultsTvl - a.vaultsTvl : a.vaultsTvl - b.vaultsTvl\n    })\n    console.log('🚀🚀🚀 ~ useGetVaultList.ts:187 ~ sortVaultApiInfoList ~ result:', result)\n    return result\n  }\n\n  return {\n    getVaultBaseList,\n    getVaultsStats,\n    getVaultListFromCache,\n    getVaultList\n  }\n}\n","import useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport { VaultApiInfo } from '@/types/vaults'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { useEffect, useState } from 'react'\nimport useGetVaultList from './useGetVaultList'\n\nexport default function useGetApiStableVaultInfo(vaultsId?: string) {\n  const { getVaultList, getVaultListFromCache } = useGetVaultList()\n\n  const [apiVaultInfo, setApiVaultInfo] = useState<VaultApiInfo | undefined>(undefined)\n  const [vaultInfoLoading, setVaultInfoLoading] = useState<boolean>(false)\n  const { setFromCoin, setToCoin } = useSwapWidgetStore()\n\n  // 获取单个vault api信息，报错基础信息和统计信息\n  const getApiVaultInfo = async (vaultsId: string, refresh: boolean) => {\n    if (apiVaultInfo === undefined || refresh) {\n      setVaultInfoLoading(true)\n    }\n\n    const res = await getVaultList({\n      sortRule: 'desc',\n      sortType: 'apr'\n    })\n\n    const vaultApiInfo = res?.filter((item: any) => item.vaultsId === vaultsId)?.[0] || null\n\n    setVaultInfoLoading(true)\n\n    if (vaultApiInfo) {\n      setApiVaultInfo(vaultApiInfo)\n    }\n    return vaultApiInfo\n  }\n\n  const getApiVaultInfoFromCache = (vaultsId: string) => {\n    const res = getVaultListFromCache({\n      sortRule: 'desc',\n      sortType: 'apr'\n    })\n    const vaultApiInfo = res?.filter((item: any) => item.vaultsId === vaultsId)?.[0] || null\n    return vaultApiInfo\n  }\n\n  useEffect(() => {\n    if (vaultsId) {\n      // 优先读取缓存\n      const info = getApiVaultInfoFromCache(vaultsId)\n      if (info) {\n        setApiVaultInfo(info)\n      }\n      // 异步加载\n      getApiVaultInfo(vaultsId, false)\n    }\n  }, [vaultsId])\n\n  useEffect(() => {\n    if (apiVaultInfo) {\n      setFromCoin(apiVaultInfo?.displayTokenA)\n      setToCoin(apiVaultInfo?.displayTokenB)\n    }\n    return () => {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [apiVaultInfo?.vaultsId])\n\n  return {\n    vaultInfoLoading,\n    apiVaultInfo,\n    getApiVaultInfo\n  }\n}\n","import { create, StateCreator } from 'zustand'\n\ninterface VaultsAddState {\n  amountInputA: string\n  amountInputB: string\n  setAmountInputA: (amountInputA: string) => void\n  setAmountInputB: (amountInputB: string) => void\n  pythPriceMap: Record<string, any>\n  setPythPriceMap: (priceMap: Record<string, any>) => void\n}\n\nconst store: StateCreator<VaultsAddState> = (set, get) => ({\n  amountInputA: '',\n  amountInputB: '',\n  setAmountInputA: (value: string) => set({ amountInputA: value }),\n  setAmountInputB: (value: string) => set({ amountInputB: value }),\n  pythPriceMap: {},\n  setPythPriceMap: (priceMap: Record<string, any>) => set(() => ({ pythPriceMap: priceMap }))\n})\n\nconst useVaultsAddStore = create(store)\nexport default useVaultsAddStore\n","import { Pool as ClmmPool } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Pool as VaultPool } from 'haedal-vault-sdk'\nimport { StateCreator, create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface VaultsState {\n  contractVaultObjLoading: boolean\n  setContractVaultObjLoading: (isLoading: boolean) => void\n  contractVaultObj: Record<string, VaultPool>\n  setContractVaultObj: (vault: VaultPool) => void\n\n  contractClmmPoolObjLoading: boolean\n  setContractClmmPoolObjLoading: (isLoading: boolean) => void\n  contractClmmPoolObj: Record<string, ClmmPool>\n  setContractClmmPoolObj: (pool: ClmmPool) => void\n\n  holdTotalValue: Record<string, string>\n  setHoldTotalValue: (vaultId: string, value: string) => void\n\n  detailRefreshCount: number\n  setDetailRefreshCount: (count: number) => void\n\n  lpTokenInfo: any\n  setLpTokenInfo: (data: any) => void\n}\n\nconst store: StateCreator<VaultsState> = (set, get) => ({\n  detailRefreshCount: 0,\n  contractClmmPoolObjLoading: false,\n  contractVaultObjLoading: false,\n  holdVaultsObj: {},\n  holdTotalValue: {},\n  contractClmmPoolObj: {},\n  contractVaultObj: {},\n  setContractVaultObj: (vault: VaultPool) => {\n    const contractVaultObj = get().contractVaultObj\n    contractVaultObj[vault.id] = vault\n    set(() => ({\n      contractVaultObj: { ...contractVaultObj }\n    }))\n  },\n  setContractVaultObjLoading: (isLoading: boolean) => {\n    set(() => ({\n      contractVaultObjLoading: isLoading\n    }))\n  },\n  setContractClmmPoolObjLoading: (isLoading: boolean) => {\n    set(() => ({\n      contractClmmPoolObjLoading: isLoading\n    }))\n  },\n  setContractClmmPoolObj: (pool: ClmmPool) => {\n    const contractClmmPoolObj = get().contractClmmPoolObj\n    contractClmmPoolObj[pool.poolAddress] = pool\n    set(() => ({\n      contractClmmPoolObj: { ...contractClmmPoolObj }\n    }))\n  },\n  setHoldTotalValue: (vaultId: string, value: string) => {\n    const holdTotalValue = get().holdTotalValue\n    holdTotalValue[vaultId] = value\n    set(() => ({\n      holdTotalValue: { ...holdTotalValue }\n    }))\n  },\n  setDetailRefreshCount: (count: number) => {\n    set(() => ({\n      detailRefreshCount: count\n    }))\n  },\n  lpTokenInfo: {} as any,\n  setLpTokenInfo: (data: any) => {\n    const lpTokenInfo = get().lpTokenInfo\n    set(() => ({\n      lpTokenInfo: {\n        ...lpTokenInfo,\n        [data.coin_type]: data\n      }\n    }))\n  }\n})\n\nconst useUnstableVaultsListStore = create(\n  persist(store, {\n    name: 'useUnstableVaultsListStore',\n    partialize: state => {\n      const { contractVaultObj, contractClmmPoolObj } = state\n      return { contractVaultObj, contractClmmPoolObj }\n    }\n  })\n)\nexport default useUnstableVaultsListStore\n","import { create, StateCreator } from 'zustand'\n\ninterface VaultsDetailState {\n  vaultsCoinPercent: any\n  setVaultsCoinPercent: (vaultsCoinPercent: any) => void\n  vaultsCoinAValue: string\n  vaultsCoinBValue: string\n  setVaultsCoinAValue: (vaultsCoinAValue: string) => void\n  setVaultsCoinBValue: (vaultsCoinBValue: string) => void\n  vaultCoinAmounts: {\n    coinAmountA: string\n    coinAmountB: string\n    displayCoinA: string\n    displayCoinB: string\n  }\n  setVaultCoinAmounts: (vaultCoinAmounts: { coinAmountA: string; coinAmountB: string; displayCoinA: string; displayCoinB: string }) => void\n}\n\nconst store: StateCreator<VaultsDetailState> = (set, get) => ({\n  vaultsCoinPercent: {},\n  setVaultsCoinPercent: (vaultsCoinPercent: any) => set(() => ({ vaultsCoinPercent })),\n  vaultsCoinAValue: '',\n  vaultsCoinBValue: '',\n  setVaultsCoinAValue: (vaultsCoinAValue: string) => set(() => ({ vaultsCoinAValue })),\n  setVaultsCoinBValue: (vaultsCoinBValue: string) => set(() => ({ vaultsCoinBValue })),\n  vaultCoinAmounts: {\n    coinAmountA: '',\n    coinAmountB: '',\n    displayCoinA: '',\n    displayCoinB: ''\n  },\n  setVaultCoinAmounts: (vaultCoinAmounts: { coinAmountA: string; coinAmountB: string; displayCoinA: string; displayCoinB: string }) =>\n    set(() => ({ vaultCoinAmounts }))\n})\n\nconst useVaultsDetailStore = create(store)\nexport default useVaultsDetailStore\n","import useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { VaultApiInfo } from '@/types/vaults'\nimport { d, Decimal, formatNumberWithDown, formatNumberWithThreshold } from '@cetus/utils'\nimport { useMemo } from 'react'\n\n/**\n * 计算变更 lp 的 持仓占比\n * @param changeLp\n * @param totalLp\n * @returns\n */\nexport function useCalculateChangeLpRate(changeLp?: string, totalLp?: string) {\n  const lpRate = useMemo(() => {\n    if (changeLp && totalLp) {\n      if (d(totalLp).eq(0)) {\n        return '100%'\n      }\n\n      return `${formatNumberWithThreshold(d(changeLp).div(d(changeLp).add(totalLp)).mul(100).toString(), 2, 6)}%`\n    }\n    return '0%'\n  }, [changeLp, totalLp])\n\n  return { lpRate }\n}\n\n/**\n * 计算滑点数量\n * @param slippage\n * @param amount\n * @param isUp\n * @returns\n */\nexport function useCalculateSlippageAmount(slippage: number, amount?: string, isUp: boolean = false) {\n  const amountLimit = useMemo(() => {\n    if (amount) {\n      return d(amount)\n        .mul(isUp ? 1 + slippage : 1 - slippage)\n        .toString()\n    }\n    return undefined\n  }, [amount, slippage, isUp])\n\n  return { amountLimit }\n}\n\nexport function useContractVault(vaultsId?: string) {\n  const { contractVaultObj } = useUnstableVaultsListStore()\n\n  // 合约vaults 信息\n  const contractVault = useMemo(() => {\n    if (vaultsId) {\n      return contractVaultObj[vaultsId]\n    }\n    return undefined\n  }, [contractVaultObj, vaultsId])\n\n  return { contractVault }\n}\n\nexport function useContractClmmInfo(poolAddress?: string) {\n  const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n  const contractClmmInfo = useMemo(() => {\n    if (poolAddress) {\n      return contractClmmPoolObj[poolAddress]\n    }\n    return undefined\n  }, [contractClmmPoolObj, poolAddress])\n\n  return { contractClmmInfo }\n}\n\nexport function useGetSuiStakeProtocol(coinType?: string) {\n  const stakeProtocolName = useMemo(() => {\n    if (coinType) {\n      if (coinType.includes('HASUI')) {\n        return 'Haedal'\n      }\n\n      if (coinType.includes('AFSUI')) {\n        return 'Aftermath'\n      }\n      if (coinType.includes('CERT')) {\n        return 'Volo'\n      }\n    }\n    return undefined\n  }, [coinType])\n\n  return { stakeProtocolName }\n}\n\nexport function useGetRewardPeDay(balanceFormat?: string, apiInfo?: VaultApiInfo) {\n  const rewardPerA = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpA).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenA.decimals)}  ${apiInfo?.displayTokenA.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpA, balanceFormat])\n\n  const rewardPerB = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpB).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenB.decimals)}  ${apiInfo?.displayTokenB.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpB, balanceFormat])\n\n  return { rewardPerA, rewardPerB }\n}\n","import useVaultsAddStore from '@/store/unstable-vaults/useVaultsAdd'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport useVaultsDetailStore from '@/store/vaults/useVaultsDetail'\nimport { calcCoinProportion } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceInfo, Token } from '@cetus/types'\nimport { Decimal, formatNumber, fromDecimalsAmountFix, isAvailableObject } from '@cetus/utils'\nimport { d, fixCoinType, fromDecimalsAmount, TickMath } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport BN from 'bn.js'\nimport { buildVaultsBalance, VaultsBalance } from 'haedal-vault-sdk'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useContractClmmInfo, useContractVault } from './useVaultsHelper'\n\n/**\n * 通过合约数据，计算vaults相关属性\n * @param vaultsId\n * @param poolAddress\n * @param tokenA\n * @param tokenB\n * @param isReverse\n * @returns\n */\nexport default function useGetContractUnstableVaultInfo(\n  vaultsId?: string,\n  poolAddress?: string,\n  tokenA?: Token,\n  tokenB?: Token,\n  isReverse: boolean = false,\n  isDetail?: boolean\n) {\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { currentAccount } = useAccountStore()\n  const { pythPriceMap } = useVaultsAddStore()\n  const priceMap = useMemo(() => {\n    if (pythPriceMap) {\n      return pythPriceMap\n    }\n    return {}\n  }, [pythPriceMap])\n\n  const {\n    setContractVaultObjLoading,\n    setContractVaultObj,\n    setContractClmmPoolObj,\n    setContractClmmPoolObjLoading,\n    setHoldTotalValue,\n    holdTotalValue,\n    contractClmmPoolObjLoading,\n    contractVaultObjLoading\n  } = useUnstableVaultsListStore()\n\n  const {\n    vaultsCoinPercent,\n    setVaultsCoinPercent,\n    vaultsCoinAValue,\n    vaultsCoinBValue,\n    setVaultsCoinAValue,\n    setVaultsCoinBValue,\n    vaultCoinAmounts,\n    setVaultCoinAmounts\n  } = useVaultsDetailStore()\n\n  // **获取 Vault 信息**\n  const fetchVaultInfoFromContract = async (vaultsId: string, forceRefresh = false) => {\n    setContractVaultObjLoading(true)\n    try {\n      const info = await volatileVaultsSdk.Vaults.getPool(vaultsId, forceRefresh)\n      if (info) setContractVaultObj(info)\n    } catch (error) {\n      console.error('fetchVaultInfoFromContract error:', error)\n    } finally {\n      setContractVaultObjLoading(false)\n    }\n  }\n\n  // **获取 CLMM 池子信息**\n  const fetchClmmPoolFromContract = async (clmmPoolId: string, forceRefresh = false) => {\n    setContractClmmPoolObjLoading(true)\n    try {\n      const info = await volatileVaultsSdk.CetusClmmSDK.Pool.getPool(clmmPoolId, forceRefresh)\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:85 ~ fetchClmmPoolFromContract ~ info:', info.current_sqrt_price)\n      if (info) setContractClmmPoolObj(info)\n    } catch (error) {\n      console.error('fetchClmmPoolFromContract error:', error)\n    } finally {\n      setContractClmmPoolObjLoading(false)\n    }\n  }\n\n  // 合约vaults 信息\n  const { contractVault } = useContractVault(vaultsId)\n\n  // lp token信息\n  const { tokenInfo: lpTokenInfo } = useGetToken(contractVault?.lp_token_type)\n  // lp token 余额\n  const [balanceInfo, setBalanceInfo] = useState<BalanceInfo>()\n  const [isBalanceLoading, setBalanceLoading] = useState(false)\n  const [accountBalanceInfo, setAccountBalanceInfo] = useState<VaultsBalance>()\n  // **获取 LP 余额**\n  const fetchVaultBalance = async (walletAddress: string, vaultsId: string, decimals: string) => {\n    setBalanceLoading(true)\n    try {\n      // 余额是加了未分配的部分的\n      const res = await volatileVaultsSdk.Vaults.getOwnerVaultsBalance(walletAddress, vaultsId)\n      if (res) {\n        const balanceFormat = fromDecimalsAmountFix(res.lp_token_balance, decimals).toString()\n        setBalanceInfo({\n          balance: res.lp_token_balance,\n          balanceFormat,\n          balanceDisplay: formatNumber(balanceFormat, undefined, undefined, Decimal.ROUND_DOWN).toString()\n        })\n        setAccountBalanceInfo(res)\n      }\n    } catch (error) {\n      console.error('fetchVaultBalance error:', error)\n    } finally {\n      setBalanceLoading(false)\n    }\n  }\n\n  //持仓百分比\n  const sharePoolRate = useMemo(() => {\n    if (contractVault && balanceInfo && d(balanceInfo.balance).gt(0)) {\n      return d(balanceInfo.balance).div(contractVault.lp_token_treasury).mul(100).toString()\n    }\n\n    return '0'\n  }, [contractVault, balanceInfo])\n\n  // ClmmPool 信息\n  const { contractClmmInfo } = useContractClmmInfo(poolAddress)\n  // **计算持有的 Token A/B 数量**\n  const getHoldCoinAmounts = (accountBalanceInfo?: VaultsBalance) => {\n    if (accountBalanceInfo && tokenA && tokenB && isReverse !== undefined) {\n      const coinAmountA = fromDecimalsAmount(accountBalanceInfo.amount_a.toString(), tokenA.decimals).toString()\n      const coinAmountB = fromDecimalsAmount(accountBalanceInfo.amount_b.toString(), tokenB.decimals).toString()\n      const displayCoinA = isReverse ? coinAmountB : coinAmountA\n      const displayCoinB = isReverse ? coinAmountA : coinAmountB\n      return {\n        coinAmountA,\n        coinAmountB,\n        displayCoinA,\n        displayCoinB\n      }\n    }\n    return { coinAmountA: '0', coinAmountB: '0', displayCoinA: '0', displayCoinB: '0' }\n  }\n\n  const [holdCoinAmounts, setHoldCoinAmounts] = useState<{ coinAmountA: string; coinAmountB: string; displayCoinA: string; displayCoinB: string }>()\n  useEffect(() => {\n    if (accountBalanceInfo && currentAccount?.address) {\n      setHoldCoinAmounts(getHoldCoinAmounts(accountBalanceInfo))\n    } else {\n      setHoldCoinAmounts({ coinAmountA: '0', coinAmountB: '0', displayCoinA: '0', displayCoinB: '0' })\n    }\n  }, [accountBalanceInfo?.amount_a, accountBalanceInfo?.amount_b, tokenA?.decimals, tokenB?.decimals, isReverse, currentAccount?.address])\n\n  // const holdCoinAmounts = useMemo(() => {\n  //   if (accountBalanceInfo) {\n  //     console.log(\n  //       '🚀🚀🚀 ~ useGetContractVaultInfo.ts:139 ~ holdCoinAmounts ~ getHoldCoinAmounts(accountBalanceInfo):',\n  //       getHoldCoinAmounts(accountBalanceInfo)\n  //     )\n  //     return getHoldCoinAmounts(accountBalanceInfo)\n  //   }\n  // }, [accountBalanceInfo?.amount_a, accountBalanceInfo?.amount_b, tokenA?.decimals, tokenB?.decimals, isReverse])\n\n  // **计算 CLMM 池子持有的 Token A/B**\n  // const vaultCoinAmounts = useMemo(() => {\n  //   if (contractVault && contractClmmInfo && !contractVaultObjLoading && !contractClmmPoolObjLoading) {\n  //     const result = buildVaultsBalance('', contractVault.lp_token_treasury, contractVault, contractClmmInfo)\n  //     return getHoldCoinAmounts(result)\n  //   }\n  //   return undefined\n  // }, [contractVault?.lp_token_treasury, contractClmmInfo?.current_sqrt_price, contractClmmPoolObjLoading, contractVaultObjLoading])\n\n  useEffect(() => {\n    if (contractVault && contractClmmInfo && !contractVaultObjLoading && !contractClmmPoolObjLoading) {\n      const result = buildVaultsBalance('', contractVault.lp_token_treasury, contractVault, contractClmmInfo)\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:175 ~ useEffect ~ buildVaultsBalance:', result)\n      setVaultCoinAmounts(getHoldCoinAmounts(result))\n    }\n  }, [contractVault?.lp_token_treasury, contractClmmInfo?.current_sqrt_price, contractClmmPoolObjLoading, contractVaultObjLoading])\n\n  // 当前价格\n  const currPrice = useMemo(() => {\n    if (contractClmmInfo && tokenA && tokenB) {\n      return TickMath.sqrtPriceX64ToPrice(new BN(contractClmmInfo.current_sqrt_price), tokenA.decimals, tokenB.decimals).toString()\n    }\n    return undefined\n  }, [contractClmmInfo?.current_sqrt_price, tokenA?.decimals])\n\n  //最小价格\n  const minPrice = useMemo(() => {\n    if (contractVault && tokenA && tokenB) {\n      return TickMath.tickIndexToPrice(contractVault.clmm_vault.wrapped_position.tick_lower_index, tokenA.decimals, tokenB.decimals).toString()\n    }\n    return undefined\n  }, [contractVault?.clmm_vault?.wrapped_position.tick_lower_index, tokenA?.decimals])\n\n  //最大价格\n  const maxPrice = useMemo(() => {\n    if (contractVault && tokenA && tokenB) {\n      return TickMath.tickIndexToPrice(contractVault.clmm_vault.wrapped_position.tick_upper_index, tokenA.decimals, tokenB.decimals).toString()\n    }\n    return undefined\n  }, [contractVault?.clmm_vault.wrapped_position.tick_upper_index, tokenA?.decimals])\n\n  // 用户持有的coin A B 价值\n  // const holdCoinAValue = getTokenAmountValue(tokenA?.coin_type, holdCoinAmounts?.coinAmountA)\n  // const holdCoinBValue = getTokenAmountValue(tokenB?.coin_type, holdCoinAmounts?.coinAmountB)\n  const [holdCoinAValue, setHoldCoinAValue] = useState<string>('')\n  const [holdCoinBValue, setHoldCoinBValue] = useState<string>('')\n\n  useEffect(() => {\n    if (tokenA && tokenB && holdCoinAmounts?.coinAmountA && holdCoinAmounts?.coinAmountB && isAvailableObject(priceMap)) {\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:220 ~ useEffect ~ priceMap:', priceMap)\n      const coinAPrice = priceMap[fixCoinType(tokenA?.coin_type)]\n      const coinBPrice = priceMap[fixCoinType(tokenB?.coin_type)]\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:223 ~ useEffect ~ coinBPrice:', coinBPrice)\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:223 ~ useEffect ~ holdCoinAmounts:', holdCoinAmounts)\n      const coinAValue = d(holdCoinAmounts?.coinAmountA)\n        .mul(coinAPrice?.price || 0)\n        .toString()\n      const coinBValue = d(holdCoinAmounts?.coinAmountB)\n        .mul(coinBPrice?.price || 0)\n        .toString()\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:223 ~ useEffect ~ coinAValue:', coinAValue)\n      console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:227 ~ useEffect ~ coinBValue:', coinBValue)\n      setHoldCoinAValue(coinAValue)\n      setHoldCoinBValue(coinBValue)\n    }\n  }, [tokenA, tokenB, holdCoinAmounts?.coinAmountA, holdCoinAmounts?.coinAmountB, priceMap])\n\n  const [calculateVaultTvlLoading, setCalculateVaultTvlLoading] = useState(true)\n\n  // const [vaultsCoinAValue, setVaultsCoinAValue] = useState<string>('')\n  // const [vaultsCoinBValue, setVaultsCoinBValue] = useState<string>('')\n  // 池子持有的coin A B 价值\n  // const vaultsCoinAValue = getTokenAmountValue(tokenA?.coin_type, vaultCoinAmounts?.coinAmountA)\n  // const vaultsCoinBValue = getTokenAmountValue(tokenB?.coin_type, vaultCoinAmounts?.coinAmountB)\n  // 由于新增显示剩余可注入数量 所以这里改为获取预言机价格计算 这样计算出来的占比可与剩余可注入一致\n  // const [pythPriceMap, setPythPriceMap] = useState<Record<string, Price>>()\n\n  const getVaultsCoinValue = async (coinAmountA: string, coinAmountB: string) => {\n    if (tokenA && tokenB) {\n      if (priceMap) {\n        const priceA = priceMap[fixCoinType(tokenA?.coin_type)]\n        const priceB = priceMap[fixCoinType(tokenB?.coin_type)]\n        if (priceA && priceB) {\n          console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:218 ~ getVaultsCoinValue ~ getVaultsCoinValue:')\n          const vaultsCoinAValue = d(coinAmountA).mul(priceA.price).toString()\n          const vaultsCoinBValue = d(coinAmountB).mul(priceB.price).toString()\n          setVaultsCoinAValue(vaultsCoinAValue)\n          setVaultsCoinBValue(vaultsCoinBValue)\n          setCalculateVaultTvlLoading(false)\n          getAumLimit(vaultsCoinAValue, vaultsCoinBValue)\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    console.log(\n      '🚀🚀🚀 ~ useGetContractVaultInfo.ts:237 ~ useEffect ~ vaultCoinAmounts?.coinAmountA && vaultCoinAmounts?.coinAmountB:',\n      vaultCoinAmounts?.coinAmountA,\n      vaultCoinAmounts?.coinAmountB,\n      isDetail,\n      priceMap\n    )\n    if (vaultCoinAmounts?.coinAmountA && vaultCoinAmounts?.coinAmountB && isDetail && isAvailableObject(priceMap)) {\n      getVaultsCoinValue(vaultCoinAmounts?.coinAmountA, vaultCoinAmounts?.coinAmountB)\n    }\n  }, [vaultCoinAmounts?.coinAmountA, vaultCoinAmounts?.coinAmountB, priceMap])\n\n  // 池子Token占比\n\n  useEffect(() => {\n    if (currPrice && vaultCoinAmounts?.coinAmountA && vaultCoinAmounts?.coinAmountB) {\n      setVaultsCoinPercent(calcCoinProportion(vaultCoinAmounts.coinAmountA, vaultCoinAmounts.coinAmountB, currPrice, false))\n    }\n  }, [currPrice, vaultCoinAmounts?.coinAmountA, vaultCoinAmounts?.coinAmountB])\n\n  // 池子tvl\n  const vaultTvl = useMemo(() => {\n    if (!calculateVaultTvlLoading) {\n      return d(vaultsCoinAValue).add(vaultsCoinBValue).toString()\n    }\n  }, [vaultsCoinAValue, vaultsCoinBValue, calculateVaultTvlLoading])\n\n  // const [vaultTvl, setVaultTvl] = useState<string>('')\n  // useEffect(() => {\n  //   if (vaultsCoinAValue && vaultsCoinBValue) {\n  //     setVaultTvl(d(vaultsCoinAValue).add(vaultsCoinBValue).toString())\n  //   }\n  // }, [vaultsCoinAValue, vaultsCoinBValue])\n\n  useEffect(() => {\n    if (vaultsId && holdCoinAValue && holdCoinBValue) {\n      setHoldTotalValue(vaultsId, d(holdCoinAValue).add(holdCoinBValue).toString())\n    }\n  }, [holdCoinAValue, holdCoinBValue, vaultsId])\n\n  const totalValue = useMemo(() => {\n    if (vaultsId) {\n      return holdTotalValue[vaultsId]\n    }\n    return undefined\n  }, [holdTotalValue, vaultsId])\n\n  const [hardCapUSD, setHardCapUSD] = useState<string>('')\n  const getHardCapUSD = async () => {\n    if (contractVault && contractVault.hard_cap && d(contractVault?.hard_cap).gt(0) && tokenA && tokenB) {\n      const quoteCoin = contractVault.quote_type == tokenA?.address ? tokenA! : tokenB!\n      if (priceMap) {\n        const price = priceMap[fixCoinType(quoteCoin.coin_type)]\n        if (price) {\n          const hardCapUSD = d(contractVault.hard_cap)\n            .div(10 ** quoteCoin.decimals)\n            .mul(price.price)\n            .toString()\n          console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:251 ~ getHardCapUSD ~ hardCapUSD:', hardCapUSD)\n          setHardCapUSD(hardCapUSD)\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:272 ~ useEffect ~ contractVault:', contractVault)\n    if (contractVault?.hard_cap && isDetail && isAvailableObject(priceMap)) {\n      getHardCapUSD()\n    }\n  }, [contractVault?.hard_cap, isDetail, priceMap])\n\n  // const hardCapUSD = useMemo(() => {\n  //   if (contractVault && contractVault.hard_cap && d(contractVault?.hard_cap).gt(0) && tokenA && tokenB) {\n  //     let quoteCoin\n  //     if (contractVault.quote_type) {\n  //       quoteCoin = contractVault.quote_type == tokenA?.address ? tokenA! : tokenB!\n  //     } else {\n  //       quoteCoin = getTokenInfo('0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC')!\n  //     }\n  //     const maxAum = fromDecimalsAmount(contractVault.hard_cap, quoteCoin.decimals).toString()\n  //     // usdc不使用汇率直接为1u\n  //     // if (quoteCoin?.coin_type == '0xdba34672e30cb065b1f93e3ab55318768fd6fef66c15942c9f7cb846e2f900e7::usdc::USDC') {\n  //     //   maxAumUSD = maxAum\n  //     //   return maxAumUSD\n  //     // }\n  //     const maxAumUSD = getTokenAmountValue(quoteCoin?.coin_type, maxAum)\n  //     return maxAumUSD\n  //   }\n  //   return ''\n  // }, [contractVault?.hard_cap, tokenA, tokenB])\n  const [gtAumLimit, setGtAumLimit] = useState(false)\n\n  const getAumLimit = (coinAValue: string, coinBValue: string) => {\n    if (contractVault && tokenA && tokenB && priceMap) {\n      const quoteCoin = contractVault.quote_type == tokenA?.address ? tokenA : tokenB\n      const maxAum = fromDecimalsAmount(contractVault.hard_cap, quoteCoin.decimals).toString()\n      const quoteCoinPrice = priceMap[fixCoinType(quoteCoin?.coin_type)]?.price\n      const maxAumUSD = d(maxAum).mul(quoteCoinPrice || 0)\n      if ((d(coinAValue).gt(0) || d(coinBValue).gt(0)) && maxAumUSD.gt(0)) {\n        console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:367 ~ getAumLimit ~ coinAValue:', d(coinAValue).add(coinBValue).toString())\n        console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:367 ~ getAumLimit ~ maxAumUSD:', maxAumUSD.toString())\n        if (d(coinAValue).add(coinBValue).gt(maxAumUSD)) {\n          setGtAumLimit(true)\n        } else {\n          setGtAumLimit(false)\n        }\n      }\n    } else {\n      setGtAumLimit(false)\n    }\n  }\n\n  // 当前tvl是否大于硬顶\n  // const gtAumLimit = useMemo(() => {\n  //   if (\n  //     vaultsCoinAValue &&\n  //     vaultsCoinBValue &&\n  //     contractVault?.hard_cap &&\n  //     d(contractVault?.hard_cap).gt(0) &&\n  //     tokenA &&\n  //     tokenB &&\n  //     isAvailableObject(priceMap) &&\n  //     !calculateVaultTvlLoading\n  //   ) {\n  //     const quoteCoin = contractVault.quote_type == tokenA?.address ? tokenA : tokenB\n  //     const maxAum = fromDecimalsAmount(contractVault.hard_cap, quoteCoin.decimals).toString()\n  //     const quoteCoinPrice = priceMap[fixCoinType(quoteCoin?.coin_type)]?.price\n  //     const maxAumUSD = d(maxAum).mul(quoteCoinPrice || 0)\n  //     if ((d(vaultsCoinAValue).gt(0) || d(vaultsCoinBValue).gt(0)) && maxAumUSD.gt(0)) {\n  //       if (d(vaultsCoinAValue).add(vaultsCoinBValue).gt(maxAumUSD)) {\n  //         return true\n  //       }\n  //     }\n  //   }\n  //   return false\n  // }, [vaultsCoinAValue, vaultsCoinBValue, contractVault?.hard_cap, tokenA, tokenB, priceMap, calculateVaultTvlLoading])\n\n  useEffect(() => {\n    if (!currentAccount?.address) {\n      setBalanceInfo(undefined)\n      setAccountBalanceInfo(undefined)\n    }\n  }, [currentAccount])\n\n  const depositRatio = useMemo(() => {\n    if (hardCapUSD && vaultTvl) {\n      return d(vaultTvl).div(hardCapUSD).mul(100).toString()\n    }\n  }, [hardCapUSD, vaultTvl])\n\n  const performanceFee = useMemo(() => {\n    if (contractVault && d(contractVault.protocol_fee_rate).gt(0)) {\n      return d(contractVault.protocol_fee_rate).div(10000).mul(100).toString()\n    }\n    return '0'\n  }, [contractVault])\n\n  // const refreshPythPrice = async () => {\n  //   if (tokenA && tokenB) {\n  //     volatileVaultsSdk.PythPrice.getLatestPrice([fixCoinType(tokenA?.coin_type), fixCoinType(tokenB?.coin_type)], true)\n  //   }\n  //   if (vaultCoinAmounts?.coinAmountA && vaultCoinAmounts?.coinAmountB) {\n  //     getVaultsCoinValue(vaultCoinAmounts?.coinAmountA, vaultCoinAmounts?.coinAmountB)\n  //   }\n  //   getHardCapUSD()\n  // }\n  const baseCoin = useMemo(() => {\n    if (contractVault && tokenA && tokenB) {\n      return contractVault.quote_type == tokenA?.address ? tokenB : tokenA\n    }\n    return undefined\n  }, [contractVault, tokenA, tokenB])\n\n  const quoteCoin = useMemo(() => {\n    if (contractVault && tokenA && tokenB) {\n      return contractVault.quote_type == tokenA?.address ? tokenA : tokenB\n    }\n    return undefined\n  }, [contractVault, tokenA, tokenB])\n\n  const maxCapNum = useMemo(() => {\n    if (contractVault?.hard_cap && quoteCoin) {\n      return d(contractVault?.hard_cap)\n        .div(10 ** quoteCoin.decimals)\n        .toString()\n    }\n    return '0'\n  }, [contractVault?.hard_cap, quoteCoin])\n\n  const [availableCapacityWithQuoteCoin, setAvailableCapacityWithQuoteCoin] = useState<string>('')\n  const [availableCapacityWithBaseCoin, setAvailableCapacityWithBaseCoin] = useState<string>('')\n  const getAvailableCapacityWithQuoteCoin = async () => {\n    if (priceMap) {\n      const quoteCoinPrice = priceMap[fixCoinType(quoteCoin?.coin_type)]?.price\n      const baseCoinPrice = priceMap[fixCoinType(baseCoin?.coin_type)]?.price\n      if (quoteCoinPrice && baseCoinPrice) {\n        const quoteCoinResult = d(hardCapUSD).sub(vaultTvl).div(quoteCoinPrice)\n        const baseCoinResult = d(hardCapUSD).sub(vaultTvl).div(baseCoinPrice)\n        if (quoteCoinResult.gt(0)) {\n          setAvailableCapacityWithQuoteCoin(formatNumber(quoteCoinResult.toString(), quoteCoin?.decimals, true, Decimal.ROUND_DOWN).toString())\n        } else {\n          setAvailableCapacityWithQuoteCoin('0')\n        }\n        if (baseCoinResult.gt(0)) {\n          setAvailableCapacityWithBaseCoin(formatNumber(baseCoinResult.toString(), baseCoin?.decimals, true, Decimal.ROUND_DOWN).toString())\n        } else {\n          setAvailableCapacityWithBaseCoin('0')\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    if (vaultTvl && hardCapUSD && quoteCoin && isAvailableObject(priceMap)) {\n      getAvailableCapacityWithQuoteCoin()\n    }\n  }, [vaultTvl, hardCapUSD, quoteCoin?.coin_type, priceMap])\n\n  return {\n    fetchVaultInfoFromContract,\n    contractVault,\n    lpTokenInfo,\n    balanceInfo,\n    sharePoolRate,\n    fetchClmmPoolFromContract,\n    holdCoinAmounts,\n    totalValue,\n    maxPrice,\n    currPrice,\n    minPrice,\n    vaultCoinAmounts,\n    vaultsCoinAValue,\n    vaultsCoinBValue,\n    vaultsCoinPercent,\n    holdCoinAValue,\n    holdCoinBValue,\n    fetchVaultBalance,\n    isBalanceLoading,\n    vaultTvl,\n    hardCapUSD,\n    gtAumLimit,\n    depositRatio,\n    performanceFee,\n    calculateVaultTvlLoading,\n    maxCapNum,\n    baseCoin,\n    quoteCoin,\n    holdLpAmount: balanceInfo?.balance,\n    availableCapacityWithQuoteCoin,\n    availableCapacityWithBaseCoin\n  } as any\n}\n","import useVaultsListStore from '@/store/vaults/useVaultsList'\nimport { VaultApiInfo } from '@/types/vaults'\nimport { d, Decimal, formatNumberWithDown, formatNumberWithThreshold } from '@cetus/utils'\nimport { useMemo } from 'react'\n\n/**\n * 计算变更 lp 的 持仓占比\n * @param changeLp\n * @param totalLp\n * @returns\n */\nexport function useCalculateChangeLpRate(changeLp?: string, totalLp?: string) {\n  const lpRate = useMemo(() => {\n    if (changeLp && totalLp) {\n      if (d(totalLp).eq(0)) {\n        return '100%'\n      }\n\n      return `${formatNumberWithThreshold(d(changeLp).div(d(changeLp).add(totalLp)).mul(100).toString(), 2, 6)}%`\n    }\n    return '0%'\n  }, [changeLp, totalLp])\n\n  return { lpRate }\n}\n\n/**\n * 计算滑点数量\n * @param slippage\n * @param amount\n * @param isUp\n * @returns\n */\nexport function useCalculateSlippageAmount(slippage: number, amount?: string, isUp: boolean = false) {\n  const amountLimit = useMemo(() => {\n    if (amount) {\n      return d(amount)\n        .mul(isUp ? 1 + slippage : 1 - slippage)\n        .toString()\n    }\n    return undefined\n  }, [amount, slippage, isUp])\n\n  return { amountLimit }\n}\n\nexport function useContractVault(vaultsId?: string) {\n  const { contractVaultObj } = useVaultsListStore()\n\n  // 合约vaults 信息\n  const contractVault = useMemo(() => {\n    if (vaultsId) {\n      return contractVaultObj[vaultsId]\n    }\n    return undefined\n  }, [contractVaultObj, vaultsId])\n\n  return { contractVault }\n}\n\nexport function useContractClmmInfo(poolAddress?: string) {\n  const { contractClmmPoolObj } = useVaultsListStore()\n\n  const contractClmmInfo = useMemo(() => {\n    if (poolAddress) {\n      return contractClmmPoolObj[poolAddress]\n    }\n    return undefined\n  }, [contractClmmPoolObj, poolAddress])\n\n  return { contractClmmInfo }\n}\n\nexport function useGetSuiStakeProtocol(coinType?: string) {\n  const stakeProtocolName = useMemo(() => {\n    if (coinType) {\n      if (coinType.includes('HASUI')) {\n        return 'Haedal'\n      }\n\n      if (coinType.includes('AFSUI')) {\n        return 'Aftermath'\n      }\n      if (coinType.includes('CERT')) {\n        return 'Volo'\n      }\n    }\n    return undefined\n  }, [coinType])\n\n  return { stakeProtocolName }\n}\n\nexport function useGetRewardPeDay(balanceFormat?: string, apiInfo?: VaultApiInfo) {\n  const rewardPerA = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpA).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenA.decimals)}  ${apiInfo?.displayTokenA.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpA, balanceFormat])\n\n  const rewardPerB = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpB).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenB.decimals)}  ${apiInfo?.displayTokenB.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpB, balanceFormat])\n\n  return { rewardPerA, rewardPerB }\n}\n","import useVaultsListStore from '@/store/vaults/useVaultsList'\nimport { ContractVaultInfo } from '@/types/vaults'\nimport { calcCoinProportion } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { Token } from '@cetus/types'\nimport { fromDecimalsAmountFix, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { ClmmPoolUtil, TickMath, d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { VaultsUtils } from '@cetusprotocol/vaults-sdk'\nimport BN from 'bn.js'\nimport { useEffect, useMemo } from 'react'\nimport { useContractClmmInfo, useContractVault } from './useVaultsHelper'\n\n/**\n * 通过合约数据，计算vaults相关属性\n * @param vaultsId\n * @param poolAddress\n * @param tokenA\n * @param tokenB\n * @param isReverse\n * @returns\n */\nexport default function useGetContractStableVaultInfo(\n  vaultsId?: string,\n  poolAddress?: string,\n  tokenA?: Token,\n  tokenB?: Token,\n  isReverse: boolean = false\n) {\n  const { vaultsSdk } = usePeripherySDKStore()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const {\n    setContractVaultObjLoading,\n    setContractVaultObj,\n    setContractClmmPoolObj,\n    setContractClmmPoolObjLoading,\n    setHoldTotalValue,\n    holdTotalValue,\n    setLpTokenInfo\n  } = useVaultsListStore()\n\n  // 从合约获取Vault 信息\n  const fetchVaultInfoFromContract = async (vaults_id: string, forceRefresh = false) => {\n    setContractVaultObjLoading(true)\n    const info = await vaultsSdk.Vaults.getVault(vaults_id, forceRefresh)\n\n    console.log('🚀 ~ file: useGetVaultInfo.ts:13 ~ fetchVaultInfoFromContract ~ info:', info)\n\n    if (info) {\n      setContractVaultObj(info)\n    }\n    setContractVaultObjLoading(false)\n  }\n\n  // 从合约获取clmm 池子信息\n  const fetchClmmPoolFromContract = async (clmm_pool_id: string, forceRefresh = false) => {\n    setContractClmmPoolObjLoading(true)\n    const info = await vaultsSdk.Pool.getPool(clmm_pool_id, forceRefresh)\n\n    if (info) {\n      setContractClmmPoolObj(info)\n    }\n    setContractClmmPoolObjLoading(false)\n  }\n\n  // 合约vaults 信息\n  const { contractVault } = useContractVault(vaultsId)\n\n  // lp token信息\n  const { tokenInfo: lpTokenInfo } = useGetToken(contractVault?.lp_token_type)\n  // lp token 余额\n  const { balanceInfo } = useGetTokenBalance(lpTokenInfo)\n\n  //持仓百分比\n  const sharePoolRate = useMemo(() => {\n    if (contractVault && balanceInfo) {\n      return d(balanceInfo.balance).div(contractVault.total_supply).mul(100).toString()\n    }\n\n    return '0'\n  }, [contractVault, balanceInfo])\n\n  // ClmmPool 信息\n  const { contractClmmInfo } = useContractClmmInfo(poolAddress)\n\n  // 根据流动性计算Token A B 数量\n  const calculateCoinAmounts = (liquidity: string) => {\n    if (contractVault && contractClmmInfo && tokenA && tokenB && isReverse !== undefined) {\n      const curSqrtPrice = new BN(contractClmmInfo.current_sqrt_price)\n      const lowerSqrtPrice = TickMath.tickIndexToSqrtPriceX64(contractVault.position.tick_lower_index)\n      const upperSqrtPrice = TickMath.tickIndexToSqrtPriceX64(contractVault.position.tick_upper_index)\n      const coinAmounts = ClmmPoolUtil.getCoinAmountFromLiquidity(new BN(liquidity), curSqrtPrice, lowerSqrtPrice, upperSqrtPrice, false)\n\n      const coinAmountA = fromDecimalsAmountFix(coinAmounts.coinA.toString(), tokenA.decimals).toString()\n      const coinAmountB = fromDecimalsAmountFix(coinAmounts.coinB.toString(), tokenB.decimals).toString()\n\n      const displayCoinA = isReverse ? coinAmountB : coinAmountA\n      const displayCoinB = isReverse ? coinAmountA : coinAmountB\n\n      return {\n        coinAmountA,\n        coinAmountB,\n        displayCoinA,\n        displayCoinB\n      }\n    }\n    return undefined\n  }\n\n  // 用户持有的coin A B 数量\n  const holdCoinAmounts = useMemo(() => {\n    if (contractVault && balanceInfo && contractClmmInfo) {\n      const liquidity = VaultsUtils.get_share_liquidity_by_amount(contractVault, balanceInfo.balance)\n      const info = calculateCoinAmounts(liquidity)\n      if (info) {\n        return info\n      }\n    }\n    return {\n      coinAmountA: '0',\n      coinAmountB: '0',\n      displayCoinA: '0',\n      displayCoinB: '0'\n    }\n  }, [balanceInfo?.balance, contractClmmInfo?.current_sqrt_price])\n\n  // 池子持有的coin A B 数量\n  const vaultCoinAmounts = useMemo(() => {\n    if (contractVault && contractClmmInfo) {\n      const info = calculateCoinAmounts(contractVault.liquidity)\n      if (info) {\n        return info\n      }\n    }\n    return undefined\n  }, [contractVault?.liquidity, contractClmmInfo?.current_sqrt_price])\n\n  // 当前价格\n  const currPrice = useMemo(() => {\n    if (contractClmmInfo && tokenA && tokenB) {\n      return TickMath.sqrtPriceX64ToPrice(new BN(contractClmmInfo.current_sqrt_price), tokenA.decimals, tokenB.decimals).toString()\n    }\n    return undefined\n  }, [contractClmmInfo?.current_sqrt_price, tokenA?.decimals])\n\n  //最小价格\n  const minPrice = useMemo(() => {\n    if (contractVault && tokenA && tokenB) {\n      console.log(\n        '🚀🚀🚀 ~ useGetContractVaultInfo.ts:156 ~ minPrice ~ TickMath.tickIndexToPrice(contractVault.position.tick_lower_index, tokenA.decimals, tokenB.decimals).toString():',\n        TickMath.tickIndexToPrice(contractVault.position.tick_lower_index, tokenA.decimals, tokenB.decimals).toString()\n      )\n      return TickMath.tickIndexToPrice(contractVault.position.tick_lower_index, tokenA.decimals, tokenB.decimals).toString()\n    }\n    return undefined\n  }, [contractVault?.position.tick_lower_index, tokenA?.decimals])\n\n  //最大价格\n  const maxPrice = useMemo(() => {\n    if (contractVault && tokenA && tokenB) {\n      return TickMath.tickIndexToPrice(contractVault.position.tick_upper_index, tokenA.decimals, tokenB.decimals).toString()\n    }\n    return undefined\n  }, [contractVault?.position.tick_upper_index, tokenA?.decimals])\n\n  // 用户持有的coin A B 价值\n  const holdCoinAValue = getTokenAmountValue(tokenA?.coin_type, holdCoinAmounts.coinAmountA)\n  const holdCoinBValue = getTokenAmountValue(tokenB?.coin_type, holdCoinAmounts.coinAmountB)\n\n  // 池子持有的coin A B 价值\n  const vaultsCoinAValue = getTokenAmountValue(tokenA?.coin_type, vaultCoinAmounts?.coinAmountA)\n  const vaultsCoinBValue = getTokenAmountValue(tokenB?.coin_type, vaultCoinAmounts?.coinAmountB)\n\n  // 池子Token占比\n  const vaultsCoinPercent = useMemo(() => {\n    if (currPrice && vaultCoinAmounts) {\n      return calcCoinProportion(vaultCoinAmounts.coinAmountA, vaultCoinAmounts.coinAmountB, currPrice, false)\n    }\n\n    return undefined\n  }, [currPrice, vaultCoinAmounts])\n\n  // 池子tvl\n  const vaultTvl = useMemo(() => {\n    console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:192 ~ vaultTvl ~ vaultsCoinAValue:', vaultsCoinAValue)\n    return symbolDataDisplayProcessing(d(vaultsCoinAValue).add(vaultsCoinBValue).toString(), '$')\n  }, [vaultsCoinAValue, vaultsCoinBValue])\n  console.log('🚀🚀🚀 ~ useGetContractVaultInfo.ts:263 ~ vaultTvl ~ vaultTvl:', vaultTvl)\n\n  useEffect(() => {\n    if (vaultsId) {\n      setHoldTotalValue(vaultsId, d(holdCoinAValue).add(holdCoinBValue).toString())\n    }\n  }, [holdCoinAValue, holdCoinBValue, vaultsId])\n\n  const totalValue = useMemo(() => {\n    if (vaultsId) {\n      return holdTotalValue[vaultsId]\n    }\n    return undefined\n  }, [holdTotalValue, vaultsId])\n\n  // useEffect(() => {\n  //   if (lpTokenInfo && lpTokenInfo.coin_type) {\n  //     setLpTokenInfo(lpTokenInfo)\n  //   }\n  // }, [lpTokenInfo])\n\n  return {\n    fetchVaultInfoFromContract,\n    contractVault,\n    lpTokenInfo,\n    balanceInfo,\n    sharePoolRate,\n    fetchClmmPoolFromContract,\n    holdCoinAmounts,\n    totalValue,\n    maxPrice,\n    currPrice,\n    minPrice,\n    vaultCoinAmounts,\n    vaultsCoinAValue,\n    vaultsCoinBValue,\n    vaultsCoinPercent,\n    holdCoinAValue,\n    holdCoinBValue,\n    calculateCoinAmounts,\n    vaultTvl,\n    holdLpAmount: balanceInfo?.balance\n  } as ContractVaultInfo\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useGlobalStore from '@/store/common/global'\nimport useVaultsAddStore from '@/store/unstable-vaults/useVaultsAdd'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { DepositCalculationResult, MsafeTransactionSubType } from '@/types'\nimport { AssetActionType } from '@/types/vaults'\nimport { formatDescription } from '@/utils'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, Decimal, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { fixCoinType, fromDecimalsAmount, toDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { DepositCalculationOptions, DepositMode } from 'haedal-vault-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\n\nexport default function useUnstableVaultsAdd(\n  assetAction: AssetActionType,\n  autoRefresh: () => void,\n  vaultsId?: string,\n  tokenA?: Token,\n  tokenB?: Token,\n  isReverse?: boolean,\n  isCheckedZAP?: boolean,\n  hardCapUSD?: string,\n  vaultTvl?: string,\n  gtAumLimit?: boolean,\n  availableCapacityWithQuoteCoin?: string,\n  availableCapacityWithBaseCoin?: string,\n  quoteCoin?: Token,\n  baseCoin?: Token,\n  isQuoteCoin?: boolean\n) {\n  const { vaultsSlippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const { setDetailRefreshCount } = useUnstableVaultsListStore()\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n  const [percentage, setPercentage] = useState<string | number>(0)\n  // 切换zap时无法清楚hook里的amountInput 改为store存储\n  // const [amountInputA, setAmountInputA] = useState<string>('')\n  // const [amountInputB, setAmountInputB] = useState<string>('')\n  const { amountInputA, amountInputB, setAmountInputA, setAmountInputB, pythPriceMap } = useVaultsAddStore()\n  const [fixAmountA, setFixAmountA] = useState<boolean>(true)\n  const [uuid, setUuid] = useState<string>('')\n\n  const uuidRef = useRef<string>('')\n  const fixAmountARef = useRef<boolean>(true)\n  const amountInputARef = useRef<string>('')\n  const amountInputBRef = useRef<string>('')\n\n  const priceMap = useMemo(() => {\n    if (pythPriceMap) {\n      return pythPriceMap\n    }\n    return {}\n  }, [pythPriceMap])\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  useEffect(() => {\n    fixAmountARef.current = fixAmountA\n  }, [fixAmountA])\n\n  useEffect(() => {\n    amountInputARef.current = isReverse ? amountInputA : amountInputA\n  }, [amountInputA, isReverse, amountInputB])\n\n  useEffect(() => {\n    amountInputBRef.current = isReverse ? amountInputB : amountInputB\n  }, [amountInputB, isReverse, amountInputA])\n\n  // 切换ZAP或者资产类型，清空输入框\n  useEffect(() => {\n    resetInputAmount()\n  }, [isCheckedZAP, assetAction])\n\n  //获取价格\n  useEffect(() => {\n    const coinTypeList: string[] = []\n    if (tokenA && tokenB) {\n      coinTypeList.push(tokenA.coin_type)\n      coinTypeList.push(tokenB.coin_type)\n    }\n    if (coinTypeList.length > 0) {\n      fetchTokenPrices(coinTypeList)\n    }\n  }, [tokenA?.coin_type, tokenB?.coin_type])\n\n  // 余额 因为页面上传入时按照合约方向传入 所以这里需要反过来\n  const { balanceInfo: balanceInfoA } = useGetTokenBalance(isReverse ? tokenB : tokenA)\n  const { balanceInfo: balanceInfoB } = useGetTokenBalance(isReverse ? tokenA : tokenB)\n\n  // 价值 因为页面上传入时按照合约方向传入 所以这里需要反过来\n  // const amountValueA = getTokenAmountValue(isReverse ? tokenB?.coin_type : tokenA?.coin_type, amountInputA)\n  // const amountValueB = getTokenAmountValue(isReverse ? tokenA?.coin_type : tokenB?.coin_type, amountInputB)\n\n  // 是否操作滑杆\n  const [isSlider, setIsSlider] = useState(false)\n  const amountValueA = useMemo(() => {\n    if (tokenA?.coin_type && tokenB?.coin_type && assetAction == 'both') {\n      const coinType = isReverse ? tokenB?.coin_type : tokenA?.coin_type\n      return d(amountInputA || 0)\n        .mul(priceMap[fixCoinType(coinType)]?.price || 0)\n        .toString()\n    } else if (assetAction !== 'both' && !isSlider) {\n      const coinType = isReverse ? tokenB?.coin_type : tokenA?.coin_type\n      return d(amountInputA || 0)\n        .mul(priceMap[fixCoinType(coinType)]?.price || 0)\n        .toString()\n    } else {\n      if (amountInputA) {\n        return d(hardCapUSD).sub(d(vaultTvl)).mul(percentage).div(100).toString()\n      } else {\n        return '0'\n      }\n    }\n  }, [amountInputA, tokenA?.coin_type, tokenB?.coin_type, isReverse, priceMap, assetAction, hardCapUSD, vaultTvl, percentage])\n\n  const amountValueB = useMemo(() => {\n    if (tokenA?.coin_type && tokenB?.coin_type && assetAction == 'both') {\n      const coinType = isReverse ? tokenA?.coin_type : tokenB?.coin_type\n      return d(amountInputB || 0)\n        .mul(priceMap[fixCoinType(coinType)]?.price || 0)\n        .toString()\n    } else if (assetAction !== 'both' && !isSlider) {\n      const coinType = isReverse ? tokenA?.coin_type : tokenB?.coin_type\n      return d(amountInputB || 0)\n        .mul(priceMap[fixCoinType(coinType)]?.price || 0)\n        .toString()\n    } else {\n      if (amountInputB) {\n        return d(hardCapUSD).sub(d(vaultTvl)).mul(percentage).div(100).toString()\n      } else {\n        return '0'\n      }\n    }\n  }, [amountInputB, tokenA?.coin_type, tokenB?.coin_type, isReverse, priceMap, assetAction, hardCapUSD, vaultTvl, percentage])\n\n  // 总价值 100% = 硬顶 - 当前TVL 不是百分百 显示输入框A、B的值相加\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // ZAP模式下不能超过10000\n  const zapNumError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(d(10000))\n  }, [inputTotalValue, isCheckedZAP])\n\n  // 单token质押是否小于0.0001\n  const inputTotalValueError = useMemo(() => {\n    if (inputTotalValue && isCheckedZAP) {\n      return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(0.0001)\n    }\n    return false\n  }, [isCheckedZAP, inputTotalValue])\n\n  // 超过硬顶\n  const overHardtop = useMemo(() => {\n    if (hardCapUSD && inputTotalValue && d(hardCapUSD).gt(0)) {\n      if (d(inputTotalValue).add(d(vaultTvl)).gt(hardCapUSD)) {\n        return true\n      }\n    }\n    return false\n  }, [hardCapUSD, inputTotalValue, vaultTvl])\n\n  // 预计算结果\n  const [preCalculateLoading, setPreCalculateLoading] = useState<boolean>(false)\n  const [calculateLpLoading, setCalculateLpLoading] = useState<boolean>(false)\n  const [calculateResult, setCalculateResult] = useState<DepositCalculationResult | undefined>(undefined)\n\n  // 预计算\n  const preCalculate = async (amount: string, fix_amount_a: boolean, uuid: string, isReverse = false, other_amount: string) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:102 ~ preCalculate ~ uuid:', uuid)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:102 ~ preCalculate ~ amount:', amount, other_amount)\n    if (tokenA && tokenB && vaultsId) {\n      try {\n        setCalculateLpLoading(true)\n        setDetailRefreshCount(0)\n        const fixToken = fix_amount_a ? tokenA : tokenB\n        const fixOtherToken = fix_amount_a ? tokenB : tokenA\n        const inputAmount = toDecimalsAmount(amount, fixToken.decimals).toFixed(0)\n        const otherAmount = toDecimalsAmount(other_amount || 0, fixOtherToken.decimals).toFixed(0)\n        // 开启zap模式\n        let mode\n        if (isCheckedZAP) {\n          mode = assetAction == 'both' ? 'FlexibleBoth' : assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n        } else {\n          mode = 'FixedOneSide'\n        }\n        let params: DepositCalculationOptions = {\n          uuid,\n          mode: 'FixedOneSide',\n          fixed_amount: '0',\n          fixed_coin_a: true,\n          pool_id: vaultsId\n        }\n\n        if (isCheckedZAP) {\n          if (mode === 'OnlyCoinB') {\n            params = {\n              uuid,\n              mode: 'OnlyCoinB',\n              pool_id: vaultsId,\n              coin_amount_b: inputAmount\n            }\n          }\n          if (mode === 'OnlyCoinA') {\n            params = {\n              uuid,\n              mode: 'OnlyCoinA',\n              pool_id: vaultsId,\n              coin_amount_a: inputAmount\n            }\n          }\n          if (mode == 'FlexibleBoth') {\n            params = {\n              uuid,\n              mode: 'FlexibleBoth',\n              pool_id: vaultsId,\n              coin_amount_a: fix_amount_a ? inputAmount : otherAmount,\n              coin_amount_b: fix_amount_a ? otherAmount : inputAmount\n            }\n          }\n        } else {\n          params = {\n            uuid,\n            mode: 'FixedOneSide',\n            fixed_amount: inputAmount,\n            fixed_coin_a: fix_amount_a,\n            pool_id: vaultsId\n          }\n        }\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:193 ~ preCalculate ~ params:', params)\n        const res = await volatileVaultsSdk.Vaults.preCalculateDepositAmount(params, {\n          onSuccess: (receive_lp_amount, uuid) => {\n            // uuid和params.uuid一致 并且输入框有值\n            // mode == FixedOneSide A或者B有值就可以\n            // mode == FixedBoth A、B都有值\n            if (\n              uuid == params.uuid &&\n              (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n                ? amountInputARef.current || amountInputBRef.current\n                : amountInputARef.current && amountInputBRef.current)\n            ) {\n              console.log('🚀🚀🚀 ~ useVaultsAdd.ts:216 ~ preCalculate ~ setCalculateResult:')\n\n              setCalculateResult({\n                amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n                amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n                ft_amount: receive_lp_amount\n              })\n              setCalculateLpLoading(false)\n            }\n          },\n          onError: (error, uuid) => {\n            console.log('🚀 ~ preCalculate ~ error:', error)\n          }\n        })\n        console.log('🚀 ~ preCalculate ~ res:', {\n          ...res,\n          uuid,\n          assetAction,\n          '+amountInputARef.current': +amountInputARef.current\n        })\n\n        if (uuidRef.current !== uuid) return\n\n        // 预计算之后sdk按照合约方向返回 这里处理方向\n        const wrapRes: DepositCalculationResult = {\n          amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n          amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b\n        }\n        // 计算比例\n        if (\n          assetAction == 'both' && isCheckedZAP\n            ? amountInputARef.current && amountInputBRef.current\n            : amountInputARef.current || amountInputBRef.current\n        ) {\n          calculateDepositRatioWithAvailableCapacity(wrapRes)\n        }\n        // 如果输入数量太小有ft_amount为0的情况\n        if (wrapRes.ft_amount == '0') {\n          setCalculateResult(undefined)\n          return\n        }\n        // 单token质押不需要执行下边赋值的规则\n        if (isCheckedZAP) {\n          setCalculateResult(wrapRes)\n          return\n        }\n\n        // 处理非 ZAP 模式\n        if (assetAction === 'both') {\n          // fix_amount_a 方向转换（合约方向 -> 页面方向）\n          const fix_amount_a_page = isReverse ? !fix_amount_a : fix_amount_a\n\n          if (fix_amount_a_page) {\n            if (+amountInputARef.current) {\n              setAmountInputB(fromDecimalsAmountFix(wrapRes.amount_b.toString(), isReverse ? tokenA?.decimals : tokenB?.decimals).toString())\n            } else {\n              setAmountInputB('')\n            }\n          } else {\n            if (+amountInputBRef.current) {\n              setAmountInputA(fromDecimalsAmountFix(wrapRes.amount_a.toString(), isReverse ? tokenB?.decimals : tokenA?.decimals).toString())\n            } else {\n              setAmountInputA('')\n            }\n          }\n        }\n\n        // 单边资产计算\n        if (assetAction !== 'both' || !isCheckedZAP) {\n          setCalculateResult(wrapRes)\n        }\n      } catch (error) {\n        // 超过硬顶\n        if (String(error).indexOf('has reached hardCap') > -1) {\n          // setOverHardtop(true)\n          // setPreCalculateLoading(false)\n        }\n        console.log('🚀 ~ preCalculate ~ error:', error)\n        setCalculateResult(undefined)\n      } finally {\n        // setPreCalculateLoading(false)\n      }\n    }\n  }\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n\n  // 输入数量监听 // other_amount 开启zap 可以自由输入A、B数量\n  const handleAmountInputChange = (amount: string, fix_amount_a: boolean, resetTargetInput: boolean = true, other_amount: string) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:294 ~ handleAmountInputChange ~ amount:', amount)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:294 ~ handleAmountInputChange ~ other_amount:', other_amount)\n    setIsSlider(false)\n    setFixAmountA(fix_amount_a)\n\n    if (!amount && !other_amount) {\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:296 ~ handleAmountInputChange ~ resetInputAmount:')\n      resetInputAmount()\n      return\n    }\n    if (isReverse ? !fix_amount_a : fix_amount_a) {\n      setAmountInputA(amount)\n      if (resetTargetInput && !isCheckedZAP) {\n        setAmountInputB('')\n      }\n    } else {\n      setAmountInputB(amount)\n      if (resetTargetInput && !isCheckedZAP) {\n        setAmountInputA('')\n      }\n    }\n\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:317 ~ handleAmountInputChange ~ gtAumLimit:', gtAumLimit)\n    if (gtAumLimit) {\n      return\n    }\n\n    if (+amount) {\n      if (isCheckedZAP && assetAction == 'both' && (!amount || !other_amount)) {\n        setPercentage(0)\n        setCalculateResult(undefined)\n        return\n      }\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedPreCalculate(amount, fix_amount_a, uuid, isReverse, other_amount)\n    } else {\n      if (!isCheckedZAP) {\n        resetInputAmount()\n      } else if (assetAction == 'both') {\n        setCalculateResult(undefined)\n        setPercentage(0)\n      } else {\n        if (assetAction == tokenA?.coin_type || assetAction == tokenB?.coin_type) {\n          resetInputAmount()\n        }\n      }\n    }\n  }\n\n  // 重新计算 仍需考虑方向\n  const reCalculateResult = () => {\n    const amount = fixAmountARef.current\n      ? isReverse\n        ? amountInputBRef.current\n        : amountInputARef.current\n      : isReverse\n        ? amountInputARef.current\n        : amountInputBRef.current\n    const other_amount = fixAmountARef.current\n      ? !isReverse\n        ? amountInputBRef.current\n        : amountInputARef.current\n      : !isReverse\n        ? amountInputARef.current\n        : amountInputBRef.current\n    if (isCheckedZAP && assetAction == 'both' && (!amount || !other_amount)) {\n      return\n    }\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedPreCalculate(amount, fixAmountARef.current, uuid, isReverse, other_amount)\n    }\n\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:329 ~ reCalculateResult ~ other_amount:', other_amount)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:329 ~ reCalculateResult ~ amount:', amount)\n  }\n\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n  // 提交交易\n  const doAddAction = async () => {\n    if (vaultsId) {\n      setSubmitLoading(true)\n      // 处理页面上的值 保证按照合约A,B传入\n      const depositParams = {\n        pool_id: vaultsId,\n        amount_a: String(\n          isReverse ? toDecimalsAmount(amountInputB || 0, String(tokenA?.decimals)) : toDecimalsAmount(amountInputA || 0, String(tokenA?.decimals))\n        ),\n        amount_b: String(\n          isReverse ? toDecimalsAmount(amountInputA || 0, String(tokenB?.decimals)) : toDecimalsAmount(amountInputB || 0, String(tokenB?.decimals))\n        )\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:261 ~ doAddAction ~ depositParams:', depositParams)\n      // 构建 交易提示\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>, res?: any) => {\n          console.log('🚀🚀🚀 ~ useVaultsAdd.ts:306 ~ doAddAction ~ res:', res)\n          // 提示语也需要处理方向\n          const description =\n            'Deposit ' +\n            [\n              formatDescription(isReverse ? amountInputA : amountInputA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n              formatDescription(isReverse ? amountInputB : amountInputB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n            ]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA\n            let amountB = amountInputB\n\n            if (res) {\n              res.events.forEach(event => {\n                console.log('🚀🚀🚀 ~ useVaultsAdd.ts:367 ~ doAddAction ~ event:', event)\n                if (event.type.indexOf('::pool::DepositEvent') > -1 && tokenA && tokenB) {\n                  amountA = String(fromDecimalsAmount(event.parsedJson.amount_a, tokenA.decimals))\n                  console.log('🚀🚀🚀 ~ useVaultsAdd.ts:361 ~ doAddAction ~ amountA:', amountA)\n                  amountB = String(fromDecimalsAmount(event.parsedJson.amount_b, tokenB.decimals))\n                  console.log('🚀🚀🚀 ~ useVaultsAdd.ts:363 ~ doAddAction ~ amountB:', amountB)\n                }\n              })\n            }\n\n            // if (balanceChanges) {\n            //   amountA = d(amountInputA).gt(0) ? getBalanceChanges(balanceChanges, tokenA) || amountInputA : ''\n            //   amountB = d(amountInputB).gt(0) ? getBalanceChanges(balanceChanges, tokenB) || amountInputB : ''\n            // }\n            const description =\n              'Deposit ' +\n              [\n                formatDescription(isReverse ? amountB : amountA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n                formatDescription(isReverse ? amountA : amountB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n              ]\n                .filter(Boolean)\n                .join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n            info.toastTitleText = 'Deposit successful'\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n\n      try {\n        const tx = new Transaction()\n        await volatileVaultsSdk.Vaults.buildDepositPayload(depositParams, tx)\n        const res = await signAndExecuteTransaction(tx, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: depositParams\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          autoRefresh()\n        } else {\n          reCalculateResult()\n        }\n      } catch (error) {\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  // 清空输入框\n  const resetInputAmount = () => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:487 ~ resetInputAmount ~ resetInputAmount:')\n    setPercentage(0)\n    setAmountInputA('')\n    setAmountInputB('')\n    // setPreCalculateLoading(false)\n    setCalculateResult(undefined)\n    setUuid('')\n    // setOverHardtop(false)\n  }\n  // ----  非稳vault应该不需要这部分\n  // const { stakeProtocolName } = useGetSuiStakeProtocol(!fixAmountARef.current ? tokenA?.coin_type : tokenB?.coin_type)\n  // 单边提示文案\n  // const showOnlySideTips = useMemo(() => {\n  //   if (assetAction !== 'both' && tokenA && tokenB) {\n  //     const amount = fixAmountARef.current ? amountInputA : amountInputB\n  //     const fixToken = fixAmountARef.current ? tokenA : tokenB\n  //     const targetToken = fixAmountARef.current ? tokenB : tokenA\n\n  //     console.log('🚀🚀🚀 ~ useVaultsAdd.ts:381 ~ showOnlySideTips ~ calculateResult:', calculateResult)\n  //     if (calculateResult && calculateResult.swap_result) {\n  //       const swapInAmount = fromDecimalsAmountFix(calculateResult.swap_result.swap_in_amount, fixToken.decimals)\n  //       const swapOutAmount = fromDecimalsAmountFix(\n  //         d(calculateResult.swap_result.swap_out_amount)\n  //           .mul(1 - Number(vaultsSlippage))\n  //           .toString(),\n  //         targetToken.decimals\n  //       )\n\n  //       if (CoinAssist.isSuiCoin(fixToken.coin_type)) {\n  //         return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} SUI, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} SUI will be converted to ${targetToken?.symbol} via ${stakeProtocolName} liquid staking and added to the pool together.`\n  //       }\n  //       return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} ${fixToken?.symbol}, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} ${fixToken?.symbol} will be traded for ${convertScientificToDecimal(formatNumber(swapOutAmount, 9).toString(), 9)} ${targetToken?.symbol} and then added to the pool together.`\n  //     }\n  //   }\n\n  //   return undefined\n  // }, [assetAction, calculateResult, amountInputA, amountInputB])\n\n  const preCalculateDepositValue = async (percent: number, uuid: string, availableCapacityWithCoin: string, coin: Token) => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:522 ~ uuid:', uuid)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:522 ~ percent:', percent)\n\n    if (d(percent).lte(0)) {\n      setCalculateResult(undefined)\n      setAmountInputA('')\n      setAmountInputB('')\n      return\n    }\n    setCalculateLpLoading(true)\n    setDetailRefreshCount(0)\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:536 ~ preCalculateDepositValue ~ coin:', coin)\n    const coinPrice = priceMap[fixCoinType(coin?.coin_type)]?.price\n    if (tokenA && tokenB && vaultsId) {\n      const amountUSD = d(availableCapacityWithCoin).mul(percent).div(100).mul(coinPrice).toString()\n      const amount = d(availableCapacityWithCoin).mul(percent).div(100).toString()\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:538 ~ preCalculateDepositValue ~ amount:', amount)\n      let mode\n      if (isCheckedZAP) {\n        mode = assetAction == 'both' ? 'FlexibleBoth' : assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n      } else {\n        mode = 'FixedOneSide'\n      }\n\n      const params = {\n        mode: mode as DepositMode,\n        pool_id: vaultsId,\n        amount_usd: amountUSD,\n        uuid\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:532 ~ preCalculateDepositValue ~ params:', params)\n      const res = await volatileVaultsSdk.Vaults.preCalculateDepositValue(params, {\n        onSuccess: (receive_lp_amount, uuid) => {\n          if (\n            uuid == params.uuid &&\n            (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n              ? amountInputARef.current || amountInputBRef.current\n              : amountInputARef.current && amountInputBRef.current)\n          ) {\n            console.log('🚀🚀🚀 ~ useVaultsAdd.ts:550 ~ preCalculateDepositValue ~ setCalculateResult:', receive_lp_amount)\n\n            setCalculateResult({\n              amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n              amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n              ft_amount: receive_lp_amount\n            })\n            setCalculateLpLoading(false)\n          }\n        },\n        onError: (error, uuid) => {\n          console.log('🚀 ~ preCalculate ~ error:', error)\n        }\n      })\n      if (uuidRef.current !== uuid) return\n\n      const wrapRes = {\n        amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n        amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b\n      }\n      setCalculateResult(wrapRes)\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:524 ~ handlePercentInputChange ~ wrapRes:', wrapRes, tokenA, tokenB)\n      if (res) {\n        if (assetAction == 'both') {\n          setAmountInputA(fromDecimalsAmountFix(wrapRes.amount_a.toString(), isReverse ? tokenB?.decimals : tokenA?.decimals).toString())\n          setAmountInputB(fromDecimalsAmountFix(wrapRes.amount_b.toString(), isReverse ? tokenA?.decimals : tokenB?.decimals).toString())\n        } else {\n          console.log('🚀🚀🚀 ~ useVaultsAdd.ts:591 ~ preCalculateDepositValue ~ assetAction:', assetAction, tokenA?.coin_type, tokenB?.coin_type)\n          if (assetAction == tokenA?.coin_type) {\n            if (!isReverse) {\n              setAmountInputA(formatNumber(amount, coin?.decimals, true, Decimal.ROUND_DOWN).toString())\n            } else {\n              setAmountInputB(formatNumber(amount, coin?.decimals, true, Decimal.ROUND_DOWN).toString())\n            }\n          } else {\n            if (!isReverse) {\n              setAmountInputB(formatNumber(amount, coin?.decimals, true, Decimal.ROUND_DOWN).toString())\n            } else {\n              setAmountInputA(formatNumber(amount, coin?.decimals, true, Decimal.ROUND_DOWN).toString())\n            }\n          }\n        }\n        console.log('🚀🚀🚀 ~ useVaultsAdd.ts:591 ~ preCalculateDepositValue ~ amount:', amount)\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:520 ~ handlePercentInputChange ~ res:', res)\n    }\n  }\n\n  const debouncedPreCalculateDepositValue = useDebounceFunction(preCalculateDepositValue, 500)\n  const calculateDepositRatioWithAvailableCapacity = async (wrapRes: any) => {\n    if (gtAumLimit) {\n      return\n    }\n    if (tokenA && tokenB) {\n      const priceA = priceMap?.[fixCoinType(isReverse ? tokenB?.coin_type : tokenA?.coin_type)]?.price\n      const priceB = priceMap?.[fixCoinType(isReverse ? tokenA?.coin_type : tokenB?.coin_type)]?.price\n      const amountA = fromDecimalsAmount(wrapRes.amount_a, isReverse ? tokenB?.decimals : tokenA?.decimals)\n      const amountB = fromDecimalsAmount(wrapRes.amount_b, isReverse ? tokenA?.decimals : tokenB?.decimals)\n      const amountUSD = d(amountA).mul(priceA).add(d(amountB).mul(priceB)).toString()\n      const availableCapacity = d(hardCapUSD).sub(d(vaultTvl)).toString()\n      const ratio = d(amountUSD).div(d(availableCapacity)).mul(100)\n      const uuid = v4()\n      setUuid(uuid)\n      if (ratio.gt(100)) {\n        setPercentage(100)\n        debouncedPreCalculateDepositValue(100, uuid, availableCapacityWithQuoteCoin, quoteCoin)\n      } else {\n        if (amountInputARef.current || amountInputBRef.current) {\n          setPercentage(formatNumber(ratio.toString(), 2))\n        }\n      }\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:211 ~ calculateDepositRatioWithAvailableCapacity ~ ratio:', ratio.toString())\n    }\n  }\n\n  // const availableCapacity = useMemo(() => {\n  //   return d(hardCapUSD).sub(d(vaultTvl)).toString()\n  // }, [vaultTvl, hardCapUSD])\n\n  // useEffect(() => {\n  //   if (availableCapacity && (amountInputA || amountInputB)) {\n  //     reCalculateResult()\n  //   }\n  // }, [availableCapacity, amountInputA, amountInputB])\n\n  // useEffect(() => {\n  //   if (availableCapacity && isSlider) {\n  //     const uuid = v4()\n  //     setUuid(uuid)\n  //     debouncedPreCalculateDepositValue(percentage, uuid, availableCapacityWithQuoteCoin, quoteCoin)\n  //   }\n  // }, [availableCapacity, isSlider, percentage, uuid, availableCapacityWithQuoteCoin, quoteCoin])\n\n  useEffect(() => {\n    if (!isSlider && (amountInputA || amountInputB)) {\n      reCalculateResult()\n    } else if (isSlider && (amountInputA || amountInputB)) {\n      const uuid = v4()\n      setUuid(uuid)\n      const availableCapacityWitheCoin = isQuoteCoin ? availableCapacityWithQuoteCoin : availableCapacityWithBaseCoin\n      const coin = isQuoteCoin ? quoteCoin : baseCoin\n      debouncedPreCalculateDepositValue(percentage, uuid, availableCapacityWitheCoin, coin)\n    }\n  }, [isSlider, availableCapacityWithQuoteCoin, quoteCoin])\n\n  return {\n    handleAmountInputChange,\n    fixAmountA,\n    amountInputA,\n    amountInputB,\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    inputTotalValue,\n    calculateResult,\n    // showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    overHardtop,\n    zapNumError,\n    calculateLpLoading,\n    inputTotalValueError,\n    debouncedPreCalculateDepositValue,\n    percentage,\n    setPercentage,\n    setIsSlider,\n    isSlider,\n    setUuid\n  } as any\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useGlobalStore from '@/store/common/global'\nimport useVaultsListStore from '@/store/vaults/useVaultsList'\nimport { MsafeTransactionSubType } from '@/types'\nimport { AssetActionType } from '@/types/vaults'\nimport { formatDescription } from '@/utils'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { convertScientificToDecimal, d, formatNumber, fromDecimalsAmountFix, getBalanceChanges } from '@cetus/utils'\nimport { CoinAssist, toDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { CalculateAmountParams, CalculateAmountResult, DepositParams, InputType } from '@cetusprotocol/vaults-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport { useGetSuiStakeProtocol } from './useVaultsHelper'\n\nexport default function useStableVaultsAdd(assetAction: AssetActionType, autoRefresh: () => void, vaultsId?: string, tokenA?: Token, tokenB?: Token) {\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const { setDetailRefreshCount } = useVaultsListStore()\n  const { vaultsSdk } = usePeripherySDKStore()\n  const { vaultsSlippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n\n  const [amountInputA, setAmountInputA] = useState<string>('')\n  const [amountInputB, setAmountInputB] = useState<string>('')\n  const [fixAmountA, setFixAmountA] = useState<boolean>(true)\n  const [uuid, setUuid] = useState<string>('')\n\n  const uuidRef = useRef<string>('')\n  const fixAmountARef = useRef<boolean>(true)\n  const amountInputARef = useRef<string>('')\n  const amountInputBRef = useRef<string>('')\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  useEffect(() => {\n    fixAmountARef.current = fixAmountA\n  }, [fixAmountA])\n\n  useEffect(() => {\n    amountInputARef.current = amountInputA\n  }, [amountInputA])\n\n  useEffect(() => {\n    amountInputBRef.current = amountInputB\n  }, [amountInputB])\n\n  //获取价格\n  useEffect(() => {\n    const coinTypeList: string[] = []\n    if (tokenA && tokenB) {\n      coinTypeList.push(tokenA.coin_type)\n      coinTypeList.push(tokenB.coin_type)\n    }\n    if (coinTypeList.length > 0) {\n      fetchTokenPrices(coinTypeList)\n    }\n  }, [tokenA?.coin_type, tokenB?.coin_type])\n\n  // 余额\n  const { balanceInfo: balanceInfoA } = useGetTokenBalance(tokenA)\n  const { balanceInfo: balanceInfoB } = useGetTokenBalance(tokenB)\n\n  // 价值\n  const amountValueA = getTokenAmountValue(tokenA?.coin_type, amountInputA)\n  const amountValueB = getTokenAmountValue(tokenB?.coin_type, amountInputB)\n  // 总价值\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // 预计算结果\n  const [preCalculateLoading, setPreCalculateLoading] = useState<boolean>(false)\n  const [calculateResult, setCalculateResult] = useState<CalculateAmountResult | undefined>(undefined)\n\n  // 预计算\n  const preCalculate = async (amount: string, fix_amount_a: boolean, uuid: string) => {\n    if (tokenA && tokenB && vaultsId) {\n      try {\n        setPreCalculateLoading(true)\n        setDetailRefreshCount(0)\n        const fixToken = fix_amount_a ? tokenA : tokenB\n        const inputAmount = toDecimalsAmount(amount, fixToken.decimals).toFixed(0)\n        const params: CalculateAmountParams = {\n          vault_id: vaultsId,\n          fix_amount_a,\n          input_amount: inputAmount,\n          slippage: Number(vaultsSlippage),\n          request_id: uuid,\n          side: assetAction === 'both' ? InputType.Both : InputType.OneSide\n        }\n        console.log('🚀 ~ preCalculate ~ params:', params, uuid)\n        const res = await vaultsSdk.Vaults.calculateDepositAmount(params, true, true)\n        console.log('🚀 ~ preCalculate ~ res:', {\n          ...res,\n          uuid,\n          assetAction,\n          '+amountInputARef.current': +amountInputARef.current\n        })\n\n        if (uuidRef.current === uuid) {\n          // 双边\n          if (assetAction === 'both') {\n            if (fix_amount_a) {\n              if (+amountInputARef.current) {\n                setAmountInputB(fromDecimalsAmountFix(res.amount_b.toString(), tokenB.decimals).toString())\n                setCalculateResult(res)\n              } else {\n                setAmountInputB('')\n              }\n            } else {\n              if (+amountInputBRef.current) {\n                setAmountInputA(fromDecimalsAmountFix(res.amount_a.toString(), tokenA.decimals).toString())\n                setCalculateResult(res)\n              } else {\n                setAmountInputA('')\n              }\n            }\n          }\n          // 单边\n          if (assetAction !== 'both') {\n            setCalculateResult(res)\n          }\n        }\n      } catch (error) {\n        console.log('🚀 ~ preCalculate ~ error:', error)\n        setCalculateResult(undefined)\n      } finally {\n        setPreCalculateLoading(false)\n      }\n    }\n  }\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n\n  // 输入数量监听\n  const handleAmountInputChange = (amount: string, fix_amount_a: boolean, resetTargetInput: boolean = true) => {\n    setFixAmountA(fix_amount_a)\n    if (fix_amount_a) {\n      setAmountInputA(amount)\n      if (resetTargetInput) {\n        setAmountInputB('')\n      }\n    } else {\n      setAmountInputB(amount)\n      if (resetTargetInput) {\n        setAmountInputA('')\n      }\n    }\n\n    if (+amount) {\n      const isSuiCoin = CoinAssist.isSuiCoin(assetAction)\n      //  如果是单边 sui。 则需要最低10个\n      if (isSuiCoin && d(amount).lt(3)) {\n        setUuid('')\n        setCalculateResult(undefined)\n        setPreCalculateLoading(false)\n        return\n      }\n      if (!isSuiCoin) {\n        //  价值不能超过$10000\n        const amountValue = getTokenAmountValue(assetAction, amount)\n        if (d(amountValue).gt(10000)) {\n          setUuid('')\n          setCalculateResult(undefined)\n          setPreCalculateLoading(false)\n          return\n        }\n      }\n\n      const uuid = v4()\n      setUuid(uuid)\n      if (assetAction === 'both') {\n        setPreCalculateLoading(true)\n      }\n      debouncedPreCalculate(amount, fix_amount_a, uuid)\n    } else {\n      resetInputAmount()\n    }\n  }\n\n  // 重新计算\n  const reCalculateResult = () => {\n    const amount = fixAmountARef.current ? amountInputARef.current : amountInputBRef.current\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedPreCalculate(amount, fixAmountARef.current, uuid)\n    }\n  }\n\n  // 切换资产类型，清空输入框\n  useEffect(() => {\n    resetInputAmount()\n  }, [assetAction])\n\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n  // 提交交易\n  const doAddAction = async () => {\n    if (vaultsId && calculateResult) {\n      setSubmitLoading(true)\n      const input_amount = toDecimalsAmount(fixAmountA ? amountInputA : amountInputB, 9)\n      const params: DepositParams = {\n        vault_id: vaultsId,\n        slippage: Number(vaultsSlippage),\n        deposit_result: calculateResult\n      }\n\n      // 构建 交易提示\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n          const description =\n            'Deposit ' +\n            [formatDescription(amountInputA, tokenA?.symbol), formatDescription(amountInputB, tokenB?.symbol)].filter(Boolean).join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA\n            let amountB = amountInputB\n\n            if (balanceChanges) {\n              amountA = d(amountInputA).gt(0) ? getBalanceChanges(balanceChanges, tokenA) || amountInputA : ''\n              amountB = d(amountInputB).gt(0) ? getBalanceChanges(balanceChanges, tokenB) || amountInputB : ''\n            }\n            const description =\n              'Deposit ' + [formatDescription(amountA, tokenA?.symbol), formatDescription(amountB, tokenB?.symbol)].filter(Boolean).join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n            info.toastTitleText = 'Deposit successful'\n          }\n\n          return info\n        }\n      }\n\n      try {\n        const txb = async () => {\n          const tx = new Transaction()\n          tx.setSender(vaultsSdk.senderAddress)\n          await vaultsSdk.Vaults.deposit(params, tx)\n          console.log('🚀 ~ doAddAction ~ params:', {\n            params,\n            tx\n          })\n          return tx\n        }\n\n        const res = await signAndExecuteTransaction(txb, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: params\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          autoRefresh()\n        } else {\n          reCalculateResult()\n        }\n      } catch (error) {\n        console.log('🚀 ~ doAddAction ~ error:', error)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  // 清空输入框\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    setPreCalculateLoading(false)\n    setCalculateResult(undefined)\n    setUuid('')\n  }\n  const { stakeProtocolName } = useGetSuiStakeProtocol(!fixAmountARef.current ? tokenA?.coin_type : tokenB?.coin_type)\n  // 单边提示文案\n  const showOnlySideTips = useMemo(() => {\n    console.log('🚀🚀🚀 ~ useVaultsAdd.ts:291 ~ showOnlySideTips ~ assetAction:', assetAction)\n    if (assetAction !== 'both' && tokenA && tokenB) {\n      const amount = fixAmountARef.current ? amountInputA : amountInputB\n      const fixToken = fixAmountARef.current ? tokenA : tokenB\n      const targetToken = fixAmountARef.current ? tokenB : tokenA\n\n      console.log('🚀🚀🚀 ~ useVaultsAdd.ts:290 ~ showOnlySideTips ~ calculateResult:', calculateResult)\n      if (calculateResult && calculateResult.swap_result) {\n        const swapInAmount = fromDecimalsAmountFix(calculateResult.swap_result.swap_in_amount, fixToken.decimals)\n        const swapOutAmount = fromDecimalsAmountFix(\n          d(calculateResult.swap_result.swap_out_amount)\n            .mul(1 - Number(vaultsSlippage))\n            .toString(),\n          targetToken.decimals\n        )\n\n        if (CoinAssist.isSuiCoin(fixToken.coin_type)) {\n          return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} SUI, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} SUI will be converted to ${targetToken?.symbol} via ${stakeProtocolName} liquid staking and added to the pool together.`\n        }\n        return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} ${fixToken?.symbol}, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} ${fixToken?.symbol} will be traded for ${convertScientificToDecimal(formatNumber(swapOutAmount, 9).toString(), 9)} ${targetToken?.symbol} and then added to the pool together.`\n      } else {\n        if (!CoinAssist.isSuiCoin(assetAction)) {\n          const amountValue = getTokenAmountValue(assetAction, amount)\n          console.log('🚀🚀🚀 ~ useVaultsAdd.ts:313 ~ showOnlySideTips ~ amountValue:', amountValue)\n          if (d(amountValue).gt(10000)) {\n            return \"Single-asset deposit can't be higher than $10,000 at a time.\"\n          }\n        }\n      }\n    }\n\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB])\n\n  return {\n    handleAmountInputChange,\n    fixAmountA,\n    amountInputA,\n    amountInputB,\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    inputTotalValue,\n    calculateResult,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult\n  }\n}\n","import { AssetActionType } from '@/types/vaults'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { d } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nexport default function useUnstableAddButtonStatus(\n  isCheckedZAP: boolean,\n  assetAction: AssetActionType,\n  isAdd: boolean,\n  amountInputA: string,\n  amountInputB: string,\n  fixAmountA: boolean,\n  balanceA?: string,\n  balanceB?: string,\n  tokenA?: Token,\n  tokenB?: Token,\n  zapNumError?: string,\n  calculateResult?: any,\n  overHardtop?: boolean,\n  inputTotalValueError?: boolean\n) {\n  const { currentAccount } = useAccountStore()\n\n  // 按钮状态\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: undefined,\n      disabled: false\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    if (!tokenA || !tokenB) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // 判断输入\n    // 双边\n    if (assetAction === 'both') {\n      if (!+amountInputA && !+amountInputB) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n      if (isCheckedZAP && (!+amountInputA || !+amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    // 单边输入\n    if (assetAction !== 'both') {\n      if (!(+amountInputA || +amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n\n    // 判断余额\n    // 双边\n    if (assetAction === 'both') {\n      if (d(amountInputA).gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB).gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n    // 单边\n    if (assetAction !== 'both') {\n      if (d(amountInputA).gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB).gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n\n    //ZAP模式添加 超过$10000\n    if (isAdd && zapNumError && !overHardtop) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //ZAP模式添加 单token质押是否小于0.0001\n    if (isAdd && isCheckedZAP && inputTotalValueError) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //ZAP模式添加 预计算结果为0\n    if ((calculateResult && calculateResult.ft_amount == '0') || (calculateResult && calculateResult.burn_ft_amount == '0') || !calculateResult) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [currentAccount?.address, assetAction, amountInputA, amountInputB, balanceA, balanceB, calculateResult, isAdd, zapNumError])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n","import { AssetActionType } from '@/types/vaults'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { d } from '@cetus/utils'\nimport { CoinAssist } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useMemo } from 'react'\n\nexport default function useStableAddButtonStatus(\n  isCheckedZAP: boolean,\n  assetAction: AssetActionType,\n  isAdd: boolean,\n  amountInputA: string,\n  amountInputB: string,\n  fixAmountA: boolean,\n  balanceA?: string,\n  balanceB?: string,\n  tokenA?: Token,\n  tokenB?: Token\n) {\n  const { currentAccount } = useAccountStore()\n\n  // 按钮状态\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: undefined,\n      disabled: false\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    if (!tokenA || !tokenB) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // 判断输入\n    // 双边\n    if (assetAction === 'both') {\n      if (!+amountInputA && !+amountInputB) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    // 单边输入\n    if (assetAction !== 'both') {\n      if (!(+amountInputA || +amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n      // 单边添加流动性。 最少10 sui\n      if (isAdd) {\n        const isSUI = CoinAssist.isSuiCoin(assetAction)\n        if (\n          (isSUI && assetAction === tokenA?.coin_type && d(amountInputA).lt(3)) ||\n          (isSUI && assetAction === tokenB?.coin_type && d(amountInputB).lt(3))\n        ) {\n          btnInfo.text = 'Minimum deposit 3 SUI'\n          btnInfo.disabled = true\n          return btnInfo\n        }\n      }\n    }\n\n    // 判断余额\n    // 双边\n    if (assetAction === 'both') {\n      if (d(amountInputA).gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB).gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n    // 单边\n    if (assetAction !== 'both') {\n      if (fixAmountA && d(amountInputA).gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (!fixAmountA && d(amountInputB).gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n\n    if (isCheckedZAP && assetAction !== 'both') {\n      btnInfo.text = isAdd ? `Zap In` : 'Zap Out'\n      return btnInfo\n    }\n\n    console.log('🚀🚀🚀 ~ submitBtnInfo ~ btnInfo:', btnInfo)\n    return btnInfo\n  }, [currentAccount?.address, assetAction, amountInputA, amountInputB, balanceA, balanceB])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useGlobalStore from '@/store/common/global'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { MsafeTransactionSubType } from '@/types'\nimport { AssetActionType, VaultCoinAmounts } from '@/types/vaults'\nimport { formatDescription } from '@/utils'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, formatNumber, formatNumberWithDown, fromDecimalsAmountFix, getBalanceChanges } from '@cetus/utils'\nimport { toDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { CalculateRemoveAmountResult } from '@cetusprotocol/vaults-sdk'\nimport { WithdrawCalculationOptions, WithdrawOptions } from 'haedal-vault-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\n\nexport default function useVaultsRemove(\n  assetAction: AssetActionType,\n  autoRefresh: () => void,\n  holdCoinAmounts: VaultCoinAmounts,\n  holdLpAmount?: string,\n  vaultsId?: string,\n  tokenA?: Token,\n  tokenB?: Token,\n  isReverse?: boolean,\n  isCheckedZAP?: boolean,\n  contractClmmPoolInfo?: any\n) {\n  const { vaultsSlippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { currentAccount } = useAccountStore()\n  const { setDetailRefreshCount } = useUnstableVaultsListStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n\n  const [amountInputA, setAmountInputA] = useState<string>('')\n  const [amountInputB, setAmountInputB] = useState<string>('')\n  const [fixAmountA, setFixAmountA] = useState<boolean>(true)\n  const [uuid, setUuid] = useState<string>('')\n  const [isPercentInput, setIsPercentInput] = useState<boolean>(false)\n  const [removePercent, setRemovePercent] = useState<number>(0)\n\n  const uuidRef = useRef<string>(uuid)\n  const fixAmountARef = useRef<boolean>(fixAmountA)\n  const amountInputARef = useRef<string>(amountInputA)\n  const amountInputBRef = useRef<string>(amountInputB)\n  const isPercentInputRef = useRef<boolean>(isPercentInput)\n  const removePercentRef = useRef<number>(removePercent)\n\n  useEffect(() => {\n    removePercentRef.current = removePercent\n  }, [removePercent])\n\n  useEffect(() => {\n    isPercentInputRef.current = isPercentInput\n  }, [isPercentInput])\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  useEffect(() => {\n    fixAmountARef.current = fixAmountA\n  }, [fixAmountA])\n\n  useEffect(() => {\n    amountInputARef.current = isReverse ? amountInputA : amountInputA\n  }, [amountInputA, isReverse, amountInputB])\n\n  useEffect(() => {\n    amountInputBRef.current = isReverse ? amountInputB : amountInputB\n  }, [amountInputB, isReverse, amountInputA])\n\n  //获取价格\n  useEffect(() => {\n    const coinTypeList: string[] = []\n    if (tokenA && tokenB) {\n      coinTypeList.push(tokenA.coin_type)\n      coinTypeList.push(tokenB.coin_type)\n    }\n    if (coinTypeList.length > 0) {\n      fetchTokenPrices(coinTypeList)\n    }\n  }, [tokenA?.coin_type, tokenB?.coin_type])\n\n  // 可用数量\n  const [availableAmountA, setAvailableAmountA] = useState<string>('0')\n  const [availableAmountB, setAvailableAmountB] = useState<string>('0')\n  const [calculateAvailableLoading, setCalculateAvailableLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (holdCoinAmounts && holdCoinAmounts?.coinAmountA && holdCoinAmounts?.coinAmountB) {\n      calculateAvailableAmount()\n    }\n  }, [holdCoinAmounts?.coinAmountA, holdCoinAmounts?.coinAmountB])\n\n  // 资产变更，计算 A B可用数量\n  useEffect(() => {\n    reCalculateResult()\n  }, [contractClmmPoolInfo?.current_sqrt_price])\n\n  // 计算可用资产\n  const calculateAvailableAmount = async () => {\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:103 ~ calculateAvailableAmount ~ calculateAvailableAmount:')\n    const { coinAmountA, coinAmountB } = holdCoinAmounts\n    setCalculateAvailableLoading(false)\n    if (assetAction === 'both') {\n      setAvailableAmountA(isReverse ? coinAmountB : coinAmountA)\n      setAvailableAmountB(isReverse ? coinAmountA : coinAmountB)\n      return\n    }\n\n    // 利用findRouter 转化为 单一资产\n    const isOnlyReceiveCoinA = assetAction === tokenA?.coin_type\n    const fromAmount = isOnlyReceiveCoinA ? coinAmountB : coinAmountA\n    const targetAmount = isOnlyReceiveCoinA ? coinAmountA : coinAmountB\n    if (d(fromAmount).gt(0)) {\n      setCalculateAvailableLoading(true)\n      const uuid = v4()\n      setUuid(uuid)\n      // mode为合约方向\n      const mode = assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:127 ~ calculateAvailableAmount ~ tokenA?.coin_type :', tokenA?.coin_type)\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:127 ~ calculateAvailableAmount ~ assetAction:', assetAction)\n      const params: any = {\n        pool_id: vaultsId,\n        mode,\n        burn_lp_amount: holdLpAmount,\n        available_lp_amount: holdLpAmount\n      }\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:131 ~ calculateAvailableAmount ~ params:', params)\n      try {\n        const res = await volatileVaultsSdk.Vaults.preCalculateWithdrawAmount(params)\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:138 ~ calculateAvailableAmount ~ res:', res)\n        // mode 为合约方向\n        if (mode == 'OnlyCoinA') {\n          if (tokenA?.decimals === undefined) throw new Error('tokenA.decimals is undefined')\n          const amount = fromDecimalsAmountFix(res.receive_amount_a, tokenA?.decimals)\n          if (isReverse) {\n            setAvailableAmountB(amount)\n          } else {\n            setAvailableAmountA(amount)\n          }\n        } else {\n          if (tokenB?.decimals === undefined) throw new Error('tokenB.decimals is undefined')\n          const amount = fromDecimalsAmountFix(res.receive_amount_b, tokenB?.decimals)\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:148 ~ calculateAvailableAmount ~ amount:', amount)\n          if (isReverse) {\n            setAvailableAmountA(amount)\n          } else {\n            setAvailableAmountB(amount)\n          }\n        }\n        setCalculateAvailableLoading(false)\n      } catch (error) {\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:145 ~ calculateAvailableAmount ~ error:', error)\n      }\n    } else {\n      if (isOnlyReceiveCoinA) {\n        setAvailableAmountA(targetAmount)\n      } else {\n        setAvailableAmountB(targetAmount)\n      }\n    }\n  }\n\n  // 价值\n  const amountValueA = getTokenAmountValue(isReverse ? tokenB?.coin_type : tokenA?.coin_type, amountInputA)\n  const amountValueB = getTokenAmountValue(isReverse ? tokenA?.coin_type : tokenB?.coin_type, amountInputB)\n  // 总价值ß\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n  console.log('🚀🚀🚀 ~ useVaultsRemove.ts:170 ~ inputTotalValue ~ amountValueB:', amountValueB)\n  console.log('🚀🚀🚀 ~ useVaultsRemove.ts:170 ~ inputTotalValue ~ amountValueA:', amountValueA)\n\n  // 预计算结果\n  const [preCalculateLoading, setPreCalculateLoading] = useState<boolean>(false)\n  const [calculateResult, setCalculateResult] = useState<CalculateRemoveAmountResult | undefined>(undefined)\n\n  /**\n   * 预计算\n   * @param amount\n   * @param isPercentInput\n   * @param fix_amount_a\n   * @param uuid\n   */\n  const preCalculate = async (\n    amount: string,\n    is_ft_input: boolean,\n    fix_amount_a: boolean,\n    uuid: string,\n    removePercent?: number,\n    isSlider?: boolean\n  ) => {\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:210 ~ removePercent:', removePercent)\n    // fix_amount_a为合约方向\n    if (d(removePercent).gt(100)) {\n      setUuid('')\n      setCalculateResult(undefined)\n      setPreCalculateLoading(false)\n      return\n    }\n    if (tokenA && tokenB && vaultsId && holdLpAmount) {\n      // 非百分比输入，要判断余额是否足够\n      if (!removePercent) {\n        if (fix_amount_a) {\n          if (d(amount).gt(isReverse ? availableAmountB : availableAmountA)) {\n            setUuid('')\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            return\n          }\n        } else {\n          if (d(amount).gt(isReverse ? availableAmountA : availableAmountB)) {\n            setUuid('')\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            return\n          }\n        }\n      }\n\n      setDetailRefreshCount(0)\n      if (+amountInputARef.current || +amountInputBRef.current || removePercent) {\n        setPreCalculateLoading(true)\n      }\n      const fixToken = fix_amount_a ? tokenA : tokenB\n      const inputAmount = is_ft_input ? formatNumberWithDown(amount, 0, true) : toDecimalsAmount(amount, fixToken.decimals).toFixed(0)\n\n      let params: WithdrawCalculationOptions\n\n      if (assetAction == 'both') {\n        params = {\n          pool_id: vaultsId,\n          mode: 'FixedOneSide',\n          burn_lp_amount: String(inputAmount)\n        }\n      } else {\n        const mode = assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n        params = {\n          pool_id: vaultsId,\n          mode,\n          burn_lp_amount: String(inputAmount)\n        }\n      }\n\n      console.log('🚀 ~ preCalculate ~ params:', params, uuid, removePercent)\n      try {\n        const res = await volatileVaultsSdk.Vaults.preCalculateWithdrawAmount(params)\n        console.log('🚀 ~ preCalculate ~ res:', {\n          ...res,\n          uuid,\n          assetAction\n        })\n\n        const wrapRes: any = {\n          amount_a: isReverse ? res.receive_amount_b : res.receive_amount_a,\n          amount_b: isReverse ? res.receive_amount_a : res.receive_amount_b,\n          burn_ft_amount: res.burn_lp_amount,\n          swap: res.swap\n        }\n\n        if (wrapRes.burn_ft_amount == '0') {\n          setPreCalculateLoading(false)\n          setCalculateResult(undefined)\n          return\n        }\n\n        // if (uuidRef.current === uuid) {\n        const amountA = fromDecimalsAmountFix(wrapRes.amount_a.toString(), isReverse ? tokenB.decimals : tokenA.decimals).toString()\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:271 ~ preCalculate ~ tokenA:', tokenA)\n        const amountB = fromDecimalsAmountFix(wrapRes.amount_b.toString(), isReverse ? tokenA.decimals : tokenB.decimals).toString()\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:256 ~ preCalculate ~ amountA:', amountA, tokenA.decimals, amountB, tokenB?.decimals)\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:258 ~ preCalculate ~ amountB:', amountB)\n        // 双边\n        if (assetAction === 'both') {\n          if (is_ft_input && !isSlider) {\n            console.log('🚀🚀🚀 ~ useVaultsRemove.ts:284 ~ preCalculate ~ is_ft_input:', is_ft_input)\n            const fix_amount_a_page = isReverse ? !fix_amount_a : fix_amount_a\n            if (fix_amount_a_page) {\n              console.log('🚀🚀🚀 ~ useVaultsRemove.ts:289 ~ preCalculate ~ +amountInputARef.current:', +amountInputARef.current)\n              if (+amountInputARef.current) {\n                console.log('🚀🚀🚀 ~ useVaultsRemove.ts:293 ~ preCalculate ~ setAmountInputB:')\n                setAmountInputB(fromDecimalsAmountFix(wrapRes.amount_b.toString(), isReverse ? tokenA?.decimals : tokenB?.decimals).toString())\n                setCalculateResult(wrapRes)\n              } else {\n                setAmountInputB('')\n              }\n            } else {\n              if (+amountInputBRef.current) {\n                setAmountInputA(fromDecimalsAmountFix(wrapRes.amount_a.toString(), isReverse ? tokenB?.decimals : tokenA?.decimals).toString())\n                setCalculateResult(wrapRes)\n              } else {\n                setAmountInputA('')\n              }\n            }\n            if (removePercent === 100) {\n              // 去掉了这个功能 修改最大可用之后会触发重新计算 可能会死循环\n              // 由于价差原因，当移除100% 时， 需要修改最大可用\n              // setAvailableAmountA(amountA)\n              // setAvailableAmountB(amountB)\n            }\n          } else {\n            setCalculateResult(wrapRes)\n          }\n          // }\n        }\n        // 单边\n        if (assetAction !== 'both') {\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:336 ~ preCalculate ~ removePercent:', removePercent)\n          if (removePercent) {\n            const amountA = fromDecimalsAmountFix(\n              d(wrapRes.amount_a)\n                .add(wrapRes.amount_b || '0')\n                .toString(),\n              isReverse ? tokenB.decimals : tokenA.decimals\n            ).toString()\n            console.log('🚀🚀🚀 ~ useVaultsRemove.ts:344 ~ preCalculate ~ amountA:', amountA)\n            if (isReverse ? !fix_amount_a : fix_amount_a) {\n              if (removePercent === 100) {\n                wrapRes.burn_ft_amount = holdLpAmount\n              }\n            } else {\n              const amountB = fromDecimalsAmountFix(\n                d(wrapRes.amount_a)\n                  .add(wrapRes.amount_b || '0')\n                  .toString(),\n                isReverse ? tokenA.decimals : tokenB.decimals\n              ).toString()\n              if (removePercent === 100) {\n                wrapRes.burn_ft_amount = holdLpAmount\n              }\n            }\n          }\n          setCalculateResult(wrapRes)\n        }\n      } catch (error) {\n        console.log('🚀 ~ preCalculate ~ error:', error)\n        setCalculateResult(undefined)\n      } finally {\n        setPreCalculateLoading(false)\n      }\n    }\n  }\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n\n  // 输入数量监听\n  const handleAmountInputChange = (\n    amount: string,\n    fix_amount_a: boolean,\n    removeMax: boolean = false,\n    isHalfClickMax: boolean = false,\n    resetTargetInput: boolean = true\n  ) => {\n    // 移除全部，走LP 移除\n    if (removeMax) {\n      handlePercentInputChange(100)\n      return\n    }\n\n    if (isHalfClickMax) {\n      handlePercentInputChange(50)\n      return\n    }\n\n    setFixAmountA(fix_amount_a)\n    setIsPercentInput(false)\n\n    if (isReverse ? !fix_amount_a : fix_amount_a) {\n      setAmountInputA(amount)\n      if (resetTargetInput) {\n        setAmountInputB('')\n      } else {\n        reCalculateResult()\n      }\n    } else {\n      setAmountInputB(amount)\n      if (resetTargetInput) {\n        setAmountInputA('')\n      } else {\n        reCalculateResult()\n      }\n    }\n    let removeAmount, removeRatio\n    if (isReverse ? !fix_amount_a : fix_amount_a) {\n      removeRatio = d(amount).div(availableAmountA)\n      removeAmount = formatNumberWithDown(d(holdLpAmount).mul(removeRatio).toString(), 0, true)\n    } else {\n      removeRatio = d(amount).div(availableAmountB)\n      removeAmount = formatNumberWithDown(d(holdLpAmount).mul(removeRatio).toString(), 0, true)\n    }\n\n    if (+removeAmount) {\n      const uuid = v4()\n      setUuid(uuid)\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:466 ~ removeLpAmount:', removeAmount)\n      debouncedPreCalculate(String(removeAmount), true, fix_amount_a, uuid, removeRatio.mul(100).toNumber(), removeRatio.gte(100))\n    } else {\n      resetInputAmount()\n    }\n  }\n\n  // 百分比输入监听\n  const handlePercentInputChange = (percent: number) => {\n    setIsPercentInput(true)\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:474 ~ handlePercentInputChange ~ percent:', percent)\n    setRemovePercent(percent)\n\n    if (holdLpAmount && +holdLpAmount) {\n      if (percent === 0) {\n        resetInputAmount()\n      } else {\n        // fix_amount_a为合约方向\n        const fix_amount_a = assetAction === tokenA?.coin_type\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:415 ~ handlePercentInputChange ~ fix_amount_a:', fix_amount_a)\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:515 ~ handlePercentInputChange ~ availableAmountB:', availableAmountB)\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:515 ~ handlePercentInputChange ~ availableAmountA:', availableAmountA)\n        setFixAmountA(fix_amount_a)\n        if (assetAction == 'both') {\n          setAmountInputA(d(availableAmountA).mul(d(percent).div(100)).toString())\n          setAmountInputB(d(availableAmountB).mul(d(percent).div(100)).toString())\n        } else if (assetAction === tokenA?.coin_type) {\n          isReverse\n            ? setAmountInputB(d(availableAmountB).mul(d(percent).div(100)).toString())\n            : setAmountInputA(d(availableAmountA).mul(d(percent).div(100)).toString())\n        } else {\n          isReverse\n            ? setAmountInputA(d(availableAmountA).mul(d(percent).div(100)).toString())\n            : setAmountInputB(d(availableAmountB).mul(d(percent).div(100)).toString())\n        }\n\n        // 双边和100% 按照LP 移除\n        if (percent === 100 || assetAction === 'both') {\n          const uuid = v4()\n          setUuid(uuid)\n          const removeLpAmount = percent === 100 ? holdLpAmount : d(holdLpAmount).mul(percent).div(100).toFixed(0)\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:521 ~ handlePercentInputChange ~ removeLpAmount:', removeLpAmount)\n          debouncedPreCalculate(removeLpAmount, true, fix_amount_a, uuid, percent, true)\n        } else {\n          setFixAmountA(fix_amount_a)\n          // 单边  按照最大金额的百分比移除\n\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:466 ~ handlePercentInputChange ~ assetAction:', assetAction)\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:467 ~ handlePercentInputChange ~ tokenA?.coin_type:', tokenA?.coin_type)\n          const getAmount = d(holdLpAmount).mul(percent).div(100).toFixed()\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:455 ~ handlePercentInputChange ~ getAmount:', getAmount)\n          debouncedPreCalculate(getAmount, true, fix_amount_a, uuid, percent, true)\n        }\n      }\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:520 ~ handlePercentInputChange ~ availableAmountA:', availableAmountA)\n    }\n  }\n\n  // 重新计算\n  const reCalculateResult = () => {\n    console.log('🚀 ~ reCalculateResult ~ isPercentInput:', { isPercentInput, removePercent })\n    if (isPercentInput) {\n      handlePercentInputChange(removePercent)\n    } else {\n      const amount = fixAmountARef.current\n        ? isReverse\n          ? amountInputBRef.current\n          : amountInputARef.current\n        : isReverse\n          ? amountInputARef.current\n          : amountInputBRef.current\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:510 ~ reCalculateResult ~ amount:', amount)\n      handleAmountInputChange(amount, fixAmountARef.current)\n    }\n  }\n\n  // 不是百分比输入，则需要计算百分比进度\n  useEffect(() => {\n    if (!isPercentInput) {\n      if (calculateResult && holdLpAmount && +holdLpAmount) {\n        let percent = Number(d(calculateResult.burn_ft_amount).div(holdLpAmount).mul(100))\n        if (percent > 100) {\n          percent = 100\n        }\n        console.log('🚀🚀🚀 ~ useVaultsRemove.ts:502 ~ useEffect ~ percent:', percent)\n        setRemovePercent(percent)\n      } else {\n        setRemovePercent(0)\n      }\n    }\n  }, [calculateResult?.burn_ft_amount, isPercentInput])\n\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n  // 提交交易\n  const doRemoveAction = async () => {\n    if (vaultsId && calculateResult && holdLpAmount) {\n      setSubmitLoading(true)\n\n      let param: WithdrawOptions\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:567 ~ doRemoveAction ~ calculateResult:', calculateResult)\n      if (assetAction === 'both') {\n        param = {\n          pool_id: vaultsId,\n          burn_lp_amount: calculateResult.burn_ft_amount,\n          mode: 'FixedOneSide',\n          slippage: Number(vaultsSlippage)\n        }\n      } else {\n        const fix_amount_a = assetAction === tokenA?.coin_type\n        if (removePercent === 100) {\n          param = {\n            pool_id: vaultsId,\n            burn_lp_amount: holdLpAmount,\n            mode: assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB',\n            slippage: Number(vaultsSlippage)\n          }\n        } else {\n          param = {\n            pool_id: vaultsId,\n            burn_lp_amount: calculateResult.burn_ft_amount,\n            mode: assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB',\n            slippage: Number(vaultsSlippage)\n          }\n        }\n      }\n\n      console.log('🚀 ~ doRemoveAction ~ params:', JSON.stringify(param))\n\n      // 构建 交易提示\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n          const description =\n            'Withdraw ' +\n            [\n              formatDescription(isReverse ? amountInputA : amountInputA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n              formatDescription(isReverse ? amountInputB : amountInputB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n            ]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastDescriptionContent: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA\n            let amountB = amountInputB\n\n            // if (res) {\n            //   res.events.forEach(event => {\n            //     console.log('🚀🚀🚀 ~ useVaultsAdd.ts:367 ~ doAddAction ~ event:', event)\n            //     if (event.type.indexOf('::pool::WithdrawEvent') > -1 && tokenA && tokenB) {\n            //       amountA = String(fromDecimalsAmount(event.parsedJson.amount_a, tokenA.decimals))\n            //       console.log('🚀🚀🚀 ~ useVaultsAdd.ts:361 ~ doAddAction ~ amountA:', amountA)\n            //       amountB = String(fromDecimalsAmount(event.parsedJson.amount_b, tokenB.decimals))\n            //       console.log('🚀🚀🚀 ~ useVaultsAdd.ts:363 ~ doAddAction ~ amountB:', amountB)\n            //     }\n            //   })\n            // }\n\n            console.log('🚀🚀🚀 ~ useVaultsRemove.ts:582 ~ doRemoveAction ~ balanceChanges:', balanceChanges)\n            if (balanceChanges) {\n              amountA = d(amountInputA).gt(0) ? getBalanceChanges(balanceChanges, isReverse ? tokenB : tokenA) || amountInputA : ''\n              amountB = d(amountInputB).gt(0) ? getBalanceChanges(balanceChanges, isReverse ? tokenA : tokenB) || amountInputB : ''\n            }\n            console.log('🚀🚀🚀 ~ useVaultsRemove.ts:584 ~ doRemoveAction ~ amount:', amountA, amountB)\n\n            const descriptionList = [\n              formatDescription(isReverse ? amountB : amountA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n              formatDescription(isReverse ? amountA : amountB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n            ].filter(Boolean)\n\n            const description =\n              (descriptionList && descriptionList.length > 1 ? 'Removed ' : 'Withdraw ') +\n              [\n                formatDescription(isReverse ? amountA : amountA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n                formatDescription(isReverse ? amountB : amountB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n              ]\n                .filter(Boolean)\n                .join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n\n      try {\n        const txb = await volatileVaultsSdk.Vaults.buildWithdrawPayload(param)\n        const res = await signAndExecuteTransaction(txb, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: param\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          autoRefresh()\n        } else {\n          reCalculateResult()\n        }\n        setSubmitLoading(false)\n      } catch (error) {\n        console.log('🚀 ~ doAddAction ~ error:', error)\n        setSubmitLoading(false)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  // 清空输入框\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    amountInputARef.current = ''\n    amountInputBRef.current = ''\n    setRemovePercent(0)\n    setPreCalculateLoading(false)\n    setCalculateResult(undefined)\n    setUuid('')\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:697 ~ resetInputAmount ~ resetInputAmount:')\n  }\n\n  // 单边提示文案\n  const showOnlySideTips = useMemo(() => {\n    console.log('🚀🚀🚀 ~ useVaultsRemove.ts:622 ~ showOnlySideTips ~ calculateResult:', calculateResult)\n    if (calculateResult && calculateResult?.swap && assetAction !== 'both' && tokenA && tokenB) {\n      const amount = fixAmountA ? (!isReverse ? amountInputA : amountInputB) : !isReverse ? amountInputB : amountInputA\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:653 ~ showOnlySideTips ~ amount:', amount)\n\n      const fixToken = fixAmountARef.current ? tokenA : tokenB\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:651 ~ showOnlySideTips ~ fixToken:', fixToken)\n      const targetToken = fixAmountARef.current ? tokenB : tokenA\n      console.log('🚀🚀🚀 ~ useVaultsRemove.ts:652 ~ showOnlySideTips ~ targetToken:', targetToken)\n\n      const swapInAmount = fromDecimalsAmountFix(calculateResult?.swap?.swap_amount_in, targetToken.decimals)\n\n      const swapOutAmount = formatNumber(\n        fromDecimalsAmountFix(\n          d(calculateResult.swap.swap_amount_out)\n            .mul(1 - Number(vaultsSlippage))\n            .toString(),\n          fixToken.decimals\n        ),\n        fixToken.decimals\n      )\n\n      console.log('vaultsSlippage: ', {\n        vaultsSlippage,\n        calculateResult,\n        swapOutAmount\n      })\n\n      console.log(\n        '🚀🚀🚀 ~ useVaultsRemove.ts:644 ~ showOnlySideTips ~ ',\n        `To withdraw ${amount} ${fixToken?.symbol}, ${swapInAmount} ${targetToken?.symbol} in the pool will be traded for ${swapOutAmount} ${fixToken?.symbol}`\n      )\n      return `To withdraw ${formatNumber(amount)} ${fixToken?.symbol}, ${formatNumber(swapInAmount)} ${targetToken?.symbol} in the pool will be traded for ${swapOutAmount} ${fixToken?.symbol}`\n    }\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB])\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [availableAmountA, availableAmountB])\n\n  useEffect(() => {\n    resetInputAmount()\n    setTimeout(() => {\n      if (holdCoinAmounts?.coinAmountA && holdCoinAmounts?.coinAmountB) {\n        calculateAvailableAmount()\n      }\n    }, 200)\n  }, [isCheckedZAP, assetAction, currentAccount?.address])\n\n  return {\n    handleAmountInputChange,\n    fixAmountA,\n    amountInputA,\n    amountInputB,\n    availableAmountA,\n    availableAmountB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    inputTotalValue,\n    calculateResult,\n    showOnlySideTips,\n    doRemoveAction,\n    handlePercentInputChange,\n    isPercentInput,\n    removePercent,\n    reCalculateResult,\n    calculateAvailableLoading,\n    submitLoading\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useGlobalStore from '@/store/common/global'\nimport useVaultsListStore from '@/store/vaults/useVaultsList'\nimport { MsafeTransactionSubType } from '@/types'\nimport { AssetActionType, VaultCoinAmounts } from '@/types/vaults'\nimport { formatDescription } from '@/utils'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, formatNumber, fromDecimalsAmountFix, getBalanceChanges } from '@cetus/utils'\nimport { toDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport {\n  CalculateRemoveAmountParams,\n  CalculateRemoveAmountResult,\n  InputType,\n  WithdrawBothParams,\n  WithdrawOneSideParams\n} from '@cetusprotocol/vaults-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\n\nexport default function useStableVaultsRemove(\n  assetAction: AssetActionType,\n  autoRefresh: () => void,\n  holdCoinAmounts: VaultCoinAmounts,\n  holdLpAmount?: string,\n  vaultsId?: string,\n  tokenA?: Token,\n  tokenB?: Token\n) {\n  const { setDetailRefreshCount } = useVaultsListStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const { vaultsSdk } = usePeripherySDKStore()\n  const { vaultsSlippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { findBestRouters } = useFindBestRouting()\n\n  const [amountInputA, setAmountInputA] = useState<string>('')\n  const [amountInputB, setAmountInputB] = useState<string>('')\n  const [fixAmountA, setFixAmountA] = useState<boolean>(true)\n  const [uuid, setUuid] = useState<string>('')\n  const [isPercentInput, setIsPercentInput] = useState<boolean>(false)\n  const [removePercent, setRemovePercent] = useState<number>(0)\n\n  const uuidRef = useRef<string>(uuid)\n  const fixAmountARef = useRef<boolean>(fixAmountA)\n  const amountInputARef = useRef<string>(amountInputA)\n  const amountInputBRef = useRef<string>(amountInputB)\n  const isPercentInputRef = useRef<boolean>(isPercentInput)\n  const removePercentRef = useRef<number>(removePercent)\n\n  useEffect(() => {\n    removePercentRef.current = removePercent\n  }, [removePercent])\n\n  useEffect(() => {\n    isPercentInputRef.current = isPercentInput\n  }, [isPercentInput])\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  useEffect(() => {\n    fixAmountARef.current = fixAmountA\n  }, [fixAmountA])\n\n  useEffect(() => {\n    amountInputARef.current = amountInputA\n  }, [amountInputA])\n\n  useEffect(() => {\n    amountInputBRef.current = amountInputB\n  }, [amountInputB])\n\n  //获取价格\n  useEffect(() => {\n    const coinTypeList: string[] = []\n    if (tokenA && tokenB) {\n      coinTypeList.push(tokenA.coin_type)\n      coinTypeList.push(tokenB.coin_type)\n    }\n    if (coinTypeList.length > 0) {\n      fetchTokenPrices(coinTypeList)\n    }\n  }, [tokenA?.coin_type, tokenB?.coin_type])\n\n  // 可用数量\n  const [availableAmountA, setAvailableAmountA] = useState<string>('0')\n  const [availableAmountB, setAvailableAmountB] = useState<string>('0')\n  const [calculateAvailableLoading, setCalculateAvailableLoading] = useState<boolean>(false)\n\n  // 切换资产类型，清空输入框\n  useEffect(() => {\n    resetInputAmount()\n    calculateAvailableAmount()\n  }, [assetAction])\n\n  // 资产变更，计算 A B可用数量\n  useEffect(() => {\n    calculateAvailableAmount()\n  }, [holdCoinAmounts.coinAmountA])\n\n  // 计算可用资产\n  const calculateAvailableAmount = async () => {\n    const { coinAmountA, coinAmountB } = holdCoinAmounts\n    console.log('🚀 ~ useEffect ~ holdCoinAmounts:', holdCoinAmounts)\n    setCalculateAvailableLoading(false)\n    if (assetAction === 'both') {\n      setAvailableAmountA(coinAmountA)\n      setAvailableAmountB(coinAmountB)\n      return\n    }\n\n    // 利用findRouter 转化为 单一资产\n    const isOnlyReceiveCoinA = assetAction === tokenA?.coin_type\n    const fromAmount = isOnlyReceiveCoinA ? coinAmountB : coinAmountA\n    let targetAmount = isOnlyReceiveCoinA ? coinAmountA : coinAmountB\n    const fromToken = isOnlyReceiveCoinA ? tokenB! : tokenA!\n    const toToken = isOnlyReceiveCoinA ? tokenA! : tokenB!\n    if (d(fromAmount).gt(0)) {\n      setCalculateAvailableLoading(true)\n      setAvailableAmountA('0')\n      setAvailableAmountB('0')\n      // const params = {\n      //   vault_id: vaultsId,\n      //   fix_amount_a: isOnlyReceiveCoinA,\n      //   is_ft_input: true,\n      //   input_amount: holdLpAmount,\n      //   max_ft_amount: holdLpAmount,\n      //   slippage: Number(vaultsSlippage),\n      //   side: assetAction === 'both' ? InputType.Both : InputType.OneSide,\n      //   request_id: uuid\n      // }\n      // const res = await vaultsSdk.Vaults.calculateWithdrawAmount(params)\n\n      // if (res) {\n      //   if (res.swap_result?.swap_out_amount) {\n      //     targetAmount = d(targetAmount)\n      //       .add(res.swap_result.swap_out_amount)\n      //       .div(10 ** toToken.decimals)\n      //       .add(targetAmount)\n      //       .toString()\n      //   }\n      //   if (isOnlyReceiveCoinA) {\n      //     setAvailableAmountA(targetAmount)\n      //   } else {\n      //     setAvailableAmountB(targetAmount)\n      //   }\n      //   setCalculateAvailableLoading(false)\n      // }\n      findBestRouters({\n        fromToken,\n        toToken,\n        amount: toDecimalsAmount(fromAmount, fromToken.decimals).toString(),\n        providersKeys: vaultsSdk.sdkOptions.aggregator.providers!,\n        by_amount_in: true,\n        uuid\n      })\n        .then(result => {\n          console.log('🚀 ~ calculateAvailableAmount ~ uuid:', {\n            result\n          })\n          if (result.toAmountUi) {\n            targetAmount = d(targetAmount).add(result.toAmountUi).toString()\n          }\n          if (isOnlyReceiveCoinA) {\n            setAvailableAmountA(targetAmount)\n          } else {\n            setAvailableAmountB(targetAmount)\n          }\n        })\n        .finally(() => {\n          setCalculateAvailableLoading(false)\n        })\n    } else {\n      if (isOnlyReceiveCoinA) {\n        setAvailableAmountA(targetAmount)\n      } else {\n        setAvailableAmountB(targetAmount)\n      }\n    }\n  }\n\n  // 价值\n  const amountValueA = getTokenAmountValue(tokenA?.coin_type, amountInputA)\n  const amountValueB = getTokenAmountValue(tokenB?.coin_type, amountInputB)\n  // 总价值ß\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // 预计算结果\n  const [preCalculateLoading, setPreCalculateLoading] = useState<boolean>(false)\n  const [calculateResult, setCalculateResult] = useState<CalculateRemoveAmountResult | undefined>(undefined)\n\n  /**\n   * 预计算\n   * @param amount\n   * @param isPercentInput\n   * @param fix_amount_a\n   * @param uuid\n   */\n  const preCalculate = async (amount: string, is_ft_input: boolean, fix_amount_a: boolean, uuid: string, removePercent?: number) => {\n    if (tokenA && tokenB && vaultsId && holdLpAmount) {\n      // 非百分比输入，要判断余额是否足够\n      if (!removePercent) {\n        if (fix_amount_a) {\n          if (d(amount).gt(availableAmountA)) {\n            setUuid('')\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            return\n          }\n        } else {\n          if (d(amount).gt(availableAmountB)) {\n            setUuid('')\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            return\n          }\n        }\n      }\n\n      setDetailRefreshCount(0)\n      if (+amountInputARef.current || +amountInputBRef.current || removePercent) {\n        setPreCalculateLoading(true)\n      }\n      const fixToken = fix_amount_a ? tokenA : tokenB\n      const inputAmount = is_ft_input ? amount : toDecimalsAmount(amount, fixToken.decimals).toFixed(0)\n      const params: CalculateRemoveAmountParams = {\n        vault_id: vaultsId,\n        fix_amount_a,\n        input_amount: inputAmount,\n        slippage: Number(vaultsSlippage),\n        request_id: uuid,\n        side: assetAction === 'both' ? InputType.Both : InputType.OneSide,\n        is_ft_input,\n        max_ft_amount: holdLpAmount\n      }\n      console.log('🚀 ~ preCalculate ~ params:', params, uuid, removePercent)\n      try {\n        const res = await vaultsSdk.Vaults.calculateWithdrawAmount(params)\n        console.log('🚀 ~ preCalculate ~ res:', {\n          ...res,\n          uuid,\n          assetAction\n        })\n\n        if (uuidRef.current === uuid) {\n          const amountA = fromDecimalsAmountFix(res.amount_a.toString(), tokenA.decimals).toString()\n          const amountB = fromDecimalsAmountFix(res.amount_b.toString(), tokenB.decimals).toString()\n          // 双边\n          if (assetAction === 'both') {\n            if (is_ft_input) {\n              setAmountInputB(amountB)\n              setAmountInputA(amountA)\n              if (removePercent === 100) {\n                // 由于价差原因，当移除100% 时， 需要修改最大可用\n                setAvailableAmountA(amountA)\n                setAvailableAmountB(amountB)\n              }\n              setCalculateResult(res)\n            } else {\n              if (fix_amount_a) {\n                if (+amountInputARef.current) {\n                  setAmountInputB(amountB)\n                  setCalculateResult(res)\n                } else {\n                  setAmountInputB('')\n                }\n              } else {\n                if (+amountInputBRef.current) {\n                  setAmountInputA(amountA)\n                  setCalculateResult(res)\n                } else {\n                  setAmountInputA('')\n                }\n              }\n            }\n          }\n          // 单边\n          if (assetAction !== 'both') {\n            if (removePercent) {\n              const amountA = fromDecimalsAmountFix(\n                d(res.amount_a)\n                  .add(res.swap_result?.swap_out_amount || '0')\n                  .toString(),\n                tokenA.decimals\n              ).toString()\n              if (fix_amount_a) {\n                setAmountInputA(amountA)\n                setAmountInputB('')\n                if (removePercent === 100) {\n                  res.burn_ft_amount = holdLpAmount\n                  setAvailableAmountA(amountA)\n                }\n              } else {\n                const amountB = fromDecimalsAmountFix(\n                  d(res.amount_b)\n                    .add(res.swap_result?.swap_out_amount || '0')\n                    .toString(),\n                  tokenB.decimals\n                ).toString()\n                setAmountInputA('')\n                setAmountInputB(amountB)\n                if (removePercent === 100) {\n                  res.burn_ft_amount = holdLpAmount\n                  setAvailableAmountB(amountB)\n                }\n              }\n            }\n            setCalculateResult(res)\n          }\n        }\n      } catch (error) {\n        console.log('🚀 ~ preCalculate ~ error:', error)\n        setCalculateResult(undefined)\n      } finally {\n        setPreCalculateLoading(false)\n      }\n    }\n  }\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n\n  // 输入数量监听\n  const handleAmountInputChange = (\n    amount: string,\n    fix_amount_a: boolean,\n    removeMax: boolean = false,\n    isHalfClickMax: boolean = false,\n    resetTargetInput: boolean = true\n  ) => {\n    // 移除全部，走LP 移除\n    if (removeMax) {\n      handlePercentInputChange(100)\n      return\n    }\n\n    if (isHalfClickMax) {\n      handlePercentInputChange(50)\n      return\n    }\n\n    setFixAmountA(fix_amount_a)\n    setIsPercentInput(false)\n\n    if (fix_amount_a) {\n      setAmountInputA(amount)\n      if (resetTargetInput) {\n        setAmountInputB('')\n      }\n    } else {\n      setAmountInputB(amount)\n      if (resetTargetInput) {\n        setAmountInputA('')\n      }\n    }\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedPreCalculate(amount, false, fix_amount_a, uuid)\n    } else {\n      resetInputAmount()\n    }\n  }\n\n  // 百分比输入监听\n  const handlePercentInputChange = (percent: number) => {\n    setIsPercentInput(true)\n    setRemovePercent(percent)\n    if (holdLpAmount && +holdLpAmount) {\n      if (percent === 0) {\n        resetInputAmount()\n      } else {\n        const fix_amount_a = assetAction === tokenA?.coin_type\n        setFixAmountA(fix_amount_a)\n        // 双边和100% 按照LP 移除\n        if (percent === 100 || assetAction === 'both') {\n          const uuid = v4()\n          setUuid(uuid)\n          const removeLpAmount = percent === 100 ? holdLpAmount : d(holdLpAmount).mul(percent).div(100).toFixed(0)\n          console.log('🚀🚀🚀 ~ useVaultsRemove.ts:351 ~ handlePercentInputChange ~ removeLpAmount:', removeLpAmount)\n          debouncedPreCalculate(removeLpAmount, true, fix_amount_a, uuid, percent)\n        } else {\n          setFixAmountA(fix_amount_a)\n          // 单边  按照最大金额的百分比移除\n          const getAmount = d(assetAction === tokenA?.coin_type ? availableAmountA : availableAmountB)\n            .mul(percent)\n            .div(100)\n            .toFixed()\n          debouncedPreCalculate(getAmount, false, fix_amount_a, uuid, percent)\n        }\n      }\n    }\n  }\n\n  // 重新计算\n  const reCalculateResult = () => {\n    console.log('🚀 ~ reCalculateResult ~ isPercentInput:', { isPercentInput, removePercent })\n    if (isPercentInput) {\n      handlePercentInputChange(removePercent)\n    } else {\n      const amount = fixAmountARef.current ? amountInputARef.current : amountInputBRef.current\n      handleAmountInputChange(amount, fixAmountARef.current)\n    }\n  }\n\n  // 不是百分比输入，则需要计算百分比进度\n  useEffect(() => {\n    if (!isPercentInput) {\n      if (calculateResult && holdLpAmount && +holdLpAmount) {\n        let percent = Number(d(calculateResult.burn_ft_amount).div(holdLpAmount).mul(100))\n        if (percent > 100) {\n          percent = 100\n        }\n        setRemovePercent(percent)\n      } else {\n        setRemovePercent(0)\n      }\n    }\n  }, [calculateResult?.burn_ft_amount])\n\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n  // 提交交易\n  const doRemoveAction = async () => {\n    if (vaultsId && calculateResult && holdLpAmount) {\n      setSubmitLoading(true)\n\n      let param: WithdrawBothParams | WithdrawOneSideParams\n\n      if (assetAction === 'both') {\n        param = {\n          vault_id: vaultsId,\n          ft_amount: calculateResult?.burn_ft_amount,\n          slippage: Number(vaultsSlippage)\n        }\n      } else {\n        const fix_amount_a = assetAction === tokenA?.coin_type\n        if (removePercent === 100) {\n          param = {\n            vault_id: vaultsId,\n            is_ft_input: true,\n            input_amount: holdLpAmount,\n            slippage: Number(vaultsSlippage),\n            max_ft_amount: holdLpAmount,\n            fix_amount_a\n          }\n        } else {\n          const input_amount = toDecimalsAmount(fixAmountA ? amountInputA : amountInputB, 9)\n          param = {\n            vault_id: vaultsId,\n            is_ft_input: false,\n            input_amount: input_amount.toString(),\n            slippage: Number(vaultsSlippage),\n            max_ft_amount: holdLpAmount,\n            fix_amount_a\n          }\n        }\n      }\n\n      console.log('🚀 ~ doRemoveAction ~ params:', param)\n\n      // 构建 交易提示\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n          const description =\n            'Withdraw ' +\n            [formatDescription(amountInputA, tokenA?.symbol), formatDescription(amountInputB, tokenB?.symbol)].filter(Boolean).join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastDescriptionContent: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA\n            let amountB = amountInputB\n\n            if (balanceChanges) {\n              amountA = d(amountInputA).gt(0) ? getBalanceChanges(balanceChanges, tokenA) || amountInputA : ''\n              amountB = d(amountInputB).gt(0) ? getBalanceChanges(balanceChanges, tokenB) || amountInputB : ''\n            }\n\n            const description =\n              'Removed ' + [formatDescription(amountA, tokenA?.symbol), formatDescription(amountB, tokenB?.symbol)].filter(Boolean).join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n\n      try {\n        const tx = new Transaction()\n        await vaultsSdk.Vaults.withdraw(param, tx)\n        const res = await signAndExecuteTransaction(tx, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.RemoveVaultsPosition,\n            txbParams: param\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n        } else {\n          reCalculateResult()\n        }\n        autoRefresh()\n      } catch (error) {\n        console.log('🚀 ~ doAddAction ~ error:', error)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  // 清空输入框\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    setRemovePercent(0)\n    setPreCalculateLoading(false)\n    setCalculateResult(undefined)\n    setUuid('')\n  }\n\n  // 单边提示文案\n  const showOnlySideTips = useMemo(() => {\n    if (calculateResult && calculateResult.swap_result && assetAction !== 'both' && tokenA && tokenB) {\n      const amount = fixAmountA ? amountInputA : amountInputB\n\n      const fixToken = fixAmountARef.current ? tokenA : tokenB\n      const targetToken = fixAmountARef.current ? tokenB : tokenA\n\n      const swapInAmount = fromDecimalsAmountFix(calculateResult.swap_result.swap_in_amount, fixToken.decimals)\n\n      const swapOutAmount = fromDecimalsAmountFix(\n        d(calculateResult.swap_result.swap_out_amount)\n          .mul(1 - Number(vaultsSlippage))\n          .toString(),\n        targetToken.decimals\n      )\n\n      console.log('vaultsSlippage: ', {\n        vaultsSlippage,\n        calculateResult,\n        swapOutAmount\n      })\n\n      return `To withdraw ${formatNumber(amount)} ${fixToken?.symbol}, ${formatNumber(swapInAmount)} ${targetToken?.symbol} in the pool will be traded for ${swapOutAmount} ${fixToken?.symbol}`\n    }\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB])\n\n  return {\n    handleAmountInputChange,\n    fixAmountA,\n    amountInputA,\n    amountInputB,\n    availableAmountA,\n    availableAmountB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    inputTotalValue,\n    calculateResult,\n    showOnlySideTips,\n    doRemoveAction,\n    handlePercentInputChange,\n    isPercentInput,\n    removePercent,\n    reCalculateResult,\n    calculateAvailableAmount,\n    calculateAvailableLoading\n  }\n}\n","// api信息\nimport useGetApiVaultInfo from '../vaults/useGetApiVaultInfo'\n// 合约信息\nimport useGetContractUnstableVaultInfo from '../unstable-vault/useGetContractVaultInfo'\nimport useGetContractStableVaultInfo from '../vaults/useGetContractVaultInfo'\n// 添加\nimport useUnstableVaultsAdd from '../unstable-vault/useVaultsAdd'\nimport useStableVaultsAdd from '../vaults/useVaultsAdd'\n// 按钮状态\nimport useUnstableAddButtonStatus from '../unstable-vault/useVaultsButtonStatus'\nimport useStableAddButtonStatus from '../vaults/useVaultsButtonStatus'\n// 移除\nimport useUnstableVaultsRemove from '../unstable-vault/useVaultsRemove'\nimport useStableVaultsRemove from '../vaults/useVaultsRemove'\n// 获取vault 合约信息\nconst useGetContractVaultInfo = (isUnstable: boolean) => {\n  return isUnstable ? useGetContractUnstableVaultInfo : useGetContractStableVaultInfo\n}\n// vault添加\nconst useVaultsAdd = (isUnstable: boolean) => {\n  return isUnstable ? useUnstableVaultsAdd : useStableVaultsAdd\n}\n// vault按钮状态\nconst useAddButtonStatus = (isUnstable: boolean) => {\n  return isUnstable ? useUnstableAddButtonStatus : useStableAddButtonStatus\n}\n// 移除\nconst useVaultsRemove = (isUnstable: boolean) => {\n  return isUnstable ? useUnstableVaultsRemove : useStableVaultsRemove\n}\n\nconst vaultInterface = {\n  useGetApiVaultInfo,\n  useGetContractVaultInfo,\n  useVaultsAdd,\n  useAddButtonStatus,\n  useVaultsRemove\n}\n\nexport default vaultInterface\n","import { CetusTooltip } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { CoinType } from '@cetus/types'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { extractStructTagFromType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Center, HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface VaultsAprBlockProps {\n  vaultsLstApyDisplay: string\n  vaultsApyDisplay: string\n  vaultsTotalApyDisplay: string\n  vaultsAprDisplay: string\n  category?: string\n}\n\nfunction VaultsAprBlock({ vaultsLstApyDisplay, vaultsApyDisplay, vaultsTotalApyDisplay, category, vaultsAprDisplay }: VaultsAprBlockProps) {\n  return (\n    <CetusTooltip\n      tooltip={\n        <VaultsAprTooltipContent\n          vaultsApyDisplay={vaultsApyDisplay}\n          vaultsLstApyDisplay={vaultsLstApyDisplay}\n          vaultsTotalApyDisplay={vaultsTotalApyDisplay}\n          vaultsAprDisplay={vaultsAprDisplay}\n          category={category}\n        />\n      }\n    >\n      <Text textColor=\"text_caption\" textAlign=\"right\" fontWeight=\"500\" textDecoration=\"underline dotted\" color=\"primary\">\n        {category == 'cetus' ? vaultsTotalApyDisplay : vaultsApyDisplay}\n      </Text>\n    </CetusTooltip>\n  )\n}\n\nexport const VaultsAprTooltipContent = ({\n  vaultsLstApyDisplay,\n  vaultsApyDisplay,\n  vaultsTotalApyDisplay,\n  category,\n  vaultsAprDisplay\n}: VaultsAprBlockProps) => {\n  return (\n    <VStack gap=\"12px\" w=\"100%\" pt=\"8px\" pb=\"8px\">\n      {category == 'cetus' ? (\n        <VStack>\n          <HTextLabelBox\n            label=\"Total APY\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n            wrapStyle={{\n              gap: '16px'\n            }}\n            value={vaultsTotalApyDisplay}\n          />\n          <HStack h=\"1px\" w=\"100%\" backgroundColor=\"border\" />\n          <HTextLabelBox\n            label=\"Fees and Rewards\"\n            labelStyle={{\n              fontSize: '12px'\n            }}\n            valueStyle={{\n              fontSize: '12px'\n            }}\n            wrapStyle={{\n              gap: '16px'\n            }}\n            value={vaultsApyDisplay}\n          />\n          <HTextLabelBox\n            label=\"LST\"\n            labelStyle={{\n              fontSize: '12px'\n            }}\n            wrapStyle={{\n              gap: '16px'\n            }}\n            value={vaultsLstApyDisplay}\n            valueStyle={{\n              fontSize: '12px'\n            }}\n          />\n        </VStack>\n      ) : (\n        <VStack>\n          <HTextLabelBox\n            label=\"Cetus LP APR\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n            wrapStyle={{\n              gap: '16px'\n            }}\n            value={vaultsAprDisplay}\n          />\n          <HStack h=\"1px\" w=\"100%\" backgroundColor=\"border\" />\n          <HTextLabelBox\n            label=\"Vault APY\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n            wrapStyle={{\n              gap: '16px'\n            }}\n            value={vaultsApyDisplay}\n          />\n          <HTextLabelBox\n            label=\"(Compounding Cetus LP APR Multiple Times a Day)\"\n            labelStyle={{\n              fontSize: '12px',\n              lineHeight: '16px',\n              maxW: '200px'\n            }}\n            wrapStyle={{\n              gap: '16px'\n            }}\n            value=\"\"\n            valueStyle={{\n              fontSize: '12px'\n            }}\n          />\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n\nexport function CoinImage({ coinType }: { coinType: string }) {\n  const { tokenInfo } = useGetToken<CoinType>(extractStructTagFromType(coinType)?.full_address as CoinType)\n  return (\n    <Center>\n      <SingleCoinImage imageUrl={tokenInfo?.logo_url} w=\"20px\" h=\"20px\" />\n    </Center>\n  )\n}\n\nexport default VaultsAprBlock\n"],"names":["store","set","get","data","list","isLoading","vault","contractVaultObj","pool","contractClmmPoolObj","vaultId","value","holdTotalValue","count","useVaultsListStore","create","persist","state","vaultBaseList","vaultStatsObj","lpTokenInfo","formatVaultApiInfo","baseInfo","statsItem","vaultsMaps","staticVaultsList","useGetVaultList","fetchByApi","useFetch","getFavoritePoolList","useFavoritePool","setVaultStatsObj","setVaultBaseList","setVaultStatsLoading","setVaultBaseListLoading","useVaultsStore","getVaultBaseList","showLoading","pools","statsObj","res","item","coinAB","fixCoinType","_a","_b","disPlayCoinAB","farmingRewards","_c","fItem","miningRewards","_d","mItem","vaultsRewards","_e","error","getVaultsStats","vaultsStatsObj","VAULT_FILTER","clmmPoolAddress","vaultsId","vaultsTotalApy","d","vaultsTotalApyDisplay","aprProcessing","vaultsApy","vaultsApyDisplay","vaultsLstApy","vaultsLstApyDisplay","vaultsTvl","vaultsTvlDisplay","symbolDataDisplayProcessing","vaultsApr","vaultsAprDisplay","hardCapUSD","depositRatio","depositRatioDisplay","formatNumber","ele","getVaultList","options","vaultsList","vaultsPoolList","baseList","sortVaultApiInfoList","getVaultListFromCache","sortRule","sortType","result","a","b","useGetApiStableVaultInfo","apiVaultInfo","setApiVaultInfo","useState","vaultInfoLoading","setVaultInfoLoading","setFromCoin","setToCoin","useSwapWidgetStore","getApiVaultInfo","refresh","vaultApiInfo","getApiVaultInfoFromCache","useEffect","info","envConfigs","priceMap","useVaultsAddStore","useUnstableVaultsListStore","vaultsCoinPercent","vaultsCoinAValue","vaultsCoinBValue","vaultCoinAmounts","useVaultsDetailStore","useContractVault","useMemo","useContractClmmInfo","poolAddress","useGetSuiStakeProtocol","coinType","useGetContractUnstableVaultInfo","tokenA","tokenB","isReverse","isDetail","volatileVaultsSdk","usePeripherySDKStore","useTokenPrice","currentAccount","useAccountStore","pythPriceMap","setContractVaultObjLoading","setContractVaultObj","setContractClmmPoolObj","setContractClmmPoolObjLoading","setHoldTotalValue","contractClmmPoolObjLoading","contractVaultObjLoading","setVaultsCoinPercent","setVaultsCoinAValue","setVaultsCoinBValue","setVaultCoinAmounts","fetchVaultInfoFromContract","forceRefresh","fetchClmmPoolFromContract","clmmPoolId","contractVault","useGetToken","balanceInfo","setBalanceInfo","isBalanceLoading","setBalanceLoading","accountBalanceInfo","setAccountBalanceInfo","fetchVaultBalance","walletAddress","decimals","balanceFormat","fromDecimalsAmountFix","Decimal","sharePoolRate","contractClmmInfo","getHoldCoinAmounts","coinAmountA","fromDecimalsAmount","coinAmountB","holdCoinAmounts","setHoldCoinAmounts","buildVaultsBalance","currPrice","TickMath","BN","minPrice","maxPrice","holdCoinAValue","setHoldCoinAValue","holdCoinBValue","setHoldCoinBValue","isAvailableObject","coinAPrice","coinBPrice","coinAValue","coinBValue","calculateVaultTvlLoading","setCalculateVaultTvlLoading","getVaultsCoinValue","priceA","priceB","getAumLimit","calcCoinProportion","vaultTvl","totalValue","setHardCapUSD","getHardCapUSD","quoteCoin","price","gtAumLimit","setGtAumLimit","maxAum","quoteCoinPrice","maxAumUSD","performanceFee","baseCoin","maxCapNum","availableCapacityWithQuoteCoin","setAvailableCapacityWithQuoteCoin","availableCapacityWithBaseCoin","setAvailableCapacityWithBaseCoin","getAvailableCapacityWithQuoteCoin","baseCoinPrice","quoteCoinResult","baseCoinResult","useCalculateChangeLpRate","changeLp","totalLp","formatNumberWithThreshold","useCalculateSlippageAmount","slippage","amount","isUp","useGetRewardPeDay","apiInfo","rewardPerA","formatNumberWithDown","rewardPerB","useGetContractStableVaultInfo","vaultsSdk","getTokenAmountValue","setLpTokenInfo","vaults_id","clmm_pool_id","useGetTokenBalance","calculateCoinAmounts","liquidity","curSqrtPrice","lowerSqrtPrice","upperSqrtPrice","coinAmounts","ClmmPoolUtil","VaultsUtils","useUnstableVaultsAdd","assetAction","autoRefresh","isCheckedZAP","isQuoteCoin","vaultsSlippage","mevProtect","maxCapForGas","transactionMode","customGasPrice","useGlobalStore","fetchTokenPrices","setDetailRefreshCount","percentage","setPercentage","amountInputA","amountInputB","setAmountInputA","setAmountInputB","fixAmountA","setFixAmountA","uuid","setUuid","uuidRef","useRef","fixAmountARef","amountInputARef","amountInputBRef","resetInputAmount","coinTypeList","balanceInfoA","balanceInfoB","isSlider","setIsSlider","amountValueA","amountValueB","inputTotalValue","zapNumError","inputTotalValueError","overHardtop","preCalculateLoading","setPreCalculateLoading","calculateLpLoading","setCalculateLpLoading","calculateResult","setCalculateResult","debouncedPreCalculate","useDebounceFunction","fix_amount_a","other_amount","fixToken","fixOtherToken","inputAmount","toDecimalsAmount","otherAmount","mode","params","receive_lp_amount","wrapRes","calculateDepositRatioWithAvailableCapacity","handleAmountInputChange","resetTargetInput","v4","reCalculateResult","submitLoading","setSubmitLoading","signAndExecuteTransaction","transactionConfirmation","transactionRejected","useTransaction","doAddAction","depositParams","toastInfo","status","balanceChanges","description","formatDescription","amountA","amountB","event","tx","Transaction","MsafeTransactionSubType","debouncedPreCalculateDepositValue","percent","availableCapacityWithCoin","coin","coinPrice","amountUSD","availableCapacity","ratio","useStableVaultsAdd","InputType","isSuiCoin","CoinAssist","amountValue","getBalanceChanges","stakeProtocolName","showOnlySideTips","targetToken","swapInAmount","swapOutAmount","convertScientificToDecimal","useUnstableAddButtonStatus","isAdd","balanceA","balanceB","submitBtnInfo","btnInfo","useStableAddButtonStatus","isSUI","useVaultsRemove","holdLpAmount","contractClmmPoolInfo","isPercentInput","setIsPercentInput","removePercent","setRemovePercent","isPercentInputRef","removePercentRef","availableAmountA","setAvailableAmountA","availableAmountB","setAvailableAmountB","calculateAvailableLoading","setCalculateAvailableLoading","calculateAvailableAmount","isOnlyReceiveCoinA","fromAmount","targetAmount","is_ft_input","removeMax","isHalfClickMax","handlePercentInputChange","removeAmount","removeRatio","removeLpAmount","getAmount","doRemoveAction","param","descriptionList","txb","useStableVaultsRemove","findBestRouters","useFindBestRouting","fromToken","toToken","input_amount","useGetContractVaultInfo","isUnstable","useVaultsAdd","useAddButtonStatus","useUnstableVaultsRemove","vaultInterface","useGetApiVaultInfo","VaultsAprBlock","category","jsx","CetusTooltip","VaultsAprTooltipContent","Text","VStack","HTextLabelBox","HStack","CoinImage","tokenInfo","extractStructTagFromType","Center","SingleCoinImage"],"mappings":"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"}