{"version":3,"file":"VaultsDetailPage-BVBB-wdz.js","sources":["../../../ui-kit/src/components/PositionPriceRange.tsx","../../src/components/vaults/detail/MyLiquidity.tsx","../../src/hooks/common/useDisplayPrice.tsx","../../src/components/vaults/detail/PositionRange.tsx","../../src/components/chart/CustomPriceRangeTooltip.tsx","../../src/components/chart/PriceRangeChart.tsx","../../src/hooks/unstable-vault/useGetVaultPriceRange.ts","../../src/components/vaults/detail/PriceRangeChartPageBlock.tsx","../../src/hooks/unstable-vault/useGetVaultHistogram.ts","../../src/components/vaults/detail/TvlChartPageBlock.tsx","../../src/components/modal/VaultsAddConfirmModel.tsx","../../src/components/vaults/detail/SwitchAssetTab.tsx","../../src/components/vaults/detail/VaultsAdd.tsx","../../src/components/vaults/detail/AumLimit.tsx","../../src/components/vaults/detail/VaultsComposition.tsx","../../src/components/vaults/detail/VaultsHeader.tsx","../../src/components/vaults/detail/VaultsRemove.tsx","../../src/components/vaults/detail/VaultsDetailPage.tsx"],"sourcesContent":["import { d, Decimal, formatNumber } from '@cetus/utils'\nimport { Box, Center, Flex, HStack, Image, Skeleton, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport Comma from './Comma'\nimport icon_currentprice from '/images/icon_currentprice@2x.png'\n\ntype PositionPriceRangeProps = {\n  displayMaxPrice?: string\n  displayMinPrice?: string\n  displayPrice?: string\n  isLoading?: boolean\n}\n\nexport default function PositionPriceRange(props: PositionPriceRangeProps) {\n  const { displayMaxPrice, displayMinPrice, displayPrice, isLoading } = props\n  console.log('üöÄüöÄüöÄ ~ PositionPriceRange.tsx:16 ~ PositionPriceRange ~ props:', props)\n\n  const [elementWidth, setElementWidth] = useState<number>(0)\n  const elementRef = useRef<HTMLDivElement>(null)\n\n  const positionPriceRangeLoading = useMemo(() => {\n    if (displayMinPrice && displayMaxPrice && displayPrice) {\n      return false\n    }\n    return true\n  }, [displayMaxPrice, displayMinPrice, displayPrice])\n\n  useEffect(() => {\n    const getElementWidth = () => {\n      if (elementRef.current) {\n        setElementWidth(elementRef.current.offsetWidth)\n      }\n    }\n\n    getElementWidth()\n\n    const resizeObserver = new ResizeObserver(getElementWidth)\n\n    if (elementRef.current) {\n      resizeObserver.observe(elementRef.current)\n    }\n\n    return () => {\n      if (elementRef.current) {\n        resizeObserver.unobserve(elementRef.current)\n      }\n    }\n  }, [])\n\n  const trackDirection = useMemo(() => {\n    if (displayMaxPrice === '‚àû') return 'center'\n    if (displayPrice && displayMinPrice && displayMaxPrice) {\n      if (d(displayPrice).greaterThanOrEqualTo(displayMaxPrice)) {\n        return 'end'\n      }\n      if (d(displayMinPrice).greaterThanOrEqualTo(displayPrice)) {\n        return 'start'\n      }\n    }\n    return 'center'\n  }, [displayPrice, displayMinPrice, displayMaxPrice])\n\n  // const sliderML = useMemo(() => {\n  //   if (displayMaxPrice === '‚àû') return '0px'\n  //   if (displayPrice && displayMinPrice && displayMaxPrice) {\n  //     if (d(displayPrice).lessThanOrEqualTo(displayMaxPrice) && d(displayPrice).greaterThanOrEqualTo(displayMinPrice)) {\n  //       const centerPrice = d(displayMaxPrice).add(displayMinPrice).div(2)\n  //       const isRight = d(displayPrice).gt(centerPrice)\n  //       let relativePosition = d(0)\n  //       if (isRight) {\n  //         const range = d(centerPrice).sub(displayMinPrice)\n  //         relativePosition = d(displayPrice).sub(centerPrice).div(range)\n  //       } else {\n  //         const range = d(displayMaxPrice).sub(centerPrice)\n  //         relativePosition = d(displayPrice).sub(displayMinPrice).div(range)\n  //       }\n  //       if (isRight) {\n  //         return `${d(elementWidth).mul(relativePosition).toFixed(0)}px`\n  //       } else {\n  //         return `-${d(elementWidth).mul(d(1).sub(relativePosition)).toFixed(0)}px`\n  //       }\n  //     }\n  //   }\n  //   return '0px'\n  // }, [displayPrice, displayMinPrice, displayMaxPrice, elementWidth])\n\n  const sliderML = useMemo(() => {\n    if (displayMaxPrice === '‚àû') return '0px'\n    if (displayPrice && displayMinPrice && displayMaxPrice) {\n      if (d(displayPrice).lessThanOrEqualTo(displayMaxPrice) && d(displayPrice).greaterThanOrEqualTo(displayMinPrice)) {\n        const centerPrice = d(displayMaxPrice).add(displayMinPrice).div(2)\n        const isRight = d(displayPrice).gt(centerPrice)\n        let relativePosition = d(0)\n        if (isRight) {\n          const range = d(centerPrice).sub(displayMinPrice)\n          relativePosition = d(displayPrice).sub(centerPrice).div(range)\n        } else {\n          const range = d(displayMaxPrice).sub(centerPrice)\n          relativePosition = d(displayPrice).sub(displayMinPrice).div(range)\n        }\n        const offset = d(123).div(2) // ËÄÉËôë current price ÂÖÉÁ¥†ÁöÑÂÆΩÂ∫¶\n        if (isRight) {\n          return `${d(elementWidth).mul(relativePosition).sub(offset).toFixed(0)}px`\n        } else {\n          return `-${d(elementWidth).mul(d(1).sub(relativePosition)).sub(offset).toFixed(0)}px`\n        }\n      }\n    }\n    return '0px'\n  }, [displayPrice, displayMinPrice, displayMaxPrice, elementWidth])\n\n  return (\n    <>\n      {!positionPriceRangeLoading ? (\n        <Flex w=\"90%\" direction=\"column\" alignItems={trackDirection}>\n          <VStack\n            w={{\n              md: '100%',\n              lg: 'max-content'\n            }}\n            justifyContent=\"center\"\n            mb=\"-22px\"\n            gap=\"8px\"\n            ml={sliderML}\n          >\n            {/* ÂΩìÂâç‰ª∑Ê†º */}\n            {/* bg=\"bg_secondary\" */}\n            <VStack p=\"6px 24px\" borderRadius=\"8px\" gap=\"4px\">\n              <Text fontSize=\"xs\" h=\"14px\">\n                Current Price\n              </Text>\n              {isLoading ? (\n                <Flex h=\"18px\" align=\"center\">\n                  <Skeleton />\n                </Flex>\n              ) : (\n                <HStack>\n                  <Text fontSize=\"16px\" color=\"text_highlight\">\n                    <Comma value={formatNumber(displayPrice, 6, true, Decimal.ROUND_DOWN)} />\n                  </Text>\n                </HStack>\n              )}\n            </VStack>\n            {/* ÊªëÂùó */}\n            {/* {trackDirection === 'center' && ( */}\n            <VStack zIndex=\"100\">\n              <Box w=\"2px\" h=\"98px\" bg=\"#76C8FF\" />\n              <Image src={icon_currentprice} w=\"30px\" h=\"30px\" mt=\"-18px\" />\n            </VStack>\n            {/* )} */}\n            {/* {trackDirection !== 'center' && <Box h=\"25px\" />} */}\n          </VStack>\n\n          <Center\n            zIndex=\"99\"\n            mt=\"-48px\"\n            ref={elementRef}\n            pl={{ base: '0', lg: '60px' }}\n            pr={{ base: '0', lg: '60px' }}\n            h=\"50px\"\n            w=\"100%\"\n            bg=\"linear-gradient( 180deg, rgba(22,22,22,0) 0%, #191919 100%)\"\n            borderBottom=\"1px solid\"\n            borderBottomColor=\"border\"\n          >\n            <Center w=\"100%\" h=\"48px\" bg=\"linear-gradient( 180deg, rgba(22,22,22,0) 0%, #1A5780 100%)\" />\n          </Center>\n          {/* ÊúÄÂ∞èÂÄº */}\n          <HStack\n            justifyContent=\"space-between\"\n            pl={{\n              md: '0',\n              lg: '14px'\n            }}\n            pr=\"2px\"\n            mt=\"8px\"\n            w={{ base: '100%', lg: '90%' }}\n          >\n            <VStack\n              pl={{ base: '0px', lg: '16px' }}\n              pr=\"16px\"\n              pt=\"5px\"\n              pb=\"5px\"\n              borderRadius=\"8px\"\n              // bg=\"bg_secondary\"\n              gap=\"6px\"\n              maxW={{\n                md: '48%',\n                lg: 'auto'\n              }}\n            >\n              <Text fontSize=\"12px\">Min Price</Text>\n              {isLoading ? (\n                <Flex h=\"18px\" align=\"center\">\n                  <Skeleton />\n                </Flex>\n              ) : (\n                <Text\n                  fontSize=\"14px\"\n                  fontWeight=\"500\"\n                  color=\"text_caption\"\n                  maxW={{\n                    md: '100%',\n                    lg: 'auto'\n                  }}\n                >\n                  <Comma value={formatNumber(displayMinPrice, 6, true, Decimal.ROUND_DOWN)} />\n                </Text>\n              )}\n            </VStack>\n            {/* ÊúÄÂ§ßÂÄº */}\n            <VStack\n              pl=\"16px\"\n              pr={{ base: '0px', lg: '24px' }}\n              pt=\"5px\"\n              pb=\"5px\"\n              borderRadius=\"8px\"\n              // bg=\"bg_secondary\"\n              gap=\"6px\"\n              maxW={{\n                md: '48%',\n                lg: 'auto'\n              }}\n            >\n              <Text fontSize=\"12px\">Max Price</Text>\n              {isLoading ? (\n                <Flex h=\"18px\" align=\"center\">\n                  <Skeleton />\n                </Flex>\n              ) : (\n                <Text\n                  fontSize=\"14px\"\n                  fontWeight=\"500\"\n                  color=\"text_caption\"\n                  maxW={{\n                    md: '100%',\n                    lg: 'auto'\n                  }}\n                >\n                  <Comma value={formatNumber(displayMaxPrice, 6, true, Decimal.ROUND_DOWN)} />\n                </Text>\n              )}\n            </VStack>\n          </HStack>\n        </Flex>\n      ) : (\n        <Flex h=\"202px\" width=\"100%\" align=\"center\" position=\"relative\">\n          <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n            <Spinner />\n          </Box>\n        </Flex>\n      )}\n    </>\n  )\n}\n","import { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport VTextLabelBox from '@cetus/ui-kit/src/components/VTextLabelBox'\nimport { d, formatCurrency, formatNumber, formatNumberWithThreshold, textEllipses } from '@cetus/utils'\nimport { HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nexport function MyLiquidity(props: {\n  sharePoolRate?: string\n  balanceInfo?: any\n  totalValue?: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  lpTokenInfo?: any\n  holdCoinAmounts?: any\n  isLoading?: boolean\n  isReverse?: boolean\n  holdCoinAValue?: string\n  holdCoinBValue?: string\n  rewardPerA?: string\n  rewardPerB?: string\n}) {\n  const {\n    holdCoinAmounts,\n    lpTokenInfo,\n    displayTokenA,\n    displayTokenB,\n    sharePoolRate,\n    balanceInfo,\n    // totalValue,\n    isReverse,\n    holdCoinAValue,\n    holdCoinBValue,\n    rewardPerA,\n    rewardPerB\n  } = props\n\n  const displayValueA = useMemo(() => {\n    return isReverse ? holdCoinBValue : holdCoinAValue\n  }, [isReverse, holdCoinAValue, holdCoinBValue])\n\n  const displayValueB = useMemo(() => {\n    return isReverse ? holdCoinAValue : holdCoinBValue\n  }, [isReverse, holdCoinAValue, holdCoinBValue])\n\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const totalValue = useMemo(() => {\n    return d(displayValueA).add(d(displayValueB))\n  }, [displayValueA, displayValueB, displayTokenA, displayTokenB])\n  console.log('üöÄüöÄüöÄ ~ MyLiquidity.tsx:55 ~ totalValue ~ displayValueA:', displayValueA)\n  console.log('üöÄüöÄüöÄ ~ MyLiquidity.tsx:55 ~ totalValue ~ displayTokenA:', displayTokenA)\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block bg=\"bg_six\" borderColor=\"border_secondary\" p={{ base: '20px 8px', lg: '20px 16px' }}>\n      <VStack w=\"100%\" gap={{ base: '24px', lg: '8px' }}>\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <HStack>\n            <Text textAlign=\"start\" fontSize=\"16px\" color=\"text_caption\">\n              Your Liquidity\n            </Text>\n            {/** Áî±‰∫éÂΩìÂâçÊï∞ÊçÆËæÉ‰ΩéÔºåÂÖàÈöêËóèicon */}\n            {/* <CetusTooltip\n              tooltip={\n                <VStack gap=\"8px\" cursor=\"pointer\" alignItems=\"start\">\n                  <Text fontSize=\"12px\" lineHeight=\"20px\">\n                    Your estimated daily earnings to be compounded according to recent vault performance.\n                  </Text>\n                  {rewardPerA && rewardPerB && (\n                    <Text fontSize=\"14px\" color=\"text_caption\">\n                      {`${rewardPerA} + ${rewardPerB}`}\n                    </Text>\n                  )}\n                </VStack>\n              }\n            >\n              <Image src=\"/images/icon_apr@2x.png\" w=\"24px\" h=\"24px\" />\n            </CetusTooltip> */}\n          </HStack>\n\n          {/* ÊåÅ‰ªìÂç†ÊØî */}\n          <HStack gap=\"8px\">\n            <Text whiteSpace=\"nowrap\">Your share of pool</Text>\n            <Text color=\"text_highlight\" fontWeight=\"500\">\n              {formatNumberWithThreshold(sharePoolRate, 2, 6)}%\n            </Text>\n          </HStack>\n        </HStack>\n        {isApp ? (\n          <VStack w=\"100%\" gap=\"16px\">\n            <HTextLabelBox\n              label=\"LP Token Balance\"\n              labelStyle={{ fontSize: '13px' }}\n              value={\n                <HStack>\n                  <SingleTokenInfo\n                    token={lpTokenInfo}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ isNeedShow: false }}\n                    imgBoxStyle={{ w: '28px', h: '28px' }}\n                    haveTooltip={true}\n                  />\n                  <Text color=\"text_caption\" ml=\"4px\" fontWeight=\"500\" fontSize=\"13px\">\n                    {balanceInfo?.balanceFormat ? formatNumber(balanceInfo?.balanceFormat, 9) : '-'} LP\n                  </Text>\n                </HStack>\n              }\n              subValue={<Text>{balanceInfo?.balanceFormat && totalValue ? formatCurrency(totalValue, 2) : '-'}</Text>}\n              subValueStyle={{ fontSize: '13px' }}\n            />\n            <HTextLabelBox\n              label={textEllipses(displayTokenA?.symbol, 10)}\n              labelStyle={{ fontSize: '13px' }}\n              value={\n                <HStack>\n                  <SingleTokenInfo\n                    token={displayTokenA}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ iconW: '14px', iconH: '14px' }}\n                    imgBoxStyle={{ w: '20px', h: '20px' }}\n                    haveTooltip={true}\n                  />\n                  <Text\n                    fontSize=\"13px\"\n                    color=\"text_caption\"\n                    fontWeight=\"500\"\n                  >{`${formatNumber(holdCoinAmounts?.displayCoinA, 6)} ${textEllipses(displayTokenA?.symbol, 10)}`}</Text>\n                </HStack>\n              }\n              subValue={formatCurrency(displayValueA, 2)}\n              subValueStyle={{ fontSize: '13px' }}\n            />\n            <HTextLabelBox\n              label={textEllipses(displayTokenB?.symbol, 10)}\n              labelStyle={{ fontSize: '13px' }}\n              value={\n                <HStack>\n                  <SingleTokenInfo\n                    token={displayTokenB}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ iconW: '14px', iconH: '14px' }}\n                    imgBoxStyle={{ w: '20px', h: '20px' }}\n                    haveTooltip={true}\n                  />\n\n                  <Text\n                    fontSize=\"13px\"\n                    color=\"text_caption\"\n                    fontWeight=\"500\"\n                  >{`${formatNumber(holdCoinAmounts?.displayCoinB, 6)} ${textEllipses(displayTokenB?.symbol, 10)}`}</Text>\n                </HStack>\n              }\n              subValue={formatCurrency(displayValueB, 2)}\n              subValueStyle={{ fontSize: '13px' }}\n            />\n          </VStack>\n        ) : (\n          <>\n            {/* ‰ΩôÈ¢ù */}\n            <Stack flexDir={{ base: 'column', lg: 'row' }} mt=\"16px\" gap={{ base: '8px', lg: '4px' }} align=\"center\">\n              <Text>LP Token Balance</Text>\n              <Text color=\"text_caption\" ml=\"4px\" fontWeight=\"500\">\n                {balanceInfo?.balanceFormat ? formatNumber(balanceInfo?.balanceFormat, 9) : '-'} LP\n              </Text>\n              <Text>{balanceInfo?.balanceFormat ? formatCurrency(totalValue, 2) : '-'}</Text>\n            </Stack>\n\n            {/* tokenËØ¶ÊÉÖ */}\n            <HStack\n              w={{ base: '100%', lg: '90%' }}\n              mt=\"12px\"\n              justifyContent=\"space-between\"\n              pos=\"relative\"\n              // bg=\"linear-gradient(270deg, #0F0F0F 0%, #252525 50%, #0F0F0F 100%)\"\n              background=\"url(/images/vault_your_liquidity_bg@2x.png)\"\n              backgroundSize=\"100% auto\"\n              borderRadius=\"69px\"\n              gap=\"0\"\n            >\n              {/* Â∑¶Ëæπ */}\n              <VStack flex=\"1\" h=\"120px\" justifyContent=\"center\" alignItems=\"start\">\n                <HStack>\n                  <SingleTokenInfo\n                    token={displayTokenA}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ iconW: '14px', iconH: '14px' }}\n                    imgBoxStyle={{ w: '28px', h: '28px' }}\n                    haveTooltip={true}\n                  />\n                  <Text color=\"text_caption\" fontSize=\"16px\" fontWeight=\"600\">\n                    {textEllipses(displayTokenA?.symbol, 10)}\n                  </Text>\n                </HStack>\n                <VTextLabelBox\n                  wrapStyle={{\n                    gap: '4px',\n                    w: 'calc(100% - 60px)'\n                  }}\n                  title={`${formatNumber(holdCoinAmounts?.displayCoinA, 6)} ${textEllipses(displayTokenA?.symbol, 10)}`}\n                  titleStyle={{\n                    fontSize: { base: '12px', lg: '14px' },\n                    color: 'text_caption',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '14px' },\n                    wordBreak: 'break-all',\n                    fontWeight: 500\n                  }}\n                  value={formatCurrency(displayValueA, 2)}\n                  valueStyle={{\n                    fontSize: { base: '12px', lg: '14px' },\n                    color: 'text_paragraph',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '14px' },\n                    wordBreak: 'break-all',\n                    fontWeight: 500\n                  }}\n                />\n              </VStack>\n              {/* Âè≥Ëæπ */}\n              <VStack flex=\"1\" h=\"120px\" justifyContent=\"center\" alignItems=\"end\">\n                <HStack>\n                  <Text color=\"text_caption\" fontSize=\"16px\" fontWeight=\"600\">\n                    {textEllipses(displayTokenB?.symbol, 10)}\n                  </Text>\n                  <SingleTokenInfo\n                    token={displayTokenB}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ iconW: '14px', iconH: '14px' }}\n                    imgBoxStyle={{ w: '28px', h: '28px' }}\n                    haveTooltip={true}\n                  />\n                </HStack>\n\n                <VTextLabelBox\n                  wrapStyle={{\n                    gap: '4px',\n                    alignItems: 'flex-end',\n                    w: 'calc(100% - 60px)'\n                  }}\n                  title={`${formatNumber(holdCoinAmounts?.displayCoinB, 6)} ${textEllipses(displayTokenB?.symbol, 10)}`}\n                  titleStyle={{\n                    fontSize: { base: '12px', lg: '14px' },\n                    color: 'text_caption',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '14px' },\n                    wordBreak: 'break-all',\n                    fontWeight: 500\n                  }}\n                  value={formatCurrency(displayValueB, 2)}\n                  valueStyle={{\n                    fontSize: { base: '12px', lg: '14px' },\n                    color: 'text_paragraph',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '14px' },\n                    wordBreak: 'break-all',\n                    fontWeight: 500\n                  }}\n                />\n              </VStack>\n              {/* ‰∏≠Èó¥icon */}\n              <Block\n                pos=\"absolute\"\n                left=\"calc(50% - 52px)\"\n                w=\"104px\"\n                h=\"104px\"\n                borderRadius=\"70px\"\n                p=\"8px 0px\"\n                // display=\"flex\"\n                // flexDirection=\"column\"\n                // alignItems=\"center\"\n                // justifyContent=\"center\"\n              >\n                <VStack justify=\"center\" gap=\"4px\">\n                  <SingleTokenInfo\n                    token={lpTokenInfo}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ isNeedShow: false }}\n                    imgBoxStyle={{ w: '58px', h: '58px' }}\n                    haveTooltip={true}\n                  />\n                  <Text color=\"#8BAABE\" fontSize=\"12px\">\n                    Pooled Assets\n                  </Text>\n                </VStack>\n              </Block>\n            </HStack>\n          </>\n        )}\n      </VStack>\n    </Block>\n  )\n}\n","import { formatNumber } from '@cetus/utils'\nimport { d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useMemo } from 'react'\n\nexport default function useDisplayPrice(props: { price?: string; changeSide: boolean }) {\n  const { price, changeSide } = props\n  const displayPrice = useMemo(() => {\n    if (price) {\n      if (changeSide) {\n        return formatNumber(d(1).div(price).toString(), 10, true).toString()\n      } else {\n        return price\n      }\n    }\n    return undefined\n  }, [price, changeSide])\n\n  return {\n    displayPrice\n  }\n}\n","import useDisplayPrice from '@/hooks/common/useDisplayPrice'\nimport useDisplayTickPrice from '@/hooks/common/useDisplayTickPrice'\nimport { Block } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { Icon, PositionPriceRange, SingleCoinImage } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\nexport function PositionRange(props: {\n  currentPrice?: string\n  minPrice?: string\n  maxPrice?: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  isLoading?: boolean\n  isReverse: boolean\n}) {\n  const [changeSide, setChangeSide] = useState<boolean>(false)\n\n  const { currentPrice, minPrice, maxPrice, displayTokenA, displayTokenB, isLoading, isReverse } = props\n  const { displayPrice } = useDisplayPrice({ price: currentPrice, changeSide: isReverse ? !changeSide : changeSide })\n  const { displayMaxPrice, displayMinPrice } = useDisplayTickPrice({ minPrice, maxPrice, changeSide })\n\n  useEffect(() => {\n    setChangeSide(isReverse)\n  }, [isReverse])\n\n  const baseCoin = useMemo(() => {\n    return changeSide ? displayTokenB : displayTokenA\n  }, [displayTokenA, displayTokenB, changeSide])\n\n  const logoUrl = useMemo(() => {\n    console.log('üöÄ ~ logoUrl ~ baseCoin?.logo_url:', baseCoin, baseCoin?.logo_url)\n    return baseCoin?.logo_url ? baseCoin?.logo_url : ''\n  }, [baseCoin?.logo_url])\n\n  return (\n    <Block bg=\"bg_six\" borderColor=\"border_secondary\" p={{ base: '16px 8px', lg: '20px 16px' }}>\n      <VStack w=\"100%\">\n        <HStack w=\"100%\" justifyContent=\"space-between\" mb=\"6px\">\n          <Text fontSize=\"16px\" color=\"text_caption\">\n            Position Range\n          </Text>\n          {/* ÂàáÊç¢base */}\n          <HStack gap=\"0px\">\n            {logoUrl && (\n              <SingleCoinImage\n                imageUrl={logoUrl}\n                imageStyle={{\n                  w: '20px',\n                  h: '20px'\n                }}\n              />\n            )}\n            <Text color=\"text_caption\"> {baseCoin?.symbol}</Text>\n\n            <HStack ml=\"8px\" gap=\"4px\" cursor=\"pointer\" onClick={() => setChangeSide(!changeSide)}>\n              <Text fontSize=\"12px\"> Base coin</Text>\n              <Icon xlinkHref=\"#icon-icon_swap1\" />\n            </HStack>\n          </HStack>\n        </HStack>\n\n        <PositionPriceRange displayPrice={displayPrice} displayMaxPrice={displayMaxPrice} displayMinPrice={displayMinPrice} />\n      </VStack>\n    </Block>\n  )\n}\n","import { formatNumber } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\nexport default function CustomPirceRangeTooltip({ payload, label }) {\n  return (\n    payload &&\n    payload.length && (\n      <VStack padding=\"16px\" bg=\"bg_secondary\" borderRadius=\"12px\" border=\"1px solid border_secondary\" justifyContent=\"flex-start\" alignItems=\"left\">\n        <Text fontSize=\"12px\">{payload[0].payload.tooltipTime}</Text>\n        <HStack textAlign=\"left\">\n          <Text color=\"#68FFD8\" fontSize=\"12px\">\n            Pool Price\n          </Text>\n          <Text color=\"#68FFD8\" fontSize=\"12px\">\n            {formatNumber(payload[0].payload.real)}\n          </Text>\n        </HStack>\n        <HStack>\n          <Text color=\"#6FBCF0\" fontSize=\"12px\">\n            Price Range\n          </Text>\n          <Text color=\"#6FBCF0\" fontSize=\"12px\">\n            {formatNumber(payload[0].payload.lower)}-{formatNumber(payload[0].payload.upper)}\n          </Text>\n        </HStack>\n      </VStack>\n    )\n  )\n}\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatNumber } from '@cetus/utils'\nimport { useMemo, useState } from 'react'\nimport { Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport CustomPirceRangeTooltip from './CustomPriceRangeTooltip'\nimport { CustomizedVaultYAxisTick } from './CustomizedAxisTick'\n\ntype PriceRangeChartProps = {\n  data: any\n  dateType: string\n  isTabLoading: boolean\n}\n\nexport default function PriceRangeChart({ data = [], dateType, isTabLoading }: PriceRangeChartProps) {\n  const slicedData = useMemo(() => data, [data])\n  const [hidden, setHidden] = useState({ lower: false, upper: false, real: false })\n\n  const handleLegendClick = e => {\n    setHidden(prev => ({ ...prev, [e.value]: !prev[e.value] }))\n  }\n\n  const ticks = useMemo(() => {\n    if (slicedData.length) {\n      const min = Math.min(...slicedData.map((item: any) => item.lower))\n      const max = Math.max(...slicedData.map((item: any) => item.upper))\n      const tick4 = d(max).mul(1.1)\n      const tick0 = d(min).mul(0.9)\n      const interval = tick4.sub(tick0).div(4)\n      return Array.from({ length: 5 }, (_, i) => tick0.add(interval.mul(i)).toNumber())\n    }\n    return []\n  }, [slicedData])\n\n  const getXData = (dataLength: number, value: any) => {\n    const date = new Date(value * 1000)\n    const hours = date.getUTCHours()\n    const minutes = date.getUTCMinutes()\n    const day = date.getUTCDate()\n    const month = date.getUTCMonth() + 1\n\n    if (dataLength < 24 || dateType === '24H') {\n      const period = hours >= 12 ? 'PM' : 'AM'\n      const displayHours = hours % 12 || 12\n      return `${String(displayHours).padStart(2, '0')}:${String(minutes).padStart(2, '0')} ${period}`\n    }\n    return `${month}/${day}`\n  }\n\n  const { isApp } = useWindowWidth()\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart data={slicedData} margin={{ top: 0, left: 10, right: 28, bottom: 5 }}>\n        <XAxis\n          dataKey=\"date\"\n          fontSize=\"12px\"\n          axisLine={false}\n          tickLine={false}\n          tick={{ fill: '#909CA4' }}\n          dy={16}\n          tickFormatter={value => (isTabLoading ? '' : getXData(slicedData.length, value))}\n          minTickGap={slicedData?.length > 8 ? 36 : undefined}\n          interval={slicedData?.length <= 8 ? 0 : undefined}\n        />\n        <YAxis\n          fontSize=\"12px\"\n          ticks={ticks}\n          domain={[ticks[0], ticks[ticks.length - 1]]}\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={value => formatNumber(value, 4)}\n          tick={<CustomizedVaultYAxisTick />}\n        />\n        <Tooltip content={<CustomPirceRangeTooltip />} />\n        <Legend\n          align=\"right\"\n          verticalAlign=\"top\"\n          layout=\"horizontal\"\n          wrapperStyle={{ top: isApp ? -8 : -41, right: isApp ? 4 : 100, fontSize: 12 }}\n          formatter={value => ({ lower: 'Price Range', upper: 'Price Range', real: 'Pool Price' })[value] || value}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"real\"\n          stroke=\"#07EBAD\"\n          activeDot={{ r: 4, stroke: '#07EBAD' }}\n          hide={hidden.real}\n          dot={false}\n          isAnimationActive={false}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"lower\"\n          stroke=\"#6FBCF0\"\n          activeDot={{ r: 4, stroke: '#6FBCF0' }}\n          dot={false}\n          hide={hidden.lower}\n          isAnimationActive={false}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"upper\"\n          stroke=\"#6FBCF0\"\n          activeDot={{ r: 4, stroke: '#6FBCF0' }}\n          legendType=\"none\"\n          dot={false}\n          hide={hidden.upper}\n          isAnimationActive={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n","import { VaultUnstablePriceRange } from '@/apis/path'\nimport { dayStrZeroPadding } from '@/utils/api-data-utils'\nimport { useFetch } from '@cetus/hooks'\nimport { formatTimestamp } from '@cetus/utils'\nimport { identity, pickBy } from 'lodash-es'\n\nexport type GetPriceRangeDataParams = {\n  vaultID?: string\n  dateType?: 'hour' | 'min'\n  beginTimestamp: number | string\n  endTimestamp: number | string\n}\n\nexport default function useGetPriceRangeData() {\n  const { fetchByApi } = useFetch()\n\n  const getPriceRangeData = async (params: GetPriceRangeDataParams) => {\n    try {\n      const options = pickBy(params, identity)\n      const res = await fetchByApi(VaultUnstablePriceRange, 'GET', options)\n\n      if (!res?.list) return []\n\n      return res.list.map((item: any) => {\n        const timestampMs = item.Timestamp * 1000\n        const date = new Date(timestampMs)\n        return {\n          lower: item.value.lower,\n          upper: item.value.upper,\n          real: item.value.real,\n          date: item.Timestamp,\n          xAxis: dayStrZeroPadding(date.toISOString().slice(0, 10)), // Âè™Âèñ YYYY-MM-DD\n          tooltipTime: formatTimestamp(timestampMs),\n          hour: date.getHours()\n        }\n      })\n    } catch (error) {\n      console.error('üöÄ ~ useGetPriceRangeData ~ getPriceRangeData Error:', error)\n      return []\n    }\n  }\n\n  return { getPriceRangeData }\n}\n","import PriceRangeChart from '@/components/chart/PriceRangeChart'\nimport useGetPriceRangeData from '@/hooks/unstable-vault/useGetVaultPriceRange'\nimport { Block, SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d } from '@cetus/utils'\nimport { Box, HStack, Spinner, Text } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport default function PriceRangeChartPageBlock({\n  isRefresh,\n  vaultsId,\n  isReverse\n}: {\n  vaultsId?: string\n  isRefresh?: boolean\n  isReverse?: boolean\n}) {\n  const [isLoading, setIsLoading] = useState(false)\n  const { getPriceRangeData } = useGetPriceRangeData()\n  const [priceRangeData, setPriceRangeDate] = useState()\n\n  const chartTypeList = [\n    {\n      label: '24H'\n    },\n    {\n      label: '1W'\n    }\n  ]\n  const [dateType, setDateType] = useState<'24H' | '1W'>('1W')\n  const [isTabLoading, setIsTabLoading] = useState(false)\n\n  const fetchPricerangeHistogram = async (type: string) => {\n    const now = Date.now()\n    const oneDay = 86400 // 1 Â§©ÁöÑÁßíÊï∞\n    const beginTimestamp = String(Math.floor(now / 1000 - oneDay))\n    try {\n      setIsLoading(true)\n      const res = await getPriceRangeData({\n        vaultID: vaultsId,\n        dateType: type == '24H' ? 'min' : 'hour',\n        beginTimestamp: type == '24H' ? beginTimestamp : '',\n        endTimestamp: d(new Date().getTime()).toFixed(0)\n      })\n\n      const result = res.map((item: any) => {\n        const lower = isReverse ? d(1).div(d(item.upper)).toString() : item.lower\n        const upper = isReverse ? d(1).div(d(item.lower)).toString() : item.upper\n        const real = isReverse ? d(1).div(item.real).toString() : item.real\n        return {\n          ...item,\n          lower,\n          upper,\n          real\n        }\n      })\n\n      setPriceRangeDate(result)\n      setIsTabLoading(false)\n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      setIsTabLoading(false)\n      console.log('üöÄüöÄüöÄ ~ PriceRangeChartPageBlock.tsx:40 ~ fetchPricerangeHistogram ~ error:', error)\n    }\n  }\n\n  useEffect(() => {\n    if (vaultsId) {\n      fetchPricerangeHistogram(dateType)\n    }\n  }, [vaultsId, dateType])\n\n  useEffect(() => {\n    if (isRefresh) {\n      fetchPricerangeHistogram(dateType)\n    }\n  }, [isRefresh])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block bg=\"bg_six\" borderColor=\"border_secondary\" padding={isApp ? '12px' : '20px 8px 20px 20px'}>\n      <HStack justify=\"space-between\">\n        <HStack pr=\"12px\" w=\"100%\" justify=\"space-between\" gap=\"4px\">\n          <Text fontWeight=\"500\" fontSize=\"14px\">\n            Historical Ranges\n          </Text>\n          <SelectTab\n            type=\"outlineTab\"\n            tabList={chartTypeList}\n            currentTab={dateType}\n            handleChangeTab={tab => {\n              setIsTabLoading(true)\n              setDateType(tab.label)\n            }}\n            wrapStyle={{\n              w: '88px',\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px'\n            }}\n            itemStyle={{\n              flex: '1',\n              fontSize: '14px',\n              margin: '0px'\n            }}\n          />\n        </HStack>\n      </HStack>\n      <Box w=\"100%\" h=\"260px\" mt=\"20px\">\n        <Box w=\"100%\" h=\"260px\" position=\"relative\">\n          {isLoading && (\n            <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          )}\n          <PriceRangeChart data={priceRangeData} dateType={dateType} isTabLoading={isTabLoading} />\n        </Box>\n      </Box>\n    </Block>\n  )\n}\n","import { VaultUnstableHistogram } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport { formatTimestamp } from '@cetus/utils'\nimport { identity, pickBy } from 'lodash-es'\n\nexport type GetHistogramDataParams = {\n  vaultID: string\n  type?: 'hour' | 'day' | 'week' | 'month'\n  beginTimestamp: number | string\n  endTimestamp: number | string\n}\n\nexport default function useGetVaultHistogram() {\n  const { fetchByApi } = useFetch()\n\n  const getVaultHistogram = async (params: GetHistogramDataParams) => {\n    console.log('üöÄ ~ getVaultHistogram ~ params:', params)\n    const requestParams: any = { ...params }\n    requestParams['dateType'] = params.type == 'day' || params.type == 'week' ? 'hour' : 'day'\n    delete requestParams['type']\n    try {\n      const options = pickBy(requestParams, identity)\n      const res = await fetchByApi(VaultUnstableHistogram, 'GET', options)\n\n      if (!res?.list) return []\n\n      return res?.list.map((item: any, index: number) => {\n        const timestampMs = item.Timestamp * 1000\n        const date = new Date(timestampMs)\n        const monthIndex = Number(date.toISOString().slice(5, 7)) // Ëé∑ÂèñÊúà‰ªΩ\n\n        const xAxis = getXData(res?.list?.length, date, params?.type, index)\n\n        return {\n          num: +item.value, // Âø´ÈÄüËΩ¨Êç¢‰∏∫Êï∞Â≠ó\n          date: item.Timestamp,\n          // xAxis: params.dateType === 'mon' ? Month[monthIndex] : dayStrZeroPadding(date.toISOString().slice(0, 10)),\n          xAxis,\n          tooltipTime: formatTimestamp(timestampMs)\n        }\n      })\n    } catch (error) {\n      console.error('üöÄ ~ useGetHistogramData ~ getHistogramData Error:', error)\n      return []\n    }\n  }\n  const getXData = (dataLength: number, value: any, type: string = 'D', index: number) => {\n    const dateType = type == 'D' || type == 'day' ? 'D' : type == 'W' || type == 'week' ? 'W' : 'M'\n    console.log('üöÄ ~ getXData ~ type:', type)\n    const date = value\n    const noShowHours = date.getUTCHours()\n    let hours = date.getUTCHours()\n    const minutes = date.getUTCMinutes()\n    const day = date.getUTCDate()\n    const month = date.getUTCMonth() + 1 // Êúà‰ªΩ‰ªé 0 ÂºÄÂßã\n    const period = hours >= 12 ? 'PM' : 'AM'\n    hours = hours % 12 || 12 // 0 Âèò‰∏∫ 12Ôºå13 Âèò‰∏∫ 1\n    if (dateType == 'D') {\n      // dateType‰∏∫Â§©ÁöÑËØùÔºåÊòæÁ§∫ÂÖ∑‰Ωì UTC Êó∂Èó¥ (06:00, 12:00, 18:00, 00:00)\n      return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')} ${period}`\n    } else {\n      if (dateType == 'M') {\n        // dateType‰∏∫ÊúàÁöÑËØùÔºåÊòæÁ§∫ÂÖ∑‰ΩìÁöÑÂ§©\n        return `${month}/${day}`\n      } else {\n        console.log('üöÄ ~ getXData ~ noShowHours:', noShowHours)\n        // Â¶ÇÊûúÊï∞ÊçÆ‰∏∫Âë®,ÈÇ£‰πàÂ∞è‰∫é‰∏ÄÂ§©ÔºåÂ±ïÁ§∫Âπ≥Âùá‰∏§‰∏™ÁÇπÔºåÂ§ß‰∫é‰∏ÄÂ§©Â∞è‰∫é‰∫îÂ§©ÔºåÊØèÂ§©Â±ïÁ§∫‰∏§‰∏™ÁÇπÔºåÂ§ß‰∫éÁ≠â‰∫é5Â§©ÔºåÊØèÂ§©Â±ïÁ§∫‰∏Ä‰∏™ÁÇπ\n        if (dataLength < 24) {\n          const step = Math.floor(dataLength / 2)\n          console.log('üöÄ ~ getXData ~ step:', dataLength, index, index % step === 0, step)\n          if (index % step === 0) {\n            return `${month}/${day}`\n          }\n        }\n        if (dataLength >= 24 && dataLength < 120) {\n          if (noShowHours === 0 || noShowHours === 12) {\n            return `${month}/${day}`\n          }\n        }\n        if (dataLength >= 120) {\n          if (noShowHours === 0 && minutes === 0) {\n            return `${month}/${day}`\n          }\n        }\n      }\n    }\n    return '' // ÂÖ∂‰ªñÊó∂Èó¥ÁÇπ‰∏çÊòæÁ§∫\n  }\n\n  return { getVaultHistogram }\n}\n","import TvlChart from '@/components/chart/TvlChart'\nimport useGetVaultHistogram from '@/hooks/unstable-vault/useGetVaultHistogram'\nimport { Block, SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { NoData } from '@cetus/ui-kit'\nimport { formatCurrency } from '@cetus/utils'\nimport { Box, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport default function TvlChartPageBlock({ isRefresh, vaultsId }: { vaultsId: string; isRefresh: boolean }) {\n  console.log('üöÄüöÄüöÄ ~ TvlChartPageBlock.tsx:11 ~ TvlChartPageBlock ~ isRefresh:', isRefresh)\n  const chartTypeList = [\n    {\n      label: '24H'\n    },\n    {\n      label: '1W'\n    },\n    {\n      label: '1M'\n    }\n  ]\n  const [isLoading, setIsLoading] = useState(true)\n  const [dateType, setDateType] = useState<'24H' | '1W' | '1M'>('24H')\n  // ÂõæË°®Êï∞ÊçÆ\n  const { getVaultHistogram } = useGetVaultHistogram()\n  const [pureTvlChartData, setPureTvlChartData] = useState([])\n  const [pureTvlCurrentData, setPureTvlCurrentData] = useState()\n  const [currentPureTvlCurrentData, setCurrentPureTvlCurrentDatC] = useState()\n  const handleGetHistogramTvlData = async () => {\n    setIsLoading(true)\n    const now = Date.now()\n    const oneDay = 86400 // 1 Â§©ÁöÑÁßíÊï∞\n    const timeLimit = dateType == '24H' ? 1 * oneDay : dateType == '1W' ? 7 * oneDay : 30 * oneDay\n    const beginTimestamp = !timeLimit ? 0 : String(Math.floor(now / 1000 - timeLimit))\n\n    const tvl_res = await getVaultHistogram({\n      type: dateType == '24H' ? 'day' : dateType == '1W' ? 'week' : 'month',\n      vaultID: vaultsId,\n      beginTimestamp,\n      endTimestamp: String(Math.floor(now / 1000))\n    })\n    setCurrentPureTvlCurrentDatC(tvl_res[tvl_res.length - 1]?.num)\n    setPureTvlCurrentData(tvl_res[tvl_res.length - 1]?.num)\n    console.log('üöÄ ~ file: TestData.tsx:78 ~ handleGetHistogramData ~ res:', tvl_res)\n    setPureTvlChartData(tvl_res)\n    setIsLoading(false)\n  }\n\n  const handleChangePureTvl = (data: any) => {\n    console.log('üöÄ ~ file: TestData.tsx:88 ~ handleChangePureTvl ~ data:', data)\n    if (data) {\n      setPureTvlCurrentData(data.num)\n    } else {\n      setPureTvlCurrentData(currentPureTvlCurrentData)\n    }\n  }\n\n  useEffect(() => {\n    if (vaultsId) {\n      handleGetHistogramTvlData()\n    }\n  }, [dateType, vaultsId])\n\n  useEffect(() => {\n    if (isRefresh) {\n      handleGetHistogramTvlData()\n    }\n  }, [isRefresh])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block bg=\"bg_six\" borderColor=\"border_secondary\" padding={isApp ? '12px' : '20px'}>\n      <HStack justify=\"space-between\">\n        {pureTvlCurrentData ? (\n          <VStack align=\"flex-start\" gap=\"4px\">\n            <Text fontWeight=\"500\" fontSize=\"12px\">\n              TVL\n            </Text>\n\n            <Text fontSize=\"16px\" color=\"text_caption\" mt=\"8px\">\n              {formatCurrency(pureTvlCurrentData, 2)}\n            </Text>\n          </VStack>\n        ) : (\n          <VStack align=\"flex-start\" gap=\"4px\" />\n        )}\n        <SelectTab\n          type=\"outlineTab\"\n          tabList={chartTypeList}\n          currentTab={dateType}\n          handleChangeTab={tab => setDateType(tab.label)}\n          wrapStyle={{\n            w: '128px',\n            h: '32px',\n            p: '3px',\n            borderRadius: '8px'\n          }}\n          itemStyle={{\n            flex: '1',\n            fontSize: '14px',\n            margin: '0px'\n          }}\n        />\n      </HStack>\n      <Box w=\"100%\" h=\"260px\" mt=\"20px\">\n        <Box w=\"100%\" h=\"260px\" position=\"relative\">\n          {isLoading && (\n            <Box position=\"absolute\" top=\"38%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          )}\n          {pureTvlChartData.length > 0 && (\n            <TvlChart data={pureTvlChartData} onChangeValue={handleChangePureTvl} isShowYAxis={true} toolTipsType=\"tvl\" />\n          )}\n          {!isLoading && pureTvlChartData.length === 0 && <NoData type=\"nodata\" />}\n        </Box>\n      </Box>\n    </Block>\n  )\n}\n","import { VaultsAddModelData } from '@/types/vaults'\nimport { Block, TradeConfirmAmountInfo } from '@cetus/design'\nimport { CoinPairImage } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  HStack,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { VaultsAddResult } from '../vaults/detail/VaultsAddResult'\n\ntype VaultsAddConfirmModelProps = {\n  data: VaultsAddModelData\n  isOpen: boolean\n  onClose: () => void\n  onSubmitClick: () => void\n  calculateLpLoading?: boolean\n}\n\nexport default function VaultsAddConfirmModel(props: VaultsAddConfirmModelProps) {\n  const { isOpen, onClose, data, onSubmitClick, calculateLpLoading } = props\n  const { feeTier, displayTokenA, displayTokenB, displayAmountA, displayAmountB, totalAmountValue, sharePool, lpAmountLimit, lpDecimals } = data\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Deposit\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"20px\" p=\"16px\" pb=\"0px\" pos=\"relative\">\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <HStack>\n                <CoinPairImage\n                  coinAIconUrl={displayTokenA?.logo_url}\n                  coinBIconUrl={displayTokenB?.logo_url}\n                  imageStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                  imgBoxStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                />\n                <Text fontSize=\"16px\" color=\"text_caption\">\n                  {`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n                </Text>\n              </HStack>\n\n              <Block w=\"unset\" p=\"6px 8px\" borderRadius=\"12px\" ml=\"4px\">\n                <HStack>\n                  <Text>Fee Tier</Text>\n                  <Text color=\"primary\">{feeTier}</Text>\n                </HStack>\n              </Block>\n            </HStack>\n\n            {/* ‰∫§ÊòìÊï∞ÈáèÂ±ïÁ§∫ */}\n            <TradeConfirmAmountInfo\n              coinA={{\n                amount: displayAmountA,\n                ...displayTokenA\n              }}\n              iconParams={{\n                xlinkHref: '#icon-icon_add',\n                svgFill: 'text_caption'\n              }}\n              coinB={{\n                amount: displayAmountB,\n                ...displayTokenB\n              }}\n            />\n\n            {/* Â±ïÁ§∫ÁªìÊûú */}\n\n            <VaultsAddResult\n              amountLimit={lpAmountLimit}\n              inputTotalValue={totalAmountValue}\n              preCalculateLoading={false}\n              calculateLpLoading={calculateLpLoading}\n              lpRate={sharePool}\n              lpDecimals={lpDecimals}\n              poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n            />\n            <Box h=\"52px\" />\n            <Button\n              pos=\"absolute\"\n              bottom=\"0px\"\n              mt=\"4px\"\n              w=\"100%\"\n              h=\"52px\"\n              borderRadius=\"12px\"\n              fontSize=\"16px\"\n              fontWeight=\"500\"\n              onClick={() => {\n                onSubmitClick()\n              }}\n            >\n              Deposit\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { useGetSuiStakeProtocol } from '@/hooks/vaults/useVaultsHelper'\nimport { AssetActionType } from '@/types/vaults'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Token } from '@cetus/types'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport ZapSwitch from '../modal/common/ZapSwitch'\n\nconst hoverCoinTips =\n  'You can also choose to deposit in only one asset type. In that case,the vault will convert your asset to the required propositions using Cetus.Please note that trading fees & slippage will be applied. When slippage is involved,a certain amount of post-swap dust (no loss of funds) will be returned to you.'\n\nconst hoverSuiTips = (stakeProtocolName?: string, symbol?: string) => {\n  return `When you deposit in only SUI tokens, a part of your SUI amount will be converted to ${symbol} via ${stakeProtocolName} liquid staking services to match required liquidity compositions of the liquidity pool on Cetus. A certain amount of dust (no loss of funds) will be returned to you if slippage is involved.`\n}\n\nexport function SwitchAssetTab(props: {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  onSelectAssetTab: (assetTab: AssetActionType) => void\n  showAfterIcon?: boolean\n  label?: string\n  handleRefreshClick: () => void\n  refreshCount: number\n  setAssetAction: (value: string) => void\n  assetAction: string\n  isCheckedZAP: boolean\n  setIsCheckedZAP: (value: boolean) => void\n  isUnstableVault?: boolean\n  currentActionTab?: string\n}) {\n  const {\n    displayTokenA,\n    displayTokenB,\n    onSelectAssetTab,\n    showAfterIcon = false,\n    label = 'Deposit Amounts',\n    handleRefreshClick,\n    refreshCount,\n    isCheckedZAP,\n    setIsCheckedZAP,\n    assetAction,\n    setAssetAction,\n    isUnstableVault,\n    currentActionTab\n  } = props\n  console.log('üöÄüöÄüöÄ ~ SwitchAssetTab.tsx:47 ~ props:', props)\n\n  const { stakeProtocolName } = useGetSuiStakeProtocol(displayTokenA?.coin_type)\n  const [currentActionToken, setCurrentActionToken] = useState('both')\n\n  const tabList = useMemo(() => {\n    console.log('üöÄüöÄüöÄ ~ SwitchAssetTab.tsx:52 ~ tabList ~ displayTokenA:', displayTokenA)\n    if (displayTokenA && displayTokenB) {\n      const list: Tab<{ action: AssetActionType }>[] = [\n        {\n          label: `${displayTokenA.symbol} only`,\n          action: displayTokenA.coin_type,\n          afterIcon: isCheckedZAP && currentActionTab == 'Deposit' && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n          tooltip: isUnstableVault\n            ? currentActionTab == 'Deposit'\n              ? `You can add liquidity in this pool with only ${displayTokenA.symbol}.`\n              : ''\n            : hoverCoinTips\n        },\n        // {\n        //   label: `${displayTokenA.symbol}+${displayTokenB.symbol}`,\n        //   action: 'both'\n        // },\n        {\n          label: `${displayTokenB.symbol} only`,\n          action: displayTokenB.coin_type,\n          afterIcon: isCheckedZAP && currentActionTab == 'Deposit' && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n          tooltip: isUnstableVault\n            ? currentActionTab == 'Deposit'\n              ? `You can add liquidity in this pool with only ${displayTokenB.symbol}.`\n              : ''\n            : hoverSuiTips(stakeProtocolName, displayTokenA?.symbol)\n        }\n      ]\n\n      if (isUnstableVault && currentActionTab == 'Deposit') {\n        list.splice(1, 0, {\n          label: `${displayTokenA.symbol}+${displayTokenB.symbol}`,\n          action: 'both',\n          afterIcon: isCheckedZAP && !isUnstableVault && currentActionTab == 'Deposit' ? { xlinkHref: '#icon-icon_tips' } : undefined,\n          tooltip: currentActionTab == 'Deposit' ? `You can add any value you want from both assets.` : ''\n        })\n      }\n\n      // if (label == 'Remove Amounts' && isCheckedZAP) {\n      //   list.splice(1, 1)\n      // }\n\n      return list\n    }\n\n    return []\n  }, [displayTokenA, stakeProtocolName, isCheckedZAP])\n\n  const currentTab = useMemo(() => {\n    if (tabList.length === 0) {\n      return undefined\n    }\n    console.log('üöÄüöÄüöÄ ~ currentTab ~ assetAction:', assetAction)\n    if (isUnstableVault) {\n      if (assetAction === displayTokenA?.coin_type) {\n        return tabList[0].label\n      }\n\n      if (assetAction === displayTokenB?.coin_type) {\n        return currentActionTab == 'Withdraw' ? tabList[1].label : tabList[2].label\n      }\n    } else {\n      if (assetAction === displayTokenA?.coin_type) {\n        return tabList[0].label\n      }\n\n      if (assetAction === displayTokenB?.coin_type) {\n        return tabList[1].label\n      }\n    }\n\n    return tabList[1].label\n  }, [assetAction, tabList, isCheckedZAP])\n\n  const tooltipType = useMemo(() => {\n    if (currentActionTab == 'Deposit') {\n      return isUnstableVault ? 'customDeposit' : 'deposit'\n    }\n    return 'withdraw'\n  }, [currentActionTab, isUnstableVault])\n\n  return (\n    // <Block borderRadius=\"12px\" p={{ base: '16px 8px 8px', lg: '16px' }}>\n    <VStack w=\"100%\" gap=\"16px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <Text fontWeight=\"500\">{label}</Text>\n\n        {/* <HStack cursor=\"pointer\">\n            <Slippage slippageType=\"vaults\" compact={true} />\n            <MEVProtect />\n            <FreshProgress value={refreshCount} min={0} max={20} onClick={handleRefreshClick} />\n          </HStack> */}\n        {/* <ZapSwitch\n          displayTokenA={displayTokenA}\n          currentActionTab={currentActionTab}\n          isCheckedZAP={isCheckedZAP}\n          setIsCheckedZAP={setIsCheckedZAP}\n          setCurrentActionToken={setCurrentActionToken}\n          setAssetAction={setAssetAction}\n          isUnstableVault={isUnstableVault}\n        /> */}\n        <ZapSwitch\n          isCheckedZAP={isCheckedZAP}\n          zapText={currentActionTab == 'Deposit' ? 'Zap In' : 'Zap Out'}\n          tooltipType={tooltipType}\n          zapSwitchChange={status => {\n            setIsCheckedZAP(!isCheckedZAP)\n            if (!status) {\n              setAssetAction('both')\n            } else {\n              setAssetAction(displayTokenA?.coin_type)\n            }\n            setCurrentActionToken(displayTokenA?.symbol + ' only')\n          }}\n        />\n      </HStack>\n      {isCheckedZAP ? (\n        <SelectTab\n          wrapStyle={{\n            w: '100%',\n            h: '48px',\n            borderRadius: '8px',\n            p: '3px'\n          }}\n          itemStyle={{\n            w: '50%',\n            fontSize: '14px',\n            borderRadius: '6px',\n            fontWeight: '500'\n          }}\n          type=\"outlineTab\"\n          currentTab={currentTab}\n          tabList={tabList}\n          handleChangeTab={(item: Tab<{ action: AssetActionType }>) => {\n            setAssetAction(item.action)\n            console.log('üöÄüöÄüöÄ ~ item.action:', item.action)\n            onSelectAssetTab(item.action)\n          }}\n        />\n      ) : null}\n    </VStack>\n    // </Block>\n  )\n}\n","import VaultsAddConfirmModel from '@/components/modal/VaultsAddConfirmModel'\nimport vaultInterface from '@/hooks/vault-interface'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useGlobalStore from '@/store/common/global'\nimport { AssetActionType, VaultApiInfo, VaultsAddModelData } from '@/types/vaults'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores/src/useAccountStore'\nimport { Token } from '@cetus/types'\nimport { Button, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { SwitchAssetTab } from './SwitchAssetTab'\nimport { VaultsAddResult } from './VaultsAddResult'\n\ntype VaultsAddProps = {\n  apiVaultInfo?: VaultApiInfo\n  tokenA?: Token\n  tokenB?: Token\n  isReverse: boolean\n  vaultsId?: string\n  totalLp?: string\n  feeTier?: string\n  isUnstableVault: boolean\n  handleRefreshClick: () => void\n  currentActionTab?: string\n}\n\nexport function VaultsAdd(props: VaultsAddProps) {\n  const { category } = useParams()\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:32 ~ VaultsAdd ~ category:', category)\n  const { apiVaultInfo, tokenA, tokenB, isReverse, vaultsId, totalLp, feeTier, handleRefreshClick, currentActionTab } = props\n  const useVaultsAdd = vaultInterface.useVaultsAdd(category == 'haedal')\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:35 ~ VaultsAdd ~ useVaultsAdd:', useVaultsAdd)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(category == 'haedal')\n  const useGetContractVaultInfo = vaultInterface.useGetContractVaultInfo(category == 'haedal')\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:29 ~ VaultsAdd ~ totalLp:', totalLp)\n  const [assetAction, setAssetAction] = useState<AssetActionType>('both')\n  const [isCheckedZAP, setIsCheckedZAP] = useState(false)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { fromTokenLock, toTokenLock, lpTokenInfo, gtAumLimit, hardCapUSD, vaultTvl } = useGetContractVaultInfo(\n    apiVaultInfo?.vaultsId,\n    apiVaultInfo?.clmmPoolAddress,\n    apiVaultInfo?.tokenA,\n    apiVaultInfo?.tokenB,\n    apiVaultInfo?.isReverse\n  )\n  const {\n    amountInputA,\n    amountInputB,\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    overHardtop,\n    zapNumError,\n    calculateLpLoading,\n    inputTotalValueError\n  } = useVaultsAdd(\n    assetAction,\n    handleRefreshClick,\n    vaultsId,\n    isReverse ? tokenB : tokenA,\n    isReverse ? tokenA : tokenB,\n    apiVaultInfo?.isReverse,\n    isCheckedZAP,\n    hardCapUSD,\n    vaultTvl\n  )\n\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:55 ~ VaultsAdd ~ overHardtop:', overHardtop, gtAumLimit)\n\n  const { vaultsSlippage } = useGlobalStore()\n\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:76 ~ VaultsAdd ~ gtAumLimit:', gtAumLimit)\n\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    true,\n    amountInputA,\n    amountInputB,\n    isReverse ? !fixAmountA : fixAmountA,\n    balanceInfoA?.balanceFormat,\n    balanceInfoB?.balanceFormat,\n    tokenA,\n    tokenB,\n    category == 'haedal',\n    zapNumError,\n    calculateResult,\n    overHardtop,\n    inputTotalValueError\n  )\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:80 ~ VaultsAdd ~ calculateResult:', calculateResult)\n\n  // Âç†ÊØî\n  const { lpRate } = useCalculateChangeLpRate(calculateResult?.ft_amount, totalLp)\n  // ÊúÄÂ∞èÂèØÊé•Êî∂\n  const { amountLimit } = useCalculateSlippageAmount(Number(vaultsSlippage), calculateResult?.ft_amount, false)\n\n  const [isOpenAddModel, setIsOpenAddModel] = useState<boolean>(false)\n\n  const balanceA = useMemo(() => {\n    return balanceInfoA\n  }, [balanceInfoA?.balance, balanceInfoB?.balance, isReverse])\n\n  const balanceB = useMemo(() => {\n    return balanceInfoB\n  }, [balanceInfoA?.balance, balanceInfoB?.balance, isReverse])\n\n  const displayTokenA = useMemo(() => {\n    return tokenA\n  }, [isReverse, tokenA, tokenB])\n\n  const displayTokenB = useMemo(() => {\n    return tokenB\n  }, [isReverse, tokenA, tokenB])\n\n  const getSecondModelData = () => {\n    const data: VaultsAddModelData = {\n      feeTier: feeTier || '',\n      displayTokenA: displayTokenA!,\n      displayTokenB: displayTokenB!,\n      displayAmountA: amountInputA,\n      displayAmountB: amountInputB,\n      totalAmountValue: inputTotalValue,\n      sharePool: lpRate,\n      lpAmountLimit: amountLimit || '0',\n      lpDecimals: lpTokenInfo?.decimals\n    }\n\n    return data\n  }\n\n  // useEffect(() => {\n  //   reCalculateResult()\n  // }, [apiVaultInfo])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack gap=\"8px\" w=\"100%\" align=\"flex-start\">\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p={{ base: '16px 8px 8px', lg: '16px' }} w=\"100%\">\n        <SwitchAssetTab\n          showAfterIcon={true}\n          displayTokenB={isReverse ? tokenB : tokenB}\n          displayTokenA={isReverse ? tokenA : tokenA}\n          onSelectAssetTab={setAssetAction}\n          assetAction={assetAction}\n          isCheckedZAP={isCheckedZAP}\n          setIsCheckedZAP={setIsCheckedZAP}\n          setAssetAction={setAssetAction}\n          isUnstableVault={category == 'haedal'}\n          currentActionTab={currentActionTab}\n          handleRefreshClick={() => {\n            handleRefreshClick()\n            reCalculateResult()\n          }}\n        />\n        <VStack mt=\"16px\" position=\"relative\">\n          <TradeInputGroup\n            borderRadius=\"12px\"\n            from={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n              balance: balanceA?.balanceFormat || '',\n              value: amountInputA,\n              amountValue: amountValueA,\n              loading: (isReverse ? fixAmountA : !fixAmountA) && preCalculateLoading && !isCheckedZAP,\n              onChange: value => {\n                console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:183 ~ VaultsAdd ~ value,amountInputB:', value, amountInputB)\n                handleAmountInputChange(value, !isReverse, true, amountInputB)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: displayTokenA\n            }}\n            to={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n              balance: balanceB?.balanceFormat || '',\n              value: amountInputB,\n              amountValue: amountValueB,\n              loading: (isReverse ? !fixAmountA : fixAmountA) && preCalculateLoading && !isCheckedZAP,\n              onChange: value => {\n                handleAmountInputChange(value, isReverse, true, amountInputA)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: displayTokenB\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption',\n              iconCursor: 'default'\n            }}\n            iconHover={false}\n          />\n          {/* {[\n            fromTokenLock && (assetAction == displayTokenA?.coin_type || assetAction == 'both'),\n            toTokenLock && (assetAction == displayTokenB?.coin_type || assetAction == 'both')\n          ].filter(Boolean)?.length === 1 && (\n            <LockInput\n              position=\"absolute\"\n              top={assetAction == 'both' ? (fromTokenLock ? '0px' : '116px') : '0px'}\n              h=\"108px\"\n              borderRadius=\"12px\"\n              left=\"0\"\n              text=\"\"\n            />\n          )} */}\n        </VStack>\n      </Block>\n\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"0px\">\n        <VStack w=\"100%\" gap=\"20px\">\n          <Button\n            m=\"-1px\"\n            isLoading={preCalculateLoading || isOpenAddModel}\n            w=\"100%\"\n            borderRadius=\"12px\"\n            h=\"52px\"\n            fontSize={isApp && zapNumError ? '14px' : '18px'}\n            fontWeight=\"500\"\n            disabled={btnDisabled || preCalculateLoading || isOpenAddModel || gtAumLimit || overHardtop}\n            onClick={() => {\n              if (currentAccount) {\n                setIsOpenAddModel(true)\n              } else {\n                onWalletModal(true)\n              }\n            }}\n          >\n            {btnText || (isCheckedZAP ? 'Zap In' : 'Deposit')}\n          </Button>\n\n          {gtAumLimit ? (\n            <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The vault has reached its current capacity. New deposits are not accepted at this time.\n              </Text>\n            </VStack>\n          ) : overHardtop ? (\n            <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\" gap=\"20px\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                Your deposit has gone over the vault capacity. Try reducing your deposit amount.\n              </Text>\n            </VStack>\n          ) : zapNumError ? (\n            <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\" gap=\"20px\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                Single-asset deposit can't be higher than $10,000 at a time.\n              </Text>\n            </VStack>\n          ) : null}\n\n          {inputTotalValueError && (\n            <VStack w=\"100%\" pl=\"16px\" pb=\"20px\" pr=\"16px\" alignItems=\"start\">\n              <Text\n                color=\"primary_red\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_red_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The input is too small. Zap mode is not available.\n              </Text>\n            </VStack>\n          )}\n\n          {/* Â±ïÁ§∫ËÆ°ÁÆóÁªìÊûú */}\n          {(calculateResult || showOnlySideTips) && !inputTotalValueError && (\n            <VStack w=\"100%\" pb=\"20px\" pl=\"16px\" pr=\"16px\" alignItems=\"start\" gap=\"0\">\n              {assetAction !== 'both' && showOnlySideTips && (\n                <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\" pb={calculateResult ? '20px' : '0'}>\n                  {showOnlySideTips}\n                </Text>\n              )}\n              {calculateResult && (\n                <VaultsAddResult\n                  amountLimit={amountLimit}\n                  inputTotalValue={inputTotalValue}\n                  preCalculateLoading={preCalculateLoading}\n                  calculateLpLoading={calculateLpLoading}\n                  lpDecimals={lpTokenInfo?.decimals}\n                  lpRate={lpRate}\n                  poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n                />\n              )}\n            </VStack>\n          )}\n        </VStack>\n      </Block>\n\n      {isOpenAddModel && (\n        <VaultsAddConfirmModel\n          data={getSecondModelData()}\n          isOpen={isOpenAddModel}\n          calculateLpLoading={calculateLpLoading}\n          onClose={() => {\n            setIsOpenAddModel(false)\n          }}\n          onSubmitClick={() => {\n            setIsOpenAddModel(false)\n            doAddAction()\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { formatNumber, formatPercentage, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Center, HStack, Progress, Text, TextProps, VStack } from '@chakra-ui/react'\n\ntype AumLimitProps = {\n  depositRatio?: string\n  hardCapUSD?: string\n  vaultTvl?: string\n  value: string | JSX.Element\n  textStyle?: TextProps\n  label?: string\n}\nexport function AumLimit(props: AumLimitProps) {\n  const { depositRatio, hardCapUSD, vaultTvl, value, label, textStyle } = props\n  console.log('üöÄüöÄüöÄ ~ AumLimit.tsx:16 ~ AumLimit ~ depositRatio:', depositRatio)\n\n  // const tvlRatioWithHradCap = useMemo(() => {\n  //   if (hardCapUSD && vaultTvl) {\n  //     const ratio = d(vaultTvl).div(hardCapUSD)\n  //     if (ratio.mul(100).gt(100)) {\n  //       return '100'\n  //     }\n  //     return formatNumber(ratio.mul(100).toString(), 2)\n  //   }\n  // }, [hardCapUSD, vaultTvl])\n  return (\n    <HStack w=\"100%\" justifyContent=\"flex-end\">\n      <Text whiteSpace=\"nowrap\" fontSize=\"12px\">\n        {label}\n      </Text>\n      <CetusTooltip\n        placement=\"bottom-end\"\n        tooltip={\n          <VStack w=\"260px\" p=\"4px\" gap=\"8px\">\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <Text fontSize=\"12px\" color=\"primary_gray\">\n                Current TVL\n              </Text>\n              <Text fontSize=\"12px\" color=\"primary_gray\">\n                Capacity\n              </Text>\n            </HStack>\n            <Progress\n              h=\"4px\"\n              w=\"100%\"\n              value={Number(depositRatio)}\n              bg=\"primary_opacity.10\"\n              sx={{\n                'div[role=\"progressbar\"]': {\n                  bg: 'primary'\n                }\n              }}\n            />\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <HStack>\n                <Text fontSize=\"12px\" color=\"text_caption\">\n                  {symbolDataDisplayProcessing(vaultTvl, '$')}\n                </Text>\n                <Text fontSize=\"12px\" color=\"primary\">\n                  {formatPercentage(depositRatio, 2)}\n                </Text>\n              </HStack>\n              <Text fontSize=\"12px\" color=\"text_caption\">\n                ${formatNumber(hardCapUSD, 2)}\n              </Text>\n            </HStack>\n          </VStack>\n        }\n      >\n        <Center cursor=\"pointer\">\n          <Text color=\"text_caption\" textDecoration=\"underline dotted\" fontSize=\"12px\" {...textStyle}>\n            {value}\n          </Text>\n        </Center>\n      </CetusTooltip>\n    </HStack>\n  )\n}\n","import { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { VTextLabelBox } from '@cetus/ui-kit'\nimport { formatCurrency, formatNumber, symbolDataDisplayProcessing, textEllipses } from '@cetus/utils'\nimport { HStack, Progress, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { AumLimit } from './AumLimit'\n\nexport function VaultsComposition(props: {\n  vaultCoinAmounts?: any\n  vaultsCoinAValue?: string\n  vaultsCoinBValue?: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  vaultsCoinPercent?: any\n  isLoading?: boolean\n  isReverse?: boolean\n  depositRatio?: string\n  hardCapUSD?: string\n  vaultTvl?: string\n}) {\n  const {\n    vaultsCoinPercent,\n    displayTokenB,\n    displayTokenA,\n    vaultCoinAmounts,\n    vaultsCoinAValue,\n    vaultsCoinBValue,\n    isReverse,\n    depositRatio,\n    hardCapUSD,\n    vaultTvl\n  } = props\n\n  const displayValueA = useMemo(() => {\n    return isReverse ? vaultsCoinBValue : vaultsCoinAValue\n  }, [isReverse, vaultsCoinAValue, vaultsCoinBValue])\n\n  const displayValueB = useMemo(() => {\n    return isReverse ? vaultsCoinAValue : vaultsCoinBValue\n  }, [isReverse, vaultsCoinAValue, vaultsCoinBValue])\n\n  const displayPercentA = useMemo(() => {\n    return isReverse ? vaultsCoinPercent?.percentB : vaultsCoinPercent?.percentA\n  }, [isReverse, vaultsCoinPercent])\n\n  const displayPercentB = useMemo(() => {\n    return isReverse ? vaultsCoinPercent?.percentA : vaultsCoinPercent?.percentB\n  }, [isReverse, vaultsCoinPercent])\n  const { isApp } = useWindowWidth()\n  return (\n    <Block bg=\"bg_six\" borderColor=\"border_secondary\" p={{ base: '16px 8px', lg: '20px 16px' }}>\n      <VStack w=\"100%\" gap=\"0px\">\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <Text w=\"100%\" textAlign=\"start\" fontSize=\"16px\" color=\"text_caption\">\n            Vault Composition\n          </Text>\n          {hardCapUSD && (\n            <AumLimit\n              depositRatio={depositRatio}\n              hardCapUSD={hardCapUSD}\n              vaultTvl={vaultTvl}\n              label=\"Capacity\"\n              value={symbolDataDisplayProcessing(hardCapUSD, '$')}\n            />\n          )}\n        </HStack>\n        {/* ÁôæÂàÜÊØî  */}\n        <HStack w={{ base: '100%', lg: '90%' }} justifyContent=\"space-between\" mt=\"28px\">\n          <HStack>\n            <SingleTokenInfo\n              token={displayTokenA}\n              haveName={false}\n              haveSymbol={false}\n              symbolFontSize=\"12px\"\n              warningIcon={{ iconW: '16px', iconH: '16px' }}\n              imgBoxStyle={{ w: '32px', h: '32px' }}\n              haveTooltip={!isApp}\n            />\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '4px'\n              }}\n              title={textEllipses(displayTokenA?.symbol, 10) || ''}\n              titleStyle={{\n                fontSize: '16px',\n                color: 'text_caption',\n                fontWeight: '600'\n              }}\n              value={`${displayPercentA}%`}\n              valueStyle={{\n                fontSize: '12px',\n                color: 'text_paragraph',\n                fontWeight: '500'\n              }}\n            />\n          </HStack>\n\n          <Progress\n            ml=\"16px\"\n            mr=\"16px\"\n            flex=\"1\"\n            h=\"4px\"\n            value={displayPercentA}\n            bg={Number(displayPercentA) !== 0 && Number(displayPercentB) !== 0 ? 'quote_green' : 'process_bg_gray'}\n            sx={{\n              'div[role=\"progressbar\"]': {\n                bg: 'primary'\n              }\n            }}\n          />\n          <HStack>\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '4px',\n                alignItems: 'flex-end'\n              }}\n              title={textEllipses(displayTokenB?.symbol, 10) || ''}\n              titleStyle={{\n                fontSize: '16px',\n                color: 'text_caption',\n                fontWeight: '600'\n              }}\n              value={`${displayPercentB}%`}\n              valueStyle={{\n                fontSize: '12px',\n                color: 'text_paragraph',\n                fontWeight: '500'\n              }}\n            />\n            <SingleTokenInfo\n              token={displayTokenB}\n              haveName={false}\n              haveSymbol={false}\n              symbolFontSize=\"12px\"\n              warningIcon={{ iconW: '16px', iconH: '16px' }}\n              imgBoxStyle={{ w: '32px', h: '32px' }}\n              haveTooltip={true}\n            />\n          </HStack>\n        </HStack>\n        {/* Êï∞Èáè/‰ª∑ÂÄº */}\n        <HStack w={{ base: '100%', lg: '90%' }} justifyContent=\"space-between\" mt=\"12px\">\n          <VTextLabelBox\n            wrapStyle={{\n              gap: { base: '8px', lg: '4px' }\n            }}\n            title={`${formatNumber(vaultCoinAmounts?.displayCoinA, 6)} ${textEllipses(displayTokenA?.symbol, 10)}`}\n            titleStyle={{\n              fontSize: { base: '12px', lg: '14px' },\n              color: 'text_caption',\n              fontWeight: '500'\n            }}\n            value={formatCurrency(displayValueA, 2)}\n            valueStyle={{\n              color: 'text_paragraph',\n              fontSize: { base: '12px', lg: '14px' },\n              fontWeight: '500'\n            }}\n          />\n\n          <VTextLabelBox\n            wrapStyle={{\n              gap: { base: '8px', lg: '4px' },\n              alignItems: 'flex-end'\n            }}\n            title={`${formatNumber(vaultCoinAmounts?.displayCoinB, 6)} ${textEllipses(displayTokenB?.symbol, 10)}`}\n            titleStyle={{\n              fontSize: { base: '12px', lg: '14px' },\n              color: 'text_caption',\n              fontWeight: '500'\n            }}\n            value={formatCurrency(displayValueB, 2)}\n            valueStyle={{\n              color: 'text_paragraph',\n              fontSize: { base: '12px', lg: '14px' },\n              fontWeight: '500'\n            }}\n          />\n        </HStack>\n      </VStack>\n    </Block>\n  )\n}\n","import { VaultApiInfo } from '@/types/vaults'\nimport { AddressCopyLink, Block, CetusTooltip, TooltipIcon } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinPairImage, HTextLabelBox, VTextLabelBox } from '@cetus/ui-kit'\nimport { symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Center, HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { CoinImage, VaultsAprTooltipContent } from '../list/common/VaultsAprBlock'\nimport PoweredByHaedal from '../modal/common/PoweredByHaedal'\n\ntype VaultsHeaderProps = {\n  apiVaultInfo?: VaultApiInfo\n  isUnstableVault?: boolean\n  vaultTvl: string\n  performanceFee: string\n}\n\nexport function VaultsHeader(props: VaultsHeaderProps) {\n  const { isApp } = useWindowWidth()\n  const { apiVaultInfo, isUnstableVault, vaultTvl, performanceFee } = props\n  const { getExplorerUrl } = useExplorer()\n\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" justifyContent=\"space-between\">\n      {/* Â∑¶ËæπÂå∫Âüü */}\n      <HStack>\n        <CoinPairImage\n          coinACoinType={apiVaultInfo?.displayTokenA?.coin_type}\n          coinBCoinType={apiVaultInfo?.displayTokenB?.coin_type}\n          coinAIconUrl={apiVaultInfo?.displayTokenA?.logo_url}\n          coinBIconUrl={apiVaultInfo?.displayTokenB?.logo_url}\n        />\n\n        <VStack alignItems=\"start\" flexDirection={isUnstableVault ? 'column' : 'row'} gap=\"2px\">\n          <HStack>\n            <Text fontSize=\"16px\" color=\"text_caption\">\n              {apiVaultInfo?.name || `${apiVaultInfo?.displayTokenA?.symbol} - ${apiVaultInfo?.displayTokenB?.symbol}`}\n            </Text>\n            <Block w=\"unset\" p=\"4px 6px\" borderRadius=\"12px\" ml=\"4px\">\n              <HStack>\n                <Text fontSize=\"12px\" color=\"primary\">\n                  {apiVaultInfo?.feeDisplay}\n                </Text>\n              </HStack>\n            </Block>\n          </HStack>\n          <HStack mt=\"4px\">{isUnstableVault && <PoweredByHaedal fontSize=\"14px\" imgW=\"20px\" imgH=\"16px\" category=\"Haedal\" />}</HStack>\n        </VStack>\n        {!isApp && (\n          <HStack ml=\"12px\" gap=\"4px\">\n            <Text fontSize=\"14px\">Vault Address</Text>\n            {/* Êã∑Ë¥ùÂíåË∑≥ËΩ¨ */}\n            <AddressCopyLink\n              fontSize=\"14px\"\n              address={apiVaultInfo?.vaultsId || ''}\n              onClickLink={() => {\n                window.open(getExplorerUrl(apiVaultInfo?.vaultsId, 'poolAddress'), '_blank')\n              }}\n            />\n          </HStack>\n        )}\n      </HStack>\n      {/* Âè≥ËæπÂå∫Âüü */}\n      <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '8px', lg: '60px' }}>\n        {isApp ? (\n          <>\n            <HTextLabelBox\n              label=\"Vault Address\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              value={\n                <AddressCopyLink\n                  fontSize=\"14px\"\n                  color=\"text_caption\"\n                  address={apiVaultInfo?.vaultsId || ''}\n                  onClickLink={() => {\n                    window.open(getExplorerUrl(apiVaultInfo?.vaultsId, 'poolAddress'), '_blank')\n                  }}\n                />\n              }\n            />\n            <HTextLabelBox\n              wrapStyle={{\n                gap: '6px'\n              }}\n              label=\"APY\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              rightValueTip={\n                <VaultsAprTooltipContent\n                  vaultsLstApyDisplay={apiVaultInfo?.vaultsLstApyDisplay}\n                  vaultsApyDisplay={apiVaultInfo?.vaultsApyDisplay}\n                  vaultsTotalApyDisplay={apiVaultInfo?.vaultsTotalApyDisplay}\n                  vaultsAprDisplay={apiVaultInfo?.vaultsAprDisplay}\n                  category={apiVaultInfo?.category}\n                />\n              }\n              value={apiVaultInfo?.category == 'cetus' ? apiVaultInfo?.vaultsTotalApyDisplay : apiVaultInfo?.vaultsApyDisplay || '-'}\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n            />\n            <HTextLabelBox\n              wrapStyle={{\n                gap: '6px'\n              }}\n              label=\"Earnings\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              value={\n                <CetusTooltip\n                  placement=\"top\"\n                  tooltip={\n                    <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"240px\">\n                      Rewards will be auto harvested and compounded to your position.\n                    </Text>\n                  }\n                >\n                  <Center>\n                    <HStack w=\"100px\" justifyContent=\"end\">\n                      {apiVaultInfo?.vaultsRewards.map(coinType => {\n                        return <CoinImage key={coinType} coinType={coinType} />\n                      })}\n                    </HStack>\n                  </Center>\n                </CetusTooltip>\n              }\n              valueStyle={{\n                h: '20px',\n                lineHeight: '20px'\n              }}\n            />\n            <HTextLabelBox\n              wrapStyle={{\n                gap: '6px'\n              }}\n              label=\"TVL\"\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              value={(isUnstableVault ? symbolDataDisplayProcessing(vaultTvl, '$') : apiVaultInfo?.vaultsTvlDisplay) || '-'}\n              valueStyle={{\n                color: 'text_caption',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n            />\n            {isUnstableVault && (\n              <HTextLabelBox\n                wrapStyle={{\n                  gap: '6px'\n                }}\n                label={\n                  <HStack>\n                    <Text>Performance Fee</Text>\n                    <TooltipIcon type=\"vaultDetailFee\" />\n                  </HStack>\n                }\n                labelStyle={{\n                  fontSize: '14px'\n                }}\n                value={symbolDataDisplayProcessing(performanceFee, '%') || '-'}\n                valueStyle={{\n                  color: 'text_caption',\n                  h: '20px',\n                  lineHeight: '20px',\n                  fontSize: '14px',\n                  fontWeight: '500'\n                }}\n              />\n            )}\n          </>\n        ) : (\n          <>\n            <VTextLabelBox\n              wrapStyle={{\n                alignItems: 'flex-end',\n                gap: '6px'\n              }}\n              title=\"APY\"\n              titleStyle={{\n                fontSize: '12px'\n              }}\n              valueTooltip={\n                <VaultsAprTooltipContent\n                  vaultsLstApyDisplay={apiVaultInfo?.vaultsLstApyDisplay}\n                  vaultsApyDisplay={apiVaultInfo?.vaultsApyDisplay}\n                  vaultsTotalApyDisplay={apiVaultInfo?.vaultsTotalApyDisplay}\n                  vaultsAprDisplay={apiVaultInfo?.vaultsAprDisplay}\n                  category={apiVaultInfo?.category}\n                />\n              }\n              value={apiVaultInfo?.category == 'cetus' ? apiVaultInfo?.vaultsTotalApyDisplay : apiVaultInfo?.vaultsApyDisplay || '-'}\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontWeight: '500'\n              }}\n            />\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '6px',\n                alignItems: 'flex-end'\n              }}\n              title=\"Earnings\"\n              titleStyle={{\n                fontSize: '12px'\n              }}\n              value={\n                <CetusTooltip\n                  placement=\"top\"\n                  tooltip={\n                    <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"240px\">\n                      Rewards will be auto harvested and compounded to your position.\n                    </Text>\n                  }\n                >\n                  <Center>\n                    <HStack justifyContent=\"end\">\n                      {apiVaultInfo?.vaultsRewards.map(coinType => {\n                        return <CoinImage key={coinType} coinType={coinType} />\n                      })}\n                    </HStack>\n                  </Center>\n                </CetusTooltip>\n              }\n              valueStyle={{\n                h: '20px'\n              }}\n            />\n            <VTextLabelBox\n              wrapStyle={{\n                alignItems: 'flex-end',\n                gap: '6px'\n              }}\n              title=\"TVL\"\n              titleStyle={{\n                fontSize: '12px'\n              }}\n              value={(isUnstableVault ? symbolDataDisplayProcessing(vaultTvl, '$') : apiVaultInfo?.vaultsTvlDisplay) || '-'}\n              valueStyle={{\n                color: 'text_caption',\n                h: '20px',\n                lineHeight: '20px',\n                fontWeight: '500'\n              }}\n            />\n            {isUnstableVault && (\n              <VTextLabelBox\n                wrapStyle={{\n                  alignItems: 'flex-end',\n                  gap: '2px'\n                }}\n                title={\n                  <HStack>\n                    <Text fontSize=\"12px\">Performance Fee</Text>\n                    <TooltipIcon type=\"vaultDetailFee\" />\n                  </HStack>\n                }\n                titleStyle={{\n                  fontSize: '12px',\n                  mt: '-4px'\n                }}\n                value={symbolDataDisplayProcessing(performanceFee, '%') || '-'}\n                valueStyle={{\n                  color: 'text_caption',\n                  h: '20px',\n                  lineHeight: '20px',\n                  fontWeight: '500'\n                }}\n              />\n            )}\n          </>\n        )}\n      </Stack>\n    </Stack>\n  )\n}\n","import { PositionSlider } from '@/components/position/details/RemoveBlock'\nimport vaultInterface from '@/hooks/vault-interface'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useUnstableVaultsListStore from '@/store/unstable-vaults/useVaultsList'\nimport { AssetActionType, VaultApiInfo, VaultCoinAmounts } from '@/types/vaults'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores/src/useAccountStore'\nimport { Token } from '@cetus/types'\nimport HTextLabelBox from '@cetus/ui-kit/src/components/HTextLabelBox'\nimport { formatCurrency, formatNumber, fromDecimalsAmountFix } from '@cetus/utils/src/formatter'\nimport { d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { SwitchAssetTab } from './SwitchAssetTab'\n\ntype VaultsRemoveProps = {\n  apiVaultInfo?: VaultApiInfo\n  tokenA?: Token\n  tokenB?: Token\n  isReverse: boolean\n  vaultsId?: string\n  totalLp?: string\n  holdLpAmount?: string\n  holdCoinAmounts: VaultCoinAmounts\n  handleRefreshClick: () => void\n  isUnstableVault: boolean\n  currentActionTab?: string\n}\n\nexport function VaultsRemove(props: VaultsRemoveProps) {\n  const {\n    apiVaultInfo,\n    tokenA,\n    tokenB,\n    isReverse,\n    vaultsId,\n    totalLp,\n    holdCoinAmounts,\n    holdLpAmount,\n    handleRefreshClick,\n    isUnstableVault,\n    currentActionTab\n  } = props\n  const useVaultsRemove = vaultInterface.useVaultsRemove(isUnstableVault)\n  console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:31 ~ VaultsRemove ~ isReverse:', isReverse)\n  console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:31 ~ VaultsRemove ~ tokenB:', tokenB)\n  console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:31 ~ VaultsRemove ~ tokenA:', tokenA)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(isUnstableVault)\n  const useGetContractVaultInfo = vaultInterface.useGetContractVaultInfo(isUnstableVault)\n  const [isCheckedZAP, setIsCheckedZAP] = useState(false)\n  const [assetAction, setAssetAction] = useState<AssetActionType>('both')\n  const { currentAccount, onWalletModal } = useAccountStore()\n\n  const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n  const contractClmmPoolInfo: any = useMemo(() => {\n    if (contractClmmPoolObj && contractClmmPoolObj[apiVaultInfo?.clmmPoolAddress]) {\n      return contractClmmPoolObj[apiVaultInfo?.clmmPoolAddress]\n    }\n    return undefined\n  }, [apiVaultInfo?.clmmPoolAddress, contractClmmPoolObj])\n  const { fromTokenLock, toTokenLock, lpTokenInfo } = useGetContractVaultInfo(\n    apiVaultInfo?.vaultsId,\n    apiVaultInfo?.clmmPoolAddress,\n    apiVaultInfo?.tokenA,\n    apiVaultInfo?.tokenB,\n    apiVaultInfo?.isReverse\n  )\n  const {\n    amountInputA,\n    amountInputB,\n    availableAmountA,\n    availableAmountB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doRemoveAction,\n    handlePercentInputChange,\n    removePercent,\n    isPercentInput,\n    reCalculateResult,\n    calculateAvailableLoading,\n    submitLoading\n  } = useVaultsRemove(\n    assetAction,\n    handleRefreshClick,\n    holdCoinAmounts,\n    totalLp,\n    holdLpAmount,\n    vaultsId,\n    isReverse ? tokenB : tokenA,\n    isReverse ? tokenA : tokenB,\n    isReverse,\n    fromTokenLock,\n    toTokenLock,\n    isCheckedZAP,\n    contractClmmPoolInfo\n  )\n\n  const inputTotalValueError = useMemo(() => {\n    console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:178 ~ inputTotalValueError ~ inputTotalValue:', inputTotalValue)\n    if (inputTotalValue && isCheckedZAP) {\n      return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(0.0001)\n    }\n    return false\n  }, [isCheckedZAP, inputTotalValue])\n\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    false,\n    amountInputA,\n    amountInputB,\n    isReverse ? !fixAmountA : fixAmountA,\n    availableAmountA,\n    availableAmountB,\n    tokenA,\n    tokenB,\n    isUnstableVault,\n    '',\n    calculateResult,\n    inputTotalValueError\n  )\n  // Âç†ÊØî\n  const { lpRate } = useCalculateChangeLpRate(calculateResult?.burn_ft_amount, totalLp)\n  // ÊúÄÂ∞èÂèØÊé•Êî∂\n  const { amountLimit } = useCalculateSlippageAmount(0, calculateResult?.burn_ft_amount, false)\n\n  const balanceA = useMemo(() => {\n    return availableAmountA\n  }, [availableAmountA, isReverse])\n  console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:85 ~ balanceA ~ availableAmountA:', availableAmountA)\n\n  const balanceB = useMemo(() => {\n    return availableAmountB\n  }, [availableAmountB])\n  console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:85 ~ balanceB ~ availableAmountB:', availableAmountB)\n\n  const displayTokenA = useMemo(() => {\n    return tokenA\n  }, [isReverse, tokenA, tokenB])\n\n  const displayTokenB = useMemo(() => {\n    return tokenB\n  }, [isReverse, tokenA, tokenB])\n\n  const showTokenALoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isPercentInput) {\n        return true\n      }\n      if (isReverse) {\n        return fixAmountA\n      }\n      return !fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isPercentInput])\n\n  const showTokenBLoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isPercentInput) {\n        return true\n      }\n      if (isReverse) {\n        return !fixAmountA\n      }\n      return fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isPercentInput])\n\n  const LPBurnAmount = useMemo(() => {\n    return formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), lpTokenInfo?.decimals)\n  }, [amountLimit, lpTokenInfo])\n\n  return (\n    <VStack gap=\"8px\" w=\"100%\" align=\"flex-start\">\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p={{ base: '16px 8px 8px', lg: '16px' }} w=\"100%\">\n        <SwitchAssetTab\n          label=\"Remove Amounts\"\n          displayTokenA={isReverse ? tokenA : tokenA}\n          displayTokenB={isReverse ? tokenB : tokenB}\n          onSelectAssetTab={setAssetAction}\n          handleRefreshClick={() => {\n            handleRefreshClick()\n            reCalculateResult()\n          }}\n          isCheckedZAP={isCheckedZAP}\n          setIsCheckedZAP={setIsCheckedZAP}\n          assetAction={assetAction}\n          setAssetAction={setAssetAction}\n          currentActionTab={currentActionTab}\n          isUnstableVault={isUnstableVault}\n        />\n        <Box w=\"100%\" position=\"relative\" mt=\"16px\">\n          <TradeInputGroup\n            borderRadius=\"12px\"\n            from={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              calculateAvailableLoading,\n              hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n              balance: availableAmountA || '',\n              value: amountInputA,\n              amountValue: amountValueA,\n              loading: showTokenALoading,\n              onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n                console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:179 ~ VaultsRemove ~ value:', value)\n                handleAmountInputChange(value, !isReverse, isClickMax, isHalfClickMax)\n              },\n              needRemainBalance: false,\n              selectable: false,\n              placeholder: '0.0',\n              token: displayTokenA,\n              balanceLabel: 'Available'\n            }}\n            to={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              balanceLabel: 'Available',\n              calculateAvailableLoading,\n              needRemainBalance: false,\n              hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n              balance: availableAmountB || '',\n              value: amountInputB,\n              amountValue: amountValueB,\n              loading: showTokenBLoading,\n              onChange: (value: string, isClickMax?: boolean, isHalfClickMax?: boolean) => {\n                handleAmountInputChange(value, isReverse, isClickMax, isHalfClickMax)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: displayTokenB\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption',\n              iconCursor: 'default'\n            }}\n            iconHover={false}\n          />\n          {/* {[\n            fromTokenLock && (assetAction == displayTokenA?.coin_type || assetAction == 'both'),\n            toTokenLock && (assetAction == displayTokenB?.coin_type || assetAction == 'both')\n          ].filter(Boolean)?.length === 1 && (\n            <LockInput\n              position=\"absolute\"\n              top={assetAction == 'both' ? (fromTokenLock ? '0px' : '116px') : '0px'}\n              h=\"108px\"\n              borderRadius=\"12px\"\n              left=\"0\"\n              text=\"\"\n            />\n          )} */}\n        </Box>\n      </Block>\n\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p={{ base: '16px 8px', lg: '16px' }}>\n        <Text color=\"primary_gray\">Amount</Text>\n        <PositionSlider\n          percentage={removePercent}\n          onChange={(value: string | number) => {\n            !calculateAvailableLoading ? handlePercentInputChange(Number(value.toString().replace('%', ''))) : ''\n          }}\n        />\n      </Block>\n\n      <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"0px\">\n        <VStack w=\"100%\" gap=\"20px\">\n          <Button\n            m=\"-1px\"\n            isLoading={preCalculateLoading || submitLoading}\n            w=\"100%\"\n            borderRadius=\"12px\"\n            h=\"52px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            disabled={btnDisabled || preCalculateLoading || submitLoading}\n            onClick={() => {\n              if (currentAccount) {\n                doRemoveAction()\n              } else {\n                onWalletModal(true)\n              }\n            }}\n          >\n            {btnText || (isCheckedZAP ? 'Zap Out' : 'Withdraw')}\n          </Button>\n\n          {inputTotalValueError && (\n            <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb=\"20px\" alignItems=\"start\">\n              <Text\n                color=\"primary_red\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_red_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The input is too small. Zap mode is not available.\n              </Text>\n            </VStack>\n          )}\n\n          {/* Â±ïÁ§∫ËÆ°ÁÆóÁªìÊûú */}\n          {calculateResult && !inputTotalValueError && (\n            <VStack w=\"100%\" pb=\"20px\" pl=\"16px\" pr=\"16px\" gap=\"0px\">\n              {assetAction !== 'both' && showOnlySideTips && (\n                <Text color=\"text_paragraph\" width=\"100%\" fontSize=\"12px\" lineHeight=\"1.8\" pb=\"20px\">\n                  {showOnlySideTips}\n                </Text>\n              )}\n              <VStack w=\"100%\" gap=\"20px\">\n                <HTextLabelBox\n                  label=\"Total Withdraw\"\n                  labelStyle={{\n                    fontSize: '14px'\n                  }}\n                  value={formatCurrency(inputTotalValue, 2)}\n                  valueStyle={{\n                    fontSize: '14px'\n                  }}\n                  isLoading={preCalculateLoading}\n                />\n                <HTextLabelBox\n                  label=\"LP Burn Amount\"\n                  value={`${LPBurnAmount} ${`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}`}\n                  labelStyle={{\n                    fontSize: '14px'\n                  }}\n                  valueStyle={{\n                    fontSize: '14px'\n                  }}\n                  isLoading={preCalculateLoading}\n                />\n              </VStack>\n            </VStack>\n          )}\n        </VStack>\n      </Block>\n    </VStack>\n  )\n}\n","import Slippage from '@/components/common/Slippage'\nimport useGetApiVaultInfo from '@/hooks/vaults/useGetApiVaultInfo'\nimport { useGetRewardPeDay } from '@/hooks/vaults/useVaultsHelper'\nimport { Block, SelectTab } from '@cetus/design'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { BackButton, NoData, RefreshButton } from '@cetus/ui-kit'\nimport { Box, Button, HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { MyLiquidity } from './MyLiquidity'\nimport { PositionRange } from './PositionRange'\nimport PriceRangeChartPageBlock from './PriceRangeChartPageBlock'\nimport TvlChartPageBlock from './TvlChartPageBlock'\n\nimport vaultInterface from '@/hooks/vault-interface'\nimport useVaultsStore from '@/store/vaults/useVaultsList'\nimport { isAvailableObject } from '@cetus/utils'\nimport { VaultsAdd } from './VaultsAdd'\nimport { VaultsComposition } from './VaultsComposition'\nimport { VaultsHeader } from './VaultsHeader'\nimport { VaultsRemove } from './VaultsRemove'\n\nconst tabList = [\n  {\n    label: 'Deposit',\n    value: 'Deposit'\n  },\n  {\n    label: 'Withdraw',\n    value: 'Withdraw'\n  }\n]\n\nexport default function VaultsDetailPage() {\n  const { vaultId, category } = useParams()\n  const { currentAccount } = useAccountStore()\n  const { apiVaultInfo, getApiVaultInfo } = useGetApiVaultInfo(vaultId)\n  const { fetchAccountBalance } = useAccountBalance()\n  const useGetContractVaultInfo = vaultInterface.useGetContractVaultInfo(category == 'haedal')\n  const { vaultStatsObj } = useVaultsStore()\n  const [isAvailableVaultId, setIsAvailableVaultId] = useState(true)\n  useEffect(() => {\n    console.log('üöÄ ~ VaultsDetailPage ~ vaultStatsObj:', Object.values(vaultStatsObj), vaultStatsObj, vaultId)\n    if (vaultId && isAvailableObject(vaultStatsObj)) {\n      const res = Object.values(vaultStatsObj)?.filter((item: any) => {\n        return item.vaultsId == vaultId\n      })\n      console.log('üöÄ ~ arr ~ arr:', res)\n      if (res?.length > 0) {\n        setIsAvailableVaultId(true)\n      } else {\n        setIsAvailableVaultId(false)\n      }\n    }\n  }, [vaultId, vaultStatsObj])\n  const {\n    contractVault,\n    lpTokenInfo,\n    minPrice,\n    maxPrice,\n    vaultCoinAmounts,\n    vaultsCoinAValue,\n    vaultsCoinBValue,\n    currPrice,\n    balanceInfo,\n    totalValue,\n    fetchClmmPoolFromContract,\n    fetchVaultInfoFromContract,\n    vaultsCoinPercent,\n    sharePoolRate,\n    holdCoinAmounts,\n    holdCoinAValue,\n    holdCoinBValue,\n    fetchVaultBalance,\n    vaultTvl,\n    depositRatio,\n    hardCapUSD,\n    performanceFee\n  } = useGetContractVaultInfo(\n    apiVaultInfo?.vaultsId,\n    apiVaultInfo?.clmmPoolAddress,\n    apiVaultInfo?.tokenA,\n    apiVaultInfo?.tokenB,\n    apiVaultInfo?.isReverse\n  )\n  console.log('üöÄüöÄüöÄ ~ VaultsDetailPage.tsx:81 ~ VaultsDetailPage ~ totalValue:', totalValue)\n  console.log('üöÄüöÄüöÄ ~ VaultsDetailPage.tsx:61 ~ VaultsDetailPage ~ vaultTvl:', vaultTvl)\n\n  const [currTab, setCurrTab] = useState<'Deposit' | 'Withdraw'>('Deposit')\n  useEffect(() => {\n    if (currentAccount?.address && apiVaultInfo && apiVaultInfo.vaultsId && lpTokenInfo?.decimals && category == 'haedal') {\n      fetchVaultBalance(currentAccount?.address, apiVaultInfo.vaultsId, lpTokenInfo?.decimals)\n    }\n  }, [currentAccount?.address, apiVaultInfo, lpTokenInfo?.decimals, category])\n\n  const { rewardPerA, rewardPerB } = useGetRewardPeDay(balanceInfo?.balanceFormat, apiVaultInfo)\n\n  useEffect(() => {\n    if (vaultId) {\n      console.log('üöÄüöÄüöÄ ~ VaultsDetailPage.tsx:87 ~ useEffect ~ fetchVaultInfoFromContract:', fetchVaultInfoFromContract)\n      fetchVaultInfoFromContract(vaultId, true)\n    }\n  }, [vaultId])\n\n  useEffect(() => {\n    if (apiVaultInfo) {\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n  }, [apiVaultInfo?.clmmPoolAddress])\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [])\n\n  const [chartRefresh, setChartRefresh] = useState(false)\n\n  const autoRefresh = () => {\n    // Âà∑Êñ∞‰ΩôÈ¢ù\n    fetchAccountBalance()\n\n    // Âà∑Êñ∞ clmm ÂêàÁ∫¶\n    if (apiVaultInfo) {\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n\n    // Âà∑Êñ∞Vaults ÂêàÁ∫¶\n    if (vaultId) {\n      fetchVaultInfoFromContract(vaultId, true)\n      getApiVaultInfo(vaultId, true)\n    }\n    setChartRefresh(true)\n    setTimeout(() => {\n      setChartRefresh(false)\n    }, 1000)\n  }\n\n  const vaultTabList = [\n    {\n      label: 'Overview',\n      value: 'Overview'\n    },\n    {\n      label: 'Analytics',\n      value: 'Analytics'\n    }\n  ]\n\n  const [vaultCurrTab, setVaultCurrTab] = useState('Overview')\n  const navigate = useNavigate()\n  return (\n    <Box pt=\"40px\" w=\"100%\">\n      {isAvailableVaultId ? (\n        <VStack gap=\"20px\" w=\"100%\" align=\"flex-start\">\n          <HStack w=\"100%\" justify=\"space-between\">\n            <BackButton bg=\"bg_six\" borderColor=\"border_secondary\" />\n            {/* <RefreshButton\n          handleRefresh={autoRefresh}\n          isAutoRefresh\n          refreshInterval={20}\n          innerStyle={{ bg: 'background' }}\n          w=\"32px\"\n          h=\"32px\"\n          borderRadius=\"8px\"\n          bg=\"background\"\n        /> */}\n          </HStack>\n          {/* Â§¥ÈÉ®Âå∫Âüü */}\n          <VaultsHeader apiVaultInfo={apiVaultInfo} isUnstableVault={category == 'haedal'} vaultTvl={vaultTvl} performanceFee={performanceFee} />\n          <Stack flexDir={{ base: 'column-reverse', lg: 'row' }} w=\"100%\" justifyContent=\"space-between\" gap=\"16px\" alignItems=\"start\">\n            {/* Â∑¶ËæπÂå∫Âüü */}\n            <VStack width=\"100%\" flex=\"1\" gap=\"8px\">\n              {apiVaultInfo?.category == 'haedal' && (\n                <SelectTab\n                  type=\"borderTab\"\n                  wrapStyle={{\n                    w: '100%',\n                    h: '60px',\n                    // border: 'none',\n                    padding: '20px',\n                    bg: 'bg_six',\n                    borderColor: 'border_secondary'\n                  }}\n                  itemStyle={{\n                    fontSize: '16px',\n                    mr: '28px'\n                  }}\n                  tabList={vaultTabList}\n                  currentTab={vaultCurrTab}\n                  handleChangeTab={(item: any) => {\n                    setVaultCurrTab(item?.value)\n                  }}\n                />\n              )}\n\n              {vaultCurrTab == 'Overview' ? (\n                <>\n                  {/* ‰ª∑Ê†ºÂå∫Èó¥ */}\n                  <PositionRange\n                    minPrice={minPrice}\n                    maxPrice={maxPrice}\n                    // currentPrice=\"3.346919\"\n                    currentPrice={apiVaultInfo?.isReverse ? 1 / currPrice : currPrice}\n                    displayTokenB={apiVaultInfo?.isReverse ? apiVaultInfo?.displayTokenA : apiVaultInfo?.displayTokenB}\n                    displayTokenA={apiVaultInfo?.isReverse ? apiVaultInfo?.displayTokenB : apiVaultInfo?.displayTokenA}\n                    isReverse={apiVaultInfo?.isReverse || false}\n                  />\n                  {/* Ê±†Â≠ê token ÂàÜÈÖç */}\n                  <VaultsComposition\n                    vaultCoinAmounts={vaultCoinAmounts}\n                    vaultsCoinAValue={vaultsCoinAValue}\n                    vaultsCoinBValue={vaultsCoinBValue}\n                    displayTokenB={apiVaultInfo?.displayTokenB}\n                    displayTokenA={apiVaultInfo?.displayTokenA}\n                    isReverse={apiVaultInfo?.isReverse || false}\n                    vaultsCoinPercent={vaultsCoinPercent}\n                    depositRatio={depositRatio}\n                    hardCapUSD={hardCapUSD}\n                    vaultTvl={vaultTvl}\n                  />\n                  {/* ÊàëÁöÑÊµÅÂä®ÊÄß */}\n                  <MyLiquidity\n                    lpTokenInfo={lpTokenInfo}\n                    sharePoolRate={sharePoolRate}\n                    balanceInfo={balanceInfo}\n                    totalValue={totalValue}\n                    displayTokenB={apiVaultInfo?.displayTokenB}\n                    displayTokenA={apiVaultInfo?.displayTokenA}\n                    holdCoinAmounts={holdCoinAmounts}\n                    holdCoinAValue={holdCoinAValue}\n                    holdCoinBValue={holdCoinBValue}\n                    isReverse={apiVaultInfo?.isReverse || false}\n                    rewardPerA={rewardPerA}\n                    rewardPerB={rewardPerB}\n                  />\n                </>\n              ) : (\n                <>\n                  <TvlChartPageBlock isRefresh={chartRefresh} vaultsId={apiVaultInfo?.vaultsId} />\n                  <PriceRangeChartPageBlock isRefresh={chartRefresh} vaultsId={apiVaultInfo?.vaultsId} isReverse={apiVaultInfo?.isReverse} />\n                </>\n              )}\n            </VStack>\n\n            {/* Âè≥ËæπÂå∫Âüü */}\n            <VStack w={{ base: '100%', lg: '40%' }} justifyContent=\"start\" gap=\"8px\">\n              {/* ÂàáÊç¢Tab */}\n              <Block p=\"0\" borderRadius=\"12px\" bg=\"bg_six\" borderColor=\"border_secondary\">\n                <HStack w=\"100%\" p={{ base: '0 8px', lg: '0 16px' }}>\n                  <SelectTab\n                    type=\"borderTab\"\n                    wrapStyle={{\n                      w: '100%',\n                      h: '60px',\n                      border: 'none',\n                      bg: 'bg_six',\n                      borderColor: 'border_secondary'\n                    }}\n                    itemStyle={{\n                      fontSize: '16px',\n                      mr: '28px'\n                    }}\n                    tabList={tabList}\n                    currentTab={currTab}\n                    handleChangeTab={(item: any) => {\n                      setCurrTab(item?.value)\n                    }}\n                  />\n                  <HStack>\n                    <Slippage slippageType=\"vaults\" compact={true} />\n                    <RefreshButton\n                      handleRefresh={autoRefresh}\n                      isAutoRefresh\n                      refreshInterval={20}\n                      innerStyle={{ bg: 'bg_secondary' }}\n                      w=\"28px\"\n                      h=\"28px\"\n                      borderRadius=\"8px\"\n                      bg=\"bg_secondary\"\n                    />\n                  </HStack>\n                  {/* <MEVProtect /> */}\n                </HStack>\n              </Block>\n              {currTab === 'Deposit' && (\n                <VaultsAdd\n                  apiVaultInfo={apiVaultInfo}\n                  feeTier={apiVaultInfo?.feeDisplay}\n                  tokenA={apiVaultInfo?.displayTokenA}\n                  tokenB={apiVaultInfo?.displayTokenB}\n                  isReverse={apiVaultInfo?.isReverse || false}\n                  vaultsId={apiVaultInfo?.vaultsId}\n                  totalLp={contractVault?.total_supply || contractVault?.lp_token_treasury}\n                  isUnstableVault={category == 'haedal'}\n                  handleRefreshClick={autoRefresh}\n                  currentActionTab={currTab}\n                />\n              )}\n              {currTab === 'Withdraw' && (\n                <VaultsRemove\n                  apiVaultInfo={apiVaultInfo}\n                  holdCoinAmounts={holdCoinAmounts}\n                  tokenA={apiVaultInfo?.displayTokenA}\n                  tokenB={apiVaultInfo?.displayTokenB}\n                  isReverse={apiVaultInfo?.isReverse || false}\n                  vaultsId={apiVaultInfo?.vaultsId}\n                  totalLp={contractVault?.total_supply}\n                  holdLpAmount={balanceInfo?.balance}\n                  isUnstableVault={category == 'haedal'}\n                  handleRefreshClick={autoRefresh}\n                  currentActionTab={currTab}\n                />\n              )}\n            </VStack>\n          </Stack>\n        </VStack>\n      ) : (\n        <NoData type=\"custom\" imgUrl=\"/images/img_create_pool.png\" h=\"480px\">\n          <VStack>\n            <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n              Pool address not found\n            </Text>\n            <Button\n              mt=\"12px\"\n              w=\"120px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              colorScheme=\"blue\"\n              fontSize=\"14px\"\n              fontWeight=\"500\"\n              onClick={() => {\n                navigate('/vaults')\n              }}\n            >\n              Back to Vault\n            </Button>\n          </VStack>\n        </NoData>\n      )}\n    </Box>\n  )\n}\n"],"names":["PositionPriceRange","props","displayMaxPrice","displayMinPrice","displayPrice","isLoading","elementWidth","setElementWidth","useState","elementRef","useRef","positionPriceRangeLoading","useMemo","useEffect","getElementWidth","resizeObserver","trackDirection","d","sliderML","centerPrice","isRight","relativePosition","range","offset","jsx","Fragment","Flex","Box","Spinner","jsxs","VStack","Text","Skeleton","HStack","Comma","formatNumber","Decimal","Image","icon_currentprice","Center","MyLiquidity","holdCoinAmounts","lpTokenInfo","displayTokenA","displayTokenB","sharePoolRate","balanceInfo","isReverse","holdCoinAValue","holdCoinBValue","rewardPerA","rewardPerB","displayValueA","displayValueB","useTokenPrice","totalValue","isApp","useWindowWidth","Block","formatNumberWithThreshold","HTextLabelBox","SingleTokenInfo","formatCurrency","textEllipses","Stack","VTextLabelBox","useDisplayPrice","price","changeSide","PositionRange","setChangeSide","currentPrice","minPrice","maxPrice","useDisplayTickPrice","baseCoin","logoUrl","SingleCoinImage","Icon","CustomPirceRangeTooltip","payload","label","PriceRangeChart","data","dateType","isTabLoading","slicedData","hidden","setHidden","ticks","min","item","max","tick4","tick0","interval","_","i","getXData","dataLength","value","date","hours","minutes","day","month","period","displayHours","ResponsiveContainer","LineChart","XAxis","YAxis","CustomizedVaultYAxisTick","Tooltip","Legend","Line","useGetPriceRangeData","fetchByApi","useFetch","params","options","pickBy","identity","res","VaultUnstablePriceRange","timestampMs","dayStrZeroPadding","formatTimestamp","error","PriceRangeChartPageBlock","isRefresh","vaultsId","setIsLoading","getPriceRangeData","priceRangeData","setPriceRangeDate","chartTypeList","setDateType","setIsTabLoading","fetchPricerangeHistogram","type","now","beginTimestamp","result","lower","upper","real","SelectTab","tab","useGetVaultHistogram","getVaultHistogram","requestParams","VaultUnstableHistogram","index","monthIndex","xAxis","_a","noShowHours","step","TvlChartPageBlock","pureTvlChartData","setPureTvlChartData","pureTvlCurrentData","setPureTvlCurrentData","currentPureTvlCurrentData","setCurrentPureTvlCurrentDatC","handleGetHistogramTvlData","oneDay","timeLimit","tvl_res","_b","handleChangePureTvl","TvlChart","NoData","VaultsAddConfirmModel","isOpen","onClose","onSubmitClick","calculateLpLoading","feeTier","displayAmountA","displayAmountB","totalAmountValue","sharePool","lpAmountLimit","lpDecimals","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","CoinPairImage","TradeConfirmAmountInfo","VaultsAddResult","Button","hoverCoinTips","hoverSuiTips","stakeProtocolName","symbol","SwitchAssetTab","onSelectAssetTab","showAfterIcon","handleRefreshClick","refreshCount","isCheckedZAP","setIsCheckedZAP","assetAction","setAssetAction","isUnstableVault","currentActionTab","useGetSuiStakeProtocol","currentActionToken","setCurrentActionToken","tabList","list","currentTab","tooltipType","ZapSwitch","status","VaultsAdd","category","useParams","apiVaultInfo","tokenA","tokenB","totalLp","useVaultsAdd","vaultInterface","useAddButtonStatus","useGetContractVaultInfo","currentAccount","onWalletModal","useAccountStore","fromTokenLock","toTokenLock","gtAumLimit","hardCapUSD","vaultTvl","amountInputA","amountInputB","balanceInfoA","balanceInfoB","amountValueA","amountValueB","preCalculateLoading","fixAmountA","inputTotalValue","handleAmountInputChange","calculateResult","showOnlySideTips","doAddAction","reCalculateResult","overHardtop","zapNumError","inputTotalValueError","vaultsSlippage","useGlobalStore","btnText","btnDisabled","lpRate","useCalculateChangeLpRate","amountLimit","useCalculateSlippageAmount","isOpenAddModel","setIsOpenAddModel","balanceA","balanceB","getSecondModelData","TradeInputGroup","AumLimit","depositRatio","textStyle","CetusTooltip","Progress","symbolDataDisplayProcessing","formatPercentage","VaultsComposition","vaultsCoinPercent","vaultCoinAmounts","vaultsCoinAValue","vaultsCoinBValue","displayPercentA","displayPercentB","VaultsHeader","performanceFee","getExplorerUrl","useExplorer","_c","_d","_e","_f","PoweredByHaedal","AddressCopyLink","VaultsAprTooltipContent","coinType","CoinImage","TooltipIcon","VaultsRemove","holdLpAmount","useVaultsRemove","contractClmmPoolObj","useUnstableVaultsListStore","contractClmmPoolInfo","availableAmountA","availableAmountB","doRemoveAction","handlePercentInputChange","removePercent","isPercentInput","calculateAvailableLoading","submitLoading","showTokenALoading","showTokenBLoading","LPBurnAmount","fromDecimalsAmountFix","isClickMax","isHalfClickMax","PositionSlider","VaultsDetailPage","vaultId","getApiVaultInfo","useGetApiVaultInfo","fetchAccountBalance","useAccountBalance","vaultStatsObj","useVaultsStore","isAvailableVaultId","setIsAvailableVaultId","isAvailableObject","contractVault","currPrice","fetchClmmPoolFromContract","fetchVaultInfoFromContract","fetchVaultBalance","currTab","setCurrTab","useGetRewardPeDay","chartRefresh","setChartRefresh","autoRefresh","vaultTabList","vaultCurrTab","setVaultCurrTab","navigate","useNavigate","BackButton","Slippage","RefreshButton"],"mappings":"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"}