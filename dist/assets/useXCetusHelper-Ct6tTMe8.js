import{R as y,a1 as b,bz as C,r as l,a5 as v,d as g,aC as O,bq as N,a4 as x,aa as R,bE as _}from"./index-B0zUQ3Cp.js";import{u as h}from"./useToken-C-8_jnEM.js";function G(){const{xCetusSdk:e}=y(),{currentAccount:t}=b(),{setLockCetusListLoading:r,clearData:a,setLockCetusList:o}=C();return{fetchOwnerLockCetusList:async(n=t==null?void 0:t.address)=>{if(!n){r(!1),a();return}r(!0);try{const c=await e.XCetusModule.getOwnerRedeemLockList(n);console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ lockList:",c,n),n===(t==null?void 0:t.address)&&(c.sort((s,w)=>s.locked_until_time-w.locked_until_time),o(c))}catch(c){console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ error:",c)}finally{r(!1)}}}}function X(){const{xCetusSdk:e}=y(),{setDividendRewardList:t}=C();return{fetchVeNFTDividendInfo:async a=>{try{const o=await e.XCetusModule.getVeNFTDividendInfo(a);console.log("ðŸš€ ~ file: useXCetusHelper.ts:62 ~ fetchVeNFTDividendInfo ~ dividendInfo:",o),o&&t(o.rewards)}catch(o){console.log("ðŸš€ ~ fetchVeNFTDividendInfo ~ error:",o,a)}}}}function A(){const{xCetusSdk:e}=y(),{currentAccount:t}=b(),{setVeNFTLoading:r,clearData:a,setVeNFT:o}=C();return{fetchOwnerVeNFT:async(n=t==null?void 0:t.address,c)=>{if(!n){r(!1),a();return}r(!0);try{const s=await e.XCetusModule.getOwnerVeNFT(n,c);if(console.log("ðŸš€ ~ fetchOwnerVeNFT ~ veNFT:",s),s)return o(s,n),s}catch(s){console.log("ðŸš€ ~ fetchOwnerVeNFT ~ error:",s)}finally{r(!1)}}}}function E(){const{dividendManager:e}=C(),[t,r]=l.useState(),[a,o]=l.useState(),m=n=>{const c=Date.now()/1e3,{start_time:s,interval_day:w}=n,S=Number(_.getNextStartTime(n).toString()),f=R.env=="testnet"?Math.ceil((c-s)/(w*60)):Math.ceil((c-s)/(w*24*3600));r(f),o(S)};return l.useEffect(()=>{e&&m(e)},[e]),{currentPeriod:t,nextStartTime:a,calculateCurrPeriod:m}}function M(e,t){const{fetchTokenInfo:r}=h(),{getTokenAmountValue:a}=v(),{coinPriceObj:o}=x(),[m,n]=l.useState("0"),c=l.useCallback(async()=>{if(!(!e||!t))try{const s=e.bonus,w=await Promise.all(s.map(async T=>{const i=O(T.name,!1),u=await r(i);if(u){const L=N(T.value,u.decimals).toString();return a(i,L)}return"0"})).then(T=>T.reduce((i,u)=>i.add(u),g(0))),S=a(R.cetus_coin.coin_type,N(t,9).toString()),f=g(S).gt(0)?w.div(7).mul(365).div(S).mul(100).toFixed(2):"0";n(Number(f)>0&&Number(f)<.01?"0.01":f.toString())}catch(s){console.error("Error calculating APR:",s),n("0.01")}},[e==null?void 0:e.bonus,t,o]);return l.useEffect(()=>{c()},[e==null?void 0:e.bonus,t,o]),{cetusApr:m}}function j(e){const{dividendRewardList:t}=C(),{fetchTokenInfo:r}=h(),{getTokenAmountValue:a}=v(),[o,m]=l.useState([]),[n,c]=l.useState([]),[s,w]=l.useState("0"),S=l.useCallback(async()=>{let f=g(0);const T=t.filter(u=>!(u.period===e||u.rewards.find(L=>g(L.amount).eq(0))));console.log("ðŸš€ ~ file: useXCetusHelper.ts:107 ~ calculateRewards ~ filteredList:",{filteredList:T,dividendRewardList:t,currentPeriod:e}),c(T);const i={};await Promise.all(T.map(async u=>{for(const L of u.rewards){const d=O(L.coin_type,!1),F=await r(d);if(F){const k=N(L.amount,F.decimals).toString(),V=a(d,k);f=f.add(V),i[d]=i[d]?{...i[d],amount:g(i[d].amount).add(k).toString(),value:g(i[d].value).add(V).toString()}:{amount:k,coin_type:d,value:V}}}})),m(Object.values(i).filter(u=>g(u.amount).gt(0)).sort((u,L)=>g(L.value).sub(u.value).toNumber())),w(f.toString())},[t,r,a,e]);return l.useEffect(()=>{e&&S()},[t,e]),{summaryRewardList:o,rewardList:n,totalRewardValue:s}}export{A as a,X as b,E as c,j as d,M as e,G as u};
