{"version":3,"file":"SwapConfirmBlock-CRAwioL1.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/cloneDeep.js","../../src/hooks/common/useCheckTokenScamsAlert.ts","../../src/hooks/swap/useSwap.ts","../../src/hooks/swap/useSwapButtonStatus.ts","../../src/components/swap/PriceImpact.tsx","../../src/components/swap/PriceRatio.tsx","../../src/components/swap/ScamsAlert.tsx","../../src/components/swap/SwapRoutes/OverView.tsx","../../src/components/swap/SwapRoutes/RouteTip.tsx","../../src/components/swap/SwapRoutes/H5Routes.tsx","../../src/components/swap/SwapRoutes/PCRoutes.tsx","../../src/components/swap/SwapRoutes/RoutesModal.tsx","../../src/components/swap/SwapRoutes/index.tsx","../../src/components/swap/SwapConfirmBlock.tsx"],"sourcesContent":["import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import { Token } from '@cetus/types'\nimport { useEffect, useState } from 'react'\nimport { isHoneyPot } from 'suihoneypot'\n\n/**\n * token È£éÈô©ÊèêÁ§∫Ê£ÄÊü•\n * @returns\n */\nexport default function useCheckTokenScamsAlert(coinInfo?: Token) {\n  const [isScamsCoin, setIsScamsCoin] = useState<boolean | undefined>()\n\n  const checkIsScamsCoin = async (coinInfo: Token) => {\n    const is_verified = coinInfo.is_verified === undefined ? coinInfo.is_trusted : coinInfo.is_verified\n    if (is_verified) {\n      return false\n    }\n\n    try {\n      const isScamsCoin = await isHoneyPot(coinInfo.coin_type)\n\n      console.log('üöÄ ~ file: useCheckTokenScamsAlert.ts:24 ~ checkIsScamsCoin ~ isScamsCoin:', isScamsCoin)\n\n      return isScamsCoin\n    } catch (error) {\n      console.log('üöÄ ~ file: useCheckTokenScamsAlert.ts:19 ~ checkTokenScams ~ error:', error)\n    }\n\n    return false\n  }\n\n  useEffect(() => {\n    setIsScamsCoin(undefined)\n    if (coinInfo) {\n      checkIsScamsCoin(coinInfo).then(res => {\n        setIsScamsCoin(res)\n      })\n    }\n  }, [coinInfo?.coin_type])\n\n  return {\n    isScamsCoin\n  }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport useGlobalStore from '@/store/common/global'\nimport { SwapConfigState } from '@/store/swap/swap'\nimport useSwapConfigStore from '@/store/swap/swapConfig'\nimport { SwapRouterData } from '@/types/swap'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { addComma, getBalanceChanges, isSuiObjectType, sleepTime } from '@cetus/utils'\nimport { dealWithFastRouterSwapParamsForMsafe } from '@cetusprotocol/aggregator-sdk'\nimport { fixCoinType, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport { useGetTokenBalance } from '../../../../hooks/src/useTokenBalance'\nimport useCheckTokenScamsAlert from '../common/useCheckTokenScamsAlert'\nimport { useFindBestRouting } from './useFindBestRouting'\nimport { useGetAmountLimit } from './useSwapHelper'\n\nconst aggregatorPartner = '0xeb863165a109f7791a3182be08aff1438ab2a429314fc135ae19d953afe1edd6'\nexport function useSwapHook(option: SwapConfigState, isSwapWidget: boolean) {\n  const {\n    fromCoin,\n    toCoin,\n    setFromCoin,\n    setToCoin,\n    setToAmount,\n    fromAmount,\n    toAmount,\n    setFromAmount,\n    routerData,\n    setFindRouterLoading,\n    setRouterData,\n    setByAmountIn,\n    byAmountIn\n  } = option\n  const { from, to } = useParams()\n  const { findBestRouters, checkProvidersKeys } = useFindBestRouting()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const { slippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { aggregatorSDK } = useClmmSDKStore()\n  const navigate = useNavigate()\n  const { fetchTokenInfo } = useGetToken()\n  const [isOpenConfirmModel, setIsOpenConfirmModel] = useState<boolean>(false)\n\n  const { signAndExecuteTransaction, transactionConfirmation, handleError } = useTransaction()\n  const { providersSwitchStates, supportOrderSplit } = useSwapConfigStore()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  // ‰ΩôÈ¢ù\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromCoin)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toCoin)\n\n  // ‰ª∑ÂÄº\n  const fromAmountValue = getTokenAmountValue(fromCoin?.coin_type, fromAmount)\n  const toAmountValue = getTokenAmountValue(toCoin?.coin_type, toAmount)\n\n  const [uuid, setUuid] = useState<string>('')\n\n  const uuidRef = useRef<string>('')\n  const byAmountInRef = useRef<boolean>(true)\n  const fromAmountRef = useRef<string>('')\n  const toAmountRef = useRef<string>('')\n  const fromCoinRef = useRef<Token | undefined>()\n  const toCoinRef = useRef<Token | undefined>()\n  const providerRef = useRef<any>([])\n\n  useEffect(() => {\n    fromCoinRef.current = fromCoin\n  }, [fromCoin])\n\n  useEffect(() => {\n    toCoinRef.current = toCoin\n  }, [toCoin])\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  useEffect(() => {\n    byAmountInRef.current = byAmountIn\n  }, [byAmountIn])\n\n  useEffect(() => {\n    fromAmountRef.current = fromAmount\n  }, [fromAmount])\n\n  useEffect(() => {\n    toAmountRef.current = toAmount\n  }, [toAmount])\n\n  const fromToString = useMemo(() => {\n    return String(to) + String(from)\n  }, [from, to])\n  // Initialization Swap Token\n  useEffect(() => {\n    if (!isSwapWidget) {\n      initiaTokenSelect()\n    }\n  }, [fromToString])\n\n  const initiaTokenSelect = useCallback(() => {\n    if (!from && !to) {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n      navigate(`/swap`)\n    } else {\n      //   if (navFromToken?.coin_type !== fromCoin?.coin_type) {\n      //     setFromCoin(navFromToken)\n      //   }\n      //   if (navToToken?.coin_type !== toCoin?.coin_type) {\n      //     setToCoin(navToToken)\n      //   }\n      if (from && isSuiObjectType(from)) {\n        fetchTokenInfo<string>(from)\n          .then((token: Token | undefined) => {\n            if (!token) {\n              navigate(`/swap/${fromCoin?.coin_type}/${toCoin?.coin_type}`)\n            } else {\n              if (token?.coin_type !== fromCoin?.coin_type) {\n                setFromCoin(token)\n              }\n            }\n          })\n          .catch(() => {\n            navigate(`/swap/${fromCoin?.coin_type}/${toCoin?.coin_type}`)\n          })\n      } else {\n        setFromCoin(undefined)\n      }\n      if (to && isSuiObjectType(to)) {\n        fetchTokenInfo<string>(to)\n          .then((token: Token | undefined) => {\n            if (!token) {\n              navigate(`/swap/${fromCoin?.coin_type}/${toCoin?.coin_type}`)\n            } else {\n              if (token?.coin_type !== toCoin?.coin_type) {\n                setToCoin(token)\n              }\n            }\n          })\n          .catch(() => {\n            navigate(`/swap/${fromCoin?.coin_type}/${toCoin?.coin_type}`)\n          })\n      } else {\n        setToCoin(undefined)\n      }\n    }\n  }, [from, to])\n\n  /**\n   * È¢ÑËÆ°ÁÆó\n   */\n  const findRouters = async (amount: string, by_amount_in: boolean, uuid: string) => {\n    if (fromCoinRef.current && toCoinRef.current && +amount) {\n      const providersKeys = isSwapWidget\n        ? Object.entries(AggregatorDexMap).map(([key, _]) => key)\n        : Object.entries(providersSwitchStates)\n            .filter(([_, value]) => value === true)\n            .map(([key, _]) => key)\n\n      if (+fromAmountRef.current || +toAmountRef.current) {\n        setFindRouterLoading(true)\n      }\n\n      const checkProvidersKeysRes = await checkProvidersKeys(providersKeys as string[])\n\n      const formatAmount = toDecimalsAmount(amount, by_amount_in ? fromCoinRef.current.decimals : toCoinRef.current.decimals)\n      const result = await findBestRouters({\n        fromToken: fromCoinRef.current,\n        toToken: toCoinRef.current,\n        amount: formatAmount.toString(),\n        providersKeys: checkProvidersKeysRes,\n        by_amount_in,\n        uuid\n      })\n\n      setFindRouterLoading(false)\n\n      if (uuidRef.current === uuid) {\n        providerRef.current = checkProvidersKeysRes\n        if (by_amount_in) {\n          if (+fromAmountRef.current) {\n            setToAmount(result.toAmountUi || '')\n            setRouterData(result)\n          } else {\n            setToAmount('')\n          }\n        } else {\n          if (+toAmountRef.current) {\n            setFromAmount(result.fromAmountUi || '√ü')\n            setRouterData(result)\n          } else {\n            setFromAmount('')\n          }\n        }\n      }\n    } else {\n      resetInputAmount(!by_amount_in)\n    }\n  }\n\n  const debouncedFindRouters = useDebounceFunction(findRouters, 500)\n\n  /**\n   * ËæìÂÖ•Êï∞ÈáèÁõëÂê¨\n   * @param amount\n   */\n  const handleAmountChange = (amount: string, by_amount_in: boolean, resetInput: boolean = false) => {\n    setByAmountIn(by_amount_in)\n    if (by_amount_in) {\n      setFromAmount(amount)\n      if (resetInput) {\n        setToAmount('')\n      }\n    } else {\n      setToAmount(amount)\n      if (resetInput) {\n        setFromAmount('')\n      }\n    }\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedFindRouters(amount, by_amount_in, uuid)\n    } else {\n      setFindRouterLoading(false)\n      setRouterData(undefined)\n      if (amount !== '0') {\n        resetInputAmount()\n      } else {\n        by_amount_in ? setToAmount('') : setFromAmount('')\n      }\n    }\n  }\n\n  /**\n   * ÈáçÊñ∞ËÆ°ÁÆóRouteData\n   */\n  const reCalculateRouteData = () => {\n    const amount = byAmountInRef.current ? fromAmountRef.current : toAmountRef.current\n\n    console.log(\n      'üöÄ ~ file: useSwap.ts:273 ~ reCalculateRouteData ~ amount:',\n      amount,\n      byAmountInRef.current,\n      fromAmountRef.current,\n      toAmountRef.current\n    )\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedFindRouters(amount, byAmountInRef.current, uuid)\n    }\n  }\n\n  // Ë∑ØÁî±Ê∫êÊîπÂèòÂêéÔºåÈáçÊñ∞ËÆ°ÁÆó\n  useEffect(() => {\n    reCalculateRouteData()\n  }, [JSON.stringify(providersSwitchStates)])\n\n  /**\n   * ÂàáÊç¢tokenÁõëÂê¨\n   * @param coin\n   * @param isFrom\n   */\n  const handleSelectToken = useCallback(\n    (coin?: Token, isFrom: boolean = true) => {\n      resetInputAmount()\n\n      // ToDo: widgetÂíåswapÈÄâÊã©token‰∏çÂ∫îËØ•ÂêåÊ≠•\n      if (!isSwapWidget) {\n        if (isFrom) {\n          if (coin && fixCoinType(coin?.coin_type || '') === fixCoinType(toCoin?.coin_type || '')) {\n            navigate(`/swap/${coin?.coin_type}/${fromCoin?.coin_type}`)\n          } else {\n            navigate(`/swap/${coin?.coin_type}/${toCoin?.coin_type}`)\n          }\n        } else {\n          if (coin && fixCoinType(coin?.coin_type || '') === fixCoinType(fromCoin?.coin_type || '')) {\n            navigate(`/swap/${toCoin?.coin_type}/${coin?.coin_type}`)\n          } else {\n            navigate(`/swap/${fromCoin?.coin_type}/${coin?.coin_type}`)\n          }\n        }\n      } else {\n        if (isFrom) {\n          if (coin && fixCoinType(coin?.coin_type || '') === fixCoinType(toCoin?.coin_type || '')) {\n            setToCoin(fromCoin)\n          }\n          setFromCoin(coin)\n        } else {\n          if (coin && fixCoinType(coin?.coin_type || '') === fixCoinType(fromCoin?.coin_type || '')) {\n            setFromCoin(toCoin)\n          }\n          setToCoin(coin)\n        }\n      }\n    },\n    [fromCoin?.coin_type, toCoin?.coin_type]\n  )\n\n  const { amountLimit } = useGetAmountLimit(slippage, routerData)\n\n  const resetInputAmount = (resetAmountFrom?: boolean) => {\n    if (resetAmountFrom === undefined) {\n      setFromAmount('')\n      setToAmount('')\n    } else {\n      if (resetAmountFrom) {\n        setFromAmount('')\n      } else {\n        setToAmount('')\n      }\n    }\n\n    setFindRouterLoading(false)\n    setRouterData(undefined)\n  }\n\n  // ÁõëÂê¨token ÂàáÊç¢ Âà∑Êñ∞‰ª∑Ê†º\n  useEffect(() => {\n    refreshMarketPrice()\n  }, [fromCoin?.coin_type, toCoin?.coin_type])\n\n  // Âà∑Êñ∞Â∏ÇÂú∫‰ª∑Ê†º\n  const refreshMarketPrice = () => {\n    const list = []\n    if (fromCoin) {\n      list.push(fromCoin.coin_type)\n    }\n\n    if (toCoin) {\n      list.push(toCoin.coin_type)\n    }\n\n    if (list.length > 0) {\n      fetchTokenPrices(list)\n    }\n  }\n\n  const getSwapSecondaryData = () => {\n    return { ...routerData! }\n  }\n\n  /**\n   * ÊâßË°åswap\n   * @param data\n   */\n  const doSwapAction = async (data: SwapRouterData) => {\n    let toastType: ToastType\n    try {\n      const { routerData, byAmountIn, fromAmountUi, toAmountUi } = data\n      const txb = new Transaction()\n\n      // const params: BuildFastRouterSwapParams = {\n      //   routers: routerData!.routes,\n      //   byAmountIn,\n      //   slippage: Number(slippage),\n      //   txb\n      // }\n\n      const params = {\n        routers: routerData,\n        partner: aggregatorPartner,\n        txb,\n        slippage: Number(slippage),\n        refreshAllCoins: true\n      }\n      // ÂÖ≥Èó≠ÂºπÁ™ó\n      setIsOpenConfirmModel(false)\n      console.log('üöÄ ~ file: useSwap.ts:261 ~ doSwapAction ~ params:', params)\n\n      toastType = {\n        isSwapWidget,\n        actionType: 'swap',\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n          const description = `Swapping ${addComma(fromAmountUi as string)} ${fromCoin?.symbol} for ${addComma(toAmountUi as string)} ${toCoin?.symbol}`\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n          if (status === 'success') {\n            let payAmountF = fromAmountUi\n            let receiveAmountF = toAmountUi\n\n            if (balanceChanges) {\n              payAmountF = getBalanceChanges(balanceChanges, fromCoin) || fromAmountUi\n              receiveAmountF = getBalanceChanges(balanceChanges, toCoin) || toAmountUi\n            }\n            const description = `Swapped ${addComma(payAmountF as string)} ${fromCoin?.symbol} for ${addComma(receiveAmountF as string)} ${toCoin?.symbol}`\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n            info.toastTitleText = 'Swap Successful'\n          }\n\n          if (status === 'rejected') {\n            info.toastTitleText = description.replace('Swapping', 'Swap')\n          }\n\n          return info\n        }\n      }\n\n      if (!isSwapWidget) {\n        transactionConfirmation(toastType)\n      }\n\n      const buildTxCallback = async () => {\n        await aggregatorSDK!.fastRouterSwap(params)\n        return txb\n      }\n      const res = await signAndExecuteTransaction(buildTxCallback, toastType, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams: {\n          action: 'AggregatorSwap',\n          txbParams: {\n            ...params,\n            routers: dealWithFastRouterSwapParamsForMsafe(params?.routers)\n          }\n        },\n        otherParams: {\n          routerData: option.routerData,\n          providerKey: providerRef.current,\n          from: fromCoinRef.current?.coin_type,\n          to: toCoinRef.current?.coin_type\n        }\n      })\n\n      console.log('üöÄ ~ file: useSwap.ts:272 ~ doSwapAction ~ res:', res)\n\n      if (res) {\n        // Ê∏ÖÁ©∫ËæìÂÖ•Ê°Ü\n        resetInputAmount()\n        //Ëé∑Âèñ‰ΩôÈ¢ù\n        fetchAccountBalance()\n        return true\n      } else {\n        // Â¶Ç‰ΩïÂ§±Ë¥• Âà∑Êñ∞‰∏ÄÊ¨°Ë∑ØÁî±ËÆ°ÁÆó\n        reCalculateRouteData()\n        return false\n      }\n    } catch (error) {\n      console.log('üöÄ ~ doSwapAction ~ error text:', error)\n    }\n  }\n\n  //\n  const getProviderKey = async () => {\n    const providersKeys = isSwapWidget\n      ? Object.entries(AggregatorDexMap).map(([key, _]) => key)\n      : Object.entries(providersSwitchStates)\n          .filter(([_, value]) => value === true)\n          .map(([key, _]) => key)\n\n    const checkProvidersKeysRes = await checkProvidersKeys(providersKeys as string[])\n    return checkProvidersKeysRes\n  }\n\n  // È£éÈô©token\n  const { isScamsCoin: isFromScamsCoin } = useCheckTokenScamsAlert(fromCoin)\n  const { isScamsCoin: isToScamsCoin } = useCheckTokenScamsAlert(toCoin)\n\n  const scamsText = useMemo(() => {\n    if (!isFromScamsCoin && !isToScamsCoin) {\n      return undefined\n    }\n\n    if (isFromScamsCoin && isToScamsCoin && fromCoin?.symbol && toCoin?.symbol) {\n      return `${fromCoin?.symbol} and ${toCoin?.symbol} are`\n    }\n\n    if (isFromScamsCoin && fromCoin?.symbol) {\n      return `${fromCoin?.symbol} token is `\n    }\n\n    if (isToScamsCoin && toCoin?.symbol) {\n      return `${toCoin?.symbol} token is `\n    }\n\n    return undefined\n  }, [isFromScamsCoin, isToScamsCoin, fromCoin?.coin_type, toCoin?.coin_type])\n\n  const onReverseClick = async (isOpenAggregatorMode: boolean) => {\n    console.log('üöÄüöÄüöÄ ~ useSwap.ts:491 ~ onReverseClick ~ isOpenAggregatorMode:', isOpenAggregatorMode)\n    if (!isOpenAggregatorMode) {\n      if (byAmountIn) {\n        if (isSwapWidget) {\n          setFromCoin(toCoin)\n          setToCoin(fromCoin)\n        } else {\n          navigate(`/swap/${toCoin?.coin_type}/${fromCoin?.coin_type}`)\n        }\n\n        setFromAmount('')\n        setToAmount(fromAmount)\n        setByAmountIn(false)\n\n        await sleepTime(200)\n        reCalculateRouteData()\n      } else {\n        if (isSwapWidget) {\n          setFromCoin(toCoin)\n          setToCoin(fromCoin)\n        } else {\n          navigate(`/swap/${fromCoin?.coin_type}/${toCoin?.coin_type}`)\n        }\n\n        setFromAmount(toAmount)\n        setToAmount('')\n        setByAmountIn(true)\n\n        await sleepTime(200)\n        reCalculateRouteData()\n      }\n    } else {\n      if (isSwapWidget) {\n        setFromCoin(toCoin)\n        setToCoin(fromCoin)\n      } else {\n        setFromCoin(toCoin)\n        setToCoin(fromCoin)\n        navigate(`/swap/${toCoin?.coin_type}/${fromCoin?.coin_type}`)\n      }\n\n      setFromAmount(toAmount)\n      setToAmount('')\n      setByAmountIn(true)\n\n      await sleepTime(200)\n      reCalculateRouteData()\n    }\n  }\n\n  // ÈîÄÊØÅÊó∂Ê∏ÖÁ©∫ËæìÂÖ•\n  useEffect(() => {\n    return () => {\n      if (!isSwapWidget) {\n        setFromCoin(undefined)\n        setToCoin(undefined)\n      }\n      setFromAmount('')\n      setToAmount('')\n    }\n  }, [])\n\n  return {\n    handleSelectToken,\n    handleAmountChange,\n    fromAmount,\n    toAmount,\n    fromAmountValue,\n    toAmountValue,\n    amountLimit,\n    getSwapSecondaryData,\n    reCalculateRouteData,\n    fromBalanceInfo,\n    toBalanceInfo,\n    doSwapAction,\n    scamsText,\n    refreshMarketPrice,\n    isOpenConfirmModel,\n    setIsOpenConfirmModel,\n    resetInputAmount,\n    onReverseClick\n  }\n}\n","import { AggregatorServerErrorCode, SwapRouterData } from '@/types/swap'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { textEllipses } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport function useSwapButtonStatus(\n  fromAmount: string,\n  toAmount: string,\n  fromBalance?: string,\n  fromCoin?: Token,\n  toCoin?: Token,\n  routerData?: SwapRouterData\n) {\n  const { currentAccount } = useAccountStore()\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Swap',\n      disabled: false\n    }\n\n    // Âà§Êñ≠Èí±ÂåÖ\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // token ÈÄâÊã©Âà§Êñ≠\n    if (!fromCoin || !toCoin) {\n      btnInfo.text = 'Select a token'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // Âà§Êñ≠ËæìÂÖ•\n    if (!+fromAmount && !+toAmount) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    // errorCode\n    if (routerData && routerData.errorCode) {\n      if (routerData.errorCode === AggregatorServerErrorCode.InsufficientLiquidity) {\n        btnInfo.text = 'Insufficient liquidity for this trade'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n      if (routerData.errorCode === AggregatorServerErrorCode.NoRouter || routerData.errorCode === AggregatorServerErrorCode.HoneyPot) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n\n    //Âà§Êñ≠‰ΩôÈ¢ù\n    if (+fromAmount && d(fromAmount).gt(fromBalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(fromCoin?.symbol, 10)} Balance`\n      return btnInfo\n    }\n\n    if (!+fromAmount || !+toAmount) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [currentAccount?.address, fromAmount, toAmount, fromBalance, routerData?.errorCode, fromCoin, toCoin])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n","import { CetusTooltip, CurrentPrice, MarketSource, MarketType } from '@cetus/design'\nimport { MarketSourceMap } from '@cetus/design/src/components/common/MarketSource'\nimport { Token } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport { Center, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\n\ntype PriceImpactProps = {\n  fromToken: Token\n  toToken: Token\n  marketPrice?: string\n  priceImpact?: {\n    priceImpactText?: string\n    textColor: string\n  }\n  isLoading?: boolean\n  isWidget?: boolean\n  sources: string[]\n  showIncalculable: boolean\n}\n\nexport default function PriceImpact(props: PriceImpactProps) {\n  const { showIncalculable, fromToken, toToken, marketPrice, priceImpact, sources = [], isWidget = false, isLoading } = props\n\n  return (\n    <HStack justify=\"space-between\" w=\"100%\" gap=\"4px\" flexWrap=\"wrap\">\n      <HStack w=\"132px\" alignItems=\"end\" gap=\"4px\">\n        <Text whiteSpace=\"nowrap\" fontSize={isWidget ? '12px' : '14px'} h=\"20px\" lineHeight=\"20px\" fontWeight=\"500\">\n          Price Difference\n        </Text>\n\n        <CetusTooltip\n          tooltip={\n            <PriceImpactTips\n              marketPrice={marketPrice}\n              sources={sources}\n              fromToken={fromToken}\n              toToken={toToken}\n              showIncalculable={showIncalculable}\n            />\n          }\n        >\n          <Center>\n            <Icon xlinkHref=\"#icon-icon_tips\" svgW=\"20px\" svgH=\"20px\" />\n          </Center>\n        </CetusTooltip>\n      </HStack>\n      <Skeleton isLoaded={!isLoading} h=\"20px\">\n        <HStack justify=\"flex-end\" h=\"20px\">\n          <Text\n            maxW={isWidget ? `calc(90vw - 56px - ${24 * (sources?.length || 0)}px)` : `unset`}\n            flex=\"1\"\n            overflow=\"hidden\"\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            color={priceImpact?.textColor}\n            fontWeight=\"500\"\n            fontSize={isWidget ? '12px' : '14px'}\n          >\n            {priceImpact?.priceImpactText && !showIncalculable ? priceImpact?.priceImpactText : 'Incalculable'}\n          </Text>\n          {!showIncalculable &&\n            sources?.map(source => {\n              return <MarketSource key={source} market={source as MarketType} />\n            })}\n        </HStack>\n      </Skeleton>\n    </HStack>\n  )\n}\n\ntype PriceImpactTipsProps = {\n  fromToken: Token\n  toToken: Token\n  marketPrice?: string\n  sources: string[]\n  showIncalculable: boolean\n}\n\nfunction PriceImpactTips(props: PriceImpactTipsProps) {\n  const { marketPrice, sources, fromToken, toToken, showIncalculable } = props\n  return (\n    <VStack className=\"no-close-widget-flag\" w=\"100%\" align=\"flex-start\" gap=\"12px\">\n      <Text color=\"content_text\" fontSize=\"12px\" lineHeight=\"20px\" textAlign=\"start\">\n        The difference between the market price and estimated price due to trade size.\n      </Text>\n      {!showIncalculable && (\n        <VStack w=\"100%\" align=\"flex-start\">\n          <Text fontSize=\"12px\" color=\"text_caption\">\n            Market price sources:\n          </Text>\n          {marketPrice ? (\n            <CurrentPrice fontSize=\"12px\" fromToken={fromToken!} toToken={toToken!} fromValue=\"1\" toValue={marketPrice} color=\"text_caption\" />\n          ) : (\n            <Text color=\"primary_yellow\" fontSize=\"12px\">\n              Price is unknown\n            </Text>\n          )}\n        </VStack>\n      )}\n\n      {marketPrice && !showIncalculable && (\n        <HStack w=\"100%\">\n          <Text color=\"content_text\" fontSize=\"12px\" mt=\"5px\" whiteSpace=\"pre\">\n            Market price sources:\n          </Text>\n          <Text color=\"content_text\" fontSize=\"12px\" mt=\"5px\" whiteSpace=\"pre\">\n            {sources.map(item => MarketSourceMap[item] + '  ')}\n          </Text>\n        </HStack>\n      )}\n    </VStack>\n  )\n}\n","import { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport { SwapRouterData } from '@/types'\nimport { CurrentPrice } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport PriceImpact from './PriceImpact'\n\ntype PriceRatioProps = {\n  fromCoin?: Token\n  toCoin?: Token\n  routerData?: SwapRouterData\n  findRouterLoading: boolean\n  isWidget?: boolean\n  bg?: string\n}\n\nfunction PriceRatio(props: PriceRatioProps) {\n  const { fromCoin, toCoin, findRouterLoading, isWidget = false, routerData, bg = 'primary_opacity.10' } = props\n\n  const { marketPrice, priceImpact, sources, priceImpactTextInfo, showIncalculable } = usePriceImpact(\n    fromCoin,\n    toCoin,\n    routerData?.fromAmountUi,\n    routerData?.toAmountUi\n  )\n  return (\n    <VStack w=\"100%\" p=\"8px\" gap=\"8px\" bg={bg} borderRadius=\"12px\" align=\"flex-start\">\n      <CurrentPrice\n        fromToken={fromCoin as Token}\n        toToken={toCoin as Token}\n        fromValue={routerData?.fromAmountUi}\n        toValue={routerData?.toAmountUi}\n        isLoading={findRouterLoading}\n        color=\"text_caption\"\n        fontSize={isWidget ? '12px' : '14px'}\n      />\n\n      {!showIncalculable && d(priceImpact).lte(-30) && (\n        <HStack w=\"100%\" justify=\"flex-start\">\n          <Icon xlinkHref=\"#icon-warning\" svgFill=\"primary_red\" svgHover=\"primary_red\" fontSize=\"16px\" />\n          <Text color=\"primary_red\" fontSize=\"12px\" lineHeight=\"20px\" fontWeight=\"500\">\n            High price difference. Be cautious before submitting your order.\n          </Text>\n        </HStack>\n      )}\n\n      <PriceImpact\n        fromToken={fromCoin as Token}\n        isWidget={isWidget}\n        toToken={toCoin as Token}\n        marketPrice={marketPrice}\n        priceImpact={priceImpactTextInfo}\n        isLoading={findRouterLoading}\n        sources={sources}\n        showIncalculable={showIncalculable}\n      />\n    </VStack>\n  )\n}\n\nexport default PriceRatio\n","import { HighlightText } from '@cetus/design'\nimport { Icon } from '@cetus/ui-kit'\nimport { Box, HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface ScamsAlertProps {\n  scamsText: string\n}\nfunction ScamsAlert({ scamsText }: ScamsAlertProps) {\n  return (\n    <VStack borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" pt=\"12px\" maxW=\"480px\">\n      <HStack>\n        <Icon xlinkHref=\"#icon-icon_priceupdated\" svgFill=\"primary_yellow\" svgHover=\"primary_yellow\" svgW=\"20px\" svgH=\"20px\" />\n        <Text color=\"primary_yellow\">Alert</Text>\n      </HStack>\n\n      <Box bg=\"card_bg\" borderRadius=\"8px\" p=\"11px\">\n        <HighlightText\n          text={`${scamsText}  detected to have Deny List feature. It's an optional feature on Sui designed for regulated coins (learn more). However, it could be misused by HoneyPot scams, which may restrict users from selling the tokens after buying. Please be cautious.`}\n          keywords={['learn more']}\n          onKeywordClick={() => {\n            window.open('https://docs.sui.io/guides/developer/coin/regulated', '_blank')\n          }}\n        />\n      </Box>\n    </VStack>\n  )\n}\n\nexport default ScamsAlert\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport { SwapRouterFormat } from '@/types'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinType } from '@cetus/types'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport { Box, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Portal, Skeleton, Text } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nconst OverView = ({\n  data,\n  children,\n  loading,\n  isSwapWidget\n}: {\n  data?: SwapRouterFormat\n  children?: React.ReactNode\n  loading?: boolean\n  isSwapWidget?: boolean\n}) => {\n  const { getTokenListInfo } = useGetToken()\n  const { isApp } = useWindowWidth()\n  const [tokenMap, setTokenMap] = useState<Map<string, any>>(new Map())\n  const fetchTokenInfo = async () => {\n    if (data && data?.routers && data?.routers?.length > 0) {\n      const coinTypeList: string[] = []\n      data?.routers[0]?.paths?.forEach((item: any) => {\n        coinTypeList.push(item?.from_type)\n        coinTypeList.push(item?.to_type)\n      })\n\n      const res = await getTokenListInfo(coinTypeList as CoinType[])\n      if (res) {\n        setTokenMap(res)\n      }\n    }\n  }\n  useEffect(() => {\n    fetchTokenInfo()\n  }, [data?.routers])\n  return (\n    data?.providers && (\n      <Skeleton isLoaded={!loading} minW=\"128px\" minH=\"20px\" lineHeight=\"20px\">\n        <HStack w=\"100%\" gap=\"4px\" align=\"center\" justify=\"flex-end\" wrap=\"wrap\">\n          {data?.router_summery !== '1 Streams' ? (\n            <Text color=\"text_caption\" fontSize={isSwapWidget ? '12px' : '14px'} fontWeight=\"500\" overflowWrap=\"break-word\">\n              {data?.router_summery}\n            </Text>\n          ) : (\n            <>\n              <Text color=\"text_caption\" fontSize={isSwapWidget ? '12px' : '14px'} fontWeight=\"500\" textAlign=\"right\" overflowWrap=\"break-word\">\n                {data?.routers[0]?.paths\n                  ?.map((path, index) => {\n                    if (index === 0) {\n                      return `${tokenMap?.get(path?.from_type)?.symbol} > ${tokenMap?.get(path?.to_type)?.symbol}`\n                    }\n                    return tokenMap?.get(path?.to_type)?.symbol\n                  })\n                  .join(' > ')}\n              </Text>\n            </>\n          )}\n          {data?.providers?.map(item => {\n            return isApp && children ? (\n              <SingleCoinImage w=\"16px\" h=\"16px\" imageUrl={AggregatorDexMap[item].logo} />\n            ) : (\n              <Popover isLazy key={item} trigger={isApp ? 'click' : 'hover'}>\n                <PopoverTrigger>\n                  <Box>\n                    <SingleCoinImage w=\"16px\" h=\"16px\" imageUrl={AggregatorDexMap[item].logo} />\n                  </Box>\n                </PopoverTrigger>\n                <Portal>\n                  <PopoverContent w=\"unset\">\n                    <PopoverBody fontSize=\"12px\">{AggregatorDexMap[item].name}</PopoverBody>\n                  </PopoverContent>\n                </Portal>\n              </Popover>\n            )\n          })}\n          {children}\n        </HStack>\n      </Skeleton>\n    )\n  )\n}\n\nexport default OverView\n","import { AddressCopyLink } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport { textEllipses } from '@cetus/utils'\nimport { Divider, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Portal, Text, VStack } from '@chakra-ui/react'\ninterface RouteTipProps {\n  children: React.ReactNode\n  fromToken?: Token\n  toToken?: Token\n  poolAddress?: string\n}\n\nfunction RouteTip({ children, fromToken, toToken, poolAddress }: RouteTipProps) {\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <Popover isLazy trigger={isApp ? 'click' : 'hover'}>\n      <PopoverTrigger>{children}</PopoverTrigger>\n      <Portal>\n        <PopoverContent w=\"unset\" minW=\"unset\">\n          <PopoverBody p=\"12px\">\n            <VStack w=\"100%\" gap=\"12px\" className=\"no-close-widget-flag\">\n              {poolAddress && (\n                <>\n                  <HStack w=\"100%\" justify=\"space-between\" h=\"20px\" p=\"0\">\n                    <HStack>\n                      {/* <Image src={pool_img} w=\"20px\" h=\"20px\" /> */}\n                      <Text fontSize=\"12px\" color=\"text_caption\">\n                        Pool\n                      </Text>\n                    </HStack>\n                    <AddressCopyLink\n                      address={poolAddress as string}\n                      color=\"text_caption\"\n                      showLink={isApp ? true : false}\n                      onClickLink={() => {\n                        window.open(getExplorerUrl(poolAddress, 'poolAddress'), '_blank')\n                      }}\n                    />\n                  </HStack>\n                  <Divider orientation=\"horizontal\" borderColor=\"border\" />\n                </>\n              )}\n              {[fromToken, toToken].map(token => (\n                <HStack w=\"100%\" key={token?.coin_type} justify=\"space-between\" gap=\"12px\">\n                  <HStack>\n                    <SingleCoinImage\n                      imageUrl={token?.logo_url}\n                      w=\"24px\"\n                      h=\"24px\"\n                      coinType={token ? token?.coin_type : ''}\n                      showTagWidth=\"10px\"\n                      showTagHeight=\"10px\"\n                    />\n                    <VStack align=\"flex-start\" gap=\"0px\">\n                      <Text fontSize=\"12px\" color=\"text_caption\" fontWeight=\"500\">\n                        {textEllipses(token?.symbol || '', 10)}\n                      </Text>\n                      {/* <Text fontSize=\"12px\">{token?.name}</Text> */}\n                    </VStack>\n                  </HStack>\n                  <AddressCopyLink\n                    // showAddress={false}\n                    color=\"primary_gray\"\n                    showLink={isApp ? true : false}\n                    address={token?.coin_type as string}\n                    onClickLink={() => window.open(getExplorerUrl(token?.coin_type, 'coin'))}\n                  />\n                </HStack>\n              ))}\n            </VStack>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  )\n}\n\nexport default RouteTip\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport { getPercentage } from '@/utils'\nimport { CoinPairImage, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatFeeRate } from '@cetus/utils'\nimport { Box, Center, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport RouteTip from './RouteTip'\nimport { RoutesProps } from './type'\n\nconst H5Routes = ({ fromToken, toToken, fromAmount, toAmount, routes, loading }: RoutesProps) => {\n  return (\n    <VStack w=\"100%\" align=\"center\" p=\"20px 0 8px\">\n      <HStack>\n        {loading ? (\n          <>\n            <SkeletonCircle w=\"28px\" h=\"28px\" />\n            <Box pos=\"relative\" w=\"100px\" h=\"14px\">\n              <Skeleton pos=\"absolute\" left=\"0\" w=\"50%\" borderRadius=\"4px\" h=\"14px\" endColor=\"skeleton_light\" />\n              <Skeleton pos=\"absolute\" right=\"0\" w=\"100%\" h=\"14px\" />\n            </Box>\n          </>\n        ) : (\n          <>\n            <SingleCoinImage\n              imageUrl={fromToken?.logo_url}\n              w=\"28px\"\n              h=\"28px\"\n              coinType={fromToken?.coin_type}\n              showTagWidth=\"12px\"\n              showTagHeight=\"12px\"\n            />\n            <Text color=\"text_caption\">{addComma(fromAmount || '0')}</Text>\n            <Text>{fromToken?.symbol}</Text>\n          </>\n        )}\n      </HStack>\n\n      <Box\n        w=\"100%\"\n        bg=\"bg_secondary\"\n        p=\"20px 8px\"\n        borderRadius=\"8px\"\n        sx={{\n          position: 'relative',\n          _before: {\n            content: '\"\"',\n            position: 'absolute',\n            top: '0',\n            left: '50%',\n            width: '0',\n            height: '20px',\n            borderLeft: '1px dashed',\n            borderColor: 'border'\n          },\n          _after: {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: '0',\n            left: '50%',\n            width: '0',\n            height: '20px',\n            borderLeft: '1px dashed',\n            borderColor: 'border'\n          }\n        }}\n      >\n        <VStack gap={loading ? '56px' : '16px'} border=\"1px dashed\" borderColor=\"border\" borderRadius=\"8px\" p={loading ? '36px 0' : '16px 0'}>\n          {routes?.map((route, index) => (\n            <HStack\n              key={index}\n              w=\"100%\"\n              gap=\"0\"\n              justify=\"space-between\"\n              sx={{\n                position: 'relative',\n                _before: {\n                  content: '\"\"',\n                  position: 'absolute',\n                  top: '50%',\n                  left: '0',\n                  width: '100%',\n                  height: '1px',\n                  borderTop: '1px dashed',\n                  borderColor: 'border',\n                  zIndex: 1\n                }\n              }}\n            >\n              {!loading && (\n                <Center borderRadius=\"12px\" h=\"24px\" bg=\"h5_router_percentage_bg\" p=\"6px 12px\" ml=\"20px\" zIndex={2}>\n                  <Text color=\"primary\" fontSize=\"12px\" lineHeight=\"12px\" fontWeight=\"500\">\n                    {getPercentage(route.percentage)}\n                  </Text>\n                </Center>\n              )}\n\n              <VStack\n                w=\"100%\"\n                align=\"center\"\n                sx={\n                  route.paths.length > 1 && !loading\n                    ? {\n                        position: 'relative',\n                        _before: {\n                          content: '\"\"',\n                          backgroundColor: 'bg_secondary',\n                          position: 'absolute',\n                          top: '20px',\n                          right: '16px',\n                          width: 'calc(100% - 32px)',\n                          height: 'calc(100% - 40px)',\n                          border: '1px dashed',\n                          borderColor: 'border',\n                          borderRadius: '8px',\n                          zIndex: 2\n                        }\n                      }\n                    : {}\n                }\n              >\n                {loading ? (\n                  <>\n                    <HStack gap=\"8px\" position=\"absolute\" h=\"40px\" top=\"-20px\" borderRadius=\"20px\" p=\"8px\" bg=\"card_bg\" zIndex={2}>\n                      <HStack gap=\"0\">\n                        <SkeletonCircle w=\"24px\" h=\"24px\" />\n                        <SkeletonCircle w=\"24px\" h=\"24px\" />\n                      </HStack>\n                      <Box pos=\"relative\" w=\"100px\" h=\"14px\">\n                        <Skeleton pos=\"absolute\" left=\"0\" w=\"50%\" borderRadius=\"4px\" h=\"14px\" endColor=\"skeleton_light\" />\n                        <Skeleton pos=\"absolute\" right=\"0\" w=\"100%\" h=\"14px\" />\n                      </Box>\n                    </HStack>\n                  </>\n                ) : (\n                  route.paths.map(path => (\n                    <RouteTip key={path.to_type} fromToken={path?.fromToken} toToken={path?.toToken} poolAddress={path?.pool_address}>\n                      <HStack key={path.to_type} borderRadius=\"20px\" p=\"8px\" bg=\"card_bg\" zIndex={3}>\n                        <CoinPairImage\n                          coinAIconUrl={path.fromToken?.logo_url}\n                          coinBIconUrl={path.toToken?.logo_url}\n                          w=\"24px\"\n                          h=\"24px\"\n                          imageStyle={{ decoding: 'async' }}\n                          coinACoinType={path.fromToken?.coin_type}\n                          coinBCoinType={path.toToken?.coin_type}\n                          showTagWidth=\"10px\"\n                          showTagHeight=\"10px\"\n                        />\n                        <Text fontSize=\"12px\" color=\"text_caption\" lineHeight=\"12px\" fontWeight=\"500\">\n                          {AggregatorDexMap[path.provider]?.name}\n                        </Text>\n                        {!!+path.fee_rate && (\n                          <Center p=\"6px 8px\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"12px\">\n                            <Text fontSize=\"12px\" color=\"text_caption\" lineHeight=\"12px\" fontWeight=\"500\">\n                              {getPercentage(formatFeeRate(path.fee_rate))}\n                            </Text>\n                          </Center>\n                        )}\n                      </HStack>\n                    </RouteTip>\n                  ))\n                )}\n              </VStack>\n            </HStack>\n          ))}\n        </VStack>\n      </Box>\n\n      <HStack>\n        {loading ? (\n          <>\n            <SkeletonCircle w=\"28px\" h=\"28px\" />\n            <Box pos=\"relative\" w=\"100px\" h=\"14px\">\n              <Skeleton pos=\"absolute\" left=\"0\" w=\"50%\" borderRadius=\"4px\" h=\"14px\" endColor=\"skeleton_light\" />\n              <Skeleton pos=\"absolute\" right=\"0\" w=\"100%\" h=\"14px\" />\n            </Box>\n          </>\n        ) : (\n          <>\n            <SingleCoinImage imageUrl={toToken?.logo_url} w=\"28px\" h=\"28px\" coinType={toToken?.coin_type} showTagWidth=\"12px\" showTagHeight=\"12px\" />\n            <Text color=\"text_caption\">{addComma(toAmount || '0')}</Text>\n            <Text>{toToken?.symbol}</Text>\n          </>\n        )}\n      </HStack>\n    </VStack>\n  )\n}\n\nexport default H5Routes\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport { getPercentage } from '@/utils'\nimport { CoinPairImage, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatFeeRate } from '@cetus/utils'\nimport { Box, Center, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport RouteTip from './RouteTip'\nimport { RoutesProps } from './type'\n\nconst PCRoutes = ({ fromToken, toToken, fromAmount, toAmount, routes, loading }: RoutesProps) => {\n  return (\n    <VStack w=\"100%\" gap=\"12px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <HStack borderRadius=\"14px\" h=\"28px\" p=\"0 12px 0 0 \">\n          {loading ? (\n            <>\n              <SkeletonCircle w=\"28px\" h=\"28px\" />\n              <Box pos=\"relative\" w=\"100px\" h=\"14px\">\n                <Skeleton pos=\"absolute\" left=\"0\" w=\"50%\" borderRadius=\"4px\" h=\"14px\" endColor=\"skeleton_light\" />\n                <Skeleton pos=\"absolute\" right=\"0\" w=\"100%\" h=\"14px\" />\n              </Box>\n            </>\n          ) : (\n            <>\n              <SingleCoinImage\n                imageUrl={fromToken?.logo_url}\n                w=\"28px\"\n                h=\"28px\"\n                coinType={fromToken?.coin_type}\n                showTagWidth=\"12px\"\n                showTagHeight=\"12px\"\n              />\n              <Text color=\"text_caption\">{addComma(fromAmount || '0')}</Text>\n              <Text>{fromToken?.symbol}</Text>\n            </>\n          )}\n        </HStack>\n        <HStack borderRadius=\"14px\" h=\"28px\" p=\"0 0 0 12px\">\n          {loading ? (\n            <>\n              <Box pos=\"relative\" w=\"100px\" h=\"14px\">\n                <Skeleton pos=\"absolute\" left=\"0\" w=\"50%\" borderRadius=\"4px\" h=\"14px\" endColor=\"skeleton_light\" />\n                <Skeleton pos=\"absolute\" right=\"0\" w=\"100%\" h=\"14px\" />\n              </Box>\n              <SkeletonCircle w=\"28px\" h=\"28px\" />\n            </>\n          ) : (\n            <>\n              <Text color=\"text_caption\">{addComma(toAmount || '0')}</Text>\n              <Text>{toToken?.symbol}</Text>\n              <SingleCoinImage\n                imageUrl={toToken?.logo_url}\n                w=\"28px\"\n                h=\"28px\"\n                coinType={toToken?.coin_type}\n                showTagWidth=\"12px\"\n                showTagHeight=\"12px\"\n              />\n            </>\n          )}\n        </HStack>\n      </HStack>\n      <Box w=\"100%\" bg=\"bg_secondary\" p=\"32px 24px\" borderRadius=\"12px\" position=\"relative\">\n        <Box position=\"absolute\" left=\"0\" p=\"8px\" top=\"calc(50% - 20px)\" bg=\"background\" borderRadius=\"0px 100px 100px 0px\" zIndex={2}>\n          {loading ? (\n            <SkeletonCircle w=\"24px\" h=\"24px\" />\n          ) : (\n            <SingleCoinImage\n              imageUrl={fromToken?.logo_url}\n              w=\"24px\"\n              h=\"24px\"\n              coinType={fromToken?.coin_type}\n              showTagWidth=\"10px\"\n              showTagHeight=\"10px\"\n            />\n          )}\n        </Box>\n        <Box position=\"absolute\" right=\"0\" p=\"8px\" top=\"calc(50% - 20px)\" bg=\"background\" borderRadius=\"100px 0px 0px 100px\" zIndex={2}>\n          {loading ? (\n            <SkeletonCircle w=\"24px\" h=\"24px\" />\n          ) : (\n            <SingleCoinImage imageUrl={toToken?.logo_url} w=\"24px\" h=\"24px\" coinType={toToken?.coin_type} showTagWidth=\"10px\" showTagHeight=\"10px\" />\n          )}\n        </Box>\n        <VStack\n          gap=\"32px\"\n          border=\"1px dashed\"\n          borderBottom={(routes || [])?.length > 1 ? '1px dashed' : 'none'}\n          borderColor=\"border\"\n          borderRadius=\"8px\"\n        >\n          {routes?.map((route, index) => (\n            <HStack\n              key={index}\n              mt={index === 0 ? '-20px' : 0}\n              mb={index === routes.length - 1 ? '-20px' : 0}\n              w=\"100%\"\n              justify=\"space-between\"\n              gap=\"0\"\n              sx={\n                index > 0 && index < routes.length - 1\n                  ? {\n                      position: 'relative',\n                      _before: {\n                        content: '\"\"',\n                        position: 'absolute',\n                        top: '50%',\n                        left: '0',\n                        width: '100%',\n                        height: '1px',\n                        borderTop: '1px dashed',\n                        borderColor: 'border',\n                        zIndex: 1\n                      }\n                    }\n                  : { position: 'relative' }\n              }\n            >\n              {!loading && (\n                <Center borderRadius=\"12px\" h=\"24px\" bg=\"card_bg\" p=\"8px 12px\" ml=\"24px\" zIndex={2} position=\"absolute\">\n                  <Text color=\"primary\" fontSize=\"12px\" lineHeight=\"12px\" fontWeight=\"500\">\n                    {getPercentage(route.percentage)}\n                  </Text>\n                </Center>\n              )}\n\n              <HStack h=\"40px\" w=\"100%\" justify=\"center\" zIndex={2}>\n                {loading ? (\n                  <>\n                    <HStack gap=\"8px\" position=\"absolute\" h=\"40px\" borderRadius=\"20px\" p=\"8px\" bg=\"card_bg\">\n                      <HStack gap=\"0\">\n                        <SkeletonCircle w=\"24px\" h=\"24px\" />\n                        <SkeletonCircle w=\"24px\" h=\"24px\" />\n                      </HStack>\n                      <Box pos=\"relative\" w=\"100px\" h=\"14px\">\n                        <Skeleton pos=\"absolute\" left=\"0\" w=\"50%\" borderRadius=\"4px\" h=\"14px\" endColor=\"skeleton_light\" />\n                        <Skeleton pos=\"absolute\" right=\"0\" w=\"100%\" h=\"14px\" />\n                      </Box>\n                    </HStack>\n                  </>\n                ) : (\n                  route.paths.map(path => (\n                    <RouteTip key={path.to_type} fromToken={path?.fromToken} toToken={path?.toToken} poolAddress={path?.pool_address}>\n                      <HStack borderRadius=\"20px\" p=\"8px\" bg=\"card_bg\">\n                        <CoinPairImage\n                          coinAIconUrl={path.fromToken?.logo_url}\n                          coinBIconUrl={path.toToken?.logo_url}\n                          variant=\"\"\n                          p=\"0px\"\n                          w=\"24px\"\n                          h=\"24px\"\n                          imageStyle={{ decoding: 'async' }}\n                          coinACoinType={path.fromToken?.coin_type}\n                          coinBCoinType={path.toToken?.coin_type}\n                          showTagWidth=\"10px\"\n                          showTagHeight=\"10px\"\n                        />\n                        <Text fontSize=\"12px\" color=\"text_caption\" lineHeight=\"12px\" fontWeight=\"500\">\n                          {AggregatorDexMap[path.provider]?.name}\n                        </Text>\n                        {!!+path.fee_rate && (\n                          <Center p=\"6px 8px\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"12px\">\n                            <Text fontSize=\"12px\" color=\"text_caption\" lineHeight=\"12px\" fontWeight=\"500\">\n                              {getPercentage(formatFeeRate(path.fee_rate))}\n                            </Text>\n                          </Center>\n                        )}\n                      </HStack>\n                    </RouteTip>\n                  ))\n                )}\n              </HStack>\n            </HStack>\n          ))}\n        </VStack>\n      </Box>\n    </VStack>\n  )\n}\n\nexport default PCRoutes\n","import { SwapRouterFormat } from '@/types'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinType, Token } from '@cetus/types'\nimport { HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport H5Routes from './H5Routes'\nimport OverView from './OverView'\nimport PCRoutes from './PCRoutes'\n\ninterface RoutesModalProps {\n  isOpen: boolean\n  onClose: () => void\n  data?: SwapRouterFormat\n  fromCoin?: Token\n  toCoin?: Token\n  fromAmount: string\n  toAmount: string\n}\n\nconst RoutesModal = ({ isOpen, onClose, data, fromCoin, toCoin, fromAmount, toAmount }: RoutesModalProps) => {\n  const { isApp } = useWindowWidth()\n  const { getTokenListInfo } = useGetToken()\n  const [tokenMap, setTokenMap] = useState<Map<string, any>>(new Map())\n\n  const getTokenMap = async (coinTypeList: string[]) => {\n    const res = await getTokenListInfo(coinTypeList as CoinType[])\n    if (res && res?.size > 0) {\n      setTokenMap(res)\n    }\n  }\n\n  useDeepCompareEffect(() => {\n    if (data?.routers && data?.routers?.length > 0) {\n      const coinTypeList: string[] = []\n      data?.routers?.forEach(router => {\n        router.paths.forEach(path => {\n          if (!coinTypeList.includes(path.from_type)) {\n            coinTypeList.push(path.from_type)\n          }\n          if (!coinTypeList.includes(path.to_type)) {\n            coinTypeList.push(path.to_type)\n          }\n        })\n      })\n      getTokenMap(coinTypeList)\n    }\n  }, [data?.routers])\n\n  const routes = useMemo(() => {\n    if (!data?.routers || data?.routers?.length === 0 || tokenMap?.size === 0) {\n      return []\n    }\n    return data?.routers?.map(router => ({\n      ...router,\n      paths: router.paths.map(path => ({\n        ...path,\n        fromToken: tokenMap?.get(path.from_type),\n        toToken: tokenMap?.get(path.to_type)\n      }))\n    }))\n  }, [data?.routers, tokenMap])\n\n  const props = {\n    fromToken: fromCoin,\n    toToken: toCoin,\n    fromAmount,\n    toAmount,\n    routes\n  }\n\n  const [loading, setLoading] = useState(true)\n  const timer = useRef<any>(null)\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = null\n    }\n\n    timer.current = setTimeout(() => {\n      setLoading(false)\n    }, 200)\n\n    return () => {\n      if (timer.current) {\n        clearTimeout(timer.current)\n        timer.current = null\n      }\n    }\n  }, [])\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent maxW=\"1200px\" w={isApp ? 'calc(100vw - 32px)' : '880px'}>\n        <ModalHeader mr=\"-10px\">\n          <HStack w=\"100%\" gap=\"24px\" justify=\"space-between\" align=\"center\">\n            <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Route\n            </Text>\n            <HStack gap=\"0\" align=\"center\">\n              <OverView data={data} />\n              <ModalCloseButton mt=\"0\" position=\"static\" />\n            </HStack>\n          </HStack>\n        </ModalHeader>\n\n        <ModalBody p={{ base: '8px 16px', lg: '16px' }}>\n          {isApp ? <H5Routes {...props} loading={loading} /> : <PCRoutes {...props} loading={loading} />}\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default RoutesModal\n","import { SwapRouterFormat } from '@/types'\nimport { Token } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble } from '@cetus/utils'\nimport { Box, HStack, Text } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport OverView from './OverView'\nimport RoutesModal from './RoutesModal'\n\ntype SwapRoutesProps = {\n  findRouterLoading: boolean\n  formatSwapRouter?: SwapRouterFormat\n  fromAmount: string\n  toAmount: string\n  fromCoin?: Token\n  toCoin?: Token\n  isSwapWidget?: boolean\n  handleSwapWidgetRouterClick?: () => void\n}\n\nfunction SwapRoutes(props: SwapRoutesProps) {\n  const { formatSwapRouter, findRouterLoading, fromAmount, toAmount, fromCoin, toCoin, isSwapWidget = false, handleSwapWidgetRouterClick } = props\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <HStack w=\"100%\" justify=\"space-between\" p=\"0 8px\">\n        <Text fontSize={isSwapWidget ? '12px' : '14px'} fontWeight=\"500\" whiteSpace=\"nowrap\">\n          Auto Router\n        </Text>\n        <Box\n          onClick={e => {\n            cancelBubble(e)\n            if (isSwapWidget) {\n              if (handleSwapWidgetRouterClick) {\n                handleSwapWidgetRouterClick()\n              }\n            } else {\n              setOpen(!open)\n            }\n          }}\n          cursor=\"pointer\"\n        >\n          <OverView data={formatSwapRouter} loading={findRouterLoading} isSwapWidget={isSwapWidget}>\n            <Icon xlinkHref=\"#icon-icon_spread\" fontSize=\"16px\" />\n          </OverView>\n        </Box>\n      </HStack>\n      {open && !isSwapWidget && (\n        <RoutesModal\n          isOpen={open}\n          onClose={() => setOpen(false)}\n          fromCoin={fromCoin}\n          toCoin={toCoin}\n          data={formatSwapRouter}\n          fromAmount={fromAmount}\n          toAmount={toAmount}\n        />\n      )}\n    </>\n  )\n}\n\nexport default SwapRoutes\n","import { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport { useGetAmountLimit, useGetPriceAcceptRouterData } from '@/hooks/swap/useSwapHelper'\nimport useGlobalStore from '@/store/common/global'\nimport { SwapRouterData } from '@/types/swap'\nimport { CurrentPrice, TradeConfirmAmountInfo } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, Icon } from '@cetus/ui-kit'\nimport { Decimal, formatNumber, textEllipses } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport cloneDeep from 'lodash-es/cloneDeep'\nimport { useMemo, useRef, useState } from 'react'\nimport PriceImpact from '../swap/PriceImpact'\n\ntype SwapConfirmBlockProps = {\n  data: SwapRouterData\n  lastRouterData?: SwapRouterData\n  fromCoin: Token\n  toCoin: Token\n  isWidget: boolean\n  onClose: () => void\n  onSubmitClick: (data: SwapRouterData) => void\n}\n\nexport default function SwapConfirmBlock(props: SwapConfirmBlockProps) {\n  const { lastRouterData, fromCoin, toCoin, onClose, data, onSubmitClick, isWidget } = props\n  const { slippage } = useGlobalStore()\n  const isClicking = useRef(false)\n  // ÂéüÂßãÂÄº\n  const [originData, setOriginData] = useState<SwapRouterData>(data)\n  const { fromAmountUi, toAmountUi, byAmountIn } = originData\n\n  // ËÆ°ÁÆóÊúÄÂ∞èÊé•Êî∂/ÊúÄÂ§ß‰ªòÂá∫\n  const { amountLimit } = useGetAmountLimit(slippage, originData)\n\n  // Áî®Êà∑ÁÇπÂáª‰∫Ü ÂøΩËßÜPriceImpact\n  const [ignorePriceImpact, setIgnorePriceImpact] = useState<boolean>(false)\n\n  // ËÆ°ÁÆó‰ª∑Â∑Æ\n  const {\n    priceImpactTextInfo,\n    marketPrice,\n    sources: priceSources,\n    showPriceImpactTips,\n    showPriceImpactWarn,\n    showIncalculable\n  } = usePriceImpact(fromCoin, toCoin, fromAmountUi, toAmountUi)\n\n  // Â¶ÇÂÖëÊç¢‰ª∑Ê†ºÂíåÂéüÂßãÂÄº‰∏ç‰∏ÄËá¥ÔºåËøîÂõûÂèòÂä®ÂêéÂØπË±°\n  const { priceAcceptRouterData } = useGetPriceAcceptRouterData(originData, lastRouterData)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  const showPriceUpdated = useMemo(() => {\n    return priceAcceptRouterData !== undefined\n  }, [priceAcceptRouterData])\n\n  const amountLimitCoin = useMemo(() => {\n    return byAmountIn ? toCoin : fromCoin\n  }, [byAmountIn])\n\n  const handlePriceAcceptClick = () => {\n    if (priceAcceptRouterData) {\n      if (isClicking.current) return\n      isClicking.current = true\n\n      const safeData = cloneDeep(priceAcceptRouterData)\n      setOriginData(safeData)\n\n      setTimeout(() => {\n        isClicking.current = false\n      }, 300)\n    }\n  }\n\n  const buttonDisabled = useMemo(() => {\n    if (ignorePriceImpact) {\n      return false\n    }\n\n    if (showPriceImpactWarn) {\n      return true\n    }\n    return false\n  }, [ignorePriceImpact, showPriceImpactWarn])\n\n  return (\n    <VStack textAlign=\"center\" p=\"0px\" w=\"100%\">\n      <VStack w=\"100%\" gap=\"16px\" pl=\"16px\" pr=\"16px\" pb=\"16px\">\n        {/* ‰∫§ÊòìÊï∞ÈáèÂ±ïÁ§∫ */}\n        <TradeConfirmAmountInfo\n          bg={isWidget ? 'swap_bg_primary' : 'bg_primary'}\n          coinA={{\n            amount: fromAmountUi || '0',\n            ...(fromCoin as Token)\n          }}\n          iconParams={{\n            xlinkHref: '#icon-a-icon_trade',\n            svgFill: 'text_caption',\n            fontSize: '12px'\n          }}\n          coinB={{\n            amount: toAmountUi || '0',\n            ...(toCoin as Token)\n          }}\n        />\n        {/* ‰ª∑Ê†º */}\n        <HStack\n          w=\"100%\"\n          minH=\"48px\"\n          bg={isWidget ? 'swap_bg_primary' : 'bg_primary'}\n          borderRadius=\"8px\"\n          border=\"1px solid\"\n          borderColor=\"border\"\n          justifyContent=\"center\"\n          zIndex=\"100\"\n        >\n          <CurrentPrice fromToken={fromCoin!} toToken={toCoin!} fromValue={fromAmountUi} toValue={toAmountUi} color=\"text_caption\" />\n        </HStack>\n        {/* ‰ª∑Ê†ºÊèêÁ§∫\t */}\n        {showPriceImpactTips && (\n          <HStack\n            zIndex=\"99\"\n            w=\"100%\"\n            mt=\"-26px\"\n            bg={showPriceImpactWarn ? 'primary_red_opacity.10' : 'primary_yellow_opacity.10'}\n            borderRadius=\"12px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            justifyContent=\"center\"\n            p=\"18px 16px 10px\"\n          >\n            <Text color={showPriceImpactWarn ? 'primary_red' : 'primary_yellow'} fontSize=\"12px\" lineHeight=\"20px\" textAlign=\"start\" fontWeight=\"500\">\n              High price difference. Be cautious before submitting your order.\n            </Text>\n          </HStack>\n        )}\n\n        <HTextLabelBox\n          wrapStyle={{ h: '20px', lineHeight: '20px' }}\n          label=\"Slippage Tolerance\"\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          value={`${d(slippage).mul(100)}%`}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n        />\n        <HTextLabelBox\n          wrapStyle={{ h: '20px', lineHeight: '20px' }}\n          label={byAmountIn ? 'Minimum Received' : 'Maximum Input'}\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          value={`${formatNumber(amountLimit || 0, amountLimitCoin?.decimals, false, Decimal.ROUND_DOWN).toString()} ${textEllipses(amountLimitCoin?.symbol)}`}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n        />\n        {/* ‰ª∑Â∑Æ */}\n        <PriceImpact\n          fromToken={fromCoin!}\n          toToken={toCoin!}\n          sources={priceSources}\n          marketPrice={marketPrice}\n          priceImpact={priceImpactTextInfo}\n          showIncalculable={showIncalculable}\n        />\n        {/* ‰ª∑Ê†ºË≠¶Âëä */}\n\n        {showPriceImpactWarn && (\n          <VStack w=\"100%\" gap=\"8px\">\n            <HStack\n              w=\"100%\"\n              bg=\"primary_red_opacity.10\"\n              borderRadius=\"12px\"\n              border=\"1px solid\"\n              borderColor=\"border\"\n              justifyContent=\"start\"\n              p=\"10px 16px\"\n            >\n              <Text color=\"primary_red\" fontSize=\"12px\" lineHeight=\"20px\" textAlign=\"start\">\n                The exchange rate of this order deviates from the market price by a large percentage. Are you sure you want to continue the swap?\n              </Text>\n            </HStack>\n            <HStack w=\"100%\" justifyContent=\"space-between\" gap=\"16px\">\n              <Button\n                variant=\"outline\"\n                w=\"100%\"\n                color=\"text_highlight\"\n                fontSize=\"14px\"\n                borderColor={ignorePriceImpact ? 'text_highlight' : 'button_outline_border'}\n                onClick={() => {\n                  setIgnorePriceImpact(true)\n                }}\n              >\n                Yes, please continue.\n              </Button>\n              <Button variant=\"outline\" w=\"100%\" color=\"text_highlight\" fontSize=\"14px\" borderColor=\"button_outline_border\" onClick={onClose}>\n                No,cancel it.\n              </Button>\n            </HStack>\n          </VStack>\n        )}\n\n        {showPriceUpdated && (\n          <HStack w=\"100%\" justifyContent=\"space-between\">\n            <HStack>\n              <Icon xlinkHref=\"#icon-icon_priceupdated1\" svgW=\"20px\" svgH=\"20px\" />\n              <Text color=\"text_caption\" fontWeight=\"500\" fontSize=\"14px\">\n                Price updated\n              </Text>\n            </HStack>\n            <Button onClick={handlePriceAcceptClick} h=\"40px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\" p=\"0 42px\">\n              Accept\n            </Button>\n          </HStack>\n        )}\n      </VStack>\n      {!showPriceUpdated && (\n        <Button\n          disabled={buttonDisabled}\n          isLoading={isLoading}\n          mt=\"4px\"\n          w=\"100%\"\n          h=\"52px\"\n          borderRadius=\"12px\"\n          fontSize=\"16px\"\n          fontWeight=\"500\"\n          onClick={() => {\n            if (isLoading) {\n              return\n            }\n            setIsLoading(true)\n            onSubmitClick(originData)\n          }}\n        >\n          Confirm Swap\n        </Button>\n      )}\n    </VStack>\n  )\n}\n"],"names":["CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","value","baseClone","useCheckTokenScamsAlert","coinInfo","isScamsCoin","setIsScamsCoin","useState","checkIsScamsCoin","isHoneyPot","error","useEffect","res","aggregatorPartner","useSwapHook","option","isSwapWidget","fromCoin","toCoin","setFromCoin","setToCoin","setToAmount","fromAmount","toAmount","setFromAmount","routerData","setFindRouterLoading","setRouterData","setByAmountIn","byAmountIn","from","to","useParams","findBestRouters","checkProvidersKeys","useFindBestRouting","fetchTokenPrices","getTokenAmountValue","useTokenPrice","slippage","mevProtect","maxCapForGas","transactionMode","customGasPrice","useGlobalStore","aggregatorSDK","useClmmSDKStore","navigate","useNavigate","fetchTokenInfo","useGetToken","isOpenConfirmModel","setIsOpenConfirmModel","signAndExecuteTransaction","transactionConfirmation","useTransaction","providersSwitchStates","supportOrderSplit","useSwapConfigStore","fetchAccountBalance","useAccountBalance","fromBalanceInfo","useGetTokenBalance","toBalanceInfo","fromAmountValue","toAmountValue","uuid","setUuid","uuidRef","useRef","byAmountInRef","fromAmountRef","toAmountRef","fromCoinRef","toCoinRef","providerRef","fromToString","useMemo","initiaTokenSelect","useCallback","envConfigs","isSuiObjectType","token","debouncedFindRouters","useDebounceFunction","amount","by_amount_in","providersKeys","AggregatorDexMap","key","_","checkProvidersKeysRes","formatAmount","toDecimalsAmount","result","resetInputAmount","handleAmountChange","resetInput","v4","reCalculateRouteData","handleSelectToken","coin","isFrom","fixCoinType","amountLimit","useGetAmountLimit","resetAmountFrom","refreshMarketPrice","list","getSwapSecondaryData","doSwapAction","data","toastType","fromAmountUi","toAmountUi","txb","Transaction","params","status","balanceChanges","description","addComma","info","payAmountF","receiveAmountF","getBalanceChanges","dealWithFastRouterSwapParamsForMsafe","_a","_b","isFromScamsCoin","isToScamsCoin","scamsText","onReverseClick","isOpenAggregatorMode","sleepTime","useSwapButtonStatus","fromBalance","currentAccount","useAccountStore","submitBtnInfo","btnInfo","AggregatorServerErrorCode","d","textEllipses","PriceImpact","props","showIncalculable","fromToken","toToken","marketPrice","priceImpact","sources","isWidget","isLoading","jsxs","HStack","jsx","Text","CetusTooltip","PriceImpactTips","Center","Icon","Skeleton","source","MarketSource","VStack","CurrentPrice","item","MarketSourceMap","PriceRatio","findRouterLoading","bg","priceImpactTextInfo","usePriceImpact","ScamsAlert","Box","HighlightText","OverView","children","loading","getTokenListInfo","isApp","useWindowWidth","tokenMap","setTokenMap","coinTypeList","_c","path","index","SingleCoinImage","Popover","PopoverTrigger","Portal","PopoverContent","PopoverBody","RouteTip","poolAddress","getExplorerUrl","useExplorer","Fragment","AddressCopyLink","Divider","H5Routes","routes","SkeletonCircle","route","getPercentage","CoinPairImage","_d","_e","formatFeeRate","PCRoutes","RoutesModal","isOpen","onClose","getTokenMap","useDeepCompareEffect","router","setLoading","timer","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","SwapRoutes","formatSwapRouter","handleSwapWidgetRouterClick","open","setOpen","e","cancelBubble","SwapConfirmBlock","lastRouterData","onSubmitClick","isClicking","originData","setOriginData","ignorePriceImpact","setIgnorePriceImpact","priceSources","showPriceImpactTips","showPriceImpactWarn","priceAcceptRouterData","useGetPriceAcceptRouterData","setIsLoading","showPriceUpdated","amountLimitCoin","handlePriceAcceptClick","safeData","buttonDisabled","TradeConfirmAmountInfo","HTextLabelBox","formatNumber","Decimal","Button"],"mappings":"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","x_google_ignoreList":[0]}