{"version":3,"file":"Slippage-Bya5o8Ip.js","sources":["../../../cetus-design/src/components/common/SlippageSetting.tsx","../../src/components/common/Slippage.tsx"],"sourcesContent":["import SelectTab from './SelectTab'\nimport TooltipIcon from './TooltipIcon'\n// import useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  HStack,\n  Image,\n  Input,\n  InputGroup,\n  InputGroupProps,\n  InputRightElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Switch,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\nconst SUI = {\n  id: '0x9258181f5ceac8dbffb7030890243caed69a9599d2886d957a9cb7656af3bdb3',\n  coin_type: '0x2::sui::SUI',\n  decimals: 9,\n  description: '',\n  name: 'Sui',\n  symbol: 'SUI',\n  logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n  is_trusted: true,\n  extensions: {\n    rank: '880'\n  }\n}\n\ninterface SlippageSettingProps {\n  slippageType?: 'global' | 'vaults' | 'zap'\n  isOpen: boolean\n  onClose: () => void\n  value: number\n  onChange: (slippage: number) => void\n  transactionMode: any\n  onChangeTransctionMode: (value: any) => void\n  maxCapForGas: string\n  onChangeMaxCapForGas: (value: string) => void\n  customGasPrice: string\n  onChangeCustomGasPrice: (value: string) => void\n  mevProtect: boolean\n  onChangeMevProtect: (value: boolean) => void\n  compact?: boolean\n  isWidget?: boolean\n}\n\nexport default function SlippageSetting(props: SlippageSettingProps) {\n  const { isOpen, onClose, slippageType } = props\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay className=\"test-slippage-modal\" />\n      <ModalContent>\n        <ModalHeader fontSize=\"16px\" fontWeight=\"500\">\n          Settings\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb=\"16px\">\n          <SlippageSettingContent {...props} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport const SlippageSettingContent = (props: SlippageSettingProps) => {\n  const {\n    isOpen,\n    onClose,\n    value,\n    onChange,\n    compact = false,\n    slippageType = 'global',\n    isWidget = false,\n    transactionMode,\n    onChangeTransctionMode,\n    maxCapForGas,\n    onChangeMaxCapForGas,\n    mevProtect,\n    onChangeMevProtect,\n    customGasPrice,\n    onChangeCustomGasPrice\n  } = props\n  const defaultFeeList = ['0.1', '0.5', '1']\n  const [inputValue, setInputValue] = useState('')\n  const [isCapture, setIsCapture] = useState(false)\n  const { balanceInfo: suiBalance } = useGetTokenBalance(SUI)\n\n  // transactionMode,\n  //   handleChangeTransctionMode,\n  //   maxCapForGas,\n  //   handleChangeMaxCapForGas\n\n  const [tsMode, setTsMode] = useState(transactionMode)\n  const [maxGas, setMaxGas] = useState(maxCapForGas)\n  const [gasPrice, setGasPrice] = useState(customGasPrice)\n  const [mev, setMev] = useState(mevProtect)\n\n  // useEffect(() => {\n  //   setTsMode(transactionMode)\n  //   setMaxGas(maxCapForGas)\n  //   setMev(mevProtect)\n  // }, [])\n\n  const handleChange = (e: any) => {\n    const reg = new RegExp('[^\\\\d-]*(\\\\d*(?:\\\\.\\\\d{0,2})?).*$')\n    e.target.value = e.target.value.replace(reg, '$1')\n    setInputValue(e.target.value)\n  }\n\n  const selectValue = (value: string) => {\n    setInputValue(value)\n  }\n\n  useEffect(() => {\n    if (value) {\n      setInputValue(String(value))\n    }\n  }, [value])\n\n  useEffect(() => {\n    if (value) {\n      setInputValue(String(value))\n    }\n  }, [isOpen])\n\n  const handleConfirm = () => {\n    if (inputValue) {\n      const s = d(inputValue).toNumber()\n      onChange(s)\n    }\n\n    if (tsMode === 'Fast Mode') {\n      onChangeMaxCapForGas(maxGas)\n      onChangeCustomGasPrice(gasPrice)\n    }\n\n    onChangeTransctionMode(tsMode)\n    onChangeMevProtect(mev)\n    onClose()\n  }\n\n  const btnIsDisabled = useMemo(() => {\n    console.log('ðŸš€ ~ btnIsDisabled ~ gasPrice:', gasPrice)\n    if (\n      tsMode === 'Fast Mode' &&\n      (!maxGas ||\n        Number(maxGas) === 0 ||\n        Number(maxGas) > 5 ||\n        !gasPrice ||\n        Number(gasPrice) === 0 ||\n        d(maxGas).gt(suiBalance?.balanceFormat || '0') ||\n        d(maxGas).lt(d(gasPrice).div(Math.pow(10, 9))))\n    ) {\n      return true\n    }\n\n    if (!+inputValue) {\n      return true\n    }\n    if (slippageType === 'global' || slippageType === 'zap') {\n      return Number(inputValue) > 50 || Number(inputValue) < 0.01\n      // if value equals last value then disabled\n      // return Number(inputValue) > 50 || Number(inputValue) < 0.01 || d(value).equals(inputValue)\n    }\n    return Number(inputValue) > 1\n    // if value equals last value then disabled\n    // return Number(inputValue) > 1 || d(value).equals(inputValue)\n  }, [slippageType, inputValue, tsMode, maxGas, gasPrice, suiBalance])\n\n  useEffect(() => {\n    if (tsMode === 'Fast Mode') {\n      setMev(true)\n    }\n  }, [tsMode])\n\n  return (\n    <Box w=\"100%\">\n      <Box>\n        <Flex align=\"center\" mb=\"16px\">\n          <Icon xlinkHref=\"#icon-icon_verticalslider\" svgHover=\"text_paragraph\" iconCursor=\"text\" />\n          <Text ml=\"8px\" color=\"text_caption\" fontSize=\"14px\" fontWeight=\"500\">\n            Slippage Tolerance\n          </Text>\n        </Flex>\n        <Box\n          bg={\n            compact\n              ? slippageType === 'global' || slippageType === 'zap'\n                ? Number(inputValue) > 50\n                  ? 'primary_red_opacity.10'\n                  : 'primary_yellow_opacity.10'\n                : Number(inputValue) > 1\n                  ? 'primary_red_opacity.10'\n                  : 'transparent'\n              : 'transparent'\n          }\n          borderRadius=\"12px\"\n        >\n          <HStack gap=\"8px\" mt=\"8px\">\n            <Flex\n              w=\"100%\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"12px\"\n              border=\"1px solid\"\n              borderColor=\"border\"\n              background=\"bg_secondary\"\n              h=\"42px\"\n            >\n              {defaultFeeList.map(item => {\n                return (\n                  <Center\n                    flex=\"1\"\n                    bg={item === String(inputValue) ? '#1A1C25 !important' : 'transparent'}\n                    key={item}\n                    cursor=\"pointer\"\n                    h=\"calc(100% - 6px)\"\n                    margin=\"2px\"\n                    borderRadius=\"8px\"\n                    onClick={() => selectValue(item)}\n                  >\n                    <Text color={item === String(inputValue) ? 'text_highlight' : 'text_paragraph'}>{item}%</Text>\n                  </Center>\n                )\n              })}\n            </Flex>\n            <CustomInput\n              compact\n              inputValue={inputValue}\n              handleChange={handleChange}\n              wrapStyle={{\n                flex: '0 0 150px',\n                borderRadius: '12px'\n              }}\n            />\n          </HStack>\n          {inputValue && (slippageType === 'global' || slippageType === 'zap') && (Number(inputValue) > 1 || Number(inputValue) < 0.05) ? (\n            <Flex w=\"100%\">\n              {Number(inputValue) < 0.05 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_yellow_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_yellow\" ml=\"4px\">\n                    Slippage is low. Your transaction may fail.\n                  </Text>\n                </Flex>\n              ) : null}\n              {Number(inputValue) <= 50 && Number(inputValue) > 1 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_yellow_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_yellow\" ml=\"4px\">\n                    Your transaction may be frontrun.\n                  </Text>\n                </Flex>\n              ) : null}\n              {Number(inputValue) > 50 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_red_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_red\" ml=\"4px\">\n                    Enter a valid slippage percentage\n                  </Text>\n                </Flex>\n              ) : null}\n            </Flex>\n          ) : null}\n\n          {inputValue && slippageType === 'vaults' && Number(inputValue) > 1 ? (\n            <Flex w=\"100%\">\n              {Number(inputValue) > 1 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_red_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_red\" ml=\"4px\">\n                    Enter a valid slippage percentage\n                  </Text>\n                </Flex>\n              ) : null}\n            </Flex>\n          ) : null}\n        </Box>\n\n        {slippageType !== 'zap' && (\n          <TransactionModeSettings\n            transactionMode={tsMode}\n            setTransactionMode={setTsMode}\n            maxCapForGas={maxGas}\n            setMaxCapForGas={setMaxGas}\n            customGasPrice={gasPrice}\n            setCustomGasPrice={setGasPrice}\n            suiBalance={suiBalance?.balanceFormat || '0'}\n          />\n        )}\n\n        {slippageType !== 'zap' && <MevProtectSettings mevProtect={mev} setMevProtect={setMev} disabled={tsMode === 'Fast Mode'} />}\n      </Box>\n\n      <Flex align=\"center\" justifyContent=\"space-between\" mt=\"20px\" gap=\"16px\">\n        <Button flex=\"1\" h=\"42px\" variant=\"outline\" borderRadius=\"8px\" onClick={onClose} p=\"0 15px\">\n          Cancel\n        </Button>\n        <Button flex=\"1\" h=\"42px\" borderRadius=\"8px\" onClick={handleConfirm} isDisabled={btnIsDisabled}>\n          Save\n        </Button>\n      </Flex>\n    </Box>\n  )\n}\n\ninterface CustomInputProps {\n  inputValue: string\n  handleChange: (event: any) => void\n  wrapStyle?: InputGroupProps\n  compact?: boolean\n}\n\nconst CustomInput = ({ inputValue, handleChange, wrapStyle = {}, compact = false }: CustomInputProps) => {\n  return (\n    <InputGroup\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      w=\"100%\"\n      background=\"bg_secondary\"\n      borderRadius=\"12px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      h=\"42px\"\n      p=\"12px 16px\"\n      position=\"relative\"\n      {...wrapStyle}\n    >\n      <Text pr=\"8px\" h=\"20px\" lineHeight=\"20px\" borderRight=\"1px solid\" borderColor={compact ? 'transparent' : 'border'}>\n        Custom\n      </Text>\n      <Input\n        borderRadius=\"8px\"\n        h=\"40px\"\n        mr=\"2px\"\n        border=\"none\"\n        variant=\"outline\"\n        value={inputValue}\n        onChange={handleChange}\n        textAlign=\"right\"\n        fontSize=\"sm\"\n        placeholder=\"0.0\"\n        pr={{\n          base: '14px',\n          lg: '8px'\n        }}\n        pl=\"0\"\n      />\n      <InputRightElement\n        width=\"20px\"\n        height=\"40px\"\n        top=\"0.5px\"\n        right={{\n          base: '12px',\n          lg: '8px'\n        }}\n      >\n        <Text fontSize=\"sm\" color=\"text_caption\">\n          %\n        </Text>\n      </InputRightElement>\n    </InputGroup>\n  )\n}\n\nconst chartTypeList = [\n  {\n    label: 'Default'\n  },\n  {\n    label: 'Fast Mode',\n    beforeIcon: { xlinkHref: '#icon-icon_flash', fontSize: '16px', activeColor: '#FFCA68', activeHoverColor: '#FFCA68' }\n  }\n]\n\nconst TransactionModeSettings = (props: {\n  transactionMode: any\n  setTransactionMode: (value: any) => void\n  maxCapForGas: string\n  setMaxCapForGas: (value: string) => void\n  customGasPrice: string\n  setCustomGasPrice: (value: string) => void\n  suiBalance: string\n}) => {\n  // const { getTokenAmountValue } = useTokenPrice()\n  const { transactionMode, setTransactionMode, maxCapForGas, setMaxCapForGas, customGasPrice, setCustomGasPrice, suiBalance } = props\n  const currentTab = useMemo(() => {\n    return chartTypeList.filter((item: any) => item?.label === transactionMode)?.[0]\n  }, [transactionMode, chartTypeList])\n\n  const handleChangeTab = (val: any) => {\n    setTransactionMode(val.label)\n  }\n\n  const handleChangeInput = (e: any) => {\n    const reg = new RegExp('[^\\\\d-]*(\\\\d*(?:\\\\.\\\\d{0,9})?).*$')\n    e.target.value = e.target.value.replace(reg, '$1')\n    setMaxCapForGas(e.target.value)\n  }\n\n  const handleChangeGasPrice = (e: any) => {\n    const reg = new RegExp('[^\\\\d-]*(\\\\d*(?:\\\\.\\\\d{0,9})?).*$')\n    e.target.value = e.target.value.replace(reg, '$1')\n    const gasPriceValue = d(e.target.value).gt(0) ? d(e.target.value).div(Math.pow(10, 9)).toString() : '0'\n    if (d(gasPriceValue).gt(maxCapForGas)) {\n      setMaxCapForGas(gasPriceValue)\n    }\n    setCustomGasPrice(e.target.value)\n  }\n\n  const errorTipText = useMemo(() => {\n    if (!maxCapForGas || Number(maxCapForGas) == 0) {\n      return 'Please enter a value higher than 0'\n    }\n\n    if (maxCapForGas && Number(maxCapForGas) > 5) {\n      return 'Only allow up to 5 SUI'\n    }\n\n    if (d(maxCapForGas).gt(suiBalance)) {\n      return 'Insufficient SUI balance '\n    }\n\n    if (d(maxCapForGas).lt(d(customGasPrice).div(Math.pow(10, 9)))) {\n      return 'Max cap cannot be less than custom gas.'\n    }\n\n    return ''\n  }, [maxCapForGas])\n\n  const warnTipText = useMemo(() => {\n    if (maxCapForGas && Number(maxCapForGas) > 0 && Number(maxCapForGas) < 0.000002) {\n      return 'Your current maximum fee is below the market rate. Please raise it to ensure your transactions are processed.'\n    }\n    return ''\n  }, [maxCapForGas])\n\n  const gasPriceErrorTipText = useMemo(() => {\n    if (!customGasPrice || Number(customGasPrice) == 0) {\n      return 'Please enter a value higher than 0'\n    }\n    return ''\n  }, [customGasPrice])\n\n  const gasPriceWarnTipText = useMemo(() => {\n    if (customGasPrice && Number(customGasPrice) > 0 && d(customGasPrice).lt(750)) {\n      return 'Your current maximum fee is below the market rate. Please raise it to ensure your transactions are processed.'\n    }\n    return ''\n  }, [customGasPrice])\n\n  // const maxCapForGasRate = getTokenAmountValue('0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI', maxCapForGas)\n\n  const gasPriceSuiAmount = useMemo(() => {\n    if (!customGasPrice || customGasPrice === '0') return '0'\n    return d(customGasPrice).div(Math.pow(10, 9)).toString()\n  }, [customGasPrice])\n\n  return (\n    <VStack w=\"100%\" pt=\"20px\" mt=\"20px\" borderTop=\"1px solid\" borderColor=\"border\" gap=\"12px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <HStack>\n          <Icon xlinkHref=\"#icon-icon_mode\" />\n          <Text color=\"text_caption\" fontSize=\"14px\">\n            Transaction Mode\n          </Text>\n        </HStack>\n        <SelectTab\n          type=\"outlineTab\"\n          tabList={chartTypeList}\n          currentTab={currentTab?.label}\n          handleChangeTab={handleChangeTab}\n          wrapStyle={{\n            w: '206px',\n            h: '40px',\n            p: '4px',\n            borderRadius: '12px'\n          }}\n          itemStyle={{\n            flex: '1',\n            fontSize: '12px',\n            margin: '0px',\n            borderRadius: '8px'\n          }}\n        />\n      </HStack>\n      <Text w=\"100%\" lineHeight=\"20px\" fontSize=\"12px\">\n        {transactionMode === 'Default'\n          ? 'Standard gas based on real-time network conditions'\n          : 'Land your transaction earlier and avoid congestion with a higher gas price. MEV protection is on by default in Fast Mode.'}\n      </Text>\n      {transactionMode === 'Fast Mode' && (\n        <VStack w=\"100%\">\n          <HStack\n            w=\"100%\"\n            h=\"56px\"\n            justify=\"space-between\"\n            bg=\"bg_secondary\"\n            borderRadius=\"12px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p=\"0px 16px\"\n          >\n            <HStack justify=\"flex-start\" gap=\"4px\">\n              <Text whiteSpace=\"nowrap\">Custom Gas Price</Text>\n              <TooltipIcon type=\"setGasPrice\" />\n            </HStack>\n            <VStack align=\"flex-end\" gap=\"0px\">\n              <HStack gap=\"0px\">\n                <Input\n                  borderRadius=\"8px\"\n                  h=\"20px\"\n                  mr=\"0px\"\n                  border=\"none\"\n                  variant=\"outline\"\n                  value={customGasPrice}\n                  onChange={handleChangeGasPrice}\n                  textAlign=\"right\"\n                  fontSize=\"14px\"\n                  placeholder=\"0.0\"\n                  pr={{\n                    base: '4px',\n                    lg: '4px'\n                  }}\n                  pl=\"0\"\n                  bg=\"none\"\n                />\n                <Text fontSize=\"14px\" color=\"text_caption\">\n                  MIST\n                </Text>\n              </HStack>\n\n              <Text fontSize=\"12px\" color=\"text_paragraph\">\n                {gasPriceSuiAmount} SUI\n              </Text>\n            </VStack>\n          </HStack>\n          {gasPriceErrorTipText && <TipsWithStatus text={gasPriceErrorTipText} type=\"error\" />}\n          {gasPriceWarnTipText && <TipsWithStatus text={gasPriceWarnTipText} type=\"warn\" />}\n\n          <HStack\n            w=\"100%\"\n            h=\"56px\"\n            justify=\"space-between\"\n            bg=\"bg_secondary\"\n            borderRadius=\"12px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p=\"0px 16px\"\n          >\n            <HStack justify=\"flex-start\" gap=\"4px\">\n              <Text whiteSpace=\"nowrap\">Set Max Cap for Gas</Text>\n              <TooltipIcon type=\"setMaxCapForGas\" />\n            </HStack>\n            <VStack align=\"flex-end\" gap=\"0px\">\n              <HStack gap=\"0px\">\n                <Input\n                  borderRadius=\"8px\"\n                  h=\"20px\"\n                  mr=\"0px\"\n                  border=\"none\"\n                  variant=\"outline\"\n                  value={maxCapForGas}\n                  onChange={handleChangeInput}\n                  textAlign=\"right\"\n                  fontSize=\"14px\"\n                  placeholder=\"0.0\"\n                  pr={{\n                    base: '4px',\n                    lg: '4px'\n                  }}\n                  pl=\"0\"\n                  bg=\"none\"\n                />\n                <Text fontSize=\"14px\" color=\"text_caption\">\n                  SUI\n                </Text>\n              </HStack>\n\n              {/* <Text fontSize=\"12px\" color=\"text_paragraph\">\n                {formatCurrency(maxCapForGasRate, 2)}\n              </Text> */}\n            </VStack>\n          </HStack>\n          {errorTipText && <TipsWithStatus text={errorTipText} type=\"error\" />}\n          {warnTipText && <TipsWithStatus text={warnTipText} type=\"warn\" />}\n          <HStack mt=\"6px\">\n            <Text>Powered by </Text>\n            <Image src=\"/images/icon_shio@2x.png\" w=\"46px\" h=\"14px\" />\n          </HStack>\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n\nconst MevProtectSettings = (props: { mevProtect: boolean; disabled: boolean; setMevProtect: (value: boolean) => void }) => {\n  const { mevProtect, disabled, setMevProtect } = props\n  return (\n    <VStack w=\"100%\" pt=\"20px\" mt=\"20px\" borderTop=\"1px solid\" borderColor=\"border\" gap=\"16px\">\n      <HStack justify=\"flex-start\" w=\"100%\">\n        {/* <Icon xlinkHref=\"#icon-icon_mev\" svgFill={mevProtect ? 'text_highlight' : 'text_paragraph'} /> */}\n        <Icon xlinkHref=\"#icon-icon_mev\" svgFill=\"text_paragraph\" />\n        <Text fontSize=\"14px\" color=\"text_caption\">\n          MEV Protect\n        </Text>\n      </HStack>\n      <HStack justify=\"space-between\" w=\"100%\">\n        <HStack gap=\"4px\">\n          <Text fontSize=\"14px\" color=\"text_paragraph\">\n            Enable MEV Protection\n          </Text>\n          <TooltipIcon type=\"byEnabling\" />\n        </HStack>\n        <Switch isChecked={mevProtect} onChange={() => setMevProtect(!mevProtect)} isDisabled={disabled} />\n      </HStack>\n    </VStack>\n  )\n}\n\nconst TipsWithStatus = (props: { text: string; type: 'warn' | 'error' }) => {\n  const { text, type } = props\n  return (\n    <Center w=\"100%\" p=\"4px 16px\" borderRadius=\"8px\" bg={type === 'warn' ? 'primary_yellow_opacity.10' : 'primary_red_opacity.10'}>\n      <Text color={type === 'warn' ? 'primary_yellow' : 'primary_red'} fontSize=\"12px\" lineHeight=\"20px\">\n        {text}\n      </Text>\n    </Center>\n  )\n}\n","import useGlobalStore from '@/store/common/global'\nimport { TransactionMode } from '@/types'\nimport { getPercentage } from '@/utils'\nimport { Block, CetusTooltip, SlippageSetting } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, d } from '@cetus/utils'\nimport { HStack, Text } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\n\ntype SlippageProps = {\n  slippageType?: 'global' | 'vaults' | 'zap'\n  toolTipText?: string\n  compact?: boolean\n  isWidget?: boolean\n  onClick?: () => void\n}\n\nfunction Slippage(props: SlippageProps) {\n  const { onClick, toolTipText } = props\n  const {\n    onSlippageVisible,\n    showSlippage,\n    isWidget,\n    compact,\n    settingOpen,\n    onClose,\n    onChange,\n    slippageType,\n    transactionMode,\n    handleChangeTransctionMode,\n    maxCapForGas,\n    handleChangeMaxCapForGas,\n    mevProtect,\n    handleChangeMevProtect,\n    customGasPrice,\n    handleChangeCustomGasPrice\n  } = useSlippage(props)\n  return (\n    <>\n      <CetusTooltip tooltip={toolTipText || 'Settings'}>\n        {slippageType !== 'zap' ? (\n          <HStack\n            h=\"28px\"\n            p=\"4px 8px\"\n            borderRadius=\"8px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            bg={isWidget ? 'swap_bg_secondary' : 'bg_secondary'}\n            cursor=\"pointer\"\n            gap=\"6px\"\n            onClick={e => {\n              cancelBubble(e)\n              if (isWidget) {\n                onClick && onClick()\n              } else {\n                onSlippageVisible()\n              }\n            }}\n            sx={{\n              _hover: {\n                p: {\n                  color: 'text_caption'\n                },\n                svg: {\n                  fill: 'text_caption'\n                }\n              }\n            }}\n          >\n            <>\n              <Text fontWeight=\"500\" fontSize=\"12px\">\n                {getPercentage(showSlippage)}\n              </Text>\n              <Block bg={isWidget ? 'swap_bg_secondary' : 'bg_secondary'} p=\"0\" h=\"28px\" w=\"28px\" borderRadius=\"8px\" mr=\"-9px\">\n                <HStack align=\"center\" justify=\"center\" mt=\"3px\">\n                  <Icon xlinkHref=\"#icon-icon_verticalslider\" />\n                </HStack>\n              </Block>\n            </>\n          </HStack>\n        ) : (\n          <HStack\n            gap=\"4px\"\n            borderBottom=\"1px dashed\"\n            borderColor=\"text_paragraph\"\n            pb=\"2px\"\n            onClick={e => {\n              cancelBubble(e)\n              if (isWidget) {\n                onClick && onClick()\n              } else {\n                onSlippageVisible()\n              }\n            }}\n          >\n            <Text fontWeight=\"500\" color=\"text_caption\" fontSize=\"12px\">\n              {getPercentage(showSlippage)}\n            </Text>\n            <Text color=\"text_paragraph\" fontSize=\"12px\">\n              Slippage\n            </Text>\n          </HStack>\n        )}\n      </CetusTooltip>\n      {!isWidget && (\n        <SlippageSetting\n          isWidget={isWidget}\n          compact={compact}\n          isOpen={settingOpen}\n          onClose={onClose}\n          value={d(showSlippage).mul(100).toNumber()}\n          onChange={onChange}\n          slippageType={slippageType}\n          transactionMode={transactionMode}\n          onChangeTransctionMode={handleChangeTransctionMode}\n          maxCapForGas={maxCapForGas}\n          onChangeMaxCapForGas={handleChangeMaxCapForGas}\n          mevProtect={mevProtect}\n          onChangeMevProtect={handleChangeMevProtect}\n          customGasPrice={customGasPrice}\n          onChangeCustomGasPrice={handleChangeCustomGasPrice}\n        />\n      )}\n    </>\n  )\n}\n\nexport function useSlippage(props: SlippageProps) {\n  const { slippageType = 'global', compact, isWidget = false } = props\n  const {\n    slippage,\n    vaultsSlippage,\n    setVaultsSlippage,\n    setSlippage,\n    // settingOpen,\n    // setSettingOpen,\n    mevProtect,\n    setMevProtect,\n    setTransctionMode,\n    setMaxCapForGas,\n    transactionMode,\n    maxCapForGas,\n    customGasPrice,\n    setCustomGasPrice,\n    zapSlippage,\n    setZapSlippage\n  } = useGlobalStore()\n  const [settingOpen, setSettingOpen] = useState(false)\n  const { isApp } = useWindowWidth()\n  const onSlippageVisible = () => {\n    setSettingOpen(!settingOpen)\n  }\n\n  const onClose = () => {\n    setSettingOpen(false)\n  }\n\n  const onChange = (value: number) => {\n    console.log('Slippage ðŸš€ ~ onChange ~ value:', value)\n    console.log('Slippage ðŸš€ ~ onChange ~ slippageType:', slippageType)\n    const saveSlippageValue = d(value).div(100).toNumber()\n    if (slippageType === 'vaults') {\n      setVaultsSlippage(saveSlippageValue)\n    } else if (slippageType === 'zap') {\n      console.log('Slippage ðŸš€ ~ onChange ~ saveSlippageValue:', saveSlippageValue)\n      setZapSlippage(saveSlippageValue)\n    } else {\n      setSlippage(saveSlippageValue)\n    }\n  }\n\n  const showSlippage = useMemo(() => {\n    return slippageType === 'vaults' ? vaultsSlippage : slippageType === 'zap' ? zapSlippage : slippage\n  }, [slippageType, slippage, vaultsSlippage, zapSlippage])\n\n  const handleChangeTransctionMode = (value: TransactionMode) => {\n    setTransctionMode(value)\n  }\n\n  const handleChangeMaxCapForGas = (value: string) => {\n    setMaxCapForGas(value)\n  }\n\n  const handleChangeCustomGasPrice = (value: string) => {\n    setCustomGasPrice(value)\n  }\n\n  const handleChangeMevProtect = (value: boolean) => {\n    setMevProtect(value)\n  }\n\n  return {\n    onSlippageVisible,\n    onClose,\n    onChange,\n    showSlippage,\n    isWidget,\n    compact,\n    settingOpen,\n    slippageType,\n    transactionMode,\n    handleChangeTransctionMode,\n    maxCapForGas,\n    handleChangeMaxCapForGas,\n    mevProtect,\n    handleChangeMevProtect,\n    customGasPrice,\n    handleChangeCustomGasPrice\n  }\n}\n\nexport default Slippage\n"],"names":["SUI","SlippageSetting","props","isOpen","onClose","slippageType","jsxs","Modal","jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","SlippageSettingContent","value","onChange","compact","isWidget","transactionMode","onChangeTransctionMode","maxCapForGas","onChangeMaxCapForGas","mevProtect","onChangeMevProtect","customGasPrice","onChangeCustomGasPrice","defaultFeeList","inputValue","setInputValue","useState","isCapture","setIsCapture","suiBalance","useGetTokenBalance","tsMode","setTsMode","maxGas","setMaxGas","gasPrice","setGasPrice","mev","setMev","handleChange","e","reg","selectValue","useEffect","handleConfirm","s","btnIsDisabled","useMemo","Box","Flex","Icon","Text","HStack","item","Center","CustomInput","TransactionModeSettings","MevProtectSettings","Button","wrapStyle","InputGroup","Input","InputRightElement","chartTypeList","setTransactionMode","setMaxCapForGas","setCustomGasPrice","currentTab","_a","handleChangeTab","val","handleChangeInput","handleChangeGasPrice","gasPriceValue","errorTipText","warnTipText","gasPriceErrorTipText","gasPriceWarnTipText","gasPriceSuiAmount","VStack","SelectTab","TooltipIcon","TipsWithStatus","Image","disabled","setMevProtect","Switch","text","type","Slippage","onClick","toolTipText","onSlippageVisible","showSlippage","settingOpen","handleChangeTransctionMode","handleChangeMaxCapForGas","handleChangeMevProtect","handleChangeCustomGasPrice","useSlippage","Fragment","CetusTooltip","cancelBubble","getPercentage","Block","slippage","vaultsSlippage","setVaultsSlippage","setSlippage","setTransctionMode","zapSlippage","setZapSlippage","useGlobalStore","setSettingOpen","useWindowWidth","saveSlippageValue"],"mappings":"8bA6BA,MAAMA,GAAM,CAEV,UAAW,gBACX,SAAU,CASZ,EAoBA,SAAwBC,GAAgBC,EAA6B,CACnE,KAAM,CAAE,OAAAC,EAAQ,QAAAC,EAAS,aAAAC,CAAiB,EAAAH,EAGxC,OAAAI,OAACC,GAAM,UAAW,GAAO,mBAAoB,GAAO,OAAAJ,EAAgB,QAAAC,EAAkB,WAAU,GAC9F,SAAA,CAACI,EAAAA,IAAAC,GAAA,CAAa,UAAU,qBAAsB,CAAA,SAC7CC,GACC,CAAA,SAAA,CAAAF,MAACG,GAAY,CAAA,SAAS,OAAO,WAAW,MAAM,SAE9C,WAAA,QACCC,GAAiB,EAAA,EAClBJ,EAAAA,IAACK,IAAU,GAAG,OACZ,eAACC,GAAwB,CAAA,GAAGZ,EAAO,CACrC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,CAEa,MAAAY,GAA0BZ,GAAgC,CAC/D,KAAA,CACJ,OAAAC,EACA,QAAAC,EACA,MAAAW,EACA,SAAAC,EACA,QAAAC,EAAU,GACV,aAAAZ,EAAe,SACf,SAAAa,EAAW,GACX,gBAAAC,EACA,uBAAAC,EACA,aAAAC,EACA,qBAAAC,EACA,WAAAC,EACA,mBAAAC,EACA,eAAAC,EACA,uBAAAC,CAAA,EACExB,EACEyB,EAAiB,CAAC,MAAO,MAAO,GAAG,EACnC,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAE,EACzC,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAK,EAC1C,CAAE,YAAaG,GAAeC,GAAmBlC,EAAG,EAOpD,CAACmC,EAAQC,CAAS,EAAIN,EAAAA,SAASX,CAAe,EAC9C,CAACkB,EAAQC,CAAS,EAAIR,EAAAA,SAAST,CAAY,EAC3C,CAACkB,EAAUC,CAAW,EAAIV,EAAAA,SAASL,CAAc,EACjD,CAACgB,EAAKC,CAAM,EAAIZ,EAAAA,SAASP,CAAU,EAQnCoB,EAAgBC,GAAW,CACzB,MAAAC,EAAM,IAAI,OAAO,mCAAmC,EAC1DD,EAAE,OAAO,MAAQA,EAAE,OAAO,MAAM,QAAQC,EAAK,IAAI,EACnChB,EAAAe,EAAE,OAAO,KAAK,CAC9B,EAEME,EAAe/B,GAAkB,CACrCc,EAAcd,CAAK,CACrB,EAEAgC,EAAAA,UAAU,IAAM,CACVhC,GACYc,EAAA,OAAOd,CAAK,CAAC,CAC7B,EACC,CAACA,CAAK,CAAC,EAEVgC,EAAAA,UAAU,IAAM,CACVhC,GACYc,EAAA,OAAOd,CAAK,CAAC,CAC7B,EACC,CAACZ,CAAM,CAAC,EAEX,MAAM6C,EAAgB,IAAM,CAC1B,GAAIpB,EAAY,CACd,MAAMqB,EAAI,EAAErB,CAAU,EAAE,SAAS,EACjCZ,EAASiC,CAAC,CAAA,CAGRd,IAAW,cACbb,EAAqBe,CAAM,EAC3BX,EAAuBa,CAAQ,GAGjCnB,EAAuBe,CAAM,EAC7BX,EAAmBiB,CAAG,EACdrC,EAAA,CACV,EAEM8C,EAAgBC,EAAAA,QAAQ,KACpB,QAAA,IAAI,iCAAkCZ,CAAQ,EAEpDJ,IAAW,cACV,CAACE,GACA,OAAOA,CAAM,IAAM,GACnB,OAAOA,CAAM,EAAI,GACjB,CAACE,GACD,OAAOA,CAAQ,IAAM,GACrB,EAAEF,CAAM,EAAE,IAAGJ,GAAA,YAAAA,EAAY,gBAAiB,GAAG,GAC7C,EAAEI,CAAM,EAAE,GAAG,EAAEE,CAAQ,EAAE,IAAI,KAAK,IAAI,GAAI,CAAC,CAAC,CAAC,IAK7C,CAAC,CAACX,EACG,GAELvB,IAAiB,UAAYA,IAAiB,MACzC,OAAOuB,CAAU,EAAI,IAAM,OAAOA,CAAU,EAAI,IAIlD,OAAOA,CAAU,EAAI,GAG3B,CAACvB,EAAcuB,EAAYO,EAAQE,EAAQE,EAAUN,CAAU,CAAC,EAEnEc,OAAAA,EAAAA,UAAU,IAAM,CACVZ,IAAW,aACbO,EAAO,EAAI,CACb,EACC,CAACP,CAAM,CAAC,EAGT7B,EAAA,KAAC8C,EAAI,CAAA,EAAE,OACL,SAAA,CAAA9C,OAAC8C,EACC,CAAA,SAAA,CAAA9C,EAAA,KAAC+C,EAAK,CAAA,MAAM,SAAS,GAAG,OACtB,SAAA,CAAA7C,MAAC8C,GAAK,UAAU,4BAA4B,SAAS,iBAAiB,WAAW,OAAO,EACxF9C,EAAAA,IAAC+C,EAAK,CAAA,GAAG,MAAM,MAAM,eAAe,SAAS,OAAO,WAAW,MAAM,SAErE,oBAAA,CAAA,CAAA,EACF,EACAjD,EAAA,KAAC8C,EAAA,CACC,GACEnC,EACIZ,IAAiB,UAAYA,IAAiB,MAC5C,OAAOuB,CAAU,EAAI,GACnB,yBACA,4BACF,OAAOA,CAAU,EAAI,EACnB,yBACA,cACJ,cAEN,aAAa,OAEb,SAAA,CAAAtB,EAAA,KAACkD,EAAO,CAAA,IAAI,MAAM,GAAG,MACnB,SAAA,CAAAhD,EAAA,IAAC6C,EAAA,CACC,EAAE,OACF,eAAe,SACf,WAAW,SACX,aAAa,OACb,OAAO,YACP,YAAY,SACZ,WAAW,eACX,EAAE,OAED,SAAA1B,EAAe,IAAY8B,GAExBjD,EAAA,IAACkD,EAAA,CACC,KAAK,IACL,GAAID,IAAS,OAAO7B,CAAU,EAAI,qBAAuB,cAEzD,OAAO,UACP,EAAE,mBACF,OAAO,MACP,aAAa,MACb,QAAS,IAAMkB,EAAYW,CAAI,EAE/B,SAAAnD,EAAA,KAACiD,GAAK,MAAOE,IAAS,OAAO7B,CAAU,EAAI,iBAAmB,iBAAmB,SAAA,CAAA6B,EAAK,GAAA,CAAC,CAAA,CAAA,EAPlFA,CAQP,CAEH,CAAA,CACH,EACAjD,EAAA,IAACmD,GAAA,CACC,QAAO,GACP,WAAA/B,EACA,aAAAe,EACA,UAAW,CACT,KAAM,YACN,aAAc,MAAA,CAChB,CAAA,CACF,EACF,EACCf,IAAevB,IAAiB,UAAYA,IAAiB,SAAW,OAAOuB,CAAU,EAAI,GAAK,OAAOA,CAAU,EAAI,KACrHtB,EAAA,KAAA+C,EAAA,CAAK,EAAE,OACL,SAAA,CAAO,OAAAzB,CAAU,EAAI,IACpBpB,EAAA,IAAC6C,EAAA,CACC,EAAE,OACF,eAAe,SACf,GAAG,MACH,GAAG,MACH,GAAG,MACH,aAAa,MACb,GAAIpC,EAAU,cAAgB,4BAE9B,SAAAT,EAAA,IAAC+C,GAAK,SAAS,KAAK,MAAM,iBAAiB,GAAG,MAAM,SAEpD,6CAAA,CAAA,CAAA,CAAA,EAEA,KACH,OAAO3B,CAAU,GAAK,IAAM,OAAOA,CAAU,EAAI,EAChDpB,EAAA,IAAC6C,EAAA,CACC,EAAE,OACF,eAAe,SACf,GAAG,MACH,GAAG,MACH,GAAG,MACH,aAAa,MACb,GAAIpC,EAAU,cAAgB,4BAE9B,SAAAT,EAAA,IAAC+C,GAAK,SAAS,KAAK,MAAM,iBAAiB,GAAG,MAAM,SAEpD,mCAAA,CAAA,CAAA,CAAA,EAEA,KACH,OAAO3B,CAAU,EAAI,GACpBpB,EAAA,IAAC6C,EAAA,CACC,EAAE,OACF,eAAe,SACf,GAAG,MACH,GAAG,MACH,GAAG,MACH,aAAa,MACb,GAAIpC,EAAU,cAAgB,yBAE9B,SAAAT,EAAA,IAAC+C,GAAK,SAAS,KAAK,MAAM,cAAc,GAAG,MAAM,SAEjD,mCAAA,CAAA,CAAA,CAAA,EAEA,IAAA,CAAA,CACN,EACE,KAEH3B,GAAcvB,IAAiB,UAAY,OAAOuB,CAAU,EAAI,EAC9DpB,EAAA,IAAA6C,EAAA,CAAK,EAAE,OACL,SAAO,OAAAzB,CAAU,EAAI,EACpBpB,EAAA,IAAC6C,EAAA,CACC,EAAE,OACF,eAAe,SACf,GAAG,MACH,GAAG,MACH,GAAG,MACH,aAAa,MACb,GAAIpC,EAAU,cAAgB,yBAE9B,SAAAT,EAAA,IAAC+C,GAAK,SAAS,KAAK,MAAM,cAAc,GAAG,MAAM,SAEjD,mCAAA,CAAA,CAAA,CAAA,EAEA,IACN,CAAA,EACE,IAAA,CAAA,CACN,EAEClD,IAAiB,OAChBG,EAAA,IAACoD,GAAA,CACC,gBAAiBzB,EACjB,mBAAoBC,EACpB,aAAcC,EACd,gBAAiBC,EACjB,eAAgBC,EAChB,kBAAmBC,EACnB,YAAYP,GAAA,YAAAA,EAAY,gBAAiB,GAAA,CAC3C,EAGD5B,IAAiB,OAASG,MAACqD,GAAmB,CAAA,WAAYpB,EAAK,cAAeC,EAAQ,SAAUP,IAAW,WAAa,CAAA,CAAA,EAC3H,EAEA7B,EAAAA,KAAC+C,GAAK,MAAM,SAAS,eAAe,gBAAgB,GAAG,OAAO,IAAI,OAChE,SAAA,CAAA7C,EAAA,IAACsD,EAAO,CAAA,KAAK,IAAI,EAAE,OAAO,QAAQ,UAAU,aAAa,MAAM,QAAS1D,EAAS,EAAE,SAAS,SAE5F,SAAA,EACCI,EAAA,IAAAsD,EAAA,CAAO,KAAK,IAAI,EAAE,OAAO,aAAa,MAAM,QAASd,EAAe,WAAYE,EAAe,SAEhG,MAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ,EASMS,GAAc,CAAC,CAAE,WAAA/B,EAAY,aAAAe,EAAc,UAAAoB,EAAY,GAAI,QAAA9C,EAAU,MAEvEX,EAAA,KAAC0D,GAAA,CACC,WAAW,SACX,eAAe,SACf,EAAE,OACF,WAAW,eACX,aAAa,OACb,OAAO,YACP,YAAY,SACZ,EAAE,OACF,EAAE,YACF,SAAS,WACR,GAAGD,EAEJ,SAAA,CAAAvD,EAAA,IAAC+C,EAAK,CAAA,GAAG,MAAM,EAAE,OAAO,WAAW,OAAO,YAAY,YAAY,YAAatC,EAAU,cAAgB,SAAU,SAEnH,SAAA,EACAT,EAAA,IAACyD,EAAA,CACC,aAAa,MACb,EAAE,OACF,GAAG,MACH,OAAO,OACP,QAAQ,UACR,MAAOrC,EACP,SAAUe,EACV,UAAU,QACV,SAAS,KACT,YAAY,MACZ,GAAI,CACF,KAAM,OACN,GAAI,KACN,EACA,GAAG,GAAA,CACL,EACAnC,EAAA,IAAC0D,GAAA,CACC,MAAM,OACN,OAAO,OACP,IAAI,QACJ,MAAO,CACL,KAAM,OACN,GAAI,KACN,EAEA,eAACX,EAAK,CAAA,SAAS,KAAK,MAAM,eAAe,SAEzC,GAAA,CAAA,CAAA,CAAA,CACF,CAAA,CACF,EAIEY,EAAgB,CACpB,CACE,MAAO,SACT,EACA,CACE,MAAO,YACP,WAAY,CAAE,UAAW,mBAAoB,SAAU,OAAQ,YAAa,UAAW,iBAAkB,SAAU,CAAA,CAEvH,EAEMP,GAA2B1D,GAQ3B,CAEE,KAAA,CAAE,gBAAAiB,EAAiB,mBAAAiD,EAAoB,aAAA/C,EAAc,gBAAAgD,EAAiB,eAAA5C,EAAgB,kBAAA6C,EAAmB,WAAArC,GAAe/B,EACxHqE,EAAapB,EAAAA,QAAQ,IAAM,OACxB,OAAAqB,EAAAL,EAAc,OAAQV,IAAcA,GAAA,YAAAA,EAAM,SAAUtC,CAAe,IAAnE,YAAAqD,EAAuE,EAAC,EAC9E,CAACrD,EAAiBgD,CAAa,CAAC,EAE7BM,EAAmBC,GAAa,CACpCN,EAAmBM,EAAI,KAAK,CAC9B,EAEMC,EAAqB/B,GAAW,CAC9B,MAAAC,EAAM,IAAI,OAAO,mCAAmC,EAC1DD,EAAE,OAAO,MAAQA,EAAE,OAAO,MAAM,QAAQC,EAAK,IAAI,EACjCwB,EAAAzB,EAAE,OAAO,KAAK,CAChC,EAEMgC,EAAwBhC,GAAW,CACjC,MAAAC,EAAM,IAAI,OAAO,mCAAmC,EAC1DD,EAAE,OAAO,MAAQA,EAAE,OAAO,MAAM,QAAQC,EAAK,IAAI,EAC3C,MAAAgC,EAAgB,EAAEjC,EAAE,OAAO,KAAK,EAAE,GAAG,CAAC,EAAI,EAAEA,EAAE,OAAO,KAAK,EAAE,IAAI,KAAK,IAAI,GAAI,CAAC,CAAC,EAAE,SAAA,EAAa,IAChG,EAAEiC,CAAa,EAAE,GAAGxD,CAAY,GAClCgD,EAAgBQ,CAAa,EAEbP,EAAA1B,EAAE,OAAO,KAAK,CAClC,EAEMkC,EAAe3B,EAAAA,QAAQ,IACvB,CAAC9B,GAAgB,OAAOA,CAAY,GAAK,EACpC,qCAGLA,GAAgB,OAAOA,CAAY,EAAI,EAClC,yBAGL,EAAEA,CAAY,EAAE,GAAGY,CAAU,EACxB,4BAGL,EAAEZ,CAAY,EAAE,GAAG,EAAEI,CAAc,EAAE,IAAI,KAAK,IAAI,GAAI,CAAC,CAAC,CAAC,EACpD,0CAGF,GACN,CAACJ,CAAY,CAAC,EAEX0D,EAAc5B,EAAAA,QAAQ,IACtB9B,GAAgB,OAAOA,CAAY,EAAI,GAAK,OAAOA,CAAY,EAAI,KAC9D,gHAEF,GACN,CAACA,CAAY,CAAC,EAEX2D,EAAuB7B,EAAAA,QAAQ,IAC/B,CAAC1B,GAAkB,OAAOA,CAAc,GAAK,EACxC,qCAEF,GACN,CAACA,CAAc,CAAC,EAEbwD,EAAsB9B,EAAAA,QAAQ,IAC9B1B,GAAkB,OAAOA,CAAc,EAAI,GAAK,EAAEA,CAAc,EAAE,GAAG,GAAG,EACnE,gHAEF,GACN,CAACA,CAAc,CAAC,EAIbyD,EAAoB/B,EAAAA,QAAQ,IAC5B,CAAC1B,GAAkBA,IAAmB,IAAY,IAC/C,EAAEA,CAAc,EAAE,IAAI,KAAK,IAAI,GAAI,CAAC,CAAC,EAAE,SAAS,EACtD,CAACA,CAAc,CAAC,EAEnB,OACGnB,EAAAA,KAAA6E,EAAA,CAAO,EAAE,OAAO,GAAG,OAAO,GAAG,OAAO,UAAU,YAAY,YAAY,SAAS,IAAI,OAClF,SAAA,CAAA7E,EAAA,KAACkD,EAAO,CAAA,EAAE,OAAO,QAAQ,gBACvB,SAAA,CAAAlD,OAACkD,EACC,CAAA,SAAA,CAAChD,EAAAA,IAAA8C,EAAA,CAAK,UAAU,iBAAkB,CAAA,QACjCC,EAAK,CAAA,MAAM,eAAe,SAAS,OAAO,SAE3C,kBAAA,CAAA,CAAA,EACF,EACA/C,EAAA,IAAC4E,GAAA,CACC,KAAK,aACL,QAASjB,EACT,WAAYI,GAAA,YAAAA,EAAY,MACxB,gBAAAE,EACA,UAAW,CACT,EAAG,QACH,EAAG,OACH,EAAG,MACH,aAAc,MAChB,EACA,UAAW,CACT,KAAM,IACN,SAAU,OACV,OAAQ,MACR,aAAc,KAAA,CAChB,CAAA,CACF,EACF,EACAjE,EAAAA,IAAC+C,EAAK,CAAA,EAAE,OAAO,WAAW,OAAO,SAAS,OACvC,SAAApC,IAAoB,UACjB,qDACA,2HACN,CAAA,EACCA,IAAoB,aAClBb,OAAA6E,EAAA,CAAO,EAAE,OACR,SAAA,CAAA7E,EAAA,KAACkD,EAAA,CACC,EAAE,OACF,EAAE,OACF,QAAQ,gBACR,GAAG,eACH,aAAa,OACb,OAAO,YACP,YAAY,SACZ,EAAE,WAEF,SAAA,CAAAlD,EAAA,KAACkD,EAAO,CAAA,QAAQ,aAAa,IAAI,MAC/B,SAAA,CAAChD,EAAA,IAAA+C,EAAA,CAAK,WAAW,SAAS,SAAgB,mBAAA,EAC1C/C,EAAAA,IAAC6E,EAAY,CAAA,KAAK,aAAc,CAAA,CAAA,EAClC,EACC/E,EAAA,KAAA6E,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAC7E,EAAAA,KAAAkD,EAAA,CAAO,IAAI,MACV,SAAA,CAAAhD,EAAA,IAACyD,EAAA,CACC,aAAa,MACb,EAAE,OACF,GAAG,MACH,OAAO,OACP,QAAQ,UACR,MAAOxC,EACP,SAAUmD,EACV,UAAU,QACV,SAAS,OACT,YAAY,MACZ,GAAI,CACF,KAAM,MACN,GAAI,KACN,EACA,GAAG,IACH,GAAG,MAAA,CACL,QACCrB,EAAK,CAAA,SAAS,OAAO,MAAM,eAAe,SAE3C,MAAA,CAAA,CAAA,EACF,EAECjD,EAAA,KAAAiD,EAAA,CAAK,SAAS,OAAO,MAAM,iBACzB,SAAA,CAAA2B,EAAkB,MAAA,CACrB,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EACCF,GAAyBxE,EAAA,IAAA8E,EAAA,CAAe,KAAMN,EAAsB,KAAK,QAAQ,EACjFC,GAAwBzE,EAAA,IAAA8E,EAAA,CAAe,KAAML,EAAqB,KAAK,OAAO,EAE/E3E,EAAA,KAACkD,EAAA,CACC,EAAE,OACF,EAAE,OACF,QAAQ,gBACR,GAAG,eACH,aAAa,OACb,OAAO,YACP,YAAY,SACZ,EAAE,WAEF,SAAA,CAAAlD,EAAA,KAACkD,EAAO,CAAA,QAAQ,aAAa,IAAI,MAC/B,SAAA,CAAChD,EAAA,IAAA+C,EAAA,CAAK,WAAW,SAAS,SAAmB,sBAAA,EAC7C/C,EAAAA,IAAC6E,EAAY,CAAA,KAAK,iBAAkB,CAAA,CAAA,EACtC,EACA7E,EAAAA,IAAC2E,GAAO,MAAM,WAAW,IAAI,MAC3B,SAAA7E,EAAA,KAACkD,EAAO,CAAA,IAAI,MACV,SAAA,CAAAhD,EAAA,IAACyD,EAAA,CACC,aAAa,MACb,EAAE,OACF,GAAG,MACH,OAAO,OACP,QAAQ,UACR,MAAO5C,EACP,SAAUsD,EACV,UAAU,QACV,SAAS,OACT,YAAY,MACZ,GAAI,CACF,KAAM,MACN,GAAI,KACN,EACA,GAAG,IACH,GAAG,MAAA,CACL,QACCpB,EAAK,CAAA,SAAS,OAAO,MAAM,eAAe,SAE3C,KAAA,CAAA,CAAA,CAAA,CACF,CAKF,CAAA,CAAA,CAAA,CACF,EACCuB,GAAiBtE,EAAA,IAAA8E,EAAA,CAAe,KAAMR,EAAc,KAAK,QAAQ,EACjEC,GAAgBvE,EAAA,IAAA8E,EAAA,CAAe,KAAMP,EAAa,KAAK,OAAO,EAC/DzE,EAAAA,KAACkD,EAAO,CAAA,GAAG,MACT,SAAA,CAAAhD,EAAAA,IAAC+C,GAAK,SAAW,aAAA,CAAA,QAChBgC,GAAM,CAAA,IAAI,2BAA2B,EAAE,OAAO,EAAE,MAAO,CAAA,CAAA,CAC1D,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ,EAEM1B,GAAsB3D,GAA+F,CACzH,KAAM,CAAE,WAAAqB,EAAY,SAAAiE,EAAU,cAAAC,CAAkB,EAAAvF,EAChD,OACGI,EAAAA,KAAA6E,EAAA,CAAO,EAAE,OAAO,GAAG,OAAO,GAAG,OAAO,UAAU,YAAY,YAAY,SAAS,IAAI,OAClF,SAAA,CAAA7E,EAAA,KAACkD,EAAO,CAAA,QAAQ,aAAa,EAAE,OAE7B,SAAA,CAAAhD,EAAA,IAAC8C,EAAK,CAAA,UAAU,iBAAiB,QAAQ,iBAAiB,QACzDC,EAAK,CAAA,SAAS,OAAO,MAAM,eAAe,SAE3C,aAAA,CAAA,CAAA,EACF,EACCjD,EAAA,KAAAkD,EAAA,CAAO,QAAQ,gBAAgB,EAAE,OAChC,SAAA,CAAClD,EAAAA,KAAAkD,EAAA,CAAO,IAAI,MACV,SAAA,CAAAhD,MAAC+C,EAAK,CAAA,SAAS,OAAO,MAAM,iBAAiB,SAE7C,wBAAA,EACA/C,EAAAA,IAAC6E,EAAY,CAAA,KAAK,YAAa,CAAA,CAAA,EACjC,EACA7E,EAAAA,IAACkF,GAAO,CAAA,UAAWnE,EAAY,SAAU,IAAMkE,EAAc,CAAClE,CAAU,EAAG,WAAYiE,CAAU,CAAA,CAAA,CACnG,CAAA,CAAA,EACF,CAEJ,EAEMF,EAAkBpF,GAAoD,CACpE,KAAA,CAAE,KAAAyF,EAAM,KAAAC,CAAA,EAAS1F,EAErB,OAAAM,EAAA,IAACkD,EAAO,CAAA,EAAE,OAAO,EAAE,WAAW,aAAa,MAAM,GAAIkC,IAAS,OAAS,4BAA8B,yBACnG,SAACpF,EAAAA,IAAA+C,EAAA,CAAK,MAAOqC,IAAS,OAAS,iBAAmB,cAAe,SAAS,OAAO,WAAW,OACzF,SAAAD,CAAA,CACH,CACF,CAAA,CAEJ,EC/oBA,SAASE,GAAS3F,EAAsB,CAChC,KAAA,CAAE,QAAA4F,EAAS,YAAAC,CAAA,EAAgB7F,EAC3B,CACJ,kBAAA8F,EACA,aAAAC,EACA,SAAA/E,EACA,QAAAD,EACA,YAAAiF,EACA,QAAA9F,EACA,SAAAY,EACA,aAAAX,EACA,gBAAAc,EACA,2BAAAgF,EACA,aAAA9E,EACA,yBAAA+E,EACA,WAAA7E,EACA,uBAAA8E,EACA,eAAA5E,EACA,2BAAA6E,CAAA,EACEC,GAAYrG,CAAK,EACrB,OAEII,EAAA,KAAAkG,WAAA,CAAA,SAAA,CAAAhG,MAACiG,GAAa,CAAA,QAASV,GAAe,WACnC,aAAiB,MAChBvF,EAAA,IAACgD,EAAA,CACC,EAAE,OACF,EAAE,UACF,aAAa,MACb,OAAO,YACP,YAAY,SACZ,GAAItC,EAAW,oBAAsB,eACrC,OAAO,UACP,IAAI,MACJ,QAAc0B,GAAA,CACZ8D,EAAa9D,CAAC,EACV1B,EACF4E,GAAWA,EAAQ,EAEDE,EAAA,CAEtB,EACA,GAAI,CACF,OAAQ,CACN,EAAG,CACD,MAAO,cACT,EACA,IAAK,CACH,KAAM,cAAA,CACR,CAEJ,EAEA,SACE1F,EAAA,KAAAkG,WAAA,CAAA,SAAA,CAAAhG,EAAAA,IAAC+C,GAAK,WAAW,MAAM,SAAS,OAC7B,SAAAoD,EAAcV,CAAY,EAC7B,EACCzF,EAAA,IAAAoG,GAAA,CAAM,GAAI1F,EAAW,oBAAsB,eAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,aAAa,MAAM,GAAG,OACxG,SAACV,EAAA,IAAAgD,EAAA,CAAO,MAAM,SAAS,QAAQ,SAAS,GAAG,MACzC,SAAChD,EAAA,IAAA8C,EAAA,CAAK,UAAU,2BAAA,CAA4B,EAC9C,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EAGFhD,EAAA,KAACkD,EAAA,CACC,IAAI,MACJ,aAAa,aACb,YAAY,iBACZ,GAAG,MACH,QAAcZ,GAAA,CACZ8D,EAAa9D,CAAC,EACV1B,EACF4E,GAAWA,EAAQ,EAEDE,EAAA,CAEtB,EAEA,SAAA,CAACxF,EAAAA,IAAA+C,EAAA,CAAK,WAAW,MAAM,MAAM,eAAe,SAAS,OAClD,SAAcoD,EAAAV,CAAY,CAC7B,CAAA,QACC1C,EAAK,CAAA,MAAM,iBAAiB,SAAS,OAAO,SAE7C,UAAA,CAAA,CAAA,CAAA,CAAA,EAGN,EACC,CAACrC,GACAV,EAAA,IAACP,GAAA,CACC,SAAAiB,EACA,QAAAD,EACA,OAAQiF,EACR,QAAA9F,EACA,MAAO,EAAE6F,CAAY,EAAE,IAAI,GAAG,EAAE,SAAS,EACzC,SAAAjF,EACA,aAAAX,EACA,gBAAAc,EACA,uBAAwBgF,EACxB,aAAA9E,EACA,qBAAsB+E,EACtB,WAAA7E,EACA,mBAAoB8E,EACpB,eAAA5E,EACA,uBAAwB6E,CAAA,CAAA,CAC1B,EAEJ,CAEJ,CAEO,SAASC,GAAYrG,EAAsB,CAChD,KAAM,CAAE,aAAAG,EAAe,SAAU,QAAAY,EAAS,SAAAC,EAAW,IAAUhB,EACzD,CACJ,SAAA2G,EACA,eAAAC,EACA,kBAAAC,EACA,YAAAC,EAGA,WAAAzF,EACA,cAAAkE,EACA,kBAAAwB,EACA,gBAAA5C,EACA,gBAAAlD,EACA,aAAAE,EACA,eAAAI,EACA,kBAAA6C,EACA,YAAA4C,EACA,eAAAC,GACEC,GAAe,EACb,CAAClB,EAAamB,CAAc,EAAIvF,EAAAA,SAAS,EAAK,EAClCwF,GAAe,EACjC,MAAMtB,EAAoB,IAAM,CAC9BqB,EAAe,CAACnB,CAAW,CAC7B,EAEM9F,EAAU,IAAM,CACpBiH,EAAe,EAAK,CACtB,EAEMrG,EAAYD,GAAkB,CAC1B,QAAA,IAAI,kCAAmCA,CAAK,EAC5C,QAAA,IAAI,yCAA0CV,CAAY,EAClE,MAAMkH,EAAoB,EAAExG,CAAK,EAAE,IAAI,GAAG,EAAE,SAAS,EACjDV,IAAiB,SACnB0G,EAAkBQ,CAAiB,EAC1BlH,IAAiB,OAClB,QAAA,IAAI,8CAA+CkH,CAAiB,EAC5EJ,EAAeI,CAAiB,GAEhCP,EAAYO,CAAiB,CAEjC,EAEMtB,EAAe9C,EAAAA,QAAQ,IACpB9C,IAAiB,SAAWyG,EAAiBzG,IAAiB,MAAQ6G,EAAcL,EAC1F,CAACxG,EAAcwG,EAAUC,EAAgBI,CAAW,CAAC,EAkBjD,MAAA,CACL,kBAAAlB,EACA,QAAA5F,EACA,SAAAY,EACA,aAAAiF,EACA,SAAA/E,EACA,QAAAD,EACA,YAAAiF,EACA,aAAA7F,EACA,gBAAAc,EACA,2BA1BkCJ,GAA2B,CAC7DkG,EAAkBlG,CAAK,CACzB,EAyBE,aAAAM,EACA,yBAxBgCN,GAAkB,CAClDsD,EAAgBtD,CAAK,CACvB,EAuBE,WAAAQ,EACA,uBAlB8BR,GAAmB,CACjD0E,EAAc1E,CAAK,CACrB,EAiBE,eAAAU,EACA,2BAxBkCV,GAAkB,CACpDuD,EAAkBvD,CAAK,CACzB,CAuBA,CACF"}