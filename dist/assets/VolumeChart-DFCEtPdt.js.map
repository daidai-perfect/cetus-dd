{"version":3,"file":"VolumeChart-DFCEtPdt.js","sources":["../../../ui-kit/src/components/H5MapTable/H5MapTable.tsx","../../../ui-kit/src/components/TableLoading.tsx","../../../ui-kit/src/components/Table.tsx","../../../../node_modules/.pnpm/recharts@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/recharts/es6/chart/BarChart.js","../../src/hooks/common/useChartTime.ts","../../src/hooks/stats/useGetHistogramData.ts","../../src/components/chart/VolumeChart.tsx"],"sourcesContent":["import { Box, Center, FlexboxProps, StackProps, VStack } from '@chakra-ui/react'\nimport Pagination, { PaginationProps } from '../Pagination'\nimport { ColumnsType } from '../Table'\nimport H5MapTableItem from './H5MapTableItem'\nimport { transColumns2H5 } from './util'\n\ninterface H5MapTableType<T> {\n  dataSource: T[]\n  itemSkeletonLength?: number\n  skeletonLength?: number\n  columns: ColumnsType<T>[]\n  rowKey?: string | ((record: T) => string)\n  onRowClick?: (record: T, index?: number) => void\n  rowStyle?: StackProps | ((record: T, index: number) => StackProps)\n  loading: boolean\n  pagination?: PaginationProps\n  wrapStyle?: StackProps\n  itemHeight?: FlexboxProps['flexBasis']\n}\n\nfunction H5MapTable<T>({\n  dataSource,\n  columns,\n  itemSkeletonLength,\n  skeletonLength = 3,\n  rowKey,\n  loading,\n  pagination,\n  rowStyle,\n  wrapStyle,\n  onRowClick,\n  itemHeight\n}: H5MapTableType<T>) {\n  const skeletonData = new Array(skeletonLength).fill(0)\n  return (\n    <VStack w=\"100%\" {...(wrapStyle || {})}>\n      {(dataSource && dataSource?.length && !loading ? dataSource : skeletonData)?.map((item, index) => (\n        <VStack w=\"100%\" key={loading ? index : typeof rowKey === 'function' ? rowKey(item) : rowKey ? (item as unknown as any)[rowKey] : index}>\n          <H5MapTableItem\n            key={loading ? index : typeof rowKey === 'function' ? rowKey(item) : rowKey ? (item as unknown as any)[rowKey] : index}\n            data={transColumns2H5<T>(columns, item, index)}\n            loading={loading}\n            skeletonLength={itemSkeletonLength}\n            onClick={() => onRowClick?.(item, index)}\n            style={typeof rowStyle === 'function' ? rowStyle(item, index) : rowStyle}\n            itemHeight={itemHeight}\n          />\n          <Box w=\"100%\" h=\"1px\" bg=\"border\" mt=\"12px\" />\n        </VStack>\n      ))}\n      {pagination && pagination?.total > pagination?.size && (\n        <Center mt=\"16px\">\n          <Pagination {...pagination} />\n        </Center>\n      )}\n    </VStack>\n  )\n}\n\nexport default H5MapTable\n","import { Flex, Skeleton, TableProps, TableRowProps, Tbody, Td, Tr } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\ninterface TableLoadingProps<T> extends TableProps {\n  tableListLength: number\n  tdListLength: number\n  minW?: string\n  firstTd?: ReactNode\n  rowStyle?: TableRowProps | ((record: T, index?: number) => TableRowProps)\n}\nexport default function TableLoading<T>(props: TableLoadingProps<T>) {\n  const { rowStyle, minW, tableListLength, tdListLength, firstTd } = props\n  const tableList = new Array(tableListLength).fill(0)\n  const tdList = new Array(tdListLength).fill(0)\n\n  return (\n    <Tbody>\n      {tableList?.map((item: any, index: any) => {\n        return (\n          <Tr\n            key={item + `${index}`}\n            sx={{\n              td: {\n                _last: {\n                  '>div': {\n                    justifyContent: 'flex-end'\n                  }\n                }\n              }\n            }}\n            {...(typeof rowStyle === 'function' ? rowStyle(item, index) : rowStyle)}\n          >\n            <>\n              {firstTd && <Td>{firstTd}</Td>}\n              {tdList?.map((item: any, index: any) => {\n                return (\n                  <Td key={index}>\n                    <Flex w=\"100%\" justifyContent={!firstTd && index == 0 ? 'flex-start' : 'flex-end'}>\n                      <Skeleton />\n                    </Flex>\n                  </Td>\n                )\n              })}\n            </>\n          </Tr>\n        )\n      })}\n    </Tbody>\n  )\n}\n","import {\n  Center,\n  Table as CKTable,\n  TableBodyProps,\n  TableCellProps,\n  TableColumnHeaderProps,\n  TableContainer,\n  TableHeadProps,\n  TableProps,\n  TableRowProps,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr\n} from '@chakra-ui/react'\nimport { Key, ReactNode } from 'react'\nimport Pagination, { PaginationProps } from './Pagination'\nimport TableLoading from './TableLoading'\n\nexport type ColumnsType<T> = {\n  title: ReactNode | ((...args: any) => ReactNode)\n  render?: ReactNode | ((record: T, index?: number) => ReactNode)\n  key: Key | ((...args: any) => Key)\n  hidden?: any\n  showLabel?: boolean\n  thConfig?: TableColumnHeaderProps\n  tdConfig?: TableCellProps\n}\n\ninterface TableType<T> extends TableProps {\n  dataSource: T[]\n  skeletonLength?: number\n  columns: ColumnsType<T>[]\n  rowKey?: string | ((record: T) => string)\n  onRowClick?: (record: T, index?: number) => void\n  rowStyle?: TableRowProps | ((record: T, index?: number) => TableRowProps)\n  loading: boolean\n  tdBorder?: boolean\n  firstTdSkeleton?: ReactNode | ((...args: any) => ReactNode)\n  theadConfig?: TableHeadProps\n  tbodyConfig?: TableBodyProps\n  pagination?: PaginationProps\n}\nfunction Table<T>({\n  dataSource,\n  skeletonLength = 3,\n  columns,\n  rowKey,\n  loading,\n  tdBorder,\n  firstTdSkeleton,\n  theadConfig,\n  tbodyConfig,\n  rowStyle = {},\n  onRowClick,\n  pagination,\n  ...args\n}: TableType<T>) {\n  return (\n    <>\n      <TableContainer w=\"100%\">\n        <CKTable size=\"sm\" {...args}>\n          <Thead {...theadConfig}>\n            <Tr>\n              {columns.map(({ title, key, thConfig }) => {\n                return (\n                  <Th key={typeof key === 'function' ? key() : key} {...thConfig}>\n                    {typeof title === 'function' ? title() : title}\n                  </Th>\n                )\n              })}\n            </Tr>\n          </Thead>\n          {loading ? (\n            <TableLoading<T>\n              tableListLength={skeletonLength}\n              tdListLength={columns.length}\n              firstTd={typeof firstTdSkeleton === 'function' ? firstTdSkeleton() : firstTdSkeleton}\n              rowStyle={rowStyle}\n            />\n          ) : (\n            <Tbody {...tbodyConfig}>\n              {dataSource?.map((item: any, index) => {\n                return (\n                  <Tr\n                    key={rowKey ? (typeof rowKey === 'function' ? rowKey(item) : (item as any)[`${rowKey}`]) : (item as any)?.key || index}\n                    borderBottom={tdBorder ? '1px solid' : 'none'}\n                    borderColor={tdBorder ? 'border' : 'transparent'}\n                    onClick={() => onRowClick && onRowClick(item, index)}\n                    {...(typeof rowStyle === 'function' ? rowStyle(item, index) : rowStyle)}\n                  >\n                    {columns.map(({ render, key, tdConfig }) => {\n                      return (\n                        <Td key={key as any} {...tdConfig} fontWeight=\"500\">\n                          {typeof render === 'function' ? render(item, index) : render || item[key as string]}\n                        </Td>\n                      )\n                    })}\n                  </Tr>\n                )\n              })}\n            </Tbody>\n          )}\n        </CKTable>\n      </TableContainer>\n      {pagination && pagination?.total > pagination?.size && (\n        <Center mt=\"16px\">\n          <Pagination {...pagination} />\n        </Center>\n      )}\n    </>\n  )\n}\n\nexport default Table\n","/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import { timeFormat } from '@cetus/utils'\nimport { useState } from 'react'\nexport enum Month {\n  Jan = 1,\n  Feb = 2,\n  Mar = 3,\n  Apr = 4,\n  May = 5,\n  Jun = 6,\n  Jul = 7,\n  Aug = 8,\n  Sep = 9,\n  Oct = 10,\n  Nov = 11,\n  Dec = 12\n}\nexport function useChartTime() {\n  const [time, setTime] = useState('')\n\n  const getCurrentTime = () => {\n    const nowTime = timeFormat(Date.parse(new Date().toUTCString()), 'YMD') || ''\n    const months = nowTime.slice(5, 7)\n    const value = Month[Number(months)]\n    const currentDay = nowTime.slice(8, 10)\n    const currentMonth = value\n    const currentYear = nowTime.slice(0, 4)\n    const date = currentMonth + ' ' + currentDay + ',' + ' ' + currentYear + ' ' + '(UTC)'\n    setTime(date)\n  }\n\n  const getHoverTime = (timeDate: any, type: 'D' | 'W' | 'M') => {\n    const timestamp = Date.parse(timeDate)\n    const weekDate = new Date(timestamp)\n    weekDate.setDate(weekDate.getDate() + 7)\n    const monthDate = new Date(timestamp)\n    monthDate.setDate(monthDate.getDate() + 31)\n    const gmtUTCWeekEnd = weekDate.toUTCString()\n    const gmtUTCMonthEnd = monthDate.toUTCString()\n\n    const monthTime = timeFormat(Date.parse(gmtUTCMonthEnd), 'YMD') || ''\n    const nowTime = timeFormat(Date.parse(new Date().toUTCString()), 'YMD') || ''\n    const weekTime =\n      Date.parse(gmtUTCWeekEnd) > Date.parse(new Date().toUTCString())\n        ? timeFormat(Date.parse(new Date().toUTCString()), 'YMD') || ''\n        : timeFormat(Date.parse(gmtUTCWeekEnd), 'YMD') || ''\n\n    const nowMonths = nowTime.slice(5, 7)\n    const nowValue = Month[Number(nowMonths)]\n    const nowDay = nowTime.slice(8, 10)\n    const nowMonth = nowValue\n    const nowYear = nowTime.slice(0, 4)\n\n    const months = timeDate.slice(5, 7)\n    const value = Month[Number(months)]\n    const currentDay = timeDate.slice(8, 10)\n    const currentMonth = value\n    const currentYear = timeDate.slice(0, 4)\n\n    const weekMonths = weekTime.slice(5, 7)\n    const weekValue = Month[Number(weekMonths)]\n    const weekDay = weekTime.slice(8, 10)\n    const weekMonth = weekValue\n    const weekYear = weekTime.slice(0, 4)\n\n    const monthValue = Number(months) == 12 ? Month[1] : Month[Number(months) + 1]\n    const monthMonth = monthValue\n    const monthYear = monthTime.slice(0, 4)\n    let date\n    if (type == 'D') {\n      date = currentMonth + ' ' + currentDay + ',' + ' ' + currentYear + ' ' + '(UTC)'\n    } else if (type == 'W') {\n      date = currentDay + ' ' + currentMonth + '-' + weekDay + ' ' + weekMonth + ' ' + ',' + ' ' + weekYear + ' ' + '(UTC)'\n    } else {\n      date =\n        Date.parse(gmtUTCMonthEnd) >= Date.parse(new Date().toUTCString())\n          ? currentMonth + ' ' + '01' + '-' + nowMonth + ' ' + nowDay + ',' + ' ' + nowYear + ' ' + '(UTC)'\n          : currentMonth + ' ' + '01' + '-' + monthMonth + ' ' + '01' + ',' + ' ' + monthYear + ' ' + '(UTC)'\n    }\n    setTime(date)\n  }\n\n  return {\n    time,\n    getCurrentTime,\n    getHoverTime\n  }\n}\n","import { HistogramPathTotalVolV3, HistogramPathV3 } from '@/apis/path'\nimport { dayStrZeroPadding } from '@/utils/api-data-utils'\nimport { useFetch } from '@cetus/hooks'\nimport { identity, pickBy } from 'lodash-es'\nimport { Month } from '../common/useChartTime'\n\nexport type GetHistogramDataParams = {\n  type: 'vol' | 'tvl' | 'fee'\n  date_type?: 'day' | 'wek' | 'mon'\n  limit?: number\n  address?: string\n}\n\nexport default function useGetHistogramData() {\n  const { fetchByApi } = useFetch()\n\n  const getHistogramData = async (params: GetHistogramDataParams) => {\n    const { type, date_type = 'day', limit, address = 'all' } = params\n    console.log('🚀 ~ getHistogramData ~ limit:', type, date_type, limit)\n    const isTotalVol = address == 'all' && type == 'vol'\n\n    const dateTypeMap: Record<string, string> = { day: 'day', wek: 'week', mon: 'month' }\n    const resolvedDateType = dateTypeMap[date_type]\n\n    // 计算 beginTimestamp\n    const now = Date.now()\n    const oneDay = 86400 // 1 天的秒数\n    const oneWeek = 604800 // 7 天的秒数\n    const oneMonth = 2592000 // 30 天的秒数\n    const timeLimit = !limit ? undefined : date_type == 'day' ? limit * oneDay : date_type == 'wek' ? limit * oneWeek : limit * oneMonth\n    const beginTimestamp = !timeLimit ? 0 : String(Math.floor(now / 1000 - timeLimit))\n\n    const requestParams: Record<string, any> = isTotalVol\n      ? { dataType: type, dateType: resolvedDateType, beginTimestamp }\n      : { dataType: type, dateType: resolvedDateType, address, beginTimestamp }\n\n    const options = pickBy(requestParams, identity)\n    const apiPath = isTotalVol ? HistogramPathTotalVolV3 : HistogramPathV3\n\n    const res = await fetchByApi(apiPath, 'GET', options)\n    console.log('🚀 ~ getHistogramData response:', res)\n\n    const result = (res?.list || []).map((item: any) => {\n      const dateTime = new Date(item.timestamp * 1000).toISOString().split('.')[0] + 'Z'\n\n      const monthIndex = Number(dateTime.slice(5, 7))\n      const mDateValue = Month[monthIndex]\n\n      return {\n        num: Number(item.value),\n        date: dateTime,\n        xAxis: date_type === 'mon' ? mDateValue : dayStrZeroPadding(dateTime)\n      }\n    })\n\n    const returnArr = [...result].reverse()\n    console.log('🚀 ~ getHistogramData ~ isPureTvl:', returnArr)\n    return returnArr\n  }\n\n  return { getHistogramData }\n}\n","import { Month } from '@/hooks/common/useChartTime'\nimport { useState } from 'react'\nimport { Bar, BarChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport { CustomizedXAxisTick } from './CustomizedAxisTick'\nimport EmptyTooltip from './EmptyTooltip'\n\nconst VolumeChart = ({\n  data,\n  onChangeValue,\n  noXAxis,\n  pageFrom = 'stats'\n}: {\n  data: any\n  onChangeValue: (data: any) => void\n  noXAxis?: boolean\n  pageFrom?: 'stats' | 'pools'\n}) => {\n  const [hoverTime, setHoverTime] = useState('')\n  const handleMouseMove = (e: any) => {\n    if (e && e.activePayload && e.activePayload.length) {\n      const date = e.activePayload[0].payload.date\n      onChangeValue(e.activePayload[0].payload)\n      const months = date.slice(5, 7)\n      const value = Month[Number(months)]\n      const day = date.slice(8, 10)\n      const month = value\n      const year = date.slice(0, 4)\n      setHoverTime(day + ' ' + month + ' ' + year)\n    }\n  }\n\n  const handleMouseLeave = () => {\n    onChangeValue(null)\n  }\n\n  const minValue = data?.length > 0 ? Math.floor(Math.min(...data.map((item: any) => item.num))) : 0\n  const maxValue = Math.ceil(Math.max(...data.map((item: any) => item.num)))\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart barCategoryGap=\"25%\" data={data} onMouseMove={handleMouseMove} onMouseLeave={handleMouseLeave} maxBarSize={24}>\n        {!noXAxis && <XAxis type=\"category\" dataKey=\"xAxis\" minTickGap={18} tickLine={false} axisLine={false} tick={<CustomizedXAxisTick />} />}\n        {maxValue && <YAxis domain={[0, maxValue * 1.05]} hide={true} axisLine={false} tickLine={false} />}\n        {/* <Tooltip content={<EmptyTooltip value={pageFrom !== 'stats' ? hoverTime : ''} />} cursor={{ fill: 'rgba(118,200,255,0.5)' }} /> */}\n        <Tooltip content={<EmptyTooltip value={pageFrom !== 'stats' ? hoverTime : ''} />} cursor={<CustomizedCursor />} />\n        {/* <Bar dataKey=\"num\" fill=\"#75C8FF\" activeBar={<Rectangle stroke=\"rgba(0,0,0,0)\" />} isAnimationActive={false} /> */}\n        <Bar dataKey=\"num\" fill=\"#75C8FF\" isAnimationActive={false} />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default VolumeChart\n\nfunction CustomizedCursor(params: any) {\n  const { x, y, width, height, payload } = params\n\n  if (!payload || !payload?.[0] || !payload?.[0]?.payload?.num) return\n\n  const v = width > 192 ? width / 1.2 : width > 96 ? width / 1.5 : width > 48 ? width / 2 : width > 24 ? width / 4 : width / 8\n\n  return (\n    <g>\n      <rect width={width - v} height={height} x={x + v / 2} fill=\"rgba(118,200,255,0.5)\" y={y + 1} />\n    </g>\n  )\n}\n"],"names":["H5MapTable","dataSource","columns","itemSkeletonLength","skeletonLength","rowKey","loading","pagination","rowStyle","wrapStyle","onRowClick","itemHeight","skeletonData","VStack","_a","item","index","jsxs","jsx","H5MapTableItem","transColumns2H5","Box","Center","Pagination","TableLoading","props","minW","tableListLength","tdListLength","firstTd","tableList","tdList","Tbody","Tr","Fragment","Td","Flex","Skeleton","Table","tdBorder","firstTdSkeleton","theadConfig","tbodyConfig","args","TableContainer","CKTable","Thead","title","key","thConfig","Th","render","tdConfig","BarChart","generateCategoricalChart","Bar","XAxis","YAxis","formatAxisMap","Month","useChartTime","time","setTime","useState","nowTime","timeFormat","months","value","currentDay","currentMonth","currentYear","date","timeDate","type","timestamp","weekDate","monthDate","gmtUTCWeekEnd","gmtUTCMonthEnd","monthTime","weekTime","nowMonths","nowValue","nowDay","nowMonth","nowYear","weekMonths","weekValue","weekDay","weekMonth","weekYear","monthMonth","monthYear","useGetHistogramData","fetchByApi","useFetch","params","date_type","limit","address","isTotalVol","resolvedDateType","now","timeLimit","beginTimestamp","options","pickBy","identity","res","HistogramPathTotalVolV3","HistogramPathV3","returnArr","dateTime","monthIndex","mDateValue","dayStrZeroPadding","VolumeChart","data","onChangeValue","noXAxis","pageFrom","hoverTime","setHoverTime","handleMouseMove","e","day","month","year","handleMouseLeave","maxValue","ResponsiveContainer","CustomizedXAxisTick","Tooltip","EmptyTooltip","CustomizedCursor","x","y","width","height","payload","_b","v"],"mappings":"ihBAoBA,SAASA,GAAc,CACrB,WAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,eAAAC,EAAiB,EACjB,OAAAC,EACA,QAAAC,EACA,WAAAC,EACA,SAAAC,EACA,UAAAC,EACA,WAAAC,EACA,WAAAC,CACF,EAAsB,OACpB,MAAMC,EAAe,IAAI,MAAMR,CAAc,EAAE,KAAK,CAAC,EACrD,cACGS,EAAO,CAAA,EAAE,OAAQ,GAAIJ,GAAa,CAC/B,EAAA,SAAA,EAAAK,EAAAb,IAAcA,GAAA,MAAAA,EAAY,SAAU,CAACK,EAAUL,EAAaW,IAA5D,YAAAE,EAA2E,IAAI,CAACC,EAAMC,IACrFC,OAAAJ,EAAA,CAAO,EAAE,OACR,SAAA,CAAAK,EAAA,IAACC,EAAA,CAEC,KAAMC,EAAmBlB,EAASa,EAAMC,CAAK,EAC7C,QAAAV,EACA,eAAgBH,EAChB,QAAS,IAAMO,GAAA,YAAAA,EAAaK,EAAMC,GAClC,MAAO,OAAOR,GAAa,WAAaA,EAASO,EAAMC,CAAK,EAAIR,EAChE,WAAAG,CAAA,EANKL,EAAUU,EAAQ,OAAOX,GAAW,WAAaA,EAAOU,CAAI,EAAIV,EAAUU,EAAwBV,CAAM,EAAIW,CAOnH,EACAE,EAAAA,IAACG,GAAI,EAAE,OAAO,EAAE,MAAM,GAAG,SAAS,GAAG,MAAO,CAAA,CAAA,CAAA,EAVxBf,EAAUU,EAAQ,OAAOX,GAAW,WAAaA,EAAOU,CAAI,EAAIV,EAAUU,EAAwBV,CAAM,EAAIW,CAWlI,GAEDT,IAAcA,GAAA,YAAAA,EAAY,QAAQA,GAAA,YAAAA,EAAY,OAC7CW,EAAA,IAACI,EAAO,CAAA,GAAG,OACT,SAAAJ,EAAA,IAACK,EAAY,CAAA,GAAGhB,EAAY,CAC9B,CAAA,CAAA,EAEJ,CAEJ,CChDA,SAAwBiB,GAAgBC,EAA6B,CACnE,KAAM,CAAE,SAAAjB,EAAU,KAAAkB,EAAM,gBAAAC,EAAiB,aAAAC,EAAc,QAAAC,GAAYJ,EAC7DK,EAAY,IAAI,MAAMH,CAAe,EAAE,KAAK,CAAC,EAC7CI,EAAS,IAAI,MAAMH,CAAY,EAAE,KAAK,CAAC,EAE7C,aACGI,EACE,CAAA,SAAAF,GAAA,YAAAA,EAAW,IAAI,CAACf,EAAWC,IAExBE,EAAA,IAACe,EAAA,CAEC,GAAI,CACF,GAAI,CACF,MAAO,CACL,OAAQ,CACN,eAAgB,UAAA,CAClB,CACF,CAEJ,EACC,GAAI,OAAOzB,GAAa,WAAaA,EAASO,EAAMC,CAAK,EAAIR,EAE9D,SACGS,EAAA,KAAAiB,WAAA,CAAA,SAAA,CAAWL,GAAAX,EAAAA,IAACiB,GAAI,SAAQN,CAAA,CAAA,EACxBE,GAAA,YAAAA,EAAQ,IAAI,CAAChB,EAAWC,UAEpBmB,EACC,CAAA,SAAAjB,EAAAA,IAACkB,EAAK,CAAA,EAAE,OAAO,eAAgB,CAACP,GAAWb,GAAS,EAAI,aAAe,WACrE,eAACqB,EAAS,EAAA,CAAA,CACZ,GAHOrB,CAIT,EAEH,CACH,CAAA,CAAA,EAvBKD,EAAO,GAAGC,CAAK,EAwBtB,GAGN,CAEJ,CCJA,SAASsB,GAAS,CAChB,WAAArC,EACA,eAAAG,EAAiB,EACjB,QAAAF,EACA,OAAAG,EACA,QAAAC,EACA,SAAAiC,EACA,gBAAAC,EACA,YAAAC,EACA,YAAAC,EACA,SAAAlC,EAAW,CAAC,EACZ,WAAAE,EACA,WAAAH,EACA,GAAGoC,CACL,EAAiB,CACf,OAEI1B,EAAA,KAAAiB,WAAA,CAAA,SAAA,CAAChB,EAAAA,IAAA0B,EAAA,CAAe,EAAE,OAChB,SAAA3B,EAAAA,KAAC4B,GAAQ,KAAK,KAAM,GAAGF,EACrB,SAAA,CAAAzB,EAAA,IAAC4B,EAAO,CAAA,GAAGL,EACT,SAAAvB,EAAA,IAACe,EACE,CAAA,SAAA/B,EAAQ,IAAI,CAAC,CAAE,MAAA6C,EAAO,IAAAC,EAAK,SAAAC,KAEvB/B,EAAAA,IAAAgC,EAAA,CAAkD,GAAGD,EACnD,gBAAOF,GAAU,WAAaA,EAAM,EAAIA,GADlC,OAAOC,GAAQ,WAAaA,IAAQA,CAE7C,CAEH,EACH,CACF,CAAA,EACC1C,EACCY,EAAA,IAACM,GAAA,CACC,gBAAiBpB,EACjB,aAAcF,EAAQ,OACtB,QAAS,OAAOsC,GAAoB,WAAaA,EAAoB,EAAAA,EACrE,SAAAhC,CAAA,CAAA,QAGDwB,EAAO,CAAA,GAAGU,EACR,SAAYzC,GAAA,YAAAA,EAAA,IAAI,CAACc,EAAWC,IAEzBE,EAAA,IAACe,EAAA,CAEC,aAAcM,EAAW,YAAc,OACvC,YAAaA,EAAW,SAAW,cACnC,QAAS,IAAM7B,GAAcA,EAAWK,EAAMC,CAAK,EAClD,GAAI,OAAOR,GAAa,WAAaA,EAASO,EAAMC,CAAK,EAAIR,EAE7D,WAAQ,IAAI,CAAC,CAAE,OAAA2C,EAAQ,IAAAH,EAAK,SAAAI,WAExBjB,EAAqB,CAAA,GAAGiB,EAAU,WAAW,MAC3C,SAAO,OAAAD,GAAW,WAAaA,EAAOpC,EAAMC,CAAK,EAAImC,GAAUpC,EAAKiC,CAAa,GAD3EA,CAET,CAEH,CAAA,EAZI3C,EAAU,OAAOA,GAAW,WAAaA,EAAOU,CAAI,EAAKA,EAAa,GAAGV,CAAM,EAAE,GAAMU,GAAA,YAAAA,EAAc,MAAOC,CAanH,EAGN,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,EACCT,IAAcA,GAAA,YAAAA,EAAY,QAAQA,GAAA,YAAAA,EAAY,OAC7CW,EAAA,IAACI,EAAO,CAAA,GAAG,OACT,SAAAJ,EAAA,IAACK,EAAY,CAAA,GAAGhB,EAAY,CAC9B,CAAA,CAAA,EAEJ,CAEJ,CCzGO,IAAI8C,GAAWC,GAAyB,CAC7C,UAAW,WACX,eAAgBC,EAChB,wBAAyB,OACzB,0BAA2B,CAAC,OAAQ,MAAM,EAC1C,eAAgB,CAAC,CACf,SAAU,QACV,SAAUC,CACd,EAAK,CACD,SAAU,QACV,SAAUC,CACd,CAAG,EACD,cAAeC,EACjB,CAAC,ECnBWC,GAAAA,IACVA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,EAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,EAAN,EAAA,MACAA,EAAAA,EAAA,IAAM,EAAN,EAAA,MAZUA,IAAAA,GAAA,CAAA,CAAA,EAcL,SAASC,IAAe,CAC7B,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAS,EAAE,EAgE5B,MAAA,CACL,KAAAF,EACA,eAhEqB,IAAM,CACrB,MAAAG,EAAUC,EAAW,KAAK,MAAM,IAAI,KAAK,EAAE,YAAY,CAAC,EAAG,KAAK,GAAK,GACrEC,EAASF,EAAQ,MAAM,EAAG,CAAC,EAC3BG,EAAQR,EAAM,OAAOO,CAAM,CAAC,EAC5BE,EAAaJ,EAAQ,MAAM,EAAG,EAAE,EAChCK,EAAeF,EACfG,EAAcN,EAAQ,MAAM,EAAG,CAAC,EAChCO,EAAOF,EAAe,IAAMD,EAAa,KAAYE,EAAc,SACzER,EAAQS,CAAI,CACd,EAwDE,aAtDmB,CAACC,EAAeC,IAA0B,CACvD,MAAAC,EAAY,KAAK,MAAMF,CAAQ,EAC/BG,EAAW,IAAI,KAAKD,CAAS,EACnCC,EAAS,QAAQA,EAAS,QAAQ,EAAI,CAAC,EACjC,MAAAC,EAAY,IAAI,KAAKF,CAAS,EACpCE,EAAU,QAAQA,EAAU,QAAQ,EAAI,EAAE,EACpC,MAAAC,EAAgBF,EAAS,YAAY,EACrCG,EAAiBF,EAAU,YAAY,EAEvCG,EAAYd,EAAW,KAAK,MAAMa,CAAc,EAAG,KAAK,GAAK,GAC7Dd,EAAUC,EAAW,KAAK,MAAM,IAAI,KAAK,EAAE,YAAY,CAAC,EAAG,KAAK,GAAK,GACrEe,EACJ,KAAK,MAAMH,CAAa,EAAI,KAAK,MAAM,IAAI,KAAK,EAAE,YAAY,CAAC,EAC3DZ,EAAW,KAAK,MAAM,IAAI,KAAK,EAAE,YAAY,CAAC,EAAG,KAAK,GAAK,GAC3DA,EAAW,KAAK,MAAMY,CAAa,EAAG,KAAK,GAAK,GAEhDI,EAAYjB,EAAQ,MAAM,EAAG,CAAC,EAC9BkB,EAAWvB,EAAM,OAAOsB,CAAS,CAAC,EAClCE,EAASnB,EAAQ,MAAM,EAAG,EAAE,EAC5BoB,EAAWF,EACXG,EAAUrB,EAAQ,MAAM,EAAG,CAAC,EAE5BE,EAASM,EAAS,MAAM,EAAG,CAAC,EAC5BL,EAAQR,EAAM,OAAOO,CAAM,CAAC,EAC5BE,EAAaI,EAAS,MAAM,EAAG,EAAE,EACjCH,EAAeF,EACfG,EAAcE,EAAS,MAAM,EAAG,CAAC,EAEjCc,EAAaN,EAAS,MAAM,EAAG,CAAC,EAChCO,EAAY5B,EAAM,OAAO2B,CAAU,CAAC,EACpCE,EAAUR,EAAS,MAAM,EAAG,EAAE,EAC9BS,EAAYF,EACZG,EAAWV,EAAS,MAAM,EAAG,CAAC,EAG9BW,EADa,OAAOzB,CAAM,GAAK,GAAKP,EAAM,CAAC,EAAIA,EAAM,OAAOO,CAAM,EAAI,CAAC,EAEvE0B,EAAYb,EAAU,MAAM,EAAG,CAAC,EAClC,IAAAR,EACAE,GAAQ,IACVF,EAAOF,EAAe,IAAMD,EAAa,KAAYE,EAAc,SAC1DG,GAAQ,IACVF,EAAAH,EAAa,IAAMC,EAAe,IAAMmB,EAAU,IAAMC,EAAY,MAAkBC,EAAW,SAGtGnB,EAAA,KAAK,MAAMO,CAAc,GAAK,KAAK,MAAU,IAAA,KAAA,EAAO,YAAA,CAAa,EAC7DT,EAAe,OAAmBe,EAAW,IAAMD,EAAS,KAAYE,EAAU,SAClFhB,EAAe,OAAmBsB,EAAa,QAAyBC,EAAY,SAE5F9B,EAAQS,CAAI,CACd,CAMA,CACF,CCzEA,SAAwBsB,IAAsB,CACtC,KAAA,CAAE,WAAAC,CAAW,EAAIC,GAAS,EA8ChC,MAAO,CAAE,iBA5CgB,MAAOC,GAAmC,CACjE,KAAM,CAAE,KAAAvB,EAAM,UAAAwB,EAAY,MAAO,MAAAC,EAAO,QAAAC,EAAU,OAAUH,EAC5D,QAAQ,IAAI,iCAAkCvB,EAAMwB,EAAWC,CAAK,EAC9D,MAAAE,EAAaD,GAAW,OAAS1B,GAAQ,MAGzC4B,EADsC,CAAE,IAAK,MAAO,IAAK,OAAQ,IAAK,OAAQ,EAC/CJ,CAAS,EAGxCK,EAAM,KAAK,IAAI,EAIfC,EAAaL,EAAoBD,GAAa,MAAQC,EAH7C,MAG8DD,GAAa,MAAQC,EAFlF,OAEoGA,EADnG,OACU,OACrBM,EAAkBD,EAAgB,OAAO,KAAK,MAAMD,EAAM,IAAOC,CAAS,CAAC,EAA7C,EAM9BE,EAAUC,GAJ2BN,EACvC,CAAE,SAAU3B,EAAM,SAAU4B,EAAkB,eAAAG,CAAe,EAC7D,CAAE,SAAU/B,EAAM,SAAU4B,EAAkB,QAAAF,EAAS,eAAAK,CAAe,EAEpCG,EAAQ,EAGxCC,EAAM,MAAMd,EAFFM,EAAaS,GAA0BC,GAEjB,MAAOL,CAAO,EAC5C,QAAA,IAAI,kCAAmCG,CAAG,EAelD,MAAMG,EAAY,CAAC,KAbHH,GAAA,YAAAA,EAAK,OAAQ,CAAA,GAAI,IAAK7F,GAAc,CAClD,MAAMiG,EAAW,IAAI,KAAKjG,EAAK,UAAY,GAAI,EAAE,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EAAI,IAEzEkG,EAAa,OAAOD,EAAS,MAAM,EAAG,CAAC,CAAC,EACxCE,EAAavD,EAAMsD,CAAU,EAE5B,MAAA,CACL,IAAK,OAAOlG,EAAK,KAAK,EACtB,KAAMiG,EACN,MAAOf,IAAc,MAAQiB,EAAaC,GAAkBH,CAAQ,CACtE,CAAA,CACD,CAE2B,EAAE,QAAQ,EAC9B,eAAA,IAAI,qCAAsCD,CAAS,EACpDA,CACT,CAE0B,CAC5B,CCvDA,MAAMK,GAAc,CAAC,CACnB,KAAAC,EACA,cAAAC,EACA,QAAAC,EACA,SAAAC,EAAW,OACb,IAKM,CACJ,KAAM,CAACC,EAAWC,CAAY,EAAI3D,EAAAA,SAAS,EAAE,EACvC4D,EAAmBC,GAAW,CAClC,GAAIA,GAAKA,EAAE,eAAiBA,EAAE,cAAc,OAAQ,CAClD,MAAMrD,EAAOqD,EAAE,cAAc,CAAC,EAAE,QAAQ,KACxCN,EAAcM,EAAE,cAAc,CAAC,EAAE,OAAO,EACxC,MAAM1D,EAASK,EAAK,MAAM,EAAG,CAAC,EACxBJ,EAAQR,EAAM,OAAOO,CAAM,CAAC,EAC5B2D,EAAMtD,EAAK,MAAM,EAAG,EAAE,EACtBuD,EAAQ3D,EACR4D,EAAOxD,EAAK,MAAM,EAAG,CAAC,EAC5BmD,EAAaG,EAAM,IAAMC,EAAQ,IAAMC,CAAI,CAAA,CAE/C,EAEMC,EAAmB,IAAM,CAC7BV,EAAc,IAAI,CACpB,GAEiBD,GAAA,YAAAA,EAAM,QAAS,GAAI,KAAK,MAAM,KAAK,IAAI,GAAGA,EAAK,IAAKtG,GAAcA,EAAK,GAAG,CAAC,CAAC,EAC7F,MAAMkH,EAAW,KAAK,KAAK,KAAK,IAAI,GAAGZ,EAAK,IAAKtG,GAAcA,EAAK,GAAG,CAAC,CAAC,EAEzE,aACGmH,GAAoB,CAAA,MAAM,OAAO,OAAO,OACvC,SAACjH,EAAAA,KAAAoC,GAAA,CAAS,eAAe,MAAM,KAAAgE,EAAY,YAAaM,EAAiB,aAAcK,EAAkB,WAAY,GAClH,SAAA,CAAA,CAACT,GAAYrG,EAAA,IAAAsC,EAAA,CAAM,KAAK,WAAW,QAAQ,QAAQ,WAAY,GAAI,SAAU,GAAO,SAAU,GAAO,KAAMtC,MAACiH,IAAoB,CAAA,EAAI,EACpIF,GAAY/G,EAAA,IAACuC,EAAM,CAAA,OAAQ,CAAC,EAAGwE,EAAW,IAAI,EAAG,KAAM,GAAM,SAAU,GAAO,SAAU,GAAO,EAE/F/G,EAAA,IAAAkH,GAAA,CAAQ,QAASlH,EAAA,IAACmH,IAAa,MAAOb,IAAa,QAAUC,EAAY,EAAI,CAAA,EAAI,OAAQvG,EAAAA,IAACoH,IAAiB,CAAA,EAAI,QAE/G/E,EAAI,CAAA,QAAQ,MAAM,KAAK,UAAU,kBAAmB,EAAO,CAAA,CAAA,CAAA,CAC9D,CACF,CAAA,CAEJ,EAIA,SAAS+E,GAAiBtC,EAAa,SACrC,KAAM,CAAE,EAAAuC,EAAG,EAAAC,EAAG,MAAAC,EAAO,OAAAC,EAAQ,QAAAC,GAAY3C,EAErC,GAAA,CAAC2C,GAAW,EAACA,GAAA,MAAAA,EAAU,KAAM,GAACC,GAAA9H,EAAA6H,GAAA,YAAAA,EAAU,KAAV,YAAA7H,EAAc,UAAd,MAAA8H,EAAuB,KAAK,OAE9D,MAAMC,EAAIJ,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,GAAKA,EAAQ,EAAIA,EAAQ,GAAKA,EAAQ,EAAIA,EAAQ,EAE3H,aACG,IACC,CAAA,SAAAvH,EAAAA,IAAC,OAAK,CAAA,MAAOuH,EAAQI,EAAG,OAAAH,EAAgB,EAAGH,EAAIM,EAAI,EAAG,KAAK,wBAAwB,EAAGL,EAAI,CAAG,CAAA,EAC/F,CAEJ","x_google_ignoreList":[3]}