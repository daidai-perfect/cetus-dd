import{k as F,j as h,as as p,n as v,d as k,aK as N,aP as b,m as P,w as S,ar as O,Q as R,bg as X,bh as G}from"./index-BnmCMmyx.js";import{u as E}from"./useToken-C59GtM4K.js";import{a as i}from"./vendor-BulRdKUe.js";import{u as M}from"./index-4kM3JsjZ.js";function q(){const{xCetusSdk:t}=F(),{currentAccount:e}=h(),o=i.useRef(e==null?void 0:e.address);i.useEffect(()=>{o.current=e==null?void 0:e.address},[e==null?void 0:e.address]);const{setLockCetusListLoading:n,clearData:s,setLockCetusList:l}=p();return{fetchOwnerLockCetusList:async(r=e==null?void 0:e.address)=>{if(!r){n(!1),s();return}try{n(!0);const a=await t.XCetusModule.getOwnerRedeemLockList(r);console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ lockList:",a,r),r===o.current&&(a.sort((g,m)=>g.locked_until_time-m.locked_until_time),l(a))}catch(a){console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ error:",a)}finally{n(!1)}}}}function B(){const{xCetusSdk:t}=F(),{setDividendRewardList:e}=p();return{fetchVeNFTDividendInfo:async n=>{try{const s=await t.XCetusModule.getVeNFTDividendInfo(n);console.log("ðŸš€ ~ file: useXCetusHelper.ts:62 ~ fetchVeNFTDividendInfo ~ dividendInfo:",s),s&&e(s.rewards)}catch(s){console.log("ðŸš€ ~ fetchVeNFTDividendInfo ~ error:",s,n)}}}}function Q(){const{xCetusSdk:t}=F(),{currentAccount:e}=h(),{setVeNFTLoading:o,clearData:n,setVeNFT:s}=p();return{fetchOwnerVeNFT:async(c=e==null?void 0:e.address,r)=>{if(!c){o(!1),n();return}o(!0);try{const a=await t.XCetusModule.getOwnerVeNFT(c,r);if(console.log("ðŸš€ ~ fetchOwnerVeNFT ~ veNFT:",a),a)return s(a,c),a}catch(a){console.log("ðŸš€ ~ fetchOwnerVeNFT ~ error:",a)}finally{o(!1)}}}}function U(){const{dividendManager:t}=p(),[e,o]=i.useState(),[n,s]=i.useState(),l=c=>{const r=Date.now()/1e3,{start_time:a,interval_day:g}=c,m=Number(O.getNextStartTime(c).toString()),C=S.env=="testnet"?Math.ceil((r-a)/(g*60)):Math.ceil((r-a)/(g*24*3600));o(C),s(m)};return i.useEffect(()=>{t&&l(t)},[t]),{currentPeriod:e,nextStartTime:n,calculateCurrPeriod:l}}function W(t,e){const{fetchTokenInfo:o}=E(),{getTokenAmountValue:n}=v(),{coinPriceObj:s}=P(),[l,c]=i.useState("0"),r=i.useCallback(async()=>{if(!(!t||!e))try{const a=t.bonus,g=a.map(w=>N(w.name,!1)),m=await o(g),C=a.map(w=>{const L=N(w.name,!1),u=m==null?void 0:m.get(L);if(u){const d=b(w.value,u.decimals).toString();return n(L,d)}return"0"}).reduce((w,L)=>w.add(L),k(0)),y=n(S.cetus_coin.coin_type,b(e,9).toString()),f=k(y).gt(0)?C.div(7).mul(365).div(y).mul(100).toFixed(2):"0";c(Number(f)>0&&Number(f)<.01?"0.01":f.toString())}catch(a){console.error("Error calculating APR:",a),c("0.01")}},[t==null?void 0:t.bonus,e,s]);return M(()=>{r()},[t==null?void 0:t.bonus,e,s]),{cetusApr:l}}function z(t){const{dividendRewardList:e}=p(),{fetchTokenInfo:o}=E(),{getTokenAmountValue:n}=v(),[s,l]=i.useState([]),[c,r]=i.useState([]),[a,g]=i.useState("0"),m=i.useCallback(async()=>{let C=k(0);const y=e.filter(u=>!(u.period===t||u.rewards.find(d=>k(d.amount).eq(0))));console.log("ðŸš€ ~ file: useXCetusHelper.ts:107 ~ calculateRewards ~ filteredList:",{filteredList:y,dividendRewardList:e,currentPeriod:t}),r(y);const f={},w=y.flatMap(u=>u.rewards.map(d=>N(d.coin_type,!1))),L=await o(w);y.forEach(u=>{for(const d of u.rewards){const T=N(d.coin_type,!1),x=L==null?void 0:L.get(T);if(x){const V=b(d.amount,x.decimals).toString(),_=n(T,V);C=C.add(_),f[T]=f[T]?{...f[T],amount:k(f[T].amount).add(V).toString(),value:k(f[T].value).add(_).toString()}:{amount:V,coin_type:T,value:_}}}}),l(Object.values(f).filter(u=>k(u.amount).gt(0)).sort((u,d)=>k(d.value).sub(u.value).toNumber())),g(C.toString())},[e,n,t]);return i.useEffect(()=>{t&&m()},[e,t]),{summaryRewardList:s,rewardList:c,totalRewardValue:a}}const j=`${S.xcetus_sdk_options.xcetus.package_id}::xcetus::VeNFT`,A=`${S.xcetus_sdk_options.xcetus.package_id}::lock_coin::LockedCoin<${S.cetus_coin.coin_type}>`;function I(t){let e;return t.forEach(o=>{if(o){const n=R(X(o)).source_address;if(n===j&&o.data&&o.data.content){const{fields:s}=o.data.content;return e={...G(o),id:s.id.id,index:s.index,type:n,xcetus_balance:s.xcetus_balance},e}}}),e}async function J(t,e){const o=[];for(let n=0;n<t.length;n++){const s=t[n];if(s&&R(X(s)).source_address===A&&s.data){const c=O.buildLockCetus(s.data.content);c.xcetus_amount=await e.XCetusModule.getXCetusAmount(c.id),o.push(c)}}return o}export{j as X,A as a,I as b,J as c,Q as d,B as e,U as f,z as g,W as h,q as u};
//# sourceMappingURL=useXCetusHelper-DrgeoiKB.js.map
