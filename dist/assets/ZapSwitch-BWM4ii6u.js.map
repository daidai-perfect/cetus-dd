{"version":3,"file":"ZapSwitch-BWM4ii6u.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_trimmedEndIndex.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseTrim.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/toNumber.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/now.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/debounce.js","../../src/store/liquidity/addLiquidity.ts","../../src/store/zap/index.ts","../../src/hooks/zap/useZapSubmit.ts","../../src/components/zap/ZapSubmiteInfo.tsx","../../src/assets/images/bg_alerts@2x.png","../../src/components/position/details/RangeAlerts.tsx","../../src/hooks/liquidity/useGetCurrentPrice.ts","../../src/hooks/pool/useGetContractPoolInfo.ts","../../src/components/zap/ZapTabs.tsx","../../src/hooks/zap/useZap.ts","../../src/components/zap/ZapDeposite.tsx","../../src/components/zap/ZapSwitch.tsx"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import { TokensMap } from '@/types'\nimport { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface AddLiquidityState {\n  fromAmount: string\n  setFromAmount: (value: string) => void\n  fromAmountValue: string\n  setFromAmountValue: (value: string) => void\n  toAmount: string\n  setToAmount: (value: string) => void\n  toAmountValue: string\n  setToAmountValue: (value: string) => void\n  liquidityAmount: string\n  setLiquidityAmount: (value: string) => void\n  byAmountIn: boolean\n  tokenMaxA: string\n  setTokenMaxA: (value?: string) => void\n  tokenMaxB: string\n  setTokenMaxB: (value?: string) => void\n  setByAmountIn: (value: boolean) => void\n  isTokenA: boolean\n  setIsTokenA: (value: boolean) => void\n  percentMap: TokensMap\n  setPercentMap: (value: TokensMap) => void\n  isFullRange: boolean\n  setIsFullRange: (value: boolean) => void\n  fromToken: Token | undefined\n  setFromToken: (token?: Token) => void\n  fromTokenLock: boolean\n  setFromTokenLock: (lock: boolean) => void\n  toToken: Token | undefined\n  setToToken: (token?: Token) => void\n  toTokenLock: boolean\n  setToTokenLock: (lock: boolean) => void\n  totalAmount: string | undefined\n  setTotalAmount: (value?: string) => void\n  autoStakePosition: boolean\n  setAutoStakePosition: (autoStake: boolean) => void\n  isFarmRewardsRange: boolean\n  setIsFarmRewardsRange: (isRange: boolean) => void\n  resetAddLiquidity: () => void\n  useZapIn: boolean\n  setUseZapIn: (value: boolean) => void\n  confirmModalOpen: boolean\n  setConfirmModalOpen: (value: boolean) => void\n  nftOpen: boolean\n  setNftOpen: (value: boolean) => void\n  relatedPosId: string\n  setRelatedPosId: (value: string) => void\n}\n\nconst store: StateCreator<AddLiquidityState> = (set, get) => ({\n  fromAmount: '',\n  setFromAmount: (value: string) => {\n    set(() => ({\n      fromAmount: value\n    }))\n  },\n  fromAmountValue: '',\n  setFromAmountValue: (value: string) => {\n    set(() => ({\n      fromAmountValue: value\n    }))\n  },\n  toAmount: '',\n  setToAmount: (value: string) => {\n    set(() => ({\n      toAmount: value\n    }))\n  },\n  toAmountValue: '',\n  setToAmountValue: (value: string) => {\n    set(() => ({\n      toAmountValue: value\n    }))\n  },\n  liquidityAmount: '',\n  setLiquidityAmount: (value: string) => {\n    set(() => ({\n      liquidityAmount: value\n    }))\n  },\n  tokenMaxA: '',\n  setTokenMaxA: (value?: string) => {\n    set(() => ({\n      tokenMaxA: value\n    }))\n  },\n  tokenMaxB: '',\n  setTokenMaxB: (value?: string) => {\n    set(() => ({\n      tokenMaxB: value\n    }))\n  },\n  byAmountIn: true,\n  setByAmountIn: (value: boolean) => {\n    set(() => ({\n      byAmountIn: value\n    }))\n  },\n\n  isTokenA: true,\n  setIsTokenA: (value: boolean) => {\n    set(() => ({\n      isTokenA: value\n    }))\n  },\n  percentMap: { percentA: '0', percentB: '0' },\n  setPercentMap: (value: TokensMap) => {\n    set(() => ({\n      percentMap: value\n    }))\n  },\n  isFullRange: false,\n  setIsFullRange: (value: boolean) => {\n    set(() => ({\n      isFullRange: value\n    }))\n  },\n  fromToken: undefined,\n  setFromToken: (token?: Token) => {\n    set(() => ({\n      fromToken: token\n    }))\n  },\n  fromTokenLock: false,\n  setFromTokenLock: (lock: boolean) => {\n    set(() => ({\n      fromTokenLock: lock\n    }))\n  },\n  toToken: undefined,\n  setToToken: (token?: Token) => {\n    set(() => ({\n      toToken: token\n    }))\n  },\n  toTokenLock: false,\n  setToTokenLock: (lock: boolean) => {\n    set(() => ({\n      toTokenLock: lock\n    }))\n  },\n  totalAmount: undefined,\n  setTotalAmount: (value?: string) => {\n    set(() => ({\n      totalAmount: value\n    }))\n  },\n  autoStakePosition: false,\n  setAutoStakePosition: (autoStake: boolean) => {\n    set(() => ({\n      autoStakePosition: autoStake\n    }))\n  },\n  isFarmRewardsRange: false,\n  setIsFarmRewardsRange: (isRange: boolean) => {\n    set(() => ({\n      isFarmRewardsRange: isRange\n    }))\n  },\n  useZapIn: false,\n  setUseZapIn: (value: boolean) => {\n    set(() => ({\n      useZapIn: value\n    }))\n  },\n  confirmModalOpen: false,\n  setConfirmModalOpen: (value: boolean) => {\n    set(() => ({\n      confirmModalOpen: value\n    }))\n  },\n  nftOpen: false,\n  setNftOpen: (value: boolean) => {\n    set(() => ({\n      nftOpen: value\n    }))\n  },\n  relatedPosId: '',\n  setRelatedPosId: (value: string) => {\n    set(() => ({\n      relatedPosId: value\n    }))\n  },\n  resetAddLiquidity: () => {\n    set(() => ({\n      isFarmRewardsRange: false,\n      autoStakePosition: false,\n      totalAmount: undefined,\n      fromTokenLock: false,\n      fromToken: undefined,\n      toTokenLock: false,\n      toToken: undefined,\n      isFullRange: false,\n      percentMap: { percentA: '0', percentB: '0' },\n      fromAmount: '',\n      toAmount: '',\n      fromAmountValue: '',\n      toAmountValue: '',\n      liquidityAmount: '',\n      byAmountIn: true,\n      isTokenA: true,\n      useZapIn: false,\n      nftOpen: false,\n      relatedPosId: ''\n    }))\n  }\n})\n\nconst useAddLiquidityStore = create(store)\nexport default useAddLiquidityStore\n","import { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface zapState {\n  currentTokens: Token[]\n  setCurrentTokens: (data: Token[]) => void\n  zapAmount: string\n  setZapAmount: (value: string) => void\n  zapAmountRate: string\n  setZapAmountRate: (value: string) => void\n  currentZapToken: Token | undefined\n  setCurrentZapToken: (value: Token) => void\n  zapTokenBalance: any\n  setZapTokenBalance: (value: any) => void\n  preDepositeData: any\n  setPreDepositeData: (data: any) => void\n  isPreLoading: boolean\n  setIsPreLoading: (value: any) => void\n  zapApiPool: any\n  setZapApiPool: (data: any) => void\n  lower: number\n  setLower: (value: number) => void\n  upper: number\n  setUpper: (value: number) => void\n  liquidity: string\n  setLiquidity: (value: string) => void\n  zapCurrPriceData: any\n  setZapCurrPriceData: (data: any) => void\n  zapSlideValue: number\n  setZapSlideValue: (value: number | string) => void\n  resetZapData: () => void\n  posOriginAmounts: any\n  setPosOriginAmounts: (data: any) => void\n}\n\nconst store: StateCreator<zapState> = (set, get) => ({\n  currentTokens: [],\n  setCurrentTokens: (data: Token[]) => {\n    set(() => ({\n      currentTokens: data\n    }))\n  },\n  zapAmount: '',\n  setZapAmount: (value: string) => {\n    set(() => ({\n      zapAmount: value\n    }))\n  },\n  currentZapToken: undefined,\n  setCurrentZapToken: (value: Token) => {\n    set(() => ({\n      currentZapToken: value\n    }))\n  },\n  zapAmountRate: '',\n  setZapAmountRate: (value: string) => {\n    set(() => ({\n      zapAmountRate: value\n    }))\n  },\n  zapTokenBalance: undefined,\n  setZapTokenBalance: (value: any) => {\n    set(() => ({\n      zapTokenBalance: value\n    }))\n  },\n  isPreLoading: false,\n  setIsPreLoading: (value: any) => {\n    set(() => ({\n      isPreLoading: value\n    }))\n  },\n  preDepositeData: undefined,\n  setPreDepositeData: (data: any) => {\n    set(() => ({\n      preDepositeData: data,\n      isPreLoading: false\n    }))\n  },\n  zapApiPool: undefined,\n  setZapApiPool: (data: any) => {\n    set(() => ({\n      zapApiPool: data\n    }))\n  },\n  lower: 0,\n  setLower: (value: number) => {\n    set(() => ({\n      lower: value\n    }))\n  },\n  upper: 0,\n  setUpper: (value: number) => {\n    set(() => ({\n      upper: value\n    }))\n  },\n  liquidity: '',\n  setLiquidity: (value: string) => {\n    set(() => ({\n      liquidity: value\n    }))\n  },\n  zapCurrPriceData: {},\n  setZapCurrPriceData: (data: any) => {\n    set(() => ({\n      zapCurrPriceData: data\n    }))\n  },\n  zapSlideValue: 0,\n  setZapSlideValue: (value: number | string) => {\n    set(() => ({\n      zapSlideValue: Number(value === '--' ? 0 : value)\n    }))\n  },\n  posOriginAmounts: {},\n  setPosOriginAmounts: (data: any) => {\n    set(() => ({\n      posOriginAmounts: data\n    }))\n  },\n  resetZapData: () => {\n    set(() => ({\n      zapAmount: '',\n      zapAmountRate: '',\n      lower: 0,\n      upper: 0,\n      preDepositeData: undefined,\n      isPreLoading: false,\n      liquidity: '',\n      zapSlideValue: 0,\n      posOriginAmounts: {}\n    }))\n  }\n})\n\nconst useZapStore = create(store)\nexport default useZapStore\n","import { FreshProgressRef } from '@/components/swap/FreshProgressV2'\nimport useGlobalStore from '@/store/common/global'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport useZapStore from '@/store/zap/index'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { bnToAmount, d, fixDown, formatNumberWithDown, getBalanceChanges, textEllipses } from '@cetus/utils'\nimport { debounce } from 'lodash-es'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\n\nexport default function useZapSubmit(type = 'Deposit') {\n  const {\n    zapAmount,\n    currentZapToken,\n    zapAmountRate,\n    zapTokenBalance,\n    isPreLoading,\n    preDepositeData,\n    zapApiPool,\n    setIsPreLoading,\n    lower,\n    upper,\n    liquidity,\n    zapCurrPriceData,\n    setPreDepositeData,\n    zapSlideValue\n  } = useZapStore()\n  console.log('🚀 ~ useZapSubmit ~ zapCurrPriceData:', zapCurrPriceData)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { setConfirmModalOpen } = useAddLiquidityStore()\n  const { zapSdk } = usePeripherySDKStore()\n  const { zapSlippage, slippage } = useGlobalStore()\n  const [uuid, setUuid] = useState<string>('')\n  const [zapNotAvailable, setZapNotAvailable] = useState<boolean>(false)\n\n  const { getTokenPrice } = useTokenPrice()\n\n  const tokenAPrice = getTokenPrice(zapApiPool?.tokenA?.coin_type)\n  const tokenBPrice = getTokenPrice(zapApiPool?.tokenB?.coin_type)\n\n  const marketPrice = useMemo(() => {\n    if (tokenAPrice && tokenBPrice) {\n      return d(tokenAPrice.price).div(tokenBPrice.price).toString()\n    }\n    return undefined\n  }, [tokenAPrice?.price, tokenBPrice?.price])\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: type === 'Withdraw' ? 'Zap Out' : 'Zap In',\n      disabled: false\n    }\n\n    // if (isPreLoading) {\n    //   btnInfo.disabled = true\n    //   return btnInfo\n    // }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!zapAmount || (zapAmount && !+zapAmount)) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //判断余额\n    if (d(zapAmount).gt(zapTokenBalance?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(zapTokenBalance?.symbol, 10)} Balance`\n      return btnInfo\n    }\n\n    if (d(zapAmountRate).gt(10000) || (d(zapAmountRate).gt(0) && d(zapAmountRate).lt(0.0001))) {\n      btnInfo.disabled = true\n    }\n\n    return btnInfo\n  }, [currentAccount?.address, zapAmount, currentZapToken?.coin_type, isPreLoading, type, zapTokenBalance?.balanceFormat])\n\n  const handleZapIn = debounce(\n    () => {\n      if (!currentAccount) {\n        onWalletModal(true)\n      } else {\n        setConfirmModalOpen(true)\n      }\n    },\n    300,\n    {\n      leading: true,\n      trailing: false\n    }\n  )\n\n  const getSubmitBaseInfo = () => {\n    const amountA = preDepositeData?.amount_a\n    const amountB = preDepositeData?.amount_b\n    const tokenA = zapApiPool?.tokenA\n    const tokenB = zapApiPool?.tokenB\n    const displayTokenA = zapApiPool?.displayTokenA\n    const displayTokenB = zapApiPool?.displayTokenB\n    const dispalyAmountA = bnToAmount(!zapApiPool?.isReverse ? amountA : amountB, !zapApiPool?.isReverse ? tokenA?.decimals : tokenB?.decimals)\n    const dispalyAmountB = bnToAmount(!zapApiPool?.isReverse ? amountB : amountA, !zapApiPool?.isReverse ? tokenB?.decimals : tokenA?.decimals)\n\n    return {\n      amountA,\n      amountB,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      dispalyAmountA,\n      dispalyAmountB\n    }\n  }\n\n  const getZapDepositToastInfo = () => {\n    const { displayTokenA, displayTokenB, dispalyAmountA, dispalyAmountB } = getSubmitBaseInfo()\n    // toDo: 是否为单边，可能还是需要用价格区间判断后得到fromTokenLock, toTokenLock, 暂直接用数量判断\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description =\n          !dispalyAmountA && !dispalyAmountB\n            ? `Add ${dispalyAmountA} ${displayTokenA?.symbol} and ${dispalyAmountB} ${displayTokenB?.symbol}`\n            : !dispalyAmountA\n              ? `Add ${dispalyAmountA} ${displayTokenA?.symbol}`\n              : !dispalyAmountB\n                ? `Add ${dispalyAmountB} ${displayTokenB?.symbol}`\n                : 'Add Liquidity'\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          let amountAF = dispalyAmountA\n          let amountBF = dispalyAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || dispalyAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || dispalyAmountB\n          }\n          const description =\n            !dispalyAmountA && !dispalyAmountB\n              ? `Add ${amountAF} ${displayTokenA?.symbol} and ${amountBF} ${displayTokenB?.symbol}`\n              : !dispalyAmountA && dispalyAmountB\n                ? `Add ${amountAF} ${displayTokenA?.symbol}`\n                : !dispalyAmountB && dispalyAmountA\n                  ? `Add ${amountBF} ${displayTokenB?.symbol}`\n                  : 'Add Liquidity'\n\n          info.toastDescriptionContent = description\n          info.modalDescriptionText = description\n          info.toastTitleText = 'Supplied Successful'\n        }\n\n        return info\n      }\n    }\n\n    return toastInfo\n  }\n\n  const getZapDepositTx = async (lower?: any, upper?: any, isFarm?: boolean, posObj?: any) => {\n    console.log('🚀 ~ getZapDepositTx ~ isFarm:', isFarm)\n    const { tokenA, tokenB } = getSubmitBaseInfo()\n\n    // transactionConfirmation(toastInfo)\n\n    const params: any = {\n      deposit_obj: preDepositeData,\n      pool_id: zapApiPool?.poolAddress,\n      coin_type_a: tokenA?.coin_type,\n      coin_type_b: tokenB?.coin_type,\n      tick_lower: lower,\n      tick_upper: upper,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage)\n    }\n\n    if (posObj) {\n      params['pos_obj'] = posObj\n    }\n\n    if (isFarm) {\n      params['farms_pool_id'] = zapApiPool?.farmsPoolAddress\n    }\n\n    console.log('getZapTx buildDepositPayload params: ', params)\n\n    const tx = await zapSdk.Zap.buildDepositPayload(params)\n    console.log('🚀 ~ getZapTx ~ tx:', tx)\n\n    // const res = await signAndExecuteTransaction(tx, toastInfo, {\n    //   useDevInspect: true,\n    //   useMev: mevProtect,\n    //   showSuccessModal: false,\n    //   useFastMode: transactionMode === 'Fast Mode',\n    //   maxCapForGas,\n    //   customGasPrice\n    // })\n\n    return tx\n  }\n\n  const getZapWithdrawToastInfo = (showDisplayTokenALock: boolean, showDisplayTokenBLock: boolean) => {\n    const { displayTokenA, displayTokenB, dispalyAmountA, dispalyAmountB } = getSubmitBaseInfo()\n\n    const toastInfo = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = `Withdraw ${formatNumberWithDown(zapAmount, currentZapToken?.decimals)} ${currentZapToken?.symbol}`\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          let amountAF = dispalyAmountA\n          let amountBF = dispalyAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || dispalyAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || dispalyAmountB\n          }\n\n          info.toastDescriptionContent = ''\n          info.modalDescriptionText = ''\n          info.toastTitleText = 'Remove Liquidity Successful'\n        }\n\n        return info\n      }\n    }\n\n    return toastInfo\n  }\n\n  const getZapWithdrawTx = async (posId: string, liquidity: string, lower: any, upper: any, collect_rewarder_types: any, isFarm?: boolean) => {\n    console.log('🚀 ~ getZapWithdrawTx ~ isFarm:', isFarm)\n    console.log('🚀 ~ useZapSubmit ~ getZapWithdrawTx preDepositeData:', preDepositeData)\n    const { tokenA, tokenB } = getSubmitBaseInfo()\n\n    const params: any = {\n      withdraw_obj: preDepositeData,\n      pool_id: zapApiPool?.poolAddress,\n      pos_id: posId,\n      close_pos: preDepositeData?.burn_liquidity === liquidity ? true : false,\n      collect_fee: true,\n      collect_rewarder_types,\n      coin_type_a: tokenA?.coin_type,\n      coin_type_b: tokenB?.coin_type,\n      tick_lower: lower,\n      tick_upper: upper,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage)\n    }\n\n    if (isFarm) {\n      params['farms_pool_id'] = zapApiPool?.farmsPoolAddress\n    }\n    console.log('🚀 ~ useZapSubmit ~ getZapWithdrawTx params:', params)\n\n    const tx = await zapSdk.Zap.buildWithdrawPayload(params)\n\n    return tx\n  }\n\n  const preZapParamsRef = useRef<any>({})\n  const zapProgressRef = useRef<FreshProgressRef>(null)\n  const zapUuidRef = useRef<string>('')\n\n  useEffect(() => {\n    preZapParamsRef.current = {\n      currentZapToken,\n      zapApiPool,\n      zapAmount,\n      currentSqrtPrice: zapCurrPriceData?.currentSqrtPrice,\n      lower,\n      upper,\n      liquidity,\n      zapSlippage,\n      zapAmountRate,\n      marketPrice\n    }\n  }, [\n    currentZapToken?.coin_type,\n    zapApiPool?.poolAddress,\n    zapAmount,\n    zapCurrPriceData?.currentSqrtPrice,\n    lower,\n    upper,\n    liquidity,\n    zapSlippage,\n    zapAmountRate,\n    marketPrice\n  ])\n\n  const isMinimumPrecision = useMemo(() => {\n    if (currentZapToken?.decimals && d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).eq(1)) return true\n    return false\n  }, [currentZapToken?.decimals, zapAmount])\n\n  const preZapIn = async (uuid?: string) => {\n    console.log('🚀 ~ preZapIn ~ preZapIn:', preZapIn)\n    const { currentZapToken, zapApiPool, zapAmount, currentSqrtPrice, lower, upper, liquidity, zapSlippage, marketPrice } = preZapParamsRef.current\n\n    setIsPreLoading(true)\n    const isCoinA = currentZapToken?.coin_type === zapApiPool?.tokenA?.coin_type\n    const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n    const coinAmount = fixDown(d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString(), 0)\n    console.log('🚀 ~ preZapIn ~ options.zapSlippage:', slippage, zapSlippage)\n    const options = {\n      pool_id: zapApiPool?.poolAddress,\n      tick_lower: lower,\n      tick_upper: upper,\n      current_sqrt_price: currentSqrtPrice,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage),\n      // mark_price: marketPrice ? (isCoinA ? marketPrice : d(1).div(marketPrice).toString()) : undefined\n      mark_price: marketPrice\n    }\n    console.log('🚀 ~ preZapIn ~ options123:', options)\n\n    const modeOptions = {\n      mode,\n      coin_amount: coinAmount,\n      coin_type_a: zapApiPool?.tokenA?.coin_type,\n      coin_type_b: zapApiPool?.tokenB?.coin_type,\n      coin_decimal_a: zapApiPool?.tokenA?.decimals,\n      coin_decimal_b: zapApiPool?.tokenB?.decimals,\n      max_remain_rate: 0.01\n    }\n    console.log('🚀 ~ preZapIn ~ modeOptions:', modeOptions)\n\n    let res: any\n    try {\n      res = await zapSdk.Zap.preCalculateDepositAmount(options, modeOptions as any)\n      console.log('🚀 ~ preZapIn ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ preZapIn ~ error:', error)\n      setZapNotAvailable(true)\n    }\n\n    if (uuid === zapUuidRef.current) {\n      setPreDepositeData(res)\n    }\n    setIsPreLoading(false)\n  }\n\n  const preZapOut = async (uuid?: string) => {\n    setIsPreLoading(true)\n    const { currentZapToken, zapApiPool, zapAmount, currentSqrtPrice, lower, upper, liquidity, zapSlippage } = preZapParamsRef.current\n\n    const isCoinA = currentZapToken?.coin_type === zapApiPool?.tokenA?.coin_type\n    const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n    const coinAmount = d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString()\n    const options: any = {\n      mode,\n      pool_id: zapApiPool?.poolAddress,\n      tick_lower: lower,\n      tick_upper: upper,\n      current_sqrt_price: currentSqrtPrice,\n      coin_type_a: zapApiPool?.tokenA?.coin_type,\n      coin_type_b: zapApiPool?.tokenB?.coin_type,\n      coin_decimal_a: zapApiPool?.tokenA?.decimals,\n      coin_decimal_b: zapApiPool?.tokenB?.decimals\n    }\n\n    if (d(zapAmount).gte(zapTokenBalance?.balanceFormat)) {\n      options['burn_liquidity'] = liquidity\n    } else {\n      options['burn_liquidity'] = fixDown(d(liquidity).mul(d(zapSlideValue).div(100)).toString(), 0)\n    }\n\n    console.log('🚀 ~ preZapInRemove ~ options:', options)\n\n    let res: any\n    try {\n      res = await zapSdk.Zap.preCalculateWithdrawAmount(options)\n      console.log('🚀 ~ preZapInRemove ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ preZapOut ~ error:', error)\n      setZapNotAvailable(true)\n    }\n\n    if (uuid === zapUuidRef.current) {\n      setPreDepositeData(res)\n    }\n    setIsPreLoading(false)\n  }\n\n  const debouncedPreZapIn = useDebounceFunction(preZapIn, 300)\n  const debouncedPreZapOut = useDebounceFunction(preZapOut, 300)\n\n  useEffect(() => {\n    // if (!Number(zapAmount) || d(zapAmountRate).gt(10000) || d(zapAmountRate).lt(0.0001)) {\n    //   setPreDepositeData(undefined)\n    //   return\n    // }\n    // if (type === 'Deposit') {\n    //   setIsPreLoading(true)\n    //   debouncedPreZapIn()\n    // } else {\n    //   if (zapSlideValue) {\n    //     setIsPreLoading(true)\n    //     debouncedPreZapOut()\n    //   }\n    // }\n    reCalculateZapData()\n  }, [zapAmount, currentZapToken?.coin_type, zapCurrPriceData?.currentSqrtPrice, lower, upper, zapSlideValue, zapAmountRate])\n\n  const handleResetZapProgress = () => {\n    zapProgressRef.current?.reset()\n  }\n\n  const reCalculateZapData = () => {\n    setZapNotAvailable(false)\n    const { zapAmount, zapAmountRate } = preZapParamsRef.current\n    console.log('🚀 ~ reCalculateZapData ~ zapAmount:', zapAmount)\n    console.log('🚀 ~ reCalculateZapData ~ zapAmountRate:', zapAmountRate)\n    console.log('🚀 ~ reCalculateZapData ~ zapAmountRate:', zapAmountRate)\n    if (!Number(zapAmount) || d(zapAmountRate).gt(10000) || d(zapAmountRate).lt(0.0001) || isMinimumPrecision) {\n      const uuid = v4()\n      zapUuidRef.current = uuid\n      setPreDepositeData(undefined)\n      setIsPreLoading(false)\n      return\n    }\n\n    setIsPreLoading(true)\n    const uuid = v4()\n    zapUuidRef.current = uuid\n    if (type == 'Deposit') {\n      debouncedPreZapIn(uuid)\n    } else {\n      debouncedPreZapOut(uuid)\n    }\n  }\n\n  useEffect(() => {\n    handleResetZapProgress()\n  }, [zapAmount, zapApiPool?.poolAddress, type])\n\n  useEffect(() => {\n    return () => {\n      handleResetZapProgress()\n      preZapParamsRef.current = null\n    }\n  }, [])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled,\n    handleZapIn,\n    isPreLoading,\n    getZapDepositToastInfo,\n    getZapDepositTx,\n    getZapWithdrawToastInfo,\n    getZapWithdrawTx,\n    zapProgressRef,\n    handleResetZapProgress,\n    reCalculateZapData,\n    isMinimumPrecision,\n    zapNotAvailable\n  }\n}\n","// import { Item } from '@/components/liquidity/provideLiquidity/common'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\n// import useLiquidityStore from '@/store/liquidity'\n// import usePriceRangeStore from '@/store/liquidity/priceRange'\nimport DepositRatio from '@/components/common/DepositRatio'\nimport FreshProgressV2 from '@/components/swap/FreshProgressV2'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useGlobalStore from '@/store/common/global'\nimport useZapStore from '@/store/zap/index'\nimport { calcCoinProportion, checkFullRange } from '@/utils/pool'\nimport { ErrorTips, MarketSource, MarketType } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { bnToAmount, d, formatCurrencyWithKMB, formatNumberWithDown, formatPrice, textEllipses } from '@cetus/utils'\nimport { Box, Button, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport Slippage from '../common/Slippage'\n\nexport default function ZapSubmiteInfo({\n  action,\n  onClick,\n  hideAmountInfo,\n  otherLoading,\n  isReverse,\n  inConfirmModal,\n  hideDepositRatio\n}: {\n  action: 'Deposit' | 'Withdraw'\n  onClick?: () => void\n  hideAmountInfo?: boolean\n  otherLoading?: boolean\n  isReverse?: boolean\n  inConfirmModal?: boolean\n  hideDepositRatio?: boolean\n}) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { btnDisabled, btnText, handleZapIn, zapProgressRef, reCalculateZapData, isMinimumPrecision, zapNotAvailable } = useZapSubmit(action)\n\n  const handleOnClick = () => {\n    if (!currentAccount) {\n      onWalletModal(true)\n      return\n    }\n    onClick ? onClick() : handleZapIn()\n  }\n\n  const [isOpen, setIsOpen] = useState(false)\n  const { zapSlippage } = useGlobalStore()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const {\n    zapSlideValue,\n    preDepositeData,\n    currentTokens,\n    currentZapToken,\n    zapAmount,\n    isPreLoading,\n    zapApiPool,\n    lower,\n    upper,\n    zapCurrPriceData,\n    posOriginAmounts,\n    zapAmountRate\n  } = useZapStore()\n  const { fromCoin, toCoin } = useMemo(() => {\n    const fromCoin = currentZapToken\n    const toCoin = currentTokens?.filter((item: any) => item?.coin_type !== currentZapToken?.coin_type)?.[0]\n    if (action === 'Withdraw') {\n      return {\n        fromCoin: toCoin,\n        toCoin: fromCoin\n      }\n    } else {\n      return {\n        fromCoin,\n        toCoin\n      }\n    }\n  }, [currentZapToken?.coin_type, currentTokens, action])\n\n  const { fromAmount, toAmount } = useMemo(() => {\n    let fromAmount, toAmount\n    if (preDepositeData && fromCoin?.coin_type && toCoin?.coin_type) {\n      fromAmount = bnToAmount(preDepositeData?.swap_result?.swap_in_amount, fromCoin?.decimals)\n      toAmount = bnToAmount(preDepositeData?.swap_result?.swap_out_amount, toCoin?.decimals)\n    }\n    return {\n      fromAmount,\n      toAmount\n    }\n  }, [preDepositeData, fromCoin?.coin_type, toCoin?.coin_type])\n\n  const { sources, priceImpactTextInfo, showPriceImpactTips } = usePriceImpact(fromCoin, toCoin, fromAmount, toAmount)\n\n  const [isToggle, setIsToggle] = useState(false)\n\n  const handleToggleRate = () => {\n    setIsToggle(!isToggle)\n  }\n\n  const minimumReceived = useMemo(() => {\n    if (toAmount) {\n      return formatNumberWithDown(d(toAmount).sub(d(toAmount).mul(zapSlippage)).toString())\n    }\n    return '--'\n  }, [zapSlippage, toAmount])\n\n  const currentPriceRate = useMemo(() => {\n    return preDepositeData?.swap_result?.swap_price\n  }, [preDepositeData])\n\n  const handleRefresh = () => {\n    console.log('ZapRoute handleRefresh')\n    reCalculateZapData()\n  }\n\n  const {\n    tokenA,\n    tokenB,\n    coinAmountA,\n    coinAmountB,\n    displayCoinAmountA,\n    displayCoinAmountB,\n    displayTokenA,\n    displayTokenB,\n    displayAmountARate,\n    displayAmountBRate,\n    amountARate,\n    amountBRate\n  } = useMemo(() => {\n    let coinAmountA, coinAmountB, tokenA, tokenB, amountARate, amountBRate\n    const isReverse = zapApiPool?.isReverse\n    if (preDepositeData && zapApiPool?.poolAddress) {\n      tokenA = zapApiPool?.tokenA\n      tokenB = zapApiPool?.tokenB\n      coinAmountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n      coinAmountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n      amountARate = getTokenAmountValue(tokenA?.coin_type, coinAmountA)\n      amountBRate = getTokenAmountValue(tokenB?.coin_type, coinAmountB)\n    }\n\n    return {\n      displayCoinAmountA: !isReverse ? coinAmountA : coinAmountB,\n      displayCoinAmountB: !isReverse ? coinAmountB : coinAmountA,\n      displayTokenA: !isReverse ? tokenA : tokenB,\n      displayTokenB: !isReverse ? tokenB : tokenA,\n      displayAmountARate: !isReverse ? amountARate : amountBRate,\n      displayAmountBRate: !isReverse ? amountBRate : amountARate,\n      tokenA,\n      tokenB,\n      coinAmountA,\n      coinAmountB,\n      amountARate,\n      amountBRate\n    }\n  }, [preDepositeData, zapApiPool?.poolAddress])\n\n  const { originPosAmountA, originPosAmountB } = useMemo(() => {\n    let originPosAmountA = ''\n    let originPosAmountB = ''\n    if (zapApiPool?.poolAddress && (posOriginAmounts?.coinAmountA || posOriginAmounts?.coinAmountB)) {\n      const tokenA = zapApiPool?.tokenA\n      const tokenB = zapApiPool?.tokenB\n      originPosAmountA = bnToAmount(posOriginAmounts?.coinAmountA, tokenA?.decimals)\n      originPosAmountB = bnToAmount(posOriginAmounts?.coinAmountB, tokenB?.decimals)\n    }\n\n    return { originPosAmountA, originPosAmountB }\n  }, [posOriginAmounts, zapApiPool?.poolAddress])\n\n  // 占比\n  const [percentMap, setPercentMap] = useState<any>({})\n  useEffect(() => {\n    if (coinAmountA || coinAmountB) {\n      const isFullRange = checkFullRange(lower, upper)\n      const rateMap = calcCoinProportion(coinAmountA || 0, coinAmountB || 0, zapCurrPriceData?.currentPrice, isFullRange)\n      setPercentMap(rateMap)\n    }\n  }, [coinAmountA, coinAmountB, zapCurrPriceData?.currentPrice])\n\n  const { isApp } = useWindowWidth()\n\n  const errorTips = useMemo(() => {\n    if (d(zapAmountRate).gt(10000)) {\n      return 'In Zap mode, each request should be within $10,000.'\n    } else if (d(zapAmountRate).gt(0) && (d(zapAmountRate).lt(0.0001) || isMinimumPrecision)) {\n      return 'The input is too small. Zap mode is not available.'\n    } else if (zapNotAvailable) {\n      return 'Zap mode is not available.'\n    }\n    return ''\n  }, [zapAmountRate, action, isMinimumPrecision, zapNotAvailable])\n\n  return (\n    <>\n      <VStack\n        gap=\"0px\"\n        w=\"100%\"\n        borderRadius=\"16px\"\n        border=\"1px solid\"\n        borderColor={inConfirmModal ? 'rgba(0,0,0,0)' : 'border'}\n        bg={inConfirmModal ? 'none' : 'bg_six'}\n        p={{ base: inConfirmModal ? '0px' : '0px 8px', lg: inConfirmModal ? '0px' : '0px 16px' }}\n      >\n        {!inConfirmModal && (\n          <Button\n            w={{ base: 'calc(100% + 16px)', lg: 'calc(100% + 34px)' }}\n            h=\"52px\"\n            margin=\"-1px -1px 0px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            borderRadius=\"12px\"\n            isDisabled={(isPreLoading || btnDisabled || otherLoading || showPriceImpactTips || !!errorTips) && currentAccount?.address}\n            isLoading={isPreLoading || otherLoading}\n            onClick={handleOnClick}\n          >\n            {btnText}\n          </Button>\n        )}\n\n        {!!Number(zapAmount) && (\n          <VStack w=\"100%\" gap=\"0px\">\n            {errorTips ? (\n              <Box w=\"100%\" p=\"12px 0px\">\n                <ErrorTips tips={errorTips} />\n              </Box>\n            ) : (\n              <>\n                {showPriceImpactTips && (\n                  <Box w=\"100%\" pt=\"12px\">\n                    <ErrorTips tips=\"High price difference. Be cautious before submitting your order.\" />\n                  </Box>\n                )}\n                {inConfirmModal && (\n                  <HStack w=\"100%\" justify=\"space-between\">\n                    <Text fontSize=\"14px\" color=\"text_paragraph\">\n                      Zap Amount\n                    </Text>\n                    <Text fontSize=\"14px\" color=\"text_caption\">\n                      {formatCurrencyWithKMB(zapAmountRate, 2)}\n                    </Text>\n                  </HStack>\n                )}\n                {Number(zapAmount) > 0 && Number(fromAmount) > 0 && (\n                  <VStack w=\"100%\" gap=\"12px\" pt=\"16px\" pb={inConfirmModal ? '0px' : '16px'}>\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <Text fontSize=\"14px\" color=\"text_paragraph\">\n                        Zap Route\n                      </Text>\n                    </HStack>\n                    <VStack\n                      w=\"100%\"\n                      bg={inConfirmModal ? 'bg_secondary' : 'none'}\n                      borderRadius=\"12px\"\n                      p={inConfirmModal ? '0px 12px' : '0px'}\n                      gap={inConfirmModal ? '4px' : '12px'}\n                      border=\"1px solid\"\n                      borderColor={inConfirmModal ? 'border' : 'rgba(0,0,0,0)'}\n                      flexDirection={action === 'Withdraw' ? 'column-reverse' : 'column'}\n                    >\n                      <VStack\n                        w=\"100%\"\n                        align=\"flex-start\"\n                        bg={inConfirmModal ? 'none' : 'button_outline_hov_bg'}\n                        p={inConfirmModal ? '16px 0px' : '16px 12px'}\n                        borderRadius={inConfirmModal ? '0px' : '12px'}\n                        borderBottom=\"1px solid\"\n                        borderColor={inConfirmModal ? 'border' : 'rgba(0,0,0,0)'}\n                      >\n                        <HStack w=\"100%\" align=\"center\">\n                          <VStack\n                            w=\"100%\"\n                            align=\"flex-start\"\n                            onClick={() => {\n                              setIsOpen(!isOpen)\n                            }}\n                          >\n                            <HStack w=\"100%\" justify=\"flex-start\">\n                              {isPreLoading ? (\n                                <Skeleton w=\"100%\" h=\"16px\" />\n                              ) : (\n                                <Text w=\"100%\" fontSize=\"12px\" color=\"text_caption\" textAlign=\"left\">\n                                  Swap {formatNumberWithDown(fromAmount)} {fromCoin?.symbol} for {minimumReceived} {toCoin?.symbol}\n                                </Text>\n                              )}\n                            </HStack>\n                            {isPreLoading ? (\n                              <Skeleton w=\"150px\" h=\"16px\" />\n                            ) : (\n                              <HStack\n                                w=\"100%\"\n                                justify=\"space-between\"\n                                align={{ base: 'flex-start', lg: 'center' }}\n                                flexDirection={{ base: 'column', lg: 'row' }}\n                              >\n                                <HStack gap=\"4px\" justify=\"space-between\" w={{ base: '100%', lg: 'unset' }}>\n                                  <HStack gap=\"4px\">\n                                    <FreshProgressV2\n                                      callbackInterval={20}\n                                      ref={zapProgressRef}\n                                      min={0}\n                                      max={20}\n                                      size=\"14px\"\n                                      noBg={true}\n                                      thickness=\"16px\"\n                                      onClick={handleRefresh}\n                                    />\n                                    <HStack flexWrap=\"wrap\">\n                                      <Text fontSize=\"12px\" color=\"text_paragraph\">\n                                        Price Difference\n                                      </Text>\n                                      <Text color={priceImpactTextInfo?.textColor} fontSize=\"12px\">\n                                        {priceImpactTextInfo?.priceImpactText}\n                                      </Text>\n                                      {sources?.map((source: any) => {\n                                        return <MarketSource key={source} market={source as MarketType} />\n                                      })}\n                                    </HStack>\n                                  </HStack>\n                                  {isApp && (\n                                    <Icon\n                                      xlinkHref=\"#icon-icon_arrow\"\n                                      svgW=\"12px\"\n                                      svgH=\"12px\"\n                                      transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                                    />\n                                  )}\n                                </HStack>\n                                <HStack align=\"center\" gap=\"2px\">\n                                  {inConfirmModal ? (\n                                    <HStack gap=\"4px\">\n                                      <Text fontSize=\"12px\" color=\"text_paragraph\">\n                                        Slippage\n                                      </Text>\n                                      <Text fontSize=\"12px\" color=\"text_caption\">\n                                        {d(zapSlippage).mul(100).toString()}%\n                                      </Text>\n                                    </HStack>\n                                  ) : (\n                                    <Slippage slippageType=\"zap\" toolTipText=\"Slippage Tolerance\" />\n                                  )}\n                                  {!isApp && (\n                                    <Icon\n                                      xlinkHref=\"#icon-icon_arrow\"\n                                      svgW=\"12px\"\n                                      svgH=\"12px\"\n                                      transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                                    />\n                                  )}\n                                </HStack>\n                              </HStack>\n                            )}\n                            {/* {showPriceImpactTips && (\n                              <Text fontSize=\"12px\" color=\"primary_red\" w=\"100%\">\n                                High price difference. Be cautious before submitting your order.\n                              </Text>\n                            )} */}\n                          </VStack>\n                        </HStack>\n                        {isOpen && (\n                          <HStack w=\"100%\" justify=\"space-between\" bg=\"bg_fifth\" h=\"52px\" borderRadius=\"12px\" p=\"0px 8px\">\n                            <Text fontSize=\"12px\" color=\"text_paragraph\">\n                              Swap Rate\n                            </Text>\n                            {isPreLoading ? (\n                              <Skeleton w=\"150px\" h=\"16px\" />\n                            ) : (\n                              <HStack>\n                                {isToggle ? (\n                                  <Text fontSize=\"12px\" color=\"text_caption\">\n                                    1 {toCoin?.symbol} = {formatPrice(1 / currentPriceRate)} {fromCoin?.symbol}\n                                  </Text>\n                                ) : (\n                                  <Text fontSize=\"12px\" color=\"text_caption\">\n                                    1 {fromCoin?.symbol} = {formatPrice(currentPriceRate)} {toCoin?.symbol}\n                                  </Text>\n                                )}\n                                <Icon xlinkHref=\"#icon-icon_swap1\" svgW=\"16px\" svgH=\"16px\" onClick={handleToggleRate} />\n                              </HStack>\n                            )}\n                          </HStack>\n                        )}\n                      </VStack>\n\n                      <VStack\n                        w=\"100%\"\n                        p={inConfirmModal ? '16px 0px' : '16px 12px'}\n                        bg={inConfirmModal ? 'none' : 'button_outline_hov_bg'}\n                        borderRadius=\"12px\"\n                        gap=\"12px\"\n                      >\n                        {hideDepositRatio ? (\n                          <Text w=\"100%\" textAlign=\"left\" fontSize=\"12px\" color=\"text_caption\">\n                            {action === 'Withdraw' ? 'Expected Amounts of Remove' : 'Expected Amounts to Add'}\n                          </Text>\n                        ) : (\n                          <DepositRatio\n                            tokenA={tokenA}\n                            tokenB={tokenB}\n                            percentMap={percentMap}\n                            type=\"zap\"\n                            isLoading={isPreLoading}\n                            isReverse={isReverse}\n                            label=\"Expected Amounts to Add\"\n                          />\n                        )}\n                        <HStack bg=\"text_highlight_opacity.10\" w=\"100%\" h=\"52px\" justify=\"space-between\" align=\"center\" borderRadius=\"12px\">\n                          <PosAmountInfo\n                            token={!isReverse ? tokenA : tokenB}\n                            amount={\n                              !isReverse\n                                ? formatNumberWithDown(zapSlideValue == 100 ? originPosAmountA : coinAmountA)\n                                : formatNumberWithDown(zapSlideValue == 100 ? originPosAmountB : coinAmountB)\n                            }\n                            rate={!isReverse ? amountARate : amountBRate}\n                            loading={isPreLoading}\n                          />\n                          <Box bg=\"bg_fifth\" w=\"1px\" h=\"100%\" />\n                          <PosAmountInfo\n                            token={!isReverse ? tokenB : tokenA}\n                            amount={\n                              !isReverse\n                                ? formatNumberWithDown(zapSlideValue == 100 ? originPosAmountB : coinAmountB)\n                                : formatNumberWithDown(zapSlideValue == 100 ? originPosAmountA : coinAmountA)\n                            }\n                            loading={isPreLoading}\n                            rate={!isReverse ? amountBRate : amountARate}\n                            align=\"right\"\n                          />\n                        </HStack>\n                      </VStack>\n                      {/* )} */}\n                    </VStack>\n                  </VStack>\n                )}\n              </>\n            )}\n          </VStack>\n        )}\n      </VStack>\n    </>\n  )\n}\n\nfunction PosAmountInfo({ token, amount, rate, loading, align = 'left' }: { token: any; amount: any; rate: any; loading: boolean; align?: string }) {\n  return (\n    <HStack flex=\"1\" gap=\"8px\" p=\"12px\" justify=\"flex-start\" flexDirection={align === 'left' ? 'row' : 'row-reverse'}>\n      {loading ? <SkeletonCircle size=\"20px\" /> : <SingleCoinImage imageUrl={token?.logo_url} w=\"20px\" h=\"20px\" />}\n      <VStack align={`flex-${align === 'left' ? 'start' : 'end'}`} gap=\"4px\">\n        {loading ? (\n          <Skeleton w=\"50px\" h=\"14px\" />\n        ) : (\n          <Text fontSize=\"12px\" color=\"text_caption\" textAlign={`${align === 'left' ? 'left' : 'right'}`}>\n            {amount} {textEllipses(token?.symbol, 10)}\n          </Text>\n        )}\n        {loading ? (\n          <Skeleton w={{ base: '70px', lg: '100px' }} h=\"12px\" />\n        ) : (\n          <Text fontSize=\"12px\" color=\"text_paragraph\">\n            {/* {rate && !!+rate ? `${formatCurrencyWithKMB(rate, 2)}` : null} */}\n            {formatCurrencyWithKMB(rate, 2)}\n          </Text>\n        )}\n      </VStack>\n    </HStack>\n  )\n}\n","export default \"__VITE_ASSET__DeOUS1Sq__\"","import bg_alert from '@/assets/images/bg_alerts@2x.png'\nimport useNotifiSubscription from '@/hooks/notifi/useNotifiSubscription'\nimport usePositionStore from '@/store/position'\nimport { useNotifiHelper } from '@cetus/design/src/hook/useNotifi/useNotifiHelper'\nimport { useAccountStore } from '@cetus/stores'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { Button, HStack, StackProps, Switch, Text, VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\ninterface RangeAlertsProps {\n  subscriptionSource: string\n  title?: string\n  description?: string\n  wrapStyle?: StackProps\n}\n\nfunction RangeAlerts({\n  subscriptionSource,\n  title = 'Range Alerts',\n  description = 'Receive alerts via Telegram, SMS, or email when this position goes out of range.',\n  wrapStyle = {}\n}: RangeAlertsProps) {\n  const { getPositionNotifiStatus } = useNotifiHelper()\n  const {\n    isChecked,\n    setIsChecked,\n    notifiAuthenticated,\n    notifiSourceGroups,\n    setIsShowNotifi,\n    notifiSubscriptionLoading,\n    notifiStatus,\n    notifiSources\n  } = useNotifiStore()\n  const { currentAccount } = useAccountStore()\n  const { notifiUnSubscription, notifiSubscription } = useNotifiSubscription()\n  const { currentPosBaseInfo } = usePositionStore()\n  console.log('🚀🚀🚀 ~ RangeAlerts.tsx:29 ~ currentPosBaseInfo:', currentPosBaseInfo)\n  useEffect(() => {\n    console.log('🚀🚀🚀 ~ file: RangeAlerts.tsx:42 ~ notifiSubscriptionLoading:', notifiSubscriptionLoading)\n    if (\n      currentAccount?.address &&\n      subscriptionSource == 'PositionDetail' &&\n      currentPosBaseInfo &&\n      notifiStatus == 'authenticated' &&\n      !notifiSubscriptionLoading\n    ) {\n      const { isSubscription } = getPositionNotifiStatus(currentPosBaseInfo.posId, String(currentPosBaseInfo.index))\n      setIsChecked(isSubscription)\n    }\n  }, [currentAccount, subscriptionSource, currentPosBaseInfo, notifiAuthenticated, notifiSourceGroups, notifiSubscriptionLoading, notifiSources])\n  const { createNotifiSubscriptionVerify } = useNotifiHelper()\n\n  const changeSwitch = async (checked: any) => {\n    setIsChecked(checked)\n    console.log('🚀🚀🚀 ~ RangeAlerts.tsx:46 ~ changeSwitch ~ checked:', checked)\n    if (checked) {\n      const canSubscription = await createNotifiSubscriptionVerify()\n      console.log('🚀🚀🚀 ~ RangeAlerts.tsx:49 ~ changeSwitch ~ canSubscription:', canSubscription)\n      if (!canSubscription) {\n        setIsChecked(false)\n        return false\n      }\n    }\n\n    if (subscriptionSource == 'AddLiquidity') {\n      setIsChecked(checked)\n    } else if (subscriptionSource == 'PositionDetail') {\n      console.log('🚀🚀🚀 ~ changeSwitch ~ checked:', checked)\n      if (checked) {\n        // const canSubscription = await createNotifiSubscriptionVerify()\n        // if (!canSubscription) {\n        //   setIsChecked(false)\n        // } else {\n        const params = {\n          subscriptionSource: 'PositionDetail',\n          position: currentPosBaseInfo?.posId,\n          pool: currentPosBaseInfo?.clmmPool,\n          posIndex: String(currentPosBaseInfo?.index)\n        }\n        notifiSubscription(params)\n        // }\n      } else {\n        notifiUnSubscription(currentPosBaseInfo?.posId, currentPosBaseInfo?.clmmPool, currentPosBaseInfo?.index)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      setIsChecked(false)\n    }\n  }, [])\n\n  return (\n    <HStack w=\"100%\" bgImage={bg_alert} bgSize=\"100% 100%\" p=\"16px\" borderRadius=\"8px\" {...wrapStyle}>\n      <VStack w=\"100%\" gap=\"8px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text color=\"primary\">{title}</Text>\n          {notifiStatus == 'authenticated' ? (\n            <Switch isChecked={isChecked} disabled={notifiSubscriptionLoading} onChange={e => changeSwitch(e.target.checked)} />\n          ) : (\n            <Button w=\"112px\" h=\"28px\" borderRadius=\"8px\" fontWeight=\"500\" fontSize=\"14px\" onClick={() => setIsShowNotifi(true)}>\n              Set up\n            </Button>\n          )}\n        </HStack>\n        <Text color=\"primary_gray\" lineHeight=\"20px\" textAlign=\"left\">\n          {description}\n        </Text>\n      </VStack>\n    </HStack>\n  )\n}\nexport default RangeAlerts\n","import useLiquidityStore from '@/store/liquidity'\nimport { PoolApiInfo } from '@/types'\nimport { d } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport BN from 'bn.js'\n\nexport default function useGetCurrentPrice() {\n  const { setCurrentPriceData } = useLiquidityStore()\n\n  const getCurrentPrice = (currentSqrtPrice: string, apiPoolInfo: PoolApiInfo) => {\n    if (apiPoolInfo.tokenA && apiPoolInfo.tokenB) {\n      const decimalsA = apiPoolInfo.tokenA.decimals\n      const decimalsB = apiPoolInfo.tokenB.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      const reverseCurrentPrice = d(1).div(currentPrice).toString()\n\n      const data = {\n        currentPrice,\n        reverseCurrentPrice,\n        currentSqrtPrice,\n        pool: apiPoolInfo.poolAddress\n      }\n      setCurrentPriceData(data)\n    }\n  }\n\n  return {\n    getCurrentPrice\n  }\n}\n","import useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport { PoolApiInfo, PoolContractInfo } from '@/types'\nimport { getPoolDirection } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport { d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport useGetCurrentPrice from '../liquidity/useGetCurrentPrice'\n\nexport default function useGetContractPoolInfo() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { getTokenListInfo } = useGetToken()\n  const { contractPoolInfo, setContractPoolInfo, setContractPoolInfoLoading, apiPoolInfo, setApiPoolInfo, setApiPoolInfoLoading } =\n    useLiquidityStore()\n  const { setFromToken, setToToken } = useAddLiquidityStore()\n  const { getCurrentPrice } = useGetCurrentPrice()\n\n  const getContractPoolInfo = async (poolAddress: string): Promise<PoolContractInfo | null> => {\n    setContractPoolInfoLoading(true)\n    let poolInfo: PoolContractInfo | null = null\n    try {\n      poolInfo = (await clmmSdk.Pool.getPool(poolAddress)) as unknown as PoolContractInfo\n      console.log(poolAddress, poolInfo, 'poolAddress')\n      console.log('🚀 ~ getContractPoolInfo ~ poolInfo:', {\n        poolInfo,\n        apiPoolInfo\n      })\n\n      // 如果没拿到apiPoolInfo 信息，则用合约信息转化一份\n      if (apiPoolInfo?.displayTokenA === undefined) {\n        const apiPool = await formatApiPoolByContractPool(poolInfo)\n\n        if (apiPool) {\n          setApiPoolInfo(apiPool)\n          setApiPoolInfoLoading(false)\n          getCurrentPrice(poolInfo?.current_sqrt_price, apiPool)\n          setFromToken(apiPool?.displayTokenA)\n          setToToken(apiPool?.displayTokenB)\n        }\n      }\n    } catch (error) {\n      console.log('getContractPoolInfo ~ error:', error)\n    } finally {\n      setContractPoolInfoLoading(false)\n    }\n    if (!contractPoolInfo) {\n      setContractPoolInfo(poolInfo || null)\n\n      return poolInfo\n    } else {\n      if (poolInfo) {\n        setContractPoolInfo(poolInfo)\n        return poolInfo\n      } else {\n        return contractPoolInfo\n      }\n    }\n  }\n\n  async function formatApiPoolByContractPool(cPool: PoolContractInfo) {\n    const coinTypeList = [cPool.coinTypeA, cPool.coinTypeB]?.filter(Boolean)\n    const tokenMap = await getTokenListInfo(coinTypeList)\n    const tokenA = tokenMap?.get(cPool.coinTypeA)\n    const tokenB = tokenMap?.get(cPool.coinTypeB)\n\n    if (tokenA && tokenB) {\n      const name = `${tokenA?.symbol} - ${tokenB?.symbol}`\n      const feeRate = d(cPool.fee_rate).div(100).toString()\n      const fee = d(cPool.fee_rate).div(10000).toString()\n      const feeDisplay = d(feeRate).div(100).toString() + '%'\n      const isReverse = !getPoolDirection(cPool.coinTypeA, cPool.coinTypeB)\n\n      const pool: PoolApiInfo = {\n        poolAddress: cPool.poolAddress,\n        name,\n        isReverse,\n        tokenA,\n        tokenB,\n        displayTokenA: isReverse ? tokenB : tokenA,\n        displayTokenB: isReverse ? tokenA : tokenB,\n        haveMining: false,\n        miningRewardList: null,\n        miningAprList: null,\n        haveFarming: false,\n        farmsRewarderList: null,\n        farmsApr: '',\n        farmingAprDisplay: '',\n        feeApr: '',\n        feeAprDisplay: '',\n        miningAprTotal: '',\n        feeAndMiningAprDisplay: '',\n        totalAprDisplay: '',\n        fee,\n        feeRate,\n        feeDisplay,\n        tvlDisplay: '0',\n        volume24Display: '0',\n        fees24Display: '0',\n        isVaults: false,\n        tickSpacing: cPool.tickSpacing.toString()\n      }\n\n      return pool\n    }\n\n    return undefined\n  }\n\n  return {\n    getContractPoolInfo\n  }\n}\n","import { SelectTab } from '@cetus/design'\nimport { Box } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nexport default function ZapTabs({ tokens, current, onSelect }: { tokens: any; current: any; onSelect: (value: string) => void }) {\n  const zapTabList = useMemo(() => {\n    return tokens?.map((item: any) => {\n      return {\n        label: item?.symbol,\n        value: item?.coin_type\n      }\n    })\n  }, [tokens])\n\n  const currentTab = useMemo(() => {\n    return zapTabList?.filter((item: any) => item?.value === current?.coin_type)?.[0]\n  }, [zapTabList, current?.coin_type])\n\n  const handleChangeTab = (item: any) => {\n    const currentToken = tokens?.filter((token: any) => token?.coin_type === item?.value)?.[0]\n    onSelect(currentToken)\n  }\n\n  return (\n    <Box w=\"100%\" mb=\"8px\">\n      <SelectTab\n        wrapStyle={{\n          w: '100%',\n          h: '48px',\n          borderRadius: '12px',\n          p: '3px'\n        }}\n        itemStyle={{\n          w: '50%',\n          fontSize: '14px',\n          borderRadius: '8px',\n          fontWeight: '500'\n        }}\n        type=\"outlineTab\"\n        currentTab={currentTab?.label}\n        tabList={zapTabList}\n        handleChangeTab={handleChangeTab}\n      />\n    </Box>\n  )\n}\n","import useZapStore from '@/store/zap/index'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\n\nimport useGlobalStore from '@/store/common/global'\n// import { useDebounceValue } from '@cetus/hooks'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { Token } from '@cetus/types'\n// import { d, fixDown } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport BN from 'bn.js'\nimport { useEffect, useState } from 'react'\n\nexport default function useZap(\n  action: 'Deposit' | 'Withdraw',\n  apiPoolInfo: any,\n  currentSqrtPrice: string,\n  lowerTick?: any,\n  upperTick?: any,\n  onlyAmountA?: string,\n  onlyAmountB?: string,\n  liquidity?: string,\n  slideValue?: string,\n  currentPosLiquidityData?: any\n) {\n  const {\n    currentTokens,\n    setCurrentTokens,\n    zapAmount,\n    setZapAmount,\n    currentZapToken,\n    setCurrentZapToken,\n    zapAmountRate,\n    setZapAmountRate,\n    setZapTokenBalance,\n    zapTokenBalance,\n    setPreDepositeData,\n    setIsPreLoading,\n    setZapApiPool,\n    lower,\n    upper,\n    setLower,\n    setUpper,\n    setZapCurrPriceData,\n    resetZapData,\n    setLiquidity,\n    setZapSlideValue,\n    setPosOriginAmounts\n  } = useZapStore()\n  const { zapSdk } = usePeripherySDKStore()\n  const { zapSlippage } = useGlobalStore()\n  const { balanceInfo } = useGetTokenBalance(currentZapToken)\n  const { getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n\n  useEffect(() => {\n    setLower(lowerTick)\n  }, [lowerTick])\n\n  useEffect(() => {\n    setUpper(upperTick)\n  }, [upperTick])\n\n  useEffect(() => {\n    setLiquidity(liquidity || '')\n  }, [liquidity])\n\n  useEffect(() => {\n    setZapSlideValue(slideValue || 0)\n  }, [slideValue])\n\n  useEffect(() => {\n    setPosOriginAmounts({\n      coinAmountA: currentPosLiquidityData?.coinAmountA,\n      coinAmountB: currentPosLiquidityData?.coinAmountB\n    })\n  }, [currentPosLiquidityData])\n\n  useEffect(() => {\n    if (apiPoolInfo?.poolAddress && currentSqrtPrice) {\n      const decimalsA = apiPoolInfo?.tokenA?.decimals\n      const decimalsB = apiPoolInfo?.tokenB?.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      setZapCurrPriceData({\n        currentPrice,\n        currentSqrtPrice\n      })\n    }\n  }, [currentSqrtPrice, apiPoolInfo?.poolAddress])\n\n  useEffect(() => {\n    let arr: Token[] = []\n    if (apiPoolInfo?.poolAddress) {\n      arr = [apiPoolInfo?.displayTokenA, apiPoolInfo?.displayTokenB]\n      setCurrentZapToken(apiPoolInfo?.displayTokenA)\n    }\n    setCurrentTokens(arr)\n    setZapApiPool(apiPoolInfo)\n  }, [apiPoolInfo?.poolAddress])\n\n  const handleChangeAmount = (value: string) => {\n    setZapAmount(value)\n  }\n\n  const handleChangeZapToken = (value: any) => {\n    setCurrentZapToken(value)\n    setZapAmount('')\n  }\n\n  useEffect(() => {\n    let rate\n    if (zapAmount && currentZapToken?.coin_type) {\n      rate = getTokenAmountValue(currentZapToken?.coin_type, zapAmount)\n    }\n    setZapAmountRate(rate || '')\n  }, [zapAmount, currentZapToken?.coin_type])\n\n  useEffect(() => {\n    if (action === 'Deposit') {\n      setZapTokenBalance(balanceInfo)\n    } else {\n      const isCoinA = currentZapToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n      if (isCoinA) {\n        setZapTokenBalance({ balanceFormat: onlyAmountA })\n      } else {\n        setZapTokenBalance({ balanceFormat: onlyAmountB })\n      }\n    }\n  }, [action, balanceInfo, onlyAmountA, onlyAmountB, currentZapToken?.coin_type, apiPoolInfo?.poolAddress])\n\n  // const preZapIn = async () => {\n  //   setIsPreLoading(true)\n  //   const isCoinA = currentZapToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n  //   const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n  //   const coinAmount = fixDown(d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString(), 0)\n  //   const options = {\n  //     pool_id: apiPoolInfo?.poolAddress,\n  //     tick_lower: lower,\n  //     tick_upper: upper,\n  //     current_sqrt_price: currentSqrtPrice,\n  //     slippage: zapSlippage\n  //   }\n\n  //   const modeOptions = {\n  //     mode,\n  //     coin_amount: coinAmount,\n  //     coin_type_a: apiPoolInfo?.tokenA?.coin_type,\n  //     coin_type_b: apiPoolInfo?.tokenB?.coin_type,\n  //     coin_decimal_a: apiPoolInfo?.tokenA?.decimals,\n  //     coin_decimal_b: apiPoolInfo?.tokenB?.decimals\n  //   }\n\n  //   const res = await zapSdk.Zap.preCalculateDepositAmount(options, modeOptions)\n  //   console.log('🚀 ~ preZapIn ~ res:', res)\n\n  //   setPreDepositeData(res)\n  // }\n\n  // const preZapOut = async () => {\n  //   setIsPreLoading(true)\n  //   const isCoinA = currentZapToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n  //   const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n  //   const coinAmount = d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString()\n  //   const options: any = {\n  //     mode,\n  //     pool_id: apiPoolInfo?.poolAddress,\n  //     tick_lower: lower,\n  //     tick_upper: upper,\n  //     current_sqrt_price: currentSqrtPrice,\n  //     coin_type_a: apiPoolInfo?.tokenA?.coin_type,\n  //     coin_type_b: apiPoolInfo?.tokenB?.coin_type,\n  //     coin_decimal_a: apiPoolInfo?.tokenA?.decimals,\n  //     coin_decimal_b: apiPoolInfo?.tokenB?.decimals\n  //   }\n\n  //   if (d(zapAmount).gte(zapTokenBalance?.balanceFormat)) {\n  //     options['burn_liquidity'] = liquidity\n  //   } else {\n  //     // options['available_liquidity'] = liquidity\n  //     // if (isCoinA) {\n  //     //   options['receive_amount_a'] = fixDown(coinAmount, 0)\n  //     // } else {\n  //     //   options['receive_amount_b'] = fixDown(coinAmount, 0)\n  //     // }\n  //     options['burn_liquidity'] = fixDown(d(liquidity).mul(d(slideValue).div(100)).toString(), 0)\n  //   }\n\n  //   console.log('🚀 ~ preZapInRemove ~ options:', options)\n\n  //   const res = await zapSdk.Zap.preCalculateWithdrawAmount(options)\n  //   console.log('🚀 ~ preZapInRemove ~ res:', res)\n\n  //   setPreDepositeData(res)\n  // }\n\n  // const debouncedZapAmount = useDebounceValue(zapAmount, 300)\n  // const debouncedZapAmountRate = useDebounceValue(zapAmountRate, 300)\n  // useEffect(() => {\n  //   if (!Number(debouncedZapAmount) || d(debouncedZapAmountRate).gt(10000) || d(debouncedZapAmountRate).lt(0.0001)) {\n  //     setPreDepositeData(undefined)\n  //     return\n  //   }\n  //   if (action === 'Deposit') {\n  //     preZapIn()\n  //   } else {\n  //     if (slideValue !== '--') {\n  //       preZapOut()\n  //     }\n  //   }\n  // }, [debouncedZapAmount, currentZapToken?.coin_type, currentSqrtPrice, lower, upper, slideValue, debouncedZapAmountRate])\n\n  // const zapProgressRef = useRef<FreshProgressRef>(null)\n\n  // const reCalculateZapData = () => {\n  //   const uuid = v4()\n  //   setUuid(uuid)\n  //   if (action === 'Deposit') {\n  //     preZapIn()\n  //   } else {\n  //     preZapOut()\n  //   }\n  // }\n\n  useEffect(() => {\n    return () => {\n      resetZapData()\n    }\n  }, [])\n\n  // const handleResetZapProgress = () => {\n  //   zapProgressRef.current?.reset()\n  // }\n\n  return {\n    currentTokens,\n    zapAmount,\n    zapAmountRate,\n    handleChangeAmount,\n    currentZapToken,\n    handleChangeZapToken,\n    zapTokenBalance,\n    zapSlippage\n    // zapProgressRef,\n    // handleResetZapProgress\n  }\n}\n","import ZapTabs from '@/components/zap/ZapTabs'\nimport useZap from '@/hooks/zap/useZap'\n\nimport { TradeInput } from '@cetus/design'\nimport { d } from '@cetus/utils'\nimport { VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nexport default function ZapDeposite({\n  action,\n  apiPoolInfo,\n  currentSqrtPrice,\n  lowerTick,\n  upperTick,\n  onlyAmountA,\n  onlyAmountB,\n  liquidity,\n  slideValue,\n  currentPosLiquidityData\n}: {\n  action: 'Deposit' | 'Withdraw'\n  apiPoolInfo: any\n  currentSqrtPrice: string\n  lowerTick?: any\n  upperTick?: any\n  onlyAmountA?: string\n  onlyAmountB?: string\n  liquidity?: string\n  slideValue?: string\n  currentPosLiquidityData?: any\n}) {\n  const { currentTokens, currentZapToken, handleChangeZapToken, zapAmount, zapAmountRate, handleChangeAmount, zapTokenBalance } = useZap(\n    action,\n    apiPoolInfo,\n    currentSqrtPrice,\n    lowerTick,\n    upperTick,\n    onlyAmountA,\n    onlyAmountB,\n    liquidity,\n    slideValue,\n    currentPosLiquidityData\n  )\n\n  useEffect(() => {\n    if (action === 'Withdraw') {\n      if (d(zapAmount).gt(zapTokenBalance?.balanceFormat || '0')) {\n        handleChangeAmount(zapTokenBalance?.balanceFormat)\n      }\n    }\n  }, [zapAmount, action, zapTokenBalance?.balanceFormat])\n\n  return (\n    <VStack w=\"100%\">\n      <ZapTabs tokens={currentTokens} current={currentZapToken} onSelect={handleChangeZapToken} />\n      <TradeInput\n        wrapStyle={{ h: '108px' }}\n        placeholder=\"0.0\"\n        value={zapAmount}\n        onChange={handleChangeAmount}\n        balance={zapTokenBalance?.balanceFormat || ''}\n        amountValue={zapAmountRate}\n        token={currentZapToken}\n        needRemainBalance={action === 'Withdraw' ? false : true}\n        balanceLabel={action === 'Withdraw' ? 'Available' : undefined}\n      />\n    </VStack>\n  )\n}\n","import { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Switch, Text } from '@chakra-ui/react'\n\ntype ZapSwitchProps = {\n  value: boolean\n  action: 'Deposit' | 'Withdraw'\n  onChange: () => void\n}\nfunction ZapSwitch(props: ZapSwitchProps) {\n  const { value, action, onChange } = props\n  const { isApp } = useWindowWidth()\n  return (\n    <Block padding=\"6px 8px\" borderRadius=\"8px\" width=\"unset\">\n      <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top\" autoFocus={false} returnFocusOnClose={false}>\n        <PopoverTrigger>\n          <HStack h=\"14px\" cursor=\"pointer\">\n            <Text whiteSpace=\"nowrap\" fontSize=\"14px\" color={value ? 'primary' : ''} fontWeight=\"500\">\n              Zap {action === 'Deposit' ? 'In' : 'Out'}\n            </Text>\n            <Switch\n              isChecked={value}\n              onChange={() => {\n                onChange()\n              }}\n            />\n          </HStack>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody p=\"12px\" lineHeight=\"20px\" fontSize=\"12px\">\n            {action == 'Deposit'\n              ? 'Through Zap-In, you can deposit your liquidity in single token or with customized token ratio. Tokens will be auto converted to match the required ratio. '\n              : 'Through Zap-Out, you can withdraw your liquidity in one token. The liquidity will be auto converted to one token you selected.'}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Block>\n  )\n}\n\nexport default ZapSwitch\n"],"names":["reWhitespace","trimmedEndIndex","string","index","reTrimStart","baseTrim","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","value","isSymbol","isObject","other","isBinary","now","root","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","store","set","get","token","lock","autoStake","isRange","useAddLiquidityStore","create","data","useZapStore","useZapSubmit","type","zapAmount","currentZapToken","zapAmountRate","zapTokenBalance","isPreLoading","preDepositeData","zapApiPool","setIsPreLoading","lower","upper","liquidity","zapCurrPriceData","setPreDepositeData","zapSlideValue","currentAccount","onWalletModal","useAccountStore","setConfirmModalOpen","zapSdk","usePeripherySDKStore","zapSlippage","slippage","useGlobalStore","uuid","setUuid","useState","zapNotAvailable","setZapNotAvailable","getTokenPrice","useTokenPrice","tokenAPrice","_a","tokenBPrice","_b","marketPrice","useMemo","d","submitBtnInfo","btnInfo","textEllipses","handleZapIn","getSubmitBaseInfo","amountA","amountB","tokenA","tokenB","displayTokenA","displayTokenB","dispalyAmountA","bnToAmount","dispalyAmountB","getZapDepositToastInfo","status","balanceChanges","description","info","amountAF","amountBF","getBalanceChanges","getZapDepositTx","isFarm","posObj","params","tx","getZapWithdrawToastInfo","showDisplayTokenALock","showDisplayTokenBLock","formatNumberWithDown","getZapWithdrawTx","posId","collect_rewarder_types","preZapParamsRef","useRef","zapProgressRef","zapUuidRef","useEffect","isMinimumPrecision","preZapIn","currentSqrtPrice","mode","coinAmount","fixDown","modeOptions","res","error","preZapOut","debouncedPreZapIn","useDebounceFunction","debouncedPreZapOut","reCalculateZapData","handleResetZapProgress","v4","ZapSubmiteInfo","action","onClick","hideAmountInfo","otherLoading","isReverse","inConfirmModal","hideDepositRatio","btnDisabled","btnText","handleOnClick","isOpen","setIsOpen","getTokenAmountValue","currentTokens","posOriginAmounts","fromCoin","toCoin","item","fromAmount","toAmount","sources","priceImpactTextInfo","showPriceImpactTips","usePriceImpact","isToggle","setIsToggle","handleToggleRate","minimumReceived","currentPriceRate","handleRefresh","coinAmountA","coinAmountB","displayCoinAmountA","displayCoinAmountB","displayAmountARate","displayAmountBRate","amountARate","amountBRate","originPosAmountA","originPosAmountB","percentMap","setPercentMap","isFullRange","checkFullRange","rateMap","calcCoinProportion","isApp","useWindowWidth","errorTips","jsx","Fragment","jsxs","VStack","Button","Box","ErrorTips","HStack","Text","formatCurrencyWithKMB","Skeleton","FreshProgressV2","source","MarketSource","Icon","Slippage","formatPrice","DepositRatio","PosAmountInfo","amount","rate","loading","align","SkeletonCircle","SingleCoinImage","bg_alert","RangeAlerts","subscriptionSource","title","wrapStyle","getPositionNotifiStatus","useNotifiHelper","isChecked","setIsChecked","notifiAuthenticated","notifiSourceGroups","setIsShowNotifi","notifiSubscriptionLoading","notifiStatus","notifiSources","useNotifiStore","notifiUnSubscription","notifiSubscription","useNotifiSubscription","currentPosBaseInfo","usePositionStore","isSubscription","createNotifiSubscriptionVerify","changeSwitch","checked","canSubscription","Switch","e","useGetCurrentPrice","setCurrentPriceData","useLiquidityStore","apiPoolInfo","decimalsA","decimalsB","currentPrice","TickMath","BN","reverseCurrentPrice","useGetContractPoolInfo","clmmSdk","useClmmSDKStore","getTokenListInfo","useGetToken","contractPoolInfo","setContractPoolInfo","setContractPoolInfoLoading","setApiPoolInfo","setApiPoolInfoLoading","setFromToken","setToToken","getCurrentPrice","getContractPoolInfo","poolAddress","poolInfo","apiPool","formatApiPoolByContractPool","cPool","coinTypeList","tokenMap","name","feeRate","fee","feeDisplay","getPoolDirection","ZapTabs","tokens","current","onSelect","zapTabList","currentTab","handleChangeTab","currentToken","SelectTab","useZap","lowerTick","upperTick","onlyAmountA","onlyAmountB","slideValue","currentPosLiquidityData","setCurrentTokens","setZapAmount","setCurrentZapToken","setZapAmountRate","setZapTokenBalance","setZapApiPool","setLower","setUpper","setZapCurrPriceData","resetZapData","setLiquidity","setZapSlideValue","setPosOriginAmounts","balanceInfo","useGetTokenBalance","arr","handleChangeAmount","handleChangeZapToken","isCoinA","ZapDeposite","TradeInput","ZapSwitch","props","onChange","Block","Popover","PopoverTrigger","PopoverContent","PopoverBody"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}