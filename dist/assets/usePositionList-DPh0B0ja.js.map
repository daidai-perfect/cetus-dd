{"version":3,"file":"usePositionList-DPh0B0ja.js","sources":["../../src/store/position/index.ts","../../src/hooks/position/useGetFarmsPosRewards.ts","../../src/hooks/position/useGetPosApiPoolData.ts","../../src/hooks/position/useGetPosfees.ts","../../src/hooks/position/useGetPosLiquiditys.ts","../../src/hooks/position/useGetPosPools.ts","../../src/hooks/position/useGetPosRewards.ts","../../src/hooks/position/usePosHelper.ts","../../src/hooks/position/useWrapPosData.ts","../../src/hooks/position/usePositionList.ts"],"sourcesContent":["import { PoolApiInfo, PoolContractInfo, PosBaseInfo, PosFee, PosLiquidity, PosPoolsRelated, PosReward } from '@/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface PositionState {\n  myPosYieldValue: string\n  setMyPosYieldValue: (data: string) => void\n\n  showPosListLength: string\n  setShowPosListLength: (data: string) => void\n\n  posBaseList: PosBaseInfo[]\n  setPosBaseList: (data: PosBaseInfo[]) => void\n  posBaseListLoading: boolean\n  setPosBaseListLoading: (value: boolean) => void\n\n  posBaseListGroupByPool: Record<string, PosBaseInfo & { list?: PosBaseInfo[] }>\n\n  posApiPoolData: Record<string, PoolApiInfo>\n  setPosApiPoolData: (data: Record<string, PoolApiInfo>) => void\n\n  fullRangePosBaseList: PosBaseInfo[]\n  setFullRangePosBaseList: (data: PosBaseInfo[]) => void\n  fullRangePosBaseListLoading: boolean\n  setFullRangePosBaseListLoading: (data: boolean) => void\n\n  posPoolsOriginalData: Record<string, PoolContractInfo>\n  setPosPoolOriginalData: (data: Record<string, PoolContractInfo>) => void\n\n  posPoolsRelatedData: Record<string, PosPoolsRelated>\n  setPosPoolsRelatedData: (data: Record<string, PosPoolsRelated>) => void\n  posPoolsRelatedDataLoading: boolean\n  setPosPoolsRelatedDataLoading: (value: boolean) => void\n\n  posPoolsRelatedDataGroupByPool: Record<string, any>\n\n  posLiquidityData: Record<string, any>\n  setPosLiquidityData: (data: Record<string, PosLiquidity>) => void\n  posLiquidityDataLoading: boolean\n  setPosLiquidityDataLoading: (value: boolean) => void\n\n  posRewardsData: Record<string, any>\n  setPosRewardsData: (data: Record<string, PosReward[]>) => void\n  posRewardsDataLoading: boolean\n  setPosRewardsDataLoading: (value: boolean) => void\n\n  farmsPosRewardsData: Record<string, any>\n  setFarmsPosRewardsData: (data: Record<string, PosReward[]>) => void\n  farmsPosRewardsDataLoading: boolean\n  setFarmsPosRewardsDataLoading: (value: boolean) => void\n\n  posFeeData: Record<string, any>\n  setPosFeeData: (data: Record<string, PosFee>) => void\n  posFeeDataLoading: boolean\n  setPosFeeDataLoading: (value: boolean) => void\n\n  currentPosBaseInfo: PosBaseInfo | null\n  setCurrentPosBaseInfo: (data: PosBaseInfo | null) => void\n  currentPosBaseInfoLoading: boolean\n  setCurrentPosBaseInfoLoading: (data: boolean) => void\n}\n\nconst store: StateCreator<PositionState> = (set, get) => ({\n  showPosListLength: '',\n  setShowPosListLength: (data: string) => {\n    set(() => ({\n      showPosListLength: data\n    }))\n  },\n  posApiPoolData: {},\n  setPosApiPoolData: (data: Record<string, PoolApiInfo>) => {\n    set(() => ({\n      posApiPoolData: data\n    }))\n  },\n  myPosYieldValue: '',\n  setMyPosYieldValue: (data: string) => {\n    set(() => ({\n      myPosYieldValue: data\n    }))\n  },\n  posBaseList: [],\n  posBaseListGroupByPool: {},\n  setPosBaseList: (data: PosBaseInfo[]) => {\n    const groupedByClmmPool = data.reduce((result: any, item: PosBaseInfo) => {\n      if (!result[item.clmmPool]) {\n        result[item.clmmPool] = { list: [] }\n      }\n      if (!result[item.clmmPool]?.tokenA) {\n        result[item.clmmPool]['isReverse'] = item?.isReverse\n        result[item.clmmPool]['tokenA'] = item?.tokenA\n        result[item.clmmPool]['tokenB'] = item?.tokenB\n        result[item.clmmPool]['displayTokenA'] = item?.displayTokenA\n        result[item.clmmPool]['displayTokenB'] = item?.displayTokenB\n        result[item.clmmPool]['clmmPoolAddress'] = item.clmmPool\n      }\n      result[item.clmmPool]?.list?.push(item)\n      return result\n    }, {})\n    console.log('🚀 ~ file: index.ts:43 ~ groupedByClmmPool ~ groupedByClmmPool:', groupedByClmmPool)\n\n    set(() => ({\n      posBaseList: data,\n      posBaseListGroupByPool: groupedByClmmPool,\n      posBaseListIsLoading: false\n    }))\n  },\n  posBaseListLoading: true,\n  setPosBaseListLoading: (value: boolean) => {\n    set(() => ({\n      posBaseListLoading: value\n    }))\n  },\n  setPosBaseListIsLoading: (value: boolean) => {\n    set(() => ({\n      posBaseListLoading: value\n    }))\n  },\n  fullRangePosBaseList: [],\n  setFullRangePosBaseList: (data: PosBaseInfo[]) => {\n    set(() => ({\n      fullRangePosBaseList: data,\n      fullRangePosBaseListLoading: false\n    }))\n  },\n  fullRangePosBaseListLoading: true,\n  setFullRangePosBaseListLoading: (value: boolean) => {\n    set(() => ({\n      fullRangePosBaseListLoading: value\n    }))\n  },\n  posPoolsOriginalData: {},\n  setPosPoolOriginalData: (data: Record<string, PoolContractInfo>) => {\n    set(() => ({\n      posPoolsOriginalData: data\n    }))\n  },\n  posPoolsRelatedData: {},\n  posPoolsRelatedDataGroupByPool: {},\n  setPosPoolsRelatedData: (data: Record<string, PosPoolsRelated>) => {\n    set(() => ({\n      posPoolsRelatedData: data,\n      posPoolsRelatedDataLoading: false\n    }))\n  },\n  posPoolsRelatedDataLoading: true,\n  setPosPoolsRelatedDataLoading: (value: boolean) => {\n    set(() => ({\n      posPoolsRelatedDataLoading: value\n    }))\n  },\n  posLiquidityData: {},\n  setPosLiquidityData: (data: Record<string, PosLiquidity>) => {\n    set(() => ({\n      posLiquidityData: data,\n      posLiquidityDataLoading: false\n    }))\n  },\n  posLiquidityDataLoading: true,\n  setPosLiquidityDataLoading: (value: boolean) => {\n    set(() => ({\n      posLiquidityDataLoading: value\n    }))\n  },\n  posRewardsData: {},\n  setPosRewardsData: (data: Record<string, PosReward[]>) => {\n    set(() => ({\n      posRewardsData: data,\n      posRewardsDataLoading: false\n    }))\n  },\n  posRewardsDataLoading: true,\n  setPosRewardsDataLoading: (value: boolean) => {\n    set(() => ({\n      posRewardsDataLoading: value\n    }))\n  },\n  farmsPosRewardsData: {},\n  setFarmsPosRewardsData: (data: Record<string, PosReward[]>) => {\n    set(() => ({\n      farmsPosRewardsData: data,\n      farmsPosRewardsDataLoading: false\n    }))\n  },\n  farmsPosRewardsDataLoading: true,\n  setFarmsPosRewardsDataLoading: (value: boolean) => {\n    set(() => ({\n      farmsPosRewardsDataLoading: value\n    }))\n  },\n  posFeeData: {},\n  setPosFeeData: (data: Record<string, PosFee>) => {\n    set(() => ({\n      posFeeData: data,\n      posFeeDataLoading: false\n    }))\n  },\n  posFeeDataLoading: true,\n  setPosFeeDataLoading: (value: boolean) => {\n    set(() => ({\n      posFeeDataLoading: value\n    }))\n  },\n  currentPosBaseInfo: null,\n  setCurrentPosBaseInfo: (data: PosBaseInfo | null) => {\n    set(() => ({\n      currentPosBaseInfo: data,\n      currentPosBaseInfoLoading: false\n    }))\n  },\n  currentPosBaseInfoLoading: true,\n  setCurrentPosBaseInfoLoading: (value: boolean) => {\n    set(() => ({\n      currentPosBaseInfoLoading: value\n    }))\n  }\n})\n\nconst usePositionStore = create(store)\nexport default usePositionStore\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { bnToAmount } from '@cetus/utils'\nimport { useEffect, useRef } from 'react'\n\nexport default function useGetFarmsPosRewards() {\n  const { peripherySdk } = usePeripherySDKStore()\n  const { getTokenListInfo } = useGetToken()\n  const { setFarmsPosRewardsData, setFarmsPosRewardsDataLoading } = usePositionStore()\n  const peripherySdkRef = useRef(peripherySdk)\n\n  useEffect(() => {\n    peripherySdkRef.current = peripherySdk // 更新 ref 的值\n  }, [peripherySdk.ClmmSDK.senderAddress])\n\n  const getFarmsRewardsData = async (positionBaseList: PosBaseInfo[]) => {\n    console.log('🚀 ~ getFarmsRewardsData ~ positionBaseList:', positionBaseList)\n    setFarmsPosRewardsDataLoading(true)\n    const batchFetchPosRewardersAmountParams = positionBaseList\n      ?.filter((item: any) => item.posType === 'farms')\n      .map((item: any) => {\n        return {\n          pool_id: item.farmsPool,\n          position_nft_id: item.id\n        }\n      })\n    try {\n      let res: any = {}\n      let posFarmsRewardsObj: Record<string, PosReward[]> = {}\n      if (batchFetchPosRewardersAmountParams && batchFetchPosRewardersAmountParams.length > 0) {\n        res = await peripherySdkRef.current.Farms.calculateFarmingRewards(batchFetchPosRewardersAmountParams)\n        console.log('🚀 ~ getFarmsRewardsData ~ res:', res, peripherySdkRef.current.ClmmSDK.senderAddress, batchFetchPosRewardersAmountParams)\n        if (res) {\n          const resArr = Object.entries(res).map(([id, value]) => ({\n            id,\n            rewarderAmountOwed: value\n          }))\n\n          console.log('🚀 ~ file: useGetFarmsPosRewards.ts:27 ~ resArr ~ resArr:', resArr)\n          const coinTypeList = resArr\n            .map((item: any) => {\n              return item.rewarderAmountOwed.map((rewarder: any) => rewarder.rewarder_type)\n            })\n            .flat()\n          const tokenMap = await getTokenListInfo(coinTypeList)\n          posFarmsRewardsObj = Object.fromEntries(\n            resArr.map((item: any, key) => {\n              for (const rewarder of item.rewarderAmountOwed) {\n                const { rewarder_amount, rewarder_type } = rewarder\n                const token = tokenMap?.get(rewarder_type)\n                rewarder.display_amount_owed = bnToAmount(rewarder_amount.toString(), token?.decimals || 0)\n                rewarder.amount_owed = rewarder_amount.toString()\n                rewarder.token = token\n              }\n              return [item.id, item.rewarderAmountOwed]\n            })\n          )\n        }\n      }\n\n      console.log('getFarmsRewardsData ~ posFarmsRewardsObj:', posFarmsRewardsObj)\n      setFarmsPosRewardsData(posFarmsRewardsObj)\n    } catch (error) {\n      console.log('🚀 ~ getPosFarmsRewards ~ error:', error)\n    }\n  }\n\n  return {\n    getFarmsRewardsData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport useFavoritePool from '../pool/useFavoritePool'\n\nexport default function useGetPosApiPoolData() {\n  const { setPosApiPoolData } = usePositionStore()\n  const { getFavoritePoolList } = useFavoritePool()\n\n  const getPosApiPoolData = async (positionBaseList: PosBaseInfo[]) => {\n    try {\n      console.log('🚀 ~ getPosApiPoolData ~ positionBaseList:', positionBaseList)\n      const queryPool = Array.from(new Set(positionBaseList?.map(item => item.clmmPool)))\n      const params = {\n        needLocalData: false,\n        pools: queryPool,\n        display_all_pools: true,\n        no_incentives: true,\n        has_mining: true,\n        has_farming: true\n      }\n      console.log('🚀 ~ getPosApiPoolData ~ params:', params)\n\n      const res = (await getFavoritePoolList(params)) || []\n      console.log('🚀 ~ getPosApiPoolData ~ res:', res)\n      const obj = res?.list.reduce((acc, item) => {\n        acc[item.poolAddress] = item // 假设你想要将整个 item 对象作为值\n        return acc\n      }, {})\n      setPosApiPoolData(obj)\n    } catch (error) {\n      console.log('🚀 ~ getPosApiPoolData ~ error:', error)\n    }\n  }\n\n  return {\n    getPosApiPoolData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosFee } from '@/types'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport { bnToAmount } from '@cetus/utils'\n\nexport default function useGetPosfees() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { setPosFeeData, setPosFeeDataLoading } = usePositionStore()\n\n  const getPosFeeData = async (positionBaseList: PosBaseInfo[]) => {\n    console.log('🚀 ~ file: useGetPosfees.ts:11 ~ getPosFeeData ~ positionBaseList:', positionBaseList)\n    setPosFeeDataLoading(true)\n    const feeParams = positionBaseList?.map((posInfo: any) => {\n      return {\n        poolAddress: posInfo.clmmPool,\n        positionId: posInfo.posId,\n        coinTypeA: posInfo.coinTypeA,\n        coinTypeB: posInfo.coinTypeB\n      }\n    })\n\n    console.log('🚀 ~ file: useGetPosfees.ts:11 ~ feeParams ~ feeParams:', feeParams)\n\n    const res = (await clmmSdk.Position.fetchPosFeeAmount(feeParams)) || []\n    console.log('🚀 ~ file: useGetPosfees.ts:11 ~ getPosFeeData ~ res:', res)\n\n    const posFeesData: Record<string, PosFee> = Object.fromEntries(\n      res.map((item, index) => {\n        const pos = positionBaseList[index]\n        const displayFeeOwedA = bnToAmount(!pos.isReverse ? item.feeOwedA.toString() : item.feeOwedB.toString(), pos?.displayTokenA?.decimals || 0)\n        const displayFeeOwedB = bnToAmount(!pos.isReverse ? item.feeOwedB.toString() : item.feeOwedA.toString(), pos?.displayTokenB?.decimals || 0)\n        return [\n          item.position_id,\n          {\n            feeOwedA: item.feeOwedA.toString(),\n            feeOwedB: item.feeOwedB.toString(),\n            displayFeeOwedA,\n            displayFeeOwedB\n          }\n        ]\n      })\n    )\n    console.log('getPosFeeData ~ posFeesData:', posFeesData)\n\n    setPosFeeData(posFeesData)\n  }\n\n  return {\n    getPosFeeData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PoolContractInfo, PosBaseInfo, PosLiquidity } from '@/types'\nimport { calcCoinProportion, checkFullRange } from '@/utils/pool'\nimport { Token } from '@cetus/types'\nimport { bnToAmount, d } from '@cetus/utils'\nimport { ClmmPoolUtil, TickMath } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport BN from 'bn.js'\n\nexport default function useGetPosLiquiditys() {\n  const { setPosLiquidityData, setPosLiquidityDataLoading } = usePositionStore()\n\n  const getCoinAmountFromLiquidity = ({\n    tokenA,\n    tokenB,\n    liquidity,\n    currentSqrtPrice,\n    lowerTick,\n    upperTick,\n    roundUp\n  }: {\n    tokenA: Token\n    tokenB: Token\n    liquidity: string\n    currentSqrtPrice: string\n    lowerTick: number\n    upperTick: number\n    roundUp: boolean\n  }) => {\n    const lowerSqrtPrice = TickMath.tickIndexToSqrtPriceX64(lowerTick)\n    const upperSqrtPrice = TickMath.tickIndexToSqrtPriceX64(upperTick)\n    const amountInfo = ClmmPoolUtil.getCoinAmountFromLiquidity(new BN(liquidity), new BN(currentSqrtPrice), lowerSqrtPrice, upperSqrtPrice, roundUp)\n\n    const coinAmountA = amountInfo.coinA.toString()\n    const coinAmountB = amountInfo.coinB.toString()\n\n    const decimalsA = tokenA.decimals\n    const decimalsB = tokenB.decimals\n    const amountA = bnToAmount(coinAmountA, decimalsA || 0)\n    const amountB = bnToAmount(coinAmountB, decimalsB || 0)\n\n    return {\n      coinAmountA,\n      coinAmountB,\n      amountA,\n      amountB\n    }\n  }\n\n  const getPosLiquidityData = async (positionBaseList: PosBaseInfo[], posPoolsOriginalData: Record<string, PoolContractInfo>) => {\n    setPosLiquidityDataLoading(true)\n    const posLiquidityData: Record<string, PosLiquidity> = {}\n\n    for (let i = 0; i < positionBaseList.length; i++) {\n      const position = positionBaseList[i]\n      const poolInfo = posPoolsOriginalData?.[position.clmmPool]\n\n      const { coinAmountA, coinAmountB, amountA, amountB } = getCoinAmountFromLiquidity({\n        tokenA: position.tokenA,\n        tokenB: position.tokenB,\n        liquidity: position.liquidity,\n        currentSqrtPrice: poolInfo?.current_sqrt_price,\n        lowerTick: position.lowerTick,\n        upperTick: position.upperTick,\n        // TODO 防止数量过小时展示为0 待定方案\n        roundUp: true\n        // roundUp: false\n      })\n\n      const isFullRange = checkFullRange(position.lowerTick, position.upperTick)\n\n      const decimalsA = position.tokenA.decimals\n      const decimalsB = position.tokenB.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(poolInfo?.current_sqrt_price), decimalsA, decimalsB).toString()\n      const { percentA, percentB } = calcCoinProportion(amountA, amountB, currentPrice, isFullRange)\n\n      const dAmountA = bnToAmount(coinAmountA, decimalsA)\n      const dAmountB = bnToAmount(coinAmountB, decimalsB)\n      const onlyAmountA = d(dAmountB).div(currentPrice).add(dAmountA).toString()\n\n      const onlyAmountB = d(dAmountA).mul(currentPrice).add(dAmountB).toString()\n\n      posLiquidityData[position.posId] = {\n        coinAmountA,\n        coinAmountB,\n        displayCoinAmountA: !position.isReverse ? amountA : amountB,\n        displayCoinAmountB: !position.isReverse ? amountB : amountA,\n        displayPercentA: !position.isReverse ? percentA : percentB,\n        displayPercentB: !position.isReverse ? percentB : percentA,\n        onlyAmountA,\n        onlyAmountB\n      }\n    }\n\n    console.log('getPosLisuidityData ~ posLiquidityData:', posLiquidityData)\n    setPosLiquidityData(posLiquidityData)\n  }\n\n  return {\n    getPosLiquidityData,\n    getCoinAmountFromLiquidity\n  }\n}\n","/**\n * 获取仓位相关的池子信息s\n */\n\nimport usePositionStore from '@/store/position'\nimport { PoolContractInfo, PosPoolsRelated } from '@/types'\nimport { PosBaseInfo } from '@/types/position'\nimport { checkIsMinOrMaxIndex } from '@/utils/pool'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport BN from 'bn.js'\n\nexport default function useGetPosPools() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { setPosPoolOriginalData, setPosPoolsRelatedData, setPosPoolsRelatedDataLoading, setFullRangePosBaseList, setFullRangePosBaseListLoading } =\n    usePositionStore()\n\n  const getPosPoolsOriginalObj = async (posBaseList: PosBaseInfo[]): Promise<Record<string, PoolContractInfo>> => {\n    const pools = posBaseList?.map(item => item.clmmPool)\n\n    const poolIds = [...new Set([...pools])]\n\n    let posPoolsOriginalObj: Record<string, PoolContractInfo> = {}\n\n    if (poolIds && poolIds.length > 0) {\n      const posAllPools = await clmmSdk.Pool.getPools(poolIds, 0, 1000)\n      console.log('🚀🚀🚀 ~ getPosPoolsOriginalObj ~ posAllPools:', posAllPools)\n      posPoolsOriginalObj = Object.fromEntries(\n        posAllPools?.map((item: any) => {\n          const info: PosBaseInfo = posBaseList.find(pos => pos.clmmPool === item?.poolAddress)!\n          const decimalsA = info.tokenA.decimals\n          const decimalsB = info.tokenB.decimals\n          const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(item?.current_sqrt_price), decimalsA, decimalsB).toString()\n          const currentPriceReverse = d(1).div(currentPrice).toString()\n\n          return [\n            item?.poolAddress,\n            {\n              ...item,\n              currentPrice,\n              currentPriceReverse\n            }\n          ]\n        })\n      )\n    }\n\n    setPosPoolOriginalData(posPoolsOriginalObj)\n    return posPoolsOriginalObj\n  }\n\n  // 仓位中和池子信息相关联的数据\n  const getPosPoolsRelatedData = (posBaseList: PosBaseInfo[], posPoolOriginalObjs: Record<string, PoolContractInfo>) => {\n    setPosPoolsRelatedDataLoading(true)\n    setFullRangePosBaseListLoading(true)\n\n    const posPoolsRelatedData: Record<string, PosPoolsRelated> = {}\n    const fullRangePosBaseList: any = []\n\n    posBaseList.forEach((item: any) => {\n      console.log('🚀 ~ posBaseList.forEach ~ item:', item)\n      const poolInfo = posPoolOriginalObjs[item.clmmPool]\n      const decimalsA = item.tokenA.decimals\n      const decimalsB = item.tokenB.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(poolInfo?.current_sqrt_price), decimalsA, decimalsB).toString()\n      const currentPriceReverse = d(1).div(currentPrice).toString()\n\n      let minPrice = '0'\n      let maxPrice = '0'\n      if (checkIsMinOrMaxIndex(item.lowerTick, 'min')) {\n        minPrice = '0'\n      } else {\n        minPrice = TickMath.tickIndexToPrice(Number(item.lowerTick), decimalsA, decimalsB).toString()\n      }\n\n      if (checkIsMinOrMaxIndex(item.upperTick, 'max')) {\n        maxPrice = '∞'\n      } else {\n        maxPrice = TickMath.tickIndexToPrice(Number(item.upperTick), decimalsA, decimalsB).toString()\n      }\n\n      let minPriceResever, maxPriceResever\n      if (maxPrice !== '∞') {\n        maxPriceResever = d(1).div(d(maxPrice)).toString()\n      } else {\n        maxPriceResever = '0'\n      }\n      if (minPrice !== '0') {\n        minPriceResever = d(1).div(d(minPrice)).toString()\n      } else {\n        minPriceResever = '∞'\n      }\n\n      let currentStatus = ''\n      if (poolInfo?.is_pause) {\n        currentStatus = 'Closed'\n      } else if (Number(currentPrice) >= Number(minPrice) && (maxPrice === '∞' || Number(currentPrice) <= Number(maxPrice))) {\n        currentStatus = 'Active'\n      } else if (Number(currentPrice) > Number(maxPrice)) {\n        currentStatus = 'Inactive'\n      } else if (Number(currentPrice) < Number(minPrice)) {\n        currentStatus = 'Inactive'\n      }\n\n      if (((minPrice === '0' && maxPrice === '∞') || (minPriceResever === '0' && maxPriceResever === '∞')) && item.posType === 'clmm') {\n        fullRangePosBaseList.push(item)\n      }\n\n      const isReverse = item.isReverse\n\n      posPoolsRelatedData[item.posId] = {\n        currentPrice: !poolInfo ? '' : formatNumberWithDown(!isReverse ? currentPrice : currentPriceReverse).toString(),\n        currentPriceReverse: !poolInfo ? '' : formatNumberWithDown(!isReverse ? currentPriceReverse : currentPrice).toString(),\n        minPrice: formatNumberWithDown(!isReverse ? minPrice : maxPriceResever).toString(),\n        minPriceResever: formatNumberWithDown(!isReverse ? maxPriceResever : minPrice).toString(),\n        maxPrice: formatNumberWithDown(!isReverse ? maxPrice : minPriceResever).toString(),\n        maxPriceResever: formatNumberWithDown(!isReverse ? minPriceResever : maxPrice).toString(),\n        minPriceOrigin: !poolInfo ? '' : !isReverse ? minPrice : maxPriceResever, //用于Leverage值的计算\n        maxPriceOrigin: !poolInfo ? '' : !isReverse ? maxPrice : minPriceResever, //用于Leverage值的计算\n        currentStatus: !poolInfo ? '' : currentStatus,\n        fee: poolInfo?.fee_rate,\n        displayFee: d(poolInfo?.fee_rate).div(Math.pow(10, 6)).mul(100).toString(),\n        tickSpacing: poolInfo?.tickSpacing,\n        currentTickIndex: poolInfo?.current_tick_index,\n        curSqrtPrice: poolInfo?.current_sqrt_price,\n        liquidity: poolInfo?.liquidity\n      }\n    })\n\n    setPosPoolsRelatedData(posPoolsRelatedData)\n    setFullRangePosBaseList(fullRangePosBaseList)\n  }\n\n  return {\n    getPosPoolsOriginalObj,\n    getPosPoolsRelatedData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PoolContractInfo, PosBaseInfo, PosReward } from '@/types'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport { bnToAmount } from '@cetus/utils'\n\nexport default function useGetPosRewards() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { getTokenListInfo } = useGetToken()\n  const { setPosRewardsData, setPosRewardsDataLoading } = usePositionStore()\n\n  const getPosRewardsData = async (positionBaseList: PosBaseInfo[], posPoolsOriginalData: Record<string, PoolContractInfo>) => {\n    console.log('🚀 ~ getPosRewardsData ~ positionBaseList:', positionBaseList)\n    setPosRewardsDataLoading(true)\n    const batchFetchPosRewardersAmountParams: any = positionBaseList\n      ?.filter((item: PosBaseInfo) => item.posType !== 'farms')\n      .map((item: PosBaseInfo) => {\n        const poolInfo = posPoolsOriginalData[item.clmmPool]\n        return {\n          poolAddress: item.clmmPool,\n          positionId: item.posId,\n          coinTypeA: item.coinTypeA,\n          coinTypeB: item.coinTypeB,\n          rewarderInfo: poolInfo.rewarder_infos\n        }\n      })\n\n    console.log('🚀 ~ file: useGetPosRewards.ts:15 ~ getPosRewardsData ~ batchFetchPosRewardersAmountParams:', batchFetchPosRewardersAmountParams)\n\n    let posRewardsData: Record<string, PosReward[]> = {}\n\n    if (batchFetchPosRewardersAmountParams && batchFetchPosRewardersAmountParams.length > 0) {\n      try {\n        const res = await clmmSdk.Rewarder.fetchPosRewardersAmount(batchFetchPosRewardersAmountParams)\n        const coinTypeList = res\n          ?.map((item: any) => {\n            return item.rewarderAmountOwed.map((item: any) => {\n              return item.coin_address\n            })\n          })\n          .flat()\n        const tokenMap = await getTokenListInfo(coinTypeList)\n        posRewardsData = Object.fromEntries(\n          res.map((item: any, key) => {\n            for (const rewarder of item.rewarderAmountOwed) {\n              const { amount_owed, coin_address } = rewarder\n              const token = tokenMap?.get(coin_address)\n              rewarder.display_amount_owed = bnToAmount(amount_owed.toString(), token?.decimals || 0)\n              rewarder.amount_owed = amount_owed.toString()\n              rewarder.token = token\n            }\n            return [item.positionId, item.rewarderAmountOwed]\n          })\n        )\n        console.log('getPosRewardsData ~ posRewardsData:', posRewardsData)\n      } catch (error) {\n        console.log('getPosRewardsData ~ error:', error)\n      }\n    }\n\n    setPosRewardsData(posRewardsData)\n  }\n\n  return {\n    getPosRewardsData\n  }\n}\n","import { PosBaseInfo } from '@/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { isAvailableObject } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nexport default function usePosHelper() {\n  const getClmmPosName = (posIndex: number, position_index: string | number) => {\n    if (position_index || position_index == 0) {\n      return `Cetus LP | Pool${position_index}-${posIndex}`\n    }\n    return undefined\n  }\n\n  const buildPositionType = useMemo(() => {\n    return `${envConfigs.clmm_sdk_options.clmm_pool.package_id}::position::Position`\n  }, [envConfigs])\n\n  const buildFarmsPositionType = useMemo(() => {\n    return `${envConfigs.periphery_sdk_options.frams.package_id}::pool::WrappedPositionNFT`\n  }, [envConfigs])\n\n  const buildBurnPositionType = useMemo(() => {\n    return `${envConfigs.burn_sdk_options.burn.package_id}::lp_burn::CetusLPBurnProof`\n  }, [envConfigs])\n\n  const getTokenALock = (currentPosBaseInfo: PosBaseInfo, curPosContractPoolInfo: any) => {\n    if (isAvailableObject(currentPosBaseInfo) && isAvailableObject(curPosContractPoolInfo)) {\n      const { lowerTick, upperTick } = currentPosBaseInfo\n      const currentTickIndex = curPosContractPoolInfo?.current_tick_index\n      if (currentTickIndex !== undefined && lowerTick !== undefined && upperTick !== undefined) {\n        if (currentTickIndex >= lowerTick && currentTickIndex < upperTick) {\n          return false\n        } else if (currentTickIndex >= upperTick) {\n          return true\n        } else if (currentTickIndex < lowerTick) {\n          return false\n        } else {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  const getTokenBLock = (currentPosBaseInfo: PosBaseInfo, curPosContractPoolInfo: any) => {\n    if (isAvailableObject(currentPosBaseInfo) && isAvailableObject(curPosContractPoolInfo)) {\n      const { lowerTick, upperTick } = currentPosBaseInfo\n      const currentTickIndex = curPosContractPoolInfo?.current_tick_index\n      if (currentTickIndex !== undefined && lowerTick !== undefined && upperTick !== undefined) {\n        if (currentTickIndex >= lowerTick && currentTickIndex < upperTick) {\n          return false\n        } else if (currentTickIndex >= upperTick) {\n          return false\n        } else if (currentTickIndex < lowerTick) {\n          return true\n        } else {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  return {\n    getClmmPosName,\n    buildPositionType,\n    buildFarmsPositionType,\n    buildBurnPositionType,\n    getTokenALock,\n    getTokenBLock\n  }\n}\n","import { PosBaseInfo } from '@/types'\nimport { getPoolDirection } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { CoinType } from '@cetus/types'\nimport { BurnUtils } from '@cetusprotocol/cetus-burn-sdk'\nimport { FramsUtils } from '@cetusprotocol/cetus-periphery-sdk'\nimport { buildPosition, extractStructTagFromType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport usePosHelper from './usePosHelper'\n\nexport default function useWrapPosData() {\n  const { buildPositionType, buildFarmsPositionType, buildBurnPositionType } = usePosHelper()\n  const { getTokenListInfo } = useGetToken()\n\n  const getPosTokenData = async (coinTypeA: string, coinTypeB: string): Promise<any> => {\n    const isReverse = !getPoolDirection(coinTypeA, coinTypeB)\n    const tokenMap = await getTokenListInfo([coinTypeA, coinTypeB] as CoinType[])\n    const tokenA = tokenMap?.get(coinTypeA as CoinType)\n    const tokenB = tokenMap?.get(coinTypeB as CoinType)\n    const displayTokenA = !isReverse ? tokenA : tokenB\n    const displayTokenB = !isReverse ? tokenB : tokenA\n\n    return {\n      isReverse,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB\n    }\n  }\n\n  // Clmm仓位包装\n  const wrapClmmPosBaseInfo = async (data: any): Promise<PosBaseInfo> => {\n    const pos = buildPosition(data)\n    const coinTypeA = extractStructTagFromType(pos.coin_type_a).full_address\n    const coinTypeB = extractStructTagFromType(pos.coin_type_b).full_address\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n\n    const version = data?.data?.version || '0'\n\n    return {\n      clmmPool: pos.pool,\n      posId: pos.pos_object_id,\n      id: pos.pos_object_id,\n      liquidity: pos.liquidity,\n      index: pos.index,\n      lowerTick: pos.tick_lower_index,\n      upperTick: pos.tick_upper_index,\n      owner: pos.owner,\n      coinTypeA,\n      coinTypeB,\n      posType: 'clmm',\n      tokenName: '',\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      isReverse,\n      version\n    }\n  }\n\n  // Farms仓位包装\n  const wrapFarmsPosBaseInfo = async (data: any): Promise<PosBaseInfo> => {\n    const pos: any = FramsUtils.buildFramsPositionNFT(data)\n\n    const version = data?.data?.version || '0'\n    const coinTypeA = extractStructTagFromType(pos.coinTypeA).full_address\n    const coinTypeB = extractStructTagFromType(pos.coinTypeB).full_address\n\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n\n    return {\n      clmmPool: pos.clmm_pool_id,\n      farmsPool: pos.pool_id,\n      posId: pos.clmm_position_id,\n      id: pos.id,\n      liquidity: pos.liquidity,\n      index: pos.name.split('-')[1],\n      lowerTick: pos.tick_lower_index,\n      upperTick: pos.tick_upper_index,\n      owner: '',\n      coinTypeA,\n      coinTypeB,\n      posType: 'farms',\n      tokenName: pos.name,\n      isReverse,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      version\n    }\n  }\n\n  // Burn仓位包装\n  const wrapBurnPosBaseInfo = async (data: any): Promise<PosBaseInfo> => {\n    const pos: any = BurnUtils.buildBurnPositionNFT(data?.data?.content?.fields)\n    const version = data?.data?.version || '0'\n    const coinTypeA = extractStructTagFromType(pos.coinTypeA).full_address\n    const coinTypeB = extractStructTagFromType(pos.coinTypeB).full_address\n\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n\n    return {\n      clmmPool: pos.clmm_pool_id,\n      posId: pos.clmm_position_id,\n      liquidity: pos.liquidity,\n      index: pos.index,\n      id: pos.id,\n      lowerTick: pos.tick_lower_index,\n      upperTick: pos.tick_upper_index,\n      owner: '',\n      coinTypeA,\n      coinTypeB,\n      posType: 'burn',\n      tokenName: pos.name,\n      isReverse,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      version\n    }\n  }\n\n  const buildPosBaseInfo = async (item: any): Promise<PosBaseInfo | null> => {\n    const type = extractStructTagFromType(item.data.type)\n\n    if (type.full_address === buildPositionType) {\n      return await wrapClmmPosBaseInfo(item)\n    }\n\n    if (type.full_address === buildFarmsPositionType) {\n      return await wrapFarmsPosBaseInfo(item)\n    }\n\n    if (type.full_address === buildBurnPositionType) {\n      return await wrapBurnPosBaseInfo(item)\n    }\n\n    return null\n  }\n\n  return {\n    wrapClmmPosBaseInfo,\n    wrapBurnPosBaseInfo,\n    wrapFarmsPosBaseInfo,\n    buildPosBaseInfo\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d } from '@cetus/utils'\nimport useGetFarmsPosRewards from './useGetFarmsPosRewards'\nimport useGetPosApiPoolData from './useGetPosApiPoolData'\nimport useGetPosfees from './useGetPosfees'\nimport useGetPosLiquiditys from './useGetPosLiquiditys'\nimport useGetPosPools from './useGetPosPools'\nimport useGetPosRewards from './useGetPosRewards'\nimport usePosHelper from './usePosHelper'\nimport useWrapPosData from './useWrapPosData'\n\nexport default function usePositionList() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { buildPositionType, buildFarmsPositionType, buildBurnPositionType } = usePosHelper()\n  const { buildPosBaseInfo } = useWrapPosData()\n  const { setPosBaseList, setFullRangePosBaseList, setPosBaseListLoading } = usePositionStore()\n\n  const { getPosPoolsOriginalObj, getPosPoolsRelatedData } = useGetPosPools()\n  const { getPosLiquidityData } = useGetPosLiquiditys()\n  const { getPosFeeData } = useGetPosfees()\n  const { getPosApiPoolData } = useGetPosApiPoolData()\n  const { getPosRewardsData } = useGetPosRewards()\n  const { getFarmsRewardsData } = useGetFarmsPosRewards()\n\n  const getPositionBaseList = async (account: string, clmmPool?: string): Promise<PosBaseInfo[] | string> => {\n    console.log('🚀 ~ getPositionBaseList ~ clmmPool:', clmmPool)\n    setPosBaseListLoading(true)\n    try {\n      const ownerRes = await clmmSdk.fullClient.getOwnedObjectsByPage(account, {\n        options: { showType: true, showContent: true, showOwner: true },\n        filter: {\n          MatchAny: [\n            {\n              Package: envConfigs.clmm_sdk_options.clmm_pool.package_id\n            },\n            {\n              StructType: buildFarmsPositionType\n            },\n            {\n              StructType: buildBurnPositionType\n            }\n          ]\n        }\n      })\n\n      console.log('🚀 ~ file: usePositionList.ts:25 ~ getPositionList ~ ownerRes:', ownerRes)\n\n      const posBaseList: any = []\n\n      for (const item of ownerRes.data as any[]) {\n        const info = await buildPosBaseInfo(item)\n        // console.log('🚀 ~ file: usePositionList.ts:37 ~ getPositionList ~ info:', info)\n        if (d(info?.liquidity).lte(0)) continue\n        if (!info?.displayTokenA || !info?.displayTokenB) continue\n        if (info) {\n          posBaseList.push(info)\n        }\n      }\n\n      console.log('🚀 ~ file: usePositionList.ts:33 ~ getPositionList ~ posBaseList:', posBaseList)\n\n      const sortBaseList = posBaseList.sort((a: any, b: any) => b.version - a.version)\n\n      let result: PosBaseInfo[] = []\n      if (!clmmPool) {\n        result = sortBaseList\n      } else {\n        result = sortBaseList?.filter((item: PosBaseInfo) => item.clmmPool === clmmPool)\n      }\n\n      setPosBaseList(result)\n      setPosBaseListLoading(false)\n      if (result?.length == 0) {\n        setFullRangePosBaseList([])\n      }\n\n      return result\n    } catch (error) {\n      console.error('🚀 ~ getPositionBaseList ~ 79 ~ error:', error)\n      if (error instanceof TypeError) {\n        setPosBaseListLoading(false)\n        setPosBaseList([])\n        return 'Something went wrong, please change the rpc node and try again'\n      }\n      return ''\n    }\n  }\n\n  const getPosRelatedData = async (posBaseList: PosBaseInfo[], isFarms: boolean = false) => {\n    console.log('🚀 ~ getPosRelatedData ~ posBaseList:', isFarms, posBaseList)\n    getFarmsRewardsData(posBaseList)\n    if (!isFarms) {\n      console.log('🚀 ~ getPosRelatedData ~ isFarms:', posBaseList)\n      getPosApiPoolData(posBaseList)\n      getPosFeeData(posBaseList)\n    }\n    try {\n      const posPoolsOriginalData = await getPosPoolsOriginalObj(posBaseList)\n      console.log('🚀 ~ getPosRelatedData ~ posPoolsOriginalData:', posPoolsOriginalData)\n      getPosPoolsRelatedData(posBaseList, posPoolsOriginalData) //hook里面关于posPoolsOriginalData数据已经处理\n      if (Object.keys(posPoolsOriginalData)?.length > 0) {\n        getPosLiquidityData(posBaseList, posPoolsOriginalData)\n        if (!isFarms) {\n          getPosRewardsData(posBaseList, posPoolsOriginalData)\n        }\n      }\n    } catch (error) {\n      console.error('🚀 ~ getPosRelatedData ~ error: 96', error)\n    }\n  }\n\n  return {\n    getPositionBaseList,\n    getPosRelatedData\n  }\n}\n"],"names":["store","set","get","data","groupedByClmmPool","result","item","_a","_c","_b","value","usePositionStore","create","useGetFarmsPosRewards","peripherySdk","usePeripherySDKStore","getTokenListInfo","useGetToken","setFarmsPosRewardsData","setFarmsPosRewardsDataLoading","peripherySdkRef","useRef","useEffect","positionBaseList","batchFetchPosRewardersAmountParams","res","posFarmsRewardsObj","resArr","id","coinTypeList","rewarder","tokenMap","key","rewarder_amount","rewarder_type","token","bnToAmount","error","useGetPosApiPoolData","setPosApiPoolData","getFavoritePoolList","useFavoritePool","params","obj","acc","useGetPosfees","clmmSdk","useClmmSDKStore","setPosFeeData","setPosFeeDataLoading","feeParams","posInfo","posFeesData","index","pos","displayFeeOwedA","displayFeeOwedB","useGetPosLiquiditys","setPosLiquidityData","setPosLiquidityDataLoading","getCoinAmountFromLiquidity","tokenA","tokenB","liquidity","currentSqrtPrice","lowerTick","upperTick","roundUp","lowerSqrtPrice","TickMath","upperSqrtPrice","amountInfo","ClmmPoolUtil","BN","coinAmountA","coinAmountB","decimalsA","decimalsB","amountA","amountB","posPoolsOriginalData","posLiquidityData","position","poolInfo","isFullRange","checkFullRange","currentPrice","percentA","percentB","calcCoinProportion","dAmountA","dAmountB","onlyAmountA","d","onlyAmountB","useGetPosPools","setPosPoolOriginalData","setPosPoolsRelatedData","setPosPoolsRelatedDataLoading","setFullRangePosBaseList","setFullRangePosBaseListLoading","posBaseList","pools","poolIds","posPoolsOriginalObj","posAllPools","info","currentPriceReverse","posPoolOriginalObjs","posPoolsRelatedData","fullRangePosBaseList","minPrice","maxPrice","checkIsMinOrMaxIndex","minPriceResever","maxPriceResever","currentStatus","isReverse","formatNumberWithDown","useGetPosRewards","setPosRewardsData","setPosRewardsDataLoading","posRewardsData","amount_owed","coin_address","usePosHelper","getClmmPosName","posIndex","position_index","buildPositionType","useMemo","envConfigs","buildFarmsPositionType","buildBurnPositionType","currentPosBaseInfo","curPosContractPoolInfo","isAvailableObject","currentTickIndex","useWrapPosData","getPosTokenData","coinTypeA","coinTypeB","getPoolDirection","wrapClmmPosBaseInfo","buildPosition","extractStructTagFromType","displayTokenA","displayTokenB","version","wrapFarmsPosBaseInfo","FramsUtils","wrapBurnPosBaseInfo","BurnUtils","type","usePositionList","buildPosBaseInfo","setPosBaseList","setPosBaseListLoading","getPosPoolsOriginalObj","getPosPoolsRelatedData","getPosLiquidityData","getPosFeeData","getPosApiPoolData","getPosRewardsData","getFarmsRewardsData","account","clmmPool","ownerRes","sortBaseList","a","b","isFarms"],"mappings":"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"}