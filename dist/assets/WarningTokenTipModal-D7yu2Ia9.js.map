<<<<<<< HEAD:dist/assets/WarningTokenTipModal-DQW3ookx.js.map
{"version":3,"file":"WarningTokenTipModal-DQW3ookx.js","sources":["../../../cetus-design/src/components/common/WarningTokenTipModal.tsx"],"sourcesContent":["import useTokenSelect from '@/hook/useTokenSelect'\nimport useGetTokenSource from '@cetus/hooks/src/useGetTokenSource'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenStore from '@cetus/stores/src/token'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { Token } from '@cetus/types'\nimport { CheckBox } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text\n} from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport SingleTokenInfo from './SingleTokenInfo'\n\ntype WarningTokenTipsModalProps = {\n  tokensInfo: Token[]\n  waringModalCancel: (tokenInfo: Token[]) => void\n  addToken?: boolean\n}\n\nexport default function WarningTokenTipsModal(props: WarningTokenTipsModalProps) {\n  const { tokensInfo, waringModalCancel, addToken = false } = props\n  const { isApp } = useWindowWidth()\n  const { warningTokenList, setIsOpen, isOpen, cancelClick, checked, setChecked, addImportTokenList, addLiquidityTrustTokenList } =\n    useWarningTokenTips(props)\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        cancelClick()\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: 422 }}>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Tips\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\">\n          <Box p=\"22px 12px\" bg=\"bg_primary\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"8px\">\n            {warningTokenList.map((tokenInfo, index) => {\n              return (\n                <SingleTokenInfo\n                  portal={false}\n                  key={tokenInfo.coin_type}\n                  token={tokenInfo}\n                  haveName={false}\n                  haveAddress={true}\n                  addressAbridgeStyle={isApp ? 'short' : 'long'}\n                  imgBoxStyle={{ w: '40px', h: '40px' }}\n                  marginTop={index > 0 ? '20px' : ''}\n                />\n              )\n            })}\n          </Box>\n          <Flex mt=\"12px\" p=\"12px\" bg=\"primary_yellow_opacity.10\" borderRadius=\"12px\">\n            <Box>\n              <Text color=\"primary_yellow\" align=\"left\" fontSize=\"12px\" lineHeight=\"2\">\n                The token is not on the Frequently Traded List. Please note that anyone can create a token on Sui blockchain with any name, including\n                creating fake versions of existing tokens or tokens that claim to represent projects that do not have a token. Always conduct your own\n                research before trading.\n              </Text>\n              <HStack mt=\"8px\" bg=\"bg_primary\" borderRadius=\"8px\" width=\"100%\" p=\"12px 0\" justifyContent=\"center\" alignItems=\"center\">\n                <CheckBox checked={checked} onClick={() => setChecked(!checked)} />\n                <Text ml=\"12px\" color=\"text_caption\">\n                  I acknowledge the risk\n                </Text>\n              </HStack>\n            </Box>\n          </Flex>\n        </ModalBody>\n        <ModalFooter justifyContent=\"space-between\" gap=\"16px\" p=\"8px 16px 16px\">\n          <Button\n            borderRadius=\"8px\"\n            variant=\"outline\"\n            flex=\"1\"\n            fontSize=\"14px\"\n            onClick={() => {\n              waringModalCancel(warningTokenList)\n              setIsOpen(false)\n            }}\n            p=\"0 15px\"\n          >\n            Cancel\n          </Button>\n          <Button\n            borderRadius=\"8px\"\n            flex=\"1\"\n            fontSize=\"14px\"\n            disabled={!checked}\n            onClick={() => {\n              if (addToken) {\n                addImportTokenList(warningTokenList)\n              } else {\n                addLiquidityTrustTokenList(warningTokenList)\n              }\n              setIsOpen(false)\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst WarningTokenTipToWidget = (props: WarningTokenTipsModalProps) => {\n  const { tokensInfo, waringModalCancel, addToken = false } = props\n  const { warningTokenList, setIsOpen, isOpen, cancelClick, checked, setChecked, addImportTokenList, addLiquidityTrustTokenList } =\n    useWarningTokenTips(props)\n\n  return (\n    <WarningTokenTipsContent\n      warningTokenList={warningTokenList}\n      checked={checked}\n      setChecked={setChecked}\n      addImportTokenList={addImportTokenList}\n      addLiquidityTrustTokenList={addLiquidityTrustTokenList}\n      setIsOpen={setIsOpen}\n      addToken={addToken}\n      isOpen={isOpen}\n      cancelClick={cancelClick}\n    />\n  )\n}\n\nconst WarningTokenTipsContent = ({\n  warningTokenList,\n  checked,\n  setChecked,\n  addImportTokenList,\n  addLiquidityTrustTokenList,\n  setIsOpen,\n  addToken,\n  isOpen,\n  cancelClick\n}: {\n  warningTokenList: Token[]\n  checked: boolean\n  setChecked: (value: boolean) => void\n  addImportTokenList: (value: Token[]) => void\n  addLiquidityTrustTokenList: (value: Token[]) => void\n  setIsOpen: (value: boolean) => void\n  addToken?: boolean\n  isOpen: boolean\n  cancelClick: () => void\n}) => {\n  return (\n    <>\n      {isOpen && (\n        <Box w=\"100%\">\n          <Box p=\"22px 12px\" bg=\"bg_primary\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"8px\">\n            {warningTokenList.map((tokenInfo, index) => {\n              return (\n                <SingleTokenInfo\n                  key={tokenInfo.coin_type}\n                  token={tokenInfo}\n                  haveName={false}\n                  haveAddress={true}\n                  addressAbridgeStyle=\"long\"\n                  imgBoxStyle={{ w: '40px', h: '40px' }}\n                  marginTop={index > 0 ? '20px' : ''}\n                />\n              )\n            })}\n          </Box>\n          <Flex mt=\"12px\" p=\"12px\" bg=\"primary_yellow_opacity.10\" borderRadius=\"12px\">\n            <Box>\n              <Text color=\"primary_yellow\" align=\"left\" fontSize=\"12px\" lineHeight=\"2\">\n                The token is not on the Frequently Traded List. Please note that anyone can create a token on Sui blockchain with any name, including\n                creating fake versions of existing tokens or tokens that claim to represent projects that do not have a token. Always conduct your own\n                research before trading.\n              </Text>\n              <HStack mt=\"8px\" bg=\"bg_primary\" borderRadius=\"8px\" width=\"100%\" p=\"12px 0\" justifyContent=\"center\" alignItems=\"center\">\n                <CheckBox checked={checked} onClick={() => setChecked(!checked)} />\n                <Text ml=\"12px\" color=\"text_caption\">\n                  I acknowledge the risk\n                </Text>\n              </HStack>\n            </Box>\n          </Flex>\n\n          <HStack w=\"100%\" justifyContent=\"space-between\" gap=\"16px\" p=\"8px 0px 16px\">\n            <Button borderRadius=\"8px\" variant=\"outline\" flex=\"1\" fontSize=\"14px\" onClick={cancelClick} p=\"0 15px\">\n              Cancel\n            </Button>\n            <Button\n              borderRadius=\"8px\"\n              flex=\"1\"\n              fontSize=\"14px\"\n              disabled={!checked}\n              onClick={() => {\n                if (addToken) {\n                  addImportTokenList(warningTokenList)\n                } else {\n                  addLiquidityTrustTokenList(warningTokenList)\n                }\n                setIsOpen(false)\n              }}\n            >\n              Confirm\n            </Button>\n          </HStack>\n        </Box>\n      )}\n    </>\n  )\n}\n\nfunction useWarningTokenTips(props: WarningTokenTipsModalProps) {\n  const { addImportTokenList, addLiquidityTrustTokenList } = useTokenSelect()\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    setChecked(false)\n  }, [])\n  const { tokensInfo, waringModalCancel, addToken = false } = props\n  const [warningTokenList, setWarningTokenList] = useState<Token[]>([])\n  const { getTokenSource, getTrustTokenSource } = useGetTokenSource()\n  const { importTokenList } = useTokenSelectStore()\n  const { verifiedTokenMap } = useTokenStore()\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    if (tokensInfo) {\n      if (addToken) {\n        const result = getTokenSource(tokensInfo)\n        if (verifiedTokenMap && verifiedTokenMap.size > 0 && (!importTokenList || importTokenList.length == 0 || importTokenList.length > 0)) {\n          if (result.length > 0) {\n            setWarningTokenList(result)\n            setIsOpen(true)\n          } else {\n            setIsOpen(false)\n          }\n        }\n      } else {\n        const result = getTrustTokenSource(tokensInfo)\n        if (verifiedTokenMap && verifiedTokenMap.size > 0) {\n          if (result.length > 0) {\n            setWarningTokenList(result)\n            setIsOpen(true)\n          } else {\n            setIsOpen(false)\n          }\n        }\n      }\n    }\n  }, [tokensInfo, verifiedTokenMap?.size, addToken])\n\n  const cancelClick = () => {\n    waringModalCancel(warningTokenList)\n    setIsOpen(false)\n  }\n\n  return {\n    warningTokenList,\n    setIsOpen,\n    isOpen,\n    cancelClick,\n    checked,\n    setChecked,\n    addImportTokenList,\n    addLiquidityTrustTokenList\n  }\n}\n\nexport { WarningTokenTipToWidget }\n"],"names":["WarningTokenTipsModal","props","tokensInfo","waringModalCancel","addToken","isApp","useWindowWidth","warningTokenList","setIsOpen","isOpen","cancelClick","checked","setChecked","addImportTokenList","addLiquidityTrustTokenList","useWarningTokenTips","jsxs","Modal","jsx","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","Box","tokenInfo","index","SingleTokenInfo","Flex","Text","HStack","CheckBox","ModalFooter","Button","useTokenSelect","useState","useEffect","setWarningTokenList","getTokenSource","getTrustTokenSource","useGetTokenSource","importTokenList","useTokenSelectStore","verifiedTokenMap","useTokenStore","result"],"mappings":"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"}
=======
{"version":3,"file":"WarningTokenTipModal-D7yu2Ia9.js","sources":["../../../cetus-design/src/components/common/WarningTokenTipModal.tsx"],"sourcesContent":["import useTokenSelect from '@/hook/useTokenSelect'\nimport useGetTokenSource from '@cetus/hooks/src/useGetTokenSource'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenStore from '@cetus/stores/src/token'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { Token } from '@cetus/types'\nimport { CheckBox } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text\n} from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport SingleTokenInfo from './SingleTokenInfo'\n\ntype WarningTokenTipsModalProps = {\n  tokensInfo: Token[]\n  waringModalCancel: (tokenInfo: Token[]) => void\n  addToken?: boolean\n}\n\nexport default function WarningTokenTipsModal(props: WarningTokenTipsModalProps) {\n  const { tokensInfo, waringModalCancel, addToken = false } = props\n  const { isApp } = useWindowWidth()\n  const { warningTokenList, setIsOpen, isOpen, cancelClick, checked, setChecked, addImportTokenList, addLiquidityTrustTokenList } =\n    useWarningTokenTips(props)\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={() => {\n        cancelClick()\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: 422 }}>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Tips\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\">\n          <Box p=\"22px 12px\" bg=\"bg_primary\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"8px\">\n            {warningTokenList.map((tokenInfo, index) => {\n              return (\n                <SingleTokenInfo\n                  portal={false}\n                  key={tokenInfo.coin_type}\n                  token={tokenInfo}\n                  haveName={false}\n                  haveAddress={true}\n                  addressAbridgeStyle={isApp ? 'short' : 'long'}\n                  imgBoxStyle={{ w: '40px', h: '40px' }}\n                  marginTop={index > 0 ? '20px' : ''}\n                />\n              )\n            })}\n          </Box>\n          <Flex mt=\"12px\" p=\"12px\" bg=\"primary_yellow_opacity.10\" borderRadius=\"12px\">\n            <Box>\n              <Text color=\"primary_yellow\" align=\"left\" fontSize=\"12px\" lineHeight=\"2\">\n                The token is not on the Frequently Traded List. Please note that anyone can create a token on Sui blockchain with any name, including\n                creating fake versions of existing tokens or tokens that claim to represent projects that do not have a token. Always conduct your own\n                research before trading.\n              </Text>\n              <HStack mt=\"8px\" bg=\"bg_primary\" borderRadius=\"8px\" width=\"100%\" p=\"12px 0\" justifyContent=\"center\" alignItems=\"center\">\n                <CheckBox checked={checked} onClick={() => setChecked(!checked)} />\n                <Text ml=\"12px\" color=\"text_caption\">\n                  I acknowledge the risk\n                </Text>\n              </HStack>\n            </Box>\n          </Flex>\n        </ModalBody>\n        <ModalFooter justifyContent=\"space-between\" gap=\"16px\" p=\"8px 16px 16px\">\n          <Button\n            borderRadius=\"8px\"\n            variant=\"outline\"\n            flex=\"1\"\n            fontSize=\"14px\"\n            onClick={() => {\n              waringModalCancel(warningTokenList)\n              setIsOpen(false)\n            }}\n            p=\"0 15px\"\n          >\n            Cancel\n          </Button>\n          <Button\n            borderRadius=\"8px\"\n            flex=\"1\"\n            fontSize=\"14px\"\n            disabled={!checked}\n            onClick={() => {\n              if (addToken) {\n                addImportTokenList(warningTokenList)\n              } else {\n                addLiquidityTrustTokenList(warningTokenList)\n              }\n              setIsOpen(false)\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst WarningTokenTipToWidget = (props: WarningTokenTipsModalProps) => {\n  const { tokensInfo, waringModalCancel, addToken = false } = props\n  const { warningTokenList, setIsOpen, isOpen, cancelClick, checked, setChecked, addImportTokenList, addLiquidityTrustTokenList } =\n    useWarningTokenTips(props)\n\n  return (\n    <WarningTokenTipsContent\n      warningTokenList={warningTokenList}\n      checked={checked}\n      setChecked={setChecked}\n      addImportTokenList={addImportTokenList}\n      addLiquidityTrustTokenList={addLiquidityTrustTokenList}\n      setIsOpen={setIsOpen}\n      addToken={addToken}\n      isOpen={isOpen}\n      cancelClick={cancelClick}\n    />\n  )\n}\n\nconst WarningTokenTipsContent = ({\n  warningTokenList,\n  checked,\n  setChecked,\n  addImportTokenList,\n  addLiquidityTrustTokenList,\n  setIsOpen,\n  addToken,\n  isOpen,\n  cancelClick\n}: {\n  warningTokenList: Token[]\n  checked: boolean\n  setChecked: (value: boolean) => void\n  addImportTokenList: (value: Token[]) => void\n  addLiquidityTrustTokenList: (value: Token[]) => void\n  setIsOpen: (value: boolean) => void\n  addToken?: boolean\n  isOpen: boolean\n  cancelClick: () => void\n}) => {\n  return (\n    <>\n      {isOpen && (\n        <Box w=\"100%\">\n          <Box p=\"22px 12px\" bg=\"bg_primary\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"8px\">\n            {warningTokenList.map((tokenInfo, index) => {\n              return (\n                <SingleTokenInfo\n                  key={tokenInfo.coin_type}\n                  token={tokenInfo}\n                  haveName={false}\n                  haveAddress={true}\n                  addressAbridgeStyle=\"long\"\n                  imgBoxStyle={{ w: '40px', h: '40px' }}\n                  marginTop={index > 0 ? '20px' : ''}\n                />\n              )\n            })}\n          </Box>\n          <Flex mt=\"12px\" p=\"12px\" bg=\"primary_yellow_opacity.10\" borderRadius=\"12px\">\n            <Box>\n              <Text color=\"primary_yellow\" align=\"left\" fontSize=\"12px\" lineHeight=\"2\">\n                The token is not on the Frequently Traded List. Please note that anyone can create a token on Sui blockchain with any name, including\n                creating fake versions of existing tokens or tokens that claim to represent projects that do not have a token. Always conduct your own\n                research before trading.\n              </Text>\n              <HStack mt=\"8px\" bg=\"bg_primary\" borderRadius=\"8px\" width=\"100%\" p=\"12px 0\" justifyContent=\"center\" alignItems=\"center\">\n                <CheckBox checked={checked} onClick={() => setChecked(!checked)} />\n                <Text ml=\"12px\" color=\"text_caption\">\n                  I acknowledge the risk\n                </Text>\n              </HStack>\n            </Box>\n          </Flex>\n\n          <HStack w=\"100%\" justifyContent=\"space-between\" gap=\"16px\" p=\"8px 0px 16px\">\n            <Button borderRadius=\"8px\" variant=\"outline\" flex=\"1\" fontSize=\"14px\" onClick={cancelClick} p=\"0 15px\">\n              Cancel\n            </Button>\n            <Button\n              borderRadius=\"8px\"\n              flex=\"1\"\n              fontSize=\"14px\"\n              disabled={!checked}\n              onClick={() => {\n                if (addToken) {\n                  addImportTokenList(warningTokenList)\n                } else {\n                  addLiquidityTrustTokenList(warningTokenList)\n                }\n                setIsOpen(false)\n              }}\n            >\n              Confirm\n            </Button>\n          </HStack>\n        </Box>\n      )}\n    </>\n  )\n}\n\nfunction useWarningTokenTips(props: WarningTokenTipsModalProps) {\n  const { addImportTokenList, addLiquidityTrustTokenList } = useTokenSelect()\n  const [checked, setChecked] = useState(false)\n  useEffect(() => {\n    setChecked(false)\n  }, [])\n  const { tokensInfo, waringModalCancel, addToken = false } = props\n  const [warningTokenList, setWarningTokenList] = useState<Token[]>([])\n  const { getTokenSource, getTrustTokenSource } = useGetTokenSource()\n  const { importTokenList } = useTokenSelectStore()\n  const { verifiedTokenMap } = useTokenStore()\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    if (tokensInfo) {\n      if (addToken) {\n        const result = getTokenSource(tokensInfo)\n        if (verifiedTokenMap && verifiedTokenMap.size > 0 && (!importTokenList || importTokenList.length == 0 || importTokenList.length > 0)) {\n          if (result.length > 0) {\n            setWarningTokenList(result)\n            setIsOpen(true)\n          } else {\n            setIsOpen(false)\n          }\n        }\n      } else {\n        const result = getTrustTokenSource(tokensInfo)\n        if (verifiedTokenMap && verifiedTokenMap.size > 0) {\n          if (result.length > 0) {\n            setWarningTokenList(result)\n            setIsOpen(true)\n          } else {\n            setIsOpen(false)\n          }\n        }\n      }\n    }\n  }, [tokensInfo, verifiedTokenMap?.size, addToken])\n\n  const cancelClick = () => {\n    waringModalCancel(warningTokenList)\n    setIsOpen(false)\n  }\n\n  return {\n    warningTokenList,\n    setIsOpen,\n    isOpen,\n    cancelClick,\n    checked,\n    setChecked,\n    addImportTokenList,\n    addLiquidityTrustTokenList\n  }\n}\n\nexport { WarningTokenTipToWidget }\n"],"names":["WarningTokenTipsModal","props","tokensInfo","waringModalCancel","addToken","isApp","useWindowWidth","warningTokenList","setIsOpen","isOpen","cancelClick","checked","setChecked","addImportTokenList","addLiquidityTrustTokenList","useWarningTokenTips","jsxs","Modal","jsx","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","Box","tokenInfo","index","SingleTokenInfo","Flex","Text","HStack","CheckBox","ModalFooter","Button","useTokenSelect","useState","useEffect","setWarningTokenList","getTokenSource","getTrustTokenSource","useGetTokenSource","importTokenList","useTokenSelectStore","verifiedTokenMap","useTokenStore","result"],"mappings":"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"}
>>>>>>> 0c24c70bb8f4b262d669a2d6c2f695cdc5861cf4:dist/assets/WarningTokenTipModal-D7yu2Ia9.js.map
