{"version":3,"file":"Dca-D782eq1k.js","sources":["../../src/hooks/dca/useDcaCancel.ts","../../src/hooks/dca/useDcaClaim.ts","../../src/store/dca/index.ts","../../src/hooks/dca/useGetDcaOrderHistory.ts","../../src/components/dca/OverviewOrders.tsx","../../src/components/dca/DcaItem.tsx","../../src/components/dca/ActiveAndPastDcas.tsx","../../src/hooks/dca/useDcaConfig.ts","../../src/hooks/dca/useGetDcaQuote.ts","../../src/hooks/dca/useDcaHook.ts","../../src/hooks/dca/useGetDcaTokenList.ts","../../src/hooks/dca/useOpenDcaOrder.ts","../../src/components/dca/DetailsContent.tsx","../../src/components/dca/ConfirmModal.tsx","../../src/components/dca/DetailsBlock.tsx","../../src/components/dca/InvestAndOrders.tsx","../../src/components/dca/MinAndMaxPrice.tsx","../../src/components/dca/DcaInputBlock.tsx","../../src/utils/dca.ts","../../src/hooks/dca/useGetDcaOrderList.ts","../../src/pages/Dca.tsx"],"sourcesContent":["import usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\n\nexport default function () {\n  const { peripherySdk } = usePeripherySDKStore()\n\n  const dcaCloseOrderPayload = async params => {\n    const tx = await peripherySdk.Dca.dcaCloseOrderPayload(params)\n    return tx\n  }\n  return { dcaCloseOrderPayload }\n}\n","import usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\n\nexport default function () {\n  const { peripherySdk } = usePeripherySDKStore()\n\n  const dcaWithdrawPayload = async (params: any) => {\n    console.log('🚀🚀🚀 ~ file: useDcaClaim.ts:12 ~ params:', params)\n    const tx = await peripherySdk.Dca.withdrawAll(params)\n    return tx\n  }\n  return { dcaWithdrawPayload }\n}\n","import { DcaConfig, DcaOrderHistoryData, DcaQuoteData } from '@/types/dca'\nimport { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface DcaState {\n  sellCoin: Token | undefined\n  setSellCoin: (value: Token) => void\n  buyCoin: Token | undefined\n  setBuyCoin: (value: Token) => void\n  sellAmount: string\n  setSellAmount: (value: string) => void\n  buyAmount: string\n  setBuyAmount: (value: string) => void\n  orderNum: string\n  setOrderNum: (value: string) => void\n  investNum: string\n  setInvestNum: (value: string) => void\n  currentInvest: string\n  setCurrentInvest: (value: string) => void\n  currentCoinKey: string\n  setCurrentCoinKey: (value: string) => void\n  pageLoading: boolean\n  setPageLoading: (value: boolean) => void\n  dcaConfig: DcaConfig\n  setDcaConfig: (value: DcaConfig) => void\n  dcaQuote: DcaQuoteData\n  setDcaQuote: (value: DcaQuoteData) => void\n  orderHistoryObj: DcaOrderHistoryData\n  setOrderHistoryObj: (data: DcaOrderHistoryData) => void\n  inCoinWhiteList: Token[]\n  setInCoinWhiteList: (list: Token[]) => void\n  outCoinWhiteList: Token[]\n  setOutCoinWhiteList: (list: Token[]) => void\n  pageDirect: boolean\n  setPageDirect: (pageDirect: boolean) => void\n  isDcaRefresh: boolean\n  setIsDcaRefresh: (isDcaRefresh: boolean) => void\n  dcaMode: string\n  setDcaMode: (dcaMode: string) => void\n  sellTotalAmount: string\n  setSellTotalAmount: (sellTotalAmount: string) => void\n  lowerPriceSize: string\n  setLowerPriceSize: (lowerPriceSize: string) => void\n  upperPriceSize: string\n  setUpperPriceSize: (upperPriceSize: string) => void\n}\n\nconst store: StateCreator<DcaState> = (set, get) => ({\n  upperPriceSize: '0%',\n  setUpperPriceSize: (upperPriceSize: string) => {\n    set(() => ({\n      upperPriceSize\n    }))\n  },\n  lowerPriceSize: '0%',\n  setLowerPriceSize: (lowerPriceSize: string) => {\n    set(() => ({\n      lowerPriceSize\n    }))\n  },\n  dcaMode: 'total',\n  setDcaMode: (dcaMode: string) => {\n    set(() => ({\n      dcaMode\n    }))\n  },\n  isDcaRefresh: false,\n  setIsDcaRefresh: (isDcaRefresh: boolean) => {\n    set(() => ({\n      isDcaRefresh\n    }))\n  },\n  pageDirect: false,\n  setPageDirect: (pageDirect: boolean) => {\n    set(() => ({\n      pageDirect\n    }))\n  },\n  sellTotalAmount: '',\n  setSellTotalAmount: (value: string) => {\n    set(() => ({\n      sellTotalAmount: value\n    }))\n  },\n  sellAmount: '',\n  setSellAmount: (value: string) => {\n    set(() => ({\n      sellAmount: value\n    }))\n  },\n  buyAmount: '',\n  setBuyAmount: (value: string) => {\n    set(() => ({\n      buyAmount: value\n    }))\n  },\n  sellCoin: undefined,\n  setSellCoin: (value: Token) => {\n    set(() => ({\n      sellCoin: value\n    }))\n  },\n  buyCoin: undefined,\n  setBuyCoin: (value: Token) => {\n    set(() => ({\n      buyCoin: value\n    }))\n  },\n  orderNum: '2',\n  setOrderNum: (value: string) => {\n    set(() => ({\n      orderNum: value\n    }))\n  },\n  investNum: '1',\n  setInvestNum: (value: string) => {\n    set(() => ({\n      investNum: value\n    }))\n  },\n  currentCoinKey: 'sellCoin',\n  setCurrentCoinKey: (value: string) => {\n    set(() => ({\n      currentCoinKey: value\n    }))\n  },\n  currentInvest: 'Hour',\n  setCurrentInvest: (value: string) => {\n    set(() => ({\n      currentInvest: value\n    }))\n  },\n  pageLoading: true,\n  setPageLoading: (value: boolean) => {\n    set(() => ({\n      pageLoading: value\n    }))\n  },\n  dcaConfig: {},\n  setDcaConfig: (value: DcaConfig) => {\n    set(() => ({\n      dcaConfig: value\n    }))\n  },\n  dcaQuote: {},\n  setDcaQuote: (value: DcaQuoteData) => {\n    set(() => ({\n      dcaQuote: value\n    }))\n  },\n  orderHistoryObj: {},\n  setOrderHistoryObj: (data: DcaOrderHistoryData) => {\n    set(() => ({\n      orderHistoryObj: { ...get().orderHistoryObj, ...data }\n    }))\n  },\n  inCoinWhiteList: [],\n  setInCoinWhiteList: (list: Token[]) => {\n    set(() => ({\n      inCoinWhiteList: list\n    }))\n  },\n  outCoinWhiteList: [],\n  setOutCoinWhiteList: (list: Token[]) => {\n    set(() => ({\n      outCoinWhiteList: list\n    }))\n  }\n})\n\nconst useDcaStore = create(store)\nexport default useDcaStore\n","import { DcaOrderHistoryPath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useGetDcaOrderHistory() {\n  const { fetchByApi } = useFetch()\n  const { setOrderHistoryObj } = useDcaStore()\n\n  // 没有coin详情，相关信息需要在UI层处理\n  const getDcaOrderHistory = async ({ orderId, limit, offset }: { orderId: string; limit: number; offset: number }) => {\n    const res = await fetchByApi(DcaOrderHistoryPath, 'GET', {\n      order_id: orderId,\n      limit,\n      offset\n    })\n    console.log('🚀 ~ file: useGetDcaOrderHistory.ts:16 ~ useGetDcaOrderHistory ~ res:', res)\n    if (res?.list) {\n      const result = {\n        [orderId]: {\n          list:\n            res?.list?.map((item: any) => {\n              return {\n                inAmount: item?.in_amount,\n                outAmount: item?.out_amount,\n                inCoinType: item?.in_coin,\n                outCoinType: item?.out_coin,\n                time: item?.execution_at,\n                tx: item?.tx\n              }\n            }) || [],\n          total: res?.total || 0\n        }\n      }\n\n      setOrderHistoryObj(result)\n      return result\n    }\n  }\n\n  return {\n    getDcaOrderHistory\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useDcaClaim from '@/hooks/dca/useDcaClaim'\nimport useGetDcaOrderHistory from '@/hooks/dca/useGetDcaOrderHistory'\nimport { Block, ErrorTips, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { HTextLabelBox, Icon, NoData, Pagination } from '@cetus/ui-kit'\nimport { bnToAmount, d, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport { Box, Button, Center, HStack, HTMLChakraProps, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode, useEffect, useMemo, useState } from 'react'\n\nexport default function OverviewOrders({\n  isDetail,\n  currentTabVal,\n  orderInfo,\n  handleRefresh,\n  pageDirect\n}: {\n  pageDirect: boolean\n  isDetail: boolean\n  currentTabVal: string\n  orderInfo: any\n  handleRefresh: () => void\n}) {\n  const { isApp } = useWindowWidth()\n  const { inCoin: sellCoin, outCoin: buyCoin } = orderInfo\n  const { getDcaOrderHistory } = useGetDcaOrderHistory()\n  const [direct, setDirect] = useState(pageDirect)\n  const [rateDirect, setRateDirect] = useState(pageDirect)\n  const orderHistoryPageSize = 10\n  const [orderHistoryList, setOrderHistoryList] = useState([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [orderHistoryListLoading, setOrderHistoryListLoading] = useState(false)\n\n  const [currentTab, setCurrentTab] = useState<Tab>({\n    label: 'Overview',\n    value: 'overview'\n  })\n  const tabList: Tab[] = useMemo(() => {\n    return [\n      {\n        label: 'Overview',\n        value: 'overview'\n      },\n      {\n        label: orderHistoryListLoading || Number(total) === 0 ? 'Orders' : `Orders (${total})`,\n        value: 'orders'\n      }\n    ]\n  }, [total])\n\n  const handleChangeTab = (item: Tab) => {\n    setCurrentTab(item)\n    if (orderInfo?.orderID) {\n      handleGetDcaOrderHistory(orderInfo?.orderID, orderHistoryPageSize, 0, false)\n    }\n  }\n\n  useEffect(() => {\n    if (isDetail && orderInfo?.orderID) {\n      handleGetDcaOrderHistory(orderInfo?.orderID, orderHistoryPageSize, 0, false)\n    }\n  }, [orderInfo, isDetail])\n\n  const handleCurrentPage = (page: number) => {\n    console.log('🚀 ~ handleCurrentPage ~ page:', page)\n    const offset = (page - 1) * orderHistoryPageSize\n    handleGetDcaOrderHistory(orderInfo?.orderID, orderHistoryPageSize, offset, false)\n    setCurrentPage(page)\n  }\n\n  const handleGetDcaOrderHistory = async (orderId: string, limit: number, offset: number, loading: boolean = false) => {\n    console.log('🚀 ~ handleGetDcaOrderHistory ~ loading:', loading)\n    setOrderHistoryListLoading(loading)\n    const res = await getDcaOrderHistory({\n      orderId,\n      limit,\n      offset\n    })\n    console.log('🚀 ~ handleGetDcaOrderHistory ~ res?.list:', res, res[orderId])\n    if (res[orderId]?.list) {\n      setOrderHistoryList(res[orderId]?.list)\n    }\n    if (res[orderId]?.total) {\n      setTotal(res[orderId]?.total)\n    }\n    setOrderHistoryListLoading(false)\n    console.log('🚀 ~ file: TestData.tsx:170 ~ handleGetDcaOrderHistory ~ res:', res)\n  }\n\n  const [isClaimLoading, setIsClaimLoading] = useState(false)\n  const { dcaWithdrawPayload } = useDcaClaim()\n  const { fetchCoinBalance } = useAccountBalance()\n  const { signAndExecuteTransaction } = useTransaction()\n  const toClaim = async () => {\n    setIsClaimLoading(true)\n    try {\n      console.log('🚀 ~ closeOrder ~ orderInfo:', orderInfo)\n      const paramsArr: any = []\n      const claimOrderParams = {\n        order_id: orderInfo?.orderID,\n        in_coin_type: orderInfo?.inCoin.coin_type,\n        out_coin_type: orderInfo?.outCoin.coin_type\n      }\n      paramsArr.push(claimOrderParams)\n      console.log('🚀 ~ toClaim ~ claimOrderParams:', paramsArr)\n      const tx = await dcaWithdrawPayload(paramsArr)\n      const res = await signAndExecuteTransaction(tx, {\n        getShowInfo: (status: TransactionStatusType) => {\n          const info: CommonTypeInfo = {\n            modalDescriptionText: `${orderInfo?.outCoin?.symbol} Claimed`,\n            toastTitleText: `${orderInfo?.outCoin?.symbol} Claimed`\n          }\n          if (status === 'success') {\n            info.toastDescriptionContent = ''\n          }\n\n          return info\n        }\n      })\n      if (res) {\n        console.log('🚀 ~ toClaim ~ res:', res)\n        // 重新拿数据\n        setTimeout(() => {\n          handleRefresh()\n          // fetchCoinBalance(currentAccount?.address, orderInfo?.outCoin.coin_type)\n        }, 2000)\n      }\n      setIsClaimLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ toClaim ~ error:', error)\n      setIsClaimLoading(false)\n    }\n  }\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack w=\"100%\" gap=\"20px\">\n      <SelectTab\n        type=\"outlineTab\"\n        wrapStyle={{\n          w: '100%',\n          h: '36px',\n          borderRadius: '8px',\n          p: '4px',\n          mt: '-1px',\n          zIndex: '1'\n        }}\n        itemStyle={{\n          w: '50%',\n          fontSize: '12px'\n        }}\n        tabList={tabList}\n        currentTab={currentTab.label}\n        handleChangeTab={handleChangeTab}\n      />\n      <Block p=\"30px 8px 20px\" mt=\"-42px\" borderRadius=\"8px\" zIndex=\"0\" bg=\"bg_primary\">\n        {/* {currentTab.value == 'orders'  &&( */}\n        {currentTab.value == 'orders' &&\n          (orderHistoryListLoading ? (\n            <Skeleton height=\"4\" width=\"100%\" />\n          ) : orderHistoryList?.length === 0 ? (\n            <NoData type=\"nodata\" text=\"No orders\" noBorder p=\"12px\" bg=\"none\" />\n          ) : (\n            <VStack w=\"100%\" align=\"flex-start\" gap=\"16px\" mt=\"12px\">\n              {!isApp && (\n                <HStack w=\"100%\" flexDirection={{ base: 'column', lg: 'row' }}>\n                  <DcaVLabel label=\"Order info\" value=\"\" w={{ base: '100%', lg: '40%' }} />\n                  <DcaVLabel\n                    label=\"Rate\"\n                    value=\"\"\n                    w={{ base: '100%', lg: 'calc(32% - 16px)' }}\n                    direct={rateDirect}\n                    onChangeDirect={() => setRateDirect(!rateDirect)}\n                  />\n                  <DcaVLabel label=\"Time (UTC)\" value=\"\" w={{ base: '100%', lg: '28%' }} align=\"flex-end\" textAlign=\"right\" />\n                </HStack>\n              )}\n              {orderHistoryList?.map((orderHistory: any) => {\n                console.log('🚀 ~ {orderHistoryList?.map ~ orderHistory:', orderHistory)\n                const inAmount = bnToAmount(orderHistory.inAmount, sellCoin?.decimals)\n                const outAmount = bnToAmount(orderHistory.outAmount, buyCoin?.decimals)\n                const rate = d(inAmount).div(outAmount).toString()\n                const rateResever = d(1).div(rate).toString()\n                return (\n                  <HStack\n                    w=\"100%\"\n                    key={orderHistory?.time}\n                    flexDirection={{ base: 'column', lg: 'row' }}\n                    borderBottom={isApp ? '1px solid' : 'none'}\n                    pb={isApp ? '16px' : '0'}\n                    borderColor=\"border\"\n                    _last={{\n                      borderBottom: 'none',\n                      pb: '0'\n                    }}\n                  >\n                    <DcaVLabel\n                      label={isApp ? 'Order info' : ''}\n                      value={`${formatNumber(inAmount)} ${sellCoin.symbol} → ${formatNumber(outAmount)} ${buyCoin.symbol}`}\n                      w={{ base: '100%', lg: '40%' }}\n                    />\n                    <DcaVLabel\n                      label={isApp ? 'Rate' : ''}\n                      value={\n                        rateDirect\n                          ? `${formatNumber(rate)} ${sellCoin.symbol} per ${buyCoin.symbol}`\n                          : `${formatNumber(rateResever)} ${buyCoin.symbol} per ${sellCoin.symbol}`\n                      }\n                      w={{ base: '100%', lg: 'calc(32% - 16px)' }}\n                      direct={rateDirect}\n                      showDirectIcon={isApp ? true : false}\n                      onChangeDirect={() => setRateDirect(!rateDirect)}\n                    />\n                    <DcaVLabel\n                      label={isApp ? 'Time (UTC)' : ''}\n                      value={\n                        <HStack h=\"12px\">\n                          <Text fontSize=\"12px\" color=\"text_caption\">\n                            {timeFormatUTC(orderHistory?.time * 1000, 'YMDHM')}\n                          </Text>\n                          <Icon\n                            xlinkHref=\"#icon-icon_link1\"\n                            onClick={() => {\n                              window.open(getExplorerUrl(orderHistory?.tx, 'tx'))\n                            }}\n                          />\n                        </HStack>\n                      }\n                      w={{ base: '100%', lg: '28%' }}\n                      align=\"flex-end\"\n                      textAlign=\"right\"\n                    />\n                  </HStack>\n                )\n              })}\n              {d(total).gt(orderHistoryPageSize) && (\n                <Center w=\"100%\">\n                  <Pagination total={total} size={orderHistoryPageSize} currentPage={currentPage} onChange={handleCurrentPage} />\n                </Center>\n              )}\n            </VStack>\n          ))}\n\n        {currentTab.value == 'overview' && (\n          <VStack align=\"flex-start\" gap=\"20px\">\n            {orderInfo?.isShowTradeTips && orderInfo?.orderStatus == 'Active' && currentTabVal == 'active' && <WarningText />}\n            <VStack w=\"100%\" borderRadius=\"8px\" p=\"12px\" bg=\"card_bg\" gap=\"12px\">\n              <HTextLabelBox\n                isLoading={false}\n                label={`DCA  ${sellCoin?.symbol} Balance`}\n                value={`${formatNumber(orderInfo?.inBalance, 2) || '0'} ${sellCoin?.symbol}`}\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n              />\n              <HStack w=\"100%\" justify=\"space-between\">\n                <Text fontSize=\"12px\">DCA {buyCoin?.symbol} Balance</Text>\n                <HStack>\n                  <Text color=\"text_caption\" fontSize=\"12px\">\n                    {orderInfo?.outBalance > 0 ? formatNumber(orderInfo?.outBalance) : orderInfo?.outBalance} {buyCoin?.symbol}\n                  </Text>\n                  {currentTabVal == 'active' && (\n                    <Button\n                      isLoading={isClaimLoading}\n                      onClick={toClaim}\n                      disabled={orderInfo?.outBalance <= 0 || isClaimLoading}\n                      w=\"60px\"\n                      h=\"20px\"\n                      fontSize=\"12px\"\n                      borderRadius=\"4px\"\n                      variant=\"outline\"\n                    >\n                      Claim\n                    </Button>\n                  )}\n                </HStack>\n              </HStack>\n              <HTextLabelBox\n                isLoading={false}\n                label=\"Amount Withdrawn\"\n                value={\n                  currentTabVal == 'active'\n                    ? `${formatNumber(orderInfo?.outWithdraw, 2)}`\n                    : orderInfo?.orderStatus == 'PartialDeal' || orderInfo?.orderStatus == 'Close'\n                      ? d(orderInfo?.outWithdraw).gt(0)\n                        ? `${formatNumber(orderInfo?.inWithdrawn)} ${sellCoin?.symbol} ${formatNumber(orderInfo?.outWithdraw)} ${buyCoin?.symbol}`\n                        : `${formatNumber(orderInfo?.inWithdrawn)} ${sellCoin?.symbol}`\n                      : `${formatNumber(orderInfo?.outWithdraw)} ${buyCoin?.symbol}`\n                }\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n              />\n            </VStack>\n            <HStack\n              flexWrap=\"wrap\"\n              p={{ base: '0', lg: '0 12px' }}\n              mt={{\n                base: '-12px',\n                lg: '-28px'\n              }}\n              sx={{\n                '>div': {\n                  mt: {\n                    base: '12px',\n                    lg: '28px'\n                  },\n                  w: {\n                    base: '100%',\n                    lg: 'calc((100% - 66px)/3)'\n                  },\n                  '&:nth-child(3n+1)': {\n                    mr: {\n                      base: '0',\n                      lg: '50px'\n                    }\n                  }\n                }\n              }}\n            >\n              <DcaVLabel label=\"Invest Every\" value={orderInfo?.investEvery} />\n              <DcaVLabel label=\"# of Orders Left\" value={orderInfo?.ofOrderLeft} />\n              <DcaVLabel label=\"Each Order Size\" value={`${orderInfo?.eachOrderSize} ${sellCoin?.symbol}`} align=\"flex-end\" textAlign=\"right\" />\n              <DcaVLabel\n                label=\"Minimum Price\"\n                value={\n                  direct\n                    ? `${orderInfo?.minPrice} ${sellCoin?.symbol} per ${buyCoin?.symbol}`\n                    : `${orderInfo?.minPriceResever} ${buyCoin?.symbol} per ${sellCoin?.symbol}`\n                }\n                direct={direct}\n                onChangeDirect={() => setDirect(!direct)}\n              />\n              <DcaVLabel\n                label=\"Maximum Price\"\n                value={\n                  direct\n                    ? `${orderInfo?.maxPrice} ${sellCoin?.symbol} per ${buyCoin?.symbol}`\n                    : `${orderInfo?.maxPriceResever} ${buyCoin?.symbol} per ${sellCoin?.symbol}`\n                }\n                direct={direct}\n                onChangeDirect={() => setDirect(!direct)}\n              />\n              {currentTabVal == 'active' && (\n                <DcaVLabel\n                  label=\"Current Avg. Price\"\n                  value={\n                    direct\n                      ? `${orderInfo?.currentAvgPrice} ${sellCoin?.symbol} per ${buyCoin?.symbol}`\n                      : `${orderInfo?.currentAvgPriceResever} ${buyCoin?.symbol} per ${sellCoin?.symbol}`\n                  }\n                  align=\"flex-end\"\n                  textAlign=\"right\"\n                  direct={direct}\n                  onChangeDirect={() => setDirect(!direct)}\n                />\n              )}\n              {currentTabVal !== 'active' && orderInfo?.currentAvgPrice !== '--' && (\n                <DcaVLabel\n                  label=\"Avg. Price\"\n                  value={\n                    direct\n                      ? `${orderInfo?.currentAvgPrice} ${sellCoin?.symbol} per ${buyCoin?.symbol}`\n                      : `${orderInfo?.currentAvgPriceResever} ${buyCoin?.symbol} per ${sellCoin?.symbol}`\n                  }\n                  align=\"flex-end\"\n                  textAlign=\"right\"\n                  direct={direct}\n                  onChangeDirect={() => setDirect(!direct)}\n                />\n              )}\n              {currentTabVal == 'active' && <DcaVLabel label=\"Next Order (UTC)\" value={orderInfo?.nextCycleAt} />}\n              <DcaVLabel\n                label=\"Created (UTC)\"\n                value={orderInfo?.createAt}\n                align={currentTabVal == 'active' || (currentTabVal !== 'active' && orderInfo?.currentAvgPrice !== '--') ? 'flex-start' : 'flex-end'}\n              />\n            </HStack>\n          </VStack>\n        )}\n      </Block>\n    </VStack>\n  )\n}\ninterface DcaVLabelProps extends HTMLChakraProps<'div'> {\n  label: string\n  value: string | ReactNode\n  direct?: boolean\n  showDirectIcon?: boolean\n  textAlign?: 'left' | 'right'\n  onChangeDirect?: () => void\n}\nconst DcaVLabel = ({ label, value, direct, onChangeDirect, textAlign = 'left', showDirectIcon = true, ...rest }: DcaVLabelProps) => {\n  return (\n    <VStack\n      align=\"flex-start\"\n      flexDirection={{ base: 'row', lg: 'column' }}\n      w={{ base: '100%', lg: 'unset' }}\n      justify={{ base: 'space-between', lg: 'unset' }}\n      {...rest}\n    >\n      {label !== '' && (\n        <HStack h=\"12px\">\n          <Text fontSize=\"12px\">{label}</Text>\n          {onChangeDirect && showDirectIcon && <Icon xlinkHref=\"#icon-icon_swap1\" svgW=\"14px\" svgH=\"14px\" ml=\"-6px\" onClick={onChangeDirect} />}\n        </HStack>\n      )}\n      {value !== '' && (\n        <Box fontSize=\"12px\" color=\"text_caption\" textAlign={textAlign}>\n          {value}\n        </Box>\n      )}\n    </VStack>\n  )\n}\n\nconst WarningText = () => {\n  return (\n    <VStack p=\"12px 12px 0\" align=\"flex-start\">\n      <HStack>\n        <ErrorTips\n          tips=\"The system tried to execute your order multiple times but did not get it through. This is possibly because:\"\n          type=\"warning\"\n          tipsFontSize=\"12px\"\n          p=\"0\"\n          bg=\"none\"\n          svgW=\"20px\"\n          svgH=\"20px\"\n        />\n      </HStack>\n      <Text color=\"primary_yellow\" lineHeight=\"20px\" fontSize=\"12px\">\n        - The market price is not in your required price range\n      </Text>\n      <Text color=\"primary_yellow\" lineHeight=\"20px\" fontSize=\"12px\">\n        - The market no longer exit\n      </Text>\n      <Text color=\"primary_yellow\" lineHeight=\"20px\" fontSize=\"12px\">\n        - The market is extremely volatile\n      </Text>\n      <Text color=\"primary_yellow\" lineHeight=\"20px\" fontSize=\"12px\">\n        This DCA will continue to be attempted and the estimated end date may be extended until your order is fully executed.\n      </Text>\n    </VStack>\n  )\n}\n","import useTokenRank from '@/hooks/common/useTokenRank'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport useDcaCancel from '@/hooks/dca/useDcaCancel'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { formatNumber } from '@cetus/utils'\nimport { Button, HStack, Progress, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport RangeValue from '../position/RangeValue'\nimport OverviewOrders from './OverviewOrders'\n\nexport default function DcaItem({ currentTabVal, orderInfo, handleRefresh }: { currentTabVal: string; orderInfo: any; handleRefresh: () => void }) {\n  const { isApp } = useWindowWidth()\n  const { inCoin: sellCoin, outCoin: buyCoin } = orderInfo\n  const [isDetail, setIsDetail] = useState(false)\n  const [isCloseLoading, setIsCloseLoading] = useState(false)\n\n  useEffect(() => {\n    setIsDetail(false)\n  }, [currentTabVal])\n\n  const { getTokenRank } = useTokenRank()\n  const [pageDirect, setPageDirect] = useState(false)\n\n  useEffect(() => {\n    const direct = getTokenRank(sellCoin, buyCoin)\n    console.log('🚀 ~ useEffectDcaItem ~ direct:', buyCoin, sellCoin, direct)\n    setPageDirect(!direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const { dcaCloseOrderPayload } = useDcaCancel()\n  const { signAndExecuteTransaction } = useTransaction()\n  const closeOrder = async () => {\n    setIsCloseLoading(true)\n    try {\n      console.log('🚀 ~ closeOrder ~ orderInfo:', orderInfo)\n      const closeOrderParams = [\n        {\n          order_id: orderInfo?.orderID,\n          in_coin_type: orderInfo?.inCoin.coin_type,\n          out_coin_type: orderInfo?.outCoin.coin_type\n        }\n      ]\n      console.log('🚀🚀🚀 ~ file: dca-order-card.vue:280 ~ closeOrder ~ closeOrderParams:', closeOrderParams)\n      const tx = await dcaCloseOrderPayload(closeOrderParams)\n      const res = await signAndExecuteTransaction(tx, {\n        getShowInfo: (status: TransactionStatusType) => {\n          const info: CommonTypeInfo = {\n            modalDescriptionText: `Closing DCA order`,\n            toastTitleText: 'Closing DCA order'\n          }\n          if (status === 'success') {\n            info.modalDescriptionText = 'DCA Order Closed'\n            info.toastDescriptionContent = ''\n            info.toastTitleText = 'DCA Order Closed'\n          }\n\n          return info\n        }\n      })\n      console.log('🚀 ~ closeOrder ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        setTimeout(() => {\n          handleRefresh()\n        }, 2000)\n      }\n      setIsCloseLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ closeOrder ~ error:', error)\n      setIsCloseLoading(false)\n    }\n  }\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack w=\"100%\" gap=\"12px\" align=\"flex-start\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'flex-start', lg: 'center' }}>\n        <HStack>\n          <CoinPairImage\n            coinAIconUrl={sellCoin?.logo_url}\n            coinBIconUrl={buyCoin?.logo_url}\n            coinACoinType={sellCoin?.coin_type}\n            coinBCoinType={buyCoin?.coin_type}\n            w=\"28px\"\n            h=\"28px\"\n          />\n          <Text color=\"text_caption\">\n            {sellCoin?.symbol} → {buyCoin?.symbol}\n          </Text>\n          <Icon\n            xlinkHref=\"#icon-icon_link1\"\n            onClick={() => {\n              window.open(getExplorerUrl(orderInfo?.orderID, 'poolAddress'))\n            }}\n          />\n        </HStack>\n        {!isApp && (\n          <BtnContent\n            currentTabVal={currentTabVal}\n            isCloseLoading={isCloseLoading}\n            closeOrder={closeOrder}\n            orderInfo={orderInfo}\n            isDetail={isDetail}\n            onClickDetail={() => setIsDetail(!isDetail)}\n          />\n        )}\n      </HStack>\n      <HStack>\n        <Text color=\"text_caption\" fontSize=\"12px\">\n          {formatNumber(orderInfo?.inDepositedOut)} {sellCoin?.symbol}\n        </Text>\n        <Text color=\"primary_gray\" fontSize=\"12px\">\n          / {formatNumber(orderInfo?.inDeposited)} {sellCoin?.symbol}\n        </Text>\n        <Text color=\"primary_gray\" fontSize=\"12px\">\n          ({orderInfo?.inBalanceRatio}%)\n        </Text>\n        <Progress\n          w=\"50px\"\n          h=\"4px\"\n          value={orderInfo?.inBalanceRatio}\n          bg=\"#282828\"\n          sx={{\n            'div[role=\"progressbar\"]': {\n              bg: 'primary'\n            }\n          }}\n        />\n      </HStack>\n      <HStack w=\"100%\">\n        <Text color=\"primary_gray\" fontSize=\"12px\">\n          Price Range\n        </Text>\n        <RangeValue\n          displayTokenA={buyCoin}\n          displayTokenB={sellCoin}\n          isRank={true}\n          priceInfo={{\n            minPrice: orderInfo?.minPrice,\n            maxPrice: orderInfo?.maxPrice,\n            minPriceResever: orderInfo?.minPriceResever,\n            maxPriceResever: orderInfo?.maxPriceResever\n          }}\n          fontSize=\"12px\"\n        />\n      </HStack>\n      {isApp && (\n        <BtnContent\n          currentTabVal={currentTabVal}\n          isCloseLoading={isCloseLoading}\n          closeOrder={closeOrder}\n          orderInfo={orderInfo}\n          isDetail={isDetail}\n          onClickDetail={() => setIsDetail(!isDetail)}\n        />\n      )}\n      {isDetail && (\n        <OverviewOrders\n          pageDirect={pageDirect}\n          isDetail={isDetail}\n          currentTabVal={currentTabVal}\n          orderInfo={orderInfo}\n          handleRefresh={handleRefresh}\n        />\n      )}\n    </VStack>\n  )\n}\n\nconst BtnContent = ({\n  currentTabVal,\n  isCloseLoading,\n  closeOrder,\n  orderInfo,\n  isDetail,\n  onClickDetail\n}: {\n  currentTabVal: string\n  isCloseLoading: boolean\n  closeOrder: () => void\n  orderInfo: any\n  isDetail: boolean\n  onClickDetail: () => void\n}) => {\n  return (\n    <HStack w={{ base: '100%', lg: 'unset' }} flexDirection={{ base: 'column', lg: 'row' }}>\n      {currentTabVal == 'active' && (\n        <Button\n          w={{ base: '100%', lg: 'unset' }}\n          isLoading={isCloseLoading}\n          disabled={isCloseLoading}\n          onClick={closeOrder}\n          h=\"32px\"\n          minH=\"unset\"\n          p=\"0px 12px\"\n          fontSize=\"14px\"\n          borderRadius=\"8px\"\n          variant=\"outline\"\n        >\n          {orderInfo?.outBalance <= 0 ? 'Close' : 'Close and Withdraw'}\n        </Button>\n      )}\n      <Button\n        w={{ base: '100%', lg: 'unset' }}\n        h=\"32px\"\n        borderRadius=\"8px\"\n        minH=\"unset\"\n        p=\"0px 12px\"\n        fontSize=\"14px\"\n        variant=\"ghost\"\n        rightIcon={\n          <Icon\n            svgW=\"12px\"\n            svgH=\"12px\"\n            xlinkHref=\"#icon-icon_arrow\"\n            transform={isDetail ? 'rotate(180deg)' : 'rotate(0deg)'}\n            transition=\"transform 0.5s\"\n            ml=\"-4px\"\n            mr=\"-4px\"\n          />\n        }\n        onClick={onClickDetail}\n      >\n        Details\n      </Button>\n    </HStack>\n  )\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useDcaCancel from '@/hooks/dca/useDcaCancel'\nimport useDcaClaim from '@/hooks/dca/useDcaClaim'\nimport { Block, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { Icon, NoData, Pagination, RefreshButton } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport { Button, Center, HStack, Skeleton, SkeletonCircle, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport DcaItem from './DcaItem'\n\nexport default function ActiveAndPastDcas({\n  handleRefresh,\n  activeList,\n  pastList,\n  isOrderLoading\n}: {\n  handleRefresh: (isLoading: boolean) => void\n  activeList: any\n  pastList: any\n  isOrderLoading: boolean\n}) {\n  const pageSize = 10\n  const [pageList, setPageList] = useState([])\n  const [paginationList, setPaginationList] = useState([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [currentTab, setCurrentTab] = useState<Tab>({\n    label: 'Active DCAs',\n    value: 'active'\n  })\n\n  const tabList: Tab[] = useMemo(\n    () => [\n      {\n        label: 'Active DCAs',\n        value: 'active',\n        num: activeList?.length > 0 ? activeList?.length : undefined\n      },\n      {\n        label: 'Past DCAs',\n        value: 'past',\n        num: pastList?.length > 0 ? pastList?.length : undefined\n      }\n    ],\n    [currentTab?.value, activeList, pastList]\n  )\n\n  const handleChangeTab = (item: Tab) => {\n    setCurrentPage(1)\n    setCurrentTab(item)\n  }\n\n  useEffect(() => {\n    const currentList = currentTab?.value === 'active' ? activeList : pastList\n    setPageList(currentList)\n    setTotal(currentList?.length)\n  }, [currentTab?.value, activeList, pastList])\n\n  useEffect(() => {\n    const start = (currentPage - 1) * pageSize\n    const end = start + pageSize\n    setPaginationList(pageList?.slice(start, end))\n  }, [currentPage, pageList, currentTab?.value])\n\n  const totalClaimNum = useMemo(() => {\n    if (currentTab?.value === 'past' || pageList?.length === 0) return 0\n    return pageList?.reduce((sum, orderInfo: any) => d(sum).plus(orderInfo?.outBalance as string), d(0)).toString()\n  }, [currentTab?.value, pageList])\n\n  const [isClaimAllLoading, setIsClaimAllLoading] = useState(false)\n  const [isCloseAllLoading, setIsCloseAllLoading] = useState(false)\n  const { dcaWithdrawPayload } = useDcaClaim()\n  const { dcaCloseOrderPayload } = useDcaCancel()\n  const { signAndExecuteTransaction } = useTransaction()\n\n  const closeAll = async () => {\n    setIsCloseAllLoading(true)\n    try {\n      const closeOrderParams: any = pageList?.map((orderInfo: any) => ({\n        order_id: orderInfo?.orderID,\n        in_coin_type: orderInfo?.inCoin.coin_type,\n        out_coin_type: orderInfo?.outCoin.coin_type\n      }))\n      console.log('🚀 ~ const closeOrderParams:any=pageList.map ~ closeOrderParams:', closeOrderParams)\n\n      const tx = await dcaCloseOrderPayload(closeOrderParams)\n      const res = await signAndExecuteTransaction(tx, {\n        getShowInfo: (status: TransactionStatusType) => {\n          const info: CommonTypeInfo = {\n            modalDescriptionText: `Closing DCA order`,\n            toastTitleText: 'Closing DCA order'\n          }\n          if (status === 'success') {\n            info.modalDescriptionText = 'DCA Order Closed'\n            info.toastDescriptionContent = ''\n            info.toastTitleText = 'DCA Order Closed'\n          }\n\n          return info\n        }\n      })\n      console.log('🚀 ~ closeAll ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        setTimeout(() => {\n          handleRefresh(true)\n        }, 2000)\n      }\n      setIsCloseAllLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ closeAll ~ error:', error)\n      setIsCloseAllLoading(false)\n    }\n  }\n\n  const claimAll = async () => {\n    setIsClaimAllLoading(true)\n    try {\n      const claimOrderParams: any = pageList?.map((orderInfo: any) => ({\n        order_id: orderInfo?.orderID,\n        in_coin_type: orderInfo?.inCoin.coin_type,\n        out_coin_type: orderInfo?.outCoin.coin_type\n      }))\n      console.log('🚀 ~ const claimOrderParams:any=pageList.map ~ claimOrderParams:', claimOrderParams)\n\n      const tx = await dcaWithdrawPayload(claimOrderParams)\n      const res = await signAndExecuteTransaction(tx, {\n        getShowInfo: (status: TransactionStatusType) => {\n          const info: CommonTypeInfo = {\n            modalDescriptionText: `DCA Order Claimed`,\n            toastTitleText: 'DCA Order Claimed'\n          }\n          if (status === 'success') {\n            info.toastDescriptionContent = ''\n          }\n\n          return info\n        }\n      })\n      console.log('🚀 ~ claimAll ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        setTimeout(() => {\n          handleRefresh(true)\n        }, 2000)\n      }\n      setIsClaimAllLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ claimAll ~ error:', error)\n      setIsClaimAllLoading(false)\n    }\n  }\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\">\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: { base: '100%', lg: '300px' },\n              h: '52px',\n              gap: '32px',\n              bg: 'none',\n              border: 'none',\n              mb: '8px'\n            }}\n            itemStyle={{ fontSize: '16px' }}\n            tabList={tabList}\n            currentTab={currentTab.label}\n            handleChangeTab={handleChangeTab}\n          />\n          {isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              h=\"28px\"\n              minH=\"unset\"\n              p=\"0 10px\"\n              fontSize=\"14px\"\n              borderRadius=\"8px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              isLoading={isClaimAllLoading}\n              disabled={Number(totalClaimNum) === 0 || isClaimAllLoading}\n              onClick={claimAll}\n              leftIcon={<Icon xlinkHref=\"#icon-icon_incentive\" svgFill=\"primary\" mr=\"-4px\" ml=\"-4px\" />}\n            >\n              Claim all\n            </Button>\n          )}\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              isLoading={isCloseAllLoading}\n              disabled={pageList?.length == 0 || isCloseAllLoading}\n              h=\"28px\"\n              borderRadius=\"8px\"\n              minH=\"unset\"\n              p=\"0 12px\"\n              fontSize=\"14px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              onClick={closeAll}\n            >\n              Close All\n            </Button>\n          )}\n          {!isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      </HStack>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : isOrderLoading ? (\n        <Block>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {[{}, {}].map((item, index) => (\n              <OrderLoading key={index} />\n            ))}\n          </VStack>\n        </Block>\n      ) : pageList?.length === 0 ? (\n        <NoData type=\"nodata\" text={currentTab?.value === 'active' ? 'No active orders' : 'No closed orders'} />\n      ) : (\n        <Block h={paginationList?.length > 8 ? '927px' : 'unset'} overflowY=\"auto\" p={{ base: '12px', lg: '20px 16px' }}>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {paginationList?.map((item: any) => (\n              <DcaItem handleRefresh={() => handleRefresh(true)} key={item?.orderID} currentTabVal={currentTab.value} orderInfo={item} />\n            ))}\n          </VStack>\n          {!isOrderLoading && pageList?.length > pageSize && (\n            <Center mt=\"28px\">\n              <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n            </Center>\n          )}\n        </Block>\n      )}\n    </VStack>\n  )\n}\n\nconst OrderLoading = () => (\n  <VStack w=\"100%\" gap=\"16px\" align=\"flex-start\">\n    <HStack w=\"100%\" gap=\"0\" justify=\"space-between\">\n      <HStack gap=\"0\">\n        <HStack gap=\"0px\" mr=\"8px\" align=\"flex-start\">\n          <SkeletonCircle size=\"8\" />\n          <SkeletonCircle size=\"8\" />\n        </HStack>\n        <Skeleton height=\"4\" width=\"100px\" />\n      </HStack>\n      <Skeleton height=\"4\" width=\"150px\" />\n    </HStack>\n    <Skeleton height=\"4\" width=\"180px\" />\n  </VStack>\n)\n","import { DcaConfigPath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaConfig } from '@/types/dca'\nimport { useFetch } from '@cetus/hooks'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\n\nexport default function useDcaConfig() {\n  const { fetchByApi } = useFetch()\n  const { peripherySdk } = usePeripherySDKStore()\n  const { setDcaConfig } = useDcaStore()\n\n  const getDcaConfigFromApi = async () => {\n    const res = await fetchByApi(DcaConfigPath, 'GET')\n    return res || null\n  }\n\n  const getDcaConfigFromContract = async () => {\n    const data = await peripherySdk.Dca.getDcaGlobalConfig()\n    return data\n  }\n\n  const getDcaConfig = async () => {\n    const dcaConfig: DcaConfig = {}\n    try {\n      const apiConfig = await getDcaConfigFromApi()\n      if (apiConfig) {\n        dcaConfig['minCycleAmountInUsd'] = apiConfig?.min_amount_in_usd\n      }\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:22 ~ getDcaConfig ~ error:', error)\n    }\n\n    try {\n      const contractConfig = await getDcaConfigFromContract()\n      dcaConfig['minCycleCount'] = contractConfig?.min_cycle_count\n      dcaConfig['minCycleFrequency'] = contractConfig?.min_cycle_frequency\n      dcaConfig['whitelistMode'] = contractConfig?.whitelist_mode\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:32 ~ getDcaConfig ~ error:', error)\n    }\n\n    console.log('🚀🚀🚀 ~ file: useDcaConfig.ts:45 ~ getDcaConfig ~ dcaConfig:', dcaConfig)\n    setDcaConfig(dcaConfig)\n    return dcaConfig\n  }\n\n  return {\n    getDcaConfig\n  }\n}\n","import { DcaQuotePath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaQuoteData } from '@/types'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useDcaGetQuote() {\n  const { fetchByApi } = useFetch()\n  const { setDcaQuote } = useDcaStore()\n  const getDcaQuote = async ({\n    inCoin,\n    freq,\n    count,\n    sender\n  }: {\n    inCoin: string\n    freq: string | number\n    count: string | number\n    sender: string\n  }): Promise<DcaQuoteData | null> => {\n    try {\n      const data = await fetchByApi(DcaQuotePath, 'GET', {\n        in_coin: inCoin,\n        freq,\n        count,\n        sender\n      })\n      if (data) {\n        const result = {\n          amountInLimitPerCycle: data?.amount_in_limit_per_cycle,\n          coinType: data?.coin_type,\n          feeRate: data?.fee_rate,\n          signature: data?.signature,\n          signer: data?.signer,\n          timestamp: data?.timestamp\n        }\n        setDcaQuote(result)\n        return result\n      }\n    } catch (error) {\n      console.log('getDcaQuote ~ error:', error)\n    }\n\n    return null\n  }\n\n  return {\n    getDcaQuote\n  }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useDcaStore from '@/store/dca'\nimport { AggregatorServerErrorCode, SwapRouterData } from '@/types'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, timeFormatUTC } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/cetus-burn-sdk'\nimport { toDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport useTokenRank from '../common/useTokenRank'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useDcaConfig from './useDcaConfig'\nimport useDcaGetQuote from './useGetDcaQuote'\n\nexport function useDcaHook() {\n  const {\n    sellCoin,\n    buyCoin,\n    setSellCoin,\n    setBuyCoin,\n    sellAmount,\n    buyAmount,\n    setBuyAmount,\n    setSellAmount,\n    dcaConfig,\n    setCurrentCoinKey,\n    currentCoinKey,\n    investNum,\n    currentInvest,\n    orderNum,\n    dcaQuote,\n    setInvestNum,\n    setOrderNum,\n    setCurrentInvest,\n    setPageDirect,\n    pageDirect,\n    dcaMode,\n    sellTotalAmount,\n    setSellTotalAmount,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n\n  const { currentAccount } = useAccountStore()\n  const { getDcaConfig } = useDcaConfig()\n  const { getDcaQuote } = useDcaGetQuote()\n  const { coinPriceObj } = useTokenPriceStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef(uuid)\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // 获取dca的配置(单笔订单数量不能小于多少)\n  const handleGetDcaConfig = async () => {\n    const res = await getDcaConfig()\n    console.log('🚀 ~ handleGetDcaConfig ~ res:', res)\n  }\n\n  // Initialization dca Token\n  const initiaTokenSelect = () => {\n    console.log('🚀 ~ initiaTokenSelect ~ setSellCoin:')\n    setSellCoin(envConfigs.clmm_swap.from_coin)\n    setBuyCoin(envConfigs.clmm_swap.to_coin)\n  }\n\n  useEffect(() => {\n    setLowerPriceSize('0%')\n    setUpperPriceSize('0%')\n    initiaTokenSelect()\n    getDcaConfig()\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  // 订单价格最小值\n  const [minPriceValue, setMinPriceValue] = useState<string>('')\n  // 订单价格最大值\n  const [maxPriceValue, setMaxPriceValue] = useState<string>('')\n  // 余额\n  const { balanceInfo: sellBalanceInfo } = useGetTokenBalance(sellCoin)\n  const { balanceInfo: buyBalanceInfo } = useGetTokenBalance(buyCoin)\n\n  // 价值\n  const sellAmountValue = getTokenAmountValue(sellCoin?.coin_type, sellAmount)\n\n  // 卖出数量变化\n  const handleAmountChange = (amount: string) => {\n    setCurrentCoinKey('sellCoin')\n    setSellAmount(amount)\n    fetchFindAvailableRouterDebounce()\n  }\n  useEffect(() => {\n    if (+sellAmount && +orderNum) {\n      if (dcaMode == 'total') {\n        setSellTotalAmount(sellAmount)\n      } else {\n        setSellTotalAmount(d(sellAmount).mul(orderNum).toString())\n      }\n    } else {\n      setSellTotalAmount('')\n    }\n  }, [sellAmount, dcaMode, orderNum])\n  const handlePageToggleDirect = () => {\n    const decimals = pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    setPageDirect(!pageDirect)\n    if (minPriceValue && maxPriceValue) {\n      const value = minPriceValue\n      const newMinVal = d(1).div(maxPriceValue).toString()\n      const newMaxVal = d(1).div(value).toString()\n      setMinPriceValue(formatNumberWithDown(newMinVal, decimals, true).toString())\n      setMaxPriceValue(formatNumberWithDown(newMaxVal, decimals, true).toString())\n    }\n  }\n  // token选择\n  const handleSelectToken = (coin: Token, isSell: boolean = true) => {\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    if (isSell) {\n      if (coin?.coin_type?.toLowerCase() === buyCoin?.coin_type?.toLowerCase()) {\n        onReverseClick()\n      } else {\n        setSellCoin(coin)\n      }\n      setCurrentCoinKey('sellCoin')\n    } else {\n      if (coin?.coin_type?.toLowerCase() === sellCoin?.coin_type?.toLowerCase()) {\n        onReverseClick()\n      } else {\n        setBuyCoin(coin)\n      }\n      setCurrentCoinKey('buyCoin')\n    }\n  }\n  // 清空输入框\n  const resetInputAmount = () => {\n    setSellAmount('')\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    setUuid('')\n    setInvestNum('1')\n    setOrderNum('2')\n    setCurrentInvest('Hour')\n  }\n  // 交换token方向\n  const onReverseClick = () => {\n    setSellCoin(buyCoin)\n    setBuyCoin(sellCoin)\n  }\n\n  // dca白名单判断\n  const isDcaSelect = useMemo(() => {\n    const whitelistMode = dcaConfig?.whitelistMode\n    console.log('🚀 ~ useDcaHook ~ whitelistMode:', whitelistMode)\n    if (whitelistMode === 3) return true\n    if (whitelistMode === 0) return false\n\n    if (currentCoinKey === 'sellCoin') {\n      return whitelistMode === 1\n    } else if (currentCoinKey === 'buyCoin') {\n      return whitelistMode === 2\n    }\n    return false\n  }, [dcaConfig?.whitelistMode])\n\n  // sellCoin的当前价格\n  const sellCoinPrice = coinPriceObj[extractStructTagFromType(sellCoin?.coin_type).full_address]?.price || 0\n  // 单笔订单的数量\n  const sellPerOrder = useMemo(() => {\n    if (sellTotalAmount && orderNum) {\n      return d(sellTotalAmount).div(orderNum).toString()\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum])\n  // 单笔订单的价值\n  const sellPerOrderUSD = useMemo(() => {\n    if (sellTotalAmount && orderNum && sellCoinPrice) {\n      return d(sellTotalAmount).div(orderNum).mul(sellCoinPrice).toString() || 0\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum, sellCoinPrice])\n  // 订单费率\n  const platformFee = d(dcaQuote?.feeRate).div(Decimal.pow(10, 6)).mul(100).toString() + '%' || '0%'\n  // 单比订单的数量限制\n  const amountInLimit = useMemo(() => {\n    if (dcaQuote?.amountInLimitPerCycle && sellCoin?.decimals) {\n      return bnToAmount(dcaQuote?.amountInLimitPerCycle, sellCoin?.decimals)\n    }\n  }, [dcaQuote?.amountInLimitPerCycle])\n  // 单比订单的数量错误\n  const orderSizeError = useMemo(() => {\n    console.log('🚀 ~ orderSizeError ~ sellPerOrder:', sellPerOrder, amountInLimit)\n    if (dcaConfig?.minCycleAmountInUsd && orderNum && sellAmount && amountInLimit && Number(sellPerOrder) < Number(amountInLimit)) {\n      return {\n        status: true,\n        tips: `Each order size should be higher than $${dcaConfig?.minCycleAmountInUsd}.`\n      }\n    }\n    if (sellAmount && orderNum && Number(sellPerOrderUSD) > 10000) {\n      return {\n        status: true,\n        tips: 'Each order size should be less than $10,000'\n      }\n    }\n    return {\n      status: false,\n      tips: ''\n    }\n  }, [dcaMode, amountInLimit, orderNum, sellPerOrder, sellAmount, sellPerOrderUSD, dcaConfig?.minCycleAmountInUsd])\n  // 订单数量输入错误\n  const orderInputError = useMemo(() => {\n    console.log('🚀 ~ orderInputError ~ orderNum:', orderNum, orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount))\n    if (dcaConfig?.minCycleCount && orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount)) {\n      return {\n        status: true,\n        tips: `Number of Orders cannot be lower than ${dcaConfig?.minCycleCount}.`\n      }\n    } else if (orderNum && Number(investNum) <= 0) {\n      return {\n        status: true,\n        tips: 'Please enter an interval above 0'\n      }\n    } else if (orderNum && investNum && Number(investNum) > 10000) {\n      return {\n        status: true,\n        tips: 'The maximum interval is 10,000.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [orderNum, dcaConfig?.minCycleCount, investNum])\n\n  // 最大最小价格错误\n  const priceError = useMemo(() => {\n    if ((minPriceValue && Number(minPriceValue) == 0) || (maxPriceValue && Number(maxPriceValue) == 0)) {\n      return {\n        status: true,\n        tips: 'Please enter a price greater than 0.'\n      }\n    } else if (minPriceValue && maxPriceValue && Number(minPriceValue) >= Number(maxPriceValue)) {\n      return {\n        status: true,\n        tips: 'The max price should be higher than min price.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  // 订单结束时间\n  const [estEndDate, setEstEndDate] = useState('')\n  // 订单时间错误\n  const [orderTimeError, setOrderTimeError] = useState({\n    status: false,\n    tips: ''\n  })\n  const getEstEndDate = () => {\n    const date = new Date().getTime()\n    let investTime = 0\n    console.log('🚀🚀🚀 ~ file: dca-detail.vue:34 ~ estEndDate ~ currentTime.value:', currentInvest)\n    switch (currentInvest) {\n      case 'Minute':\n        // investTime = d(investNum).mul(60).mul(1000).mul(d(orderNum).sub(1)).plus(60000).toNumber()\n        investTime = Number(investNum) * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n    }\n    console.log(\n      '🚀🚀🚀 ~ file: dca-detail.vue:46 ~ estEndDate ~ date + investTime:',\n      orderNum,\n      date,\n      investTime,\n      investTime > 60 * 60 * 24 * 365 * 1000\n    )\n    const result = timeFormatUTC(date + investTime, 'YMDHM')\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:303 ~ getEstEndDate ~ result:', result)\n    setEstEndDate(result)\n    if (result == 'NaN-NaN-NaN NaN:NaN') {\n      setEstEndDate('--')\n    }\n    if (investTime > 60 * 60 * 24 * 365 * 1000) {\n      setOrderTimeError({\n        status: true,\n        tips: 'The maximum execution period is 1 year'\n      })\n    } else {\n      setOrderTimeError({\n        status: false,\n        tips: 'The maximum execution period is 1 year'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getEstEndDate()\n  }, [sellAmount, investNum, orderNum, minPriceValue, maxPriceValue, currentInvest])\n\n  const cycleFrequency = useMemo(() => {\n    let investTime = 0\n    switch (currentInvest) {\n      case 'Minute':\n        investTime = Number(investNum) * 60\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30\n        break\n    }\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:333 ~ cycleFrequency ~ investTime:', investTime)\n    return investTime\n  }, [currentInvest, investNum])\n\n  useEffect(() => {\n    if (sellCoin?.coin_type && cycleFrequency && orderNum) {\n      queryDcaQuoteDebounce(sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address)\n    }\n  }, [sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address])\n\n  const queryDcaQuote = async (coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    const defaultWalletAddress = sender || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    try {\n      const result = await getDcaQuote({ inCoin: coinAddress, freq, count, sender: defaultWalletAddress })\n      console.log('🚀 ~ queryDcaQuote ~ result:', result)\n      return result\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ file: dca-data.ts:344 ~ queryDcaQuote ~ error:', error)\n    }\n  }\n\n  const queryDcaQuoteDebounce = useDebounceFunction((coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    queryDcaQuote(coinAddress, freq, count, sender)\n  }, 500)\n\n  const { findBestRouters } = useFindBestRouting()\n  const [findRouterLoading, setFindRouterLoading] = useState<boolean>(false)\n  const [routerData, setRouterData] = useState<SwapRouterData | undefined>(undefined)\n\n  const { getTokenRank } = useTokenRank()\n\n  useEffect(() => {\n    getTokensPrice()\n    const direct = getTokenRank(sellCoin, buyCoin)\n    console.log('🚀 ~ useEffect ~ direct:', direct)\n    setPageDirect(direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  useEffect(() => {\n    fetchFindAvailableRouterDebounce()\n  }, [sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const fetchFindAvailableRouterDebounce = () => {\n    if (d(sellPerOrder).gt(0) && sellCoin?.coin_type && buyCoin?.coin_type) {\n      setFindRouterLoading(true)\n      console.log('🚀 ~ useDcaHook ~ sellAmountDebounce:', Number(sellPerOrder) > 0, sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type, orderNum)\n      findAvailableRouterDebounce()\n    }\n  }\n\n  const findAvailableRouterDebounce = useDebounceFunction(() => {\n    findAvailableRouter()\n  }, 500)\n\n  // 判断该交易对，是否存在可用路由\n  const findAvailableRouter = async () => {\n    console.log('🚀 ~ findAvailableRouter ~ findAvailableRouter:', sellPerOrder)\n    if (sellCoin && buyCoin) {\n      const newUuid = `${sellCoin.coin_type}_${buyCoin.coin_type}`\n      setUuid(newUuid)\n      const providersKeys = Object.entries(AggregatorDexMap).map(([key, value]) => value.id)\n      const result = await findBestRouters({\n        fromToken: sellCoin,\n        toToken: buyCoin,\n        amount: toDecimalsAmount(sellPerOrder || 1, sellCoin?.decimals).toFixed(0),\n        providersKeys: providersKeys as string[],\n        by_amount_in: true,\n        uuid: newUuid\n      })\n\n      console.log('🚀 ~ findAvailableRouter ~ newUuid:', newUuid, uuid, result)\n      if (newUuid === uuidRef.current) {\n        setRouterData(result)\n        setBuyAmount(result?.toAmountUi)\n        setFindRouterLoading(false)\n      }\n    }\n  }\n\n  // 获取当前的token价格\n  const getTokensPrice = () => {\n    const uniqueTokens = (sellCoin?.coin_type || buyCoin?.coin_type) && Array.from(new Set([sellCoin?.coin_type, buyCoin?.coin_type]))\n    fetchTokenPrices(uniqueTokens || [])\n  }\n\n  const btnStatus = useMemo(() => {\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Create DCA Order',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n    if (!sellCoin?.coin_type || !buyCoin?.coin_type) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Select a token'\n      return btnInfo\n    }\n    if (!sellAmount || Number(sellAmount) == 0) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n    if (d(sellTotalAmount).gt(sellBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${sellCoin?.symbol} balance`\n      return btnInfo\n    }\n    if (d(dcaConfig?.minCycleCount).gt(orderNum || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum ${dcaConfig?.minCycleCount} orders`\n      return btnInfo\n    }\n\n    if (d(amountInLimit).gt(sellPerOrder || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum $${dcaConfig?.minCycleAmountInUsd} per order`\n      return btnInfo\n    }\n\n    if (\n      orderSizeError.status ||\n      orderInputError.status ||\n      priceError.status ||\n      orderTimeError.status ||\n      !sellCoin?.coin_type ||\n      !buyCoin?.coin_type ||\n      !orderNum ||\n      !investNum ||\n      !minPriceValue ||\n      !maxPriceValue\n    ) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Create DCA Order'\n      return btnInfo\n    }\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    // errorCode\n    if (routerData && routerData.errorCode) {\n      if (routerData.errorCode === AggregatorServerErrorCode.NoRouter || routerData.errorCode === AggregatorServerErrorCode.HoneyPot) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    sellBalanceInfo,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError,\n    sellCoin?.coin_type,\n    buyCoin?.coin_type,\n    sellTotalAmount,\n    investNum,\n    orderNum,\n    minPriceValue,\n    maxPriceValue,\n    routerData?.routes?.length\n  ])\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (buyCoin) {\n      list.push(buyCoin)\n    }\n\n    if (sellCoin) {\n      list.push(sellCoin)\n    }\n\n    return list\n  }, [buyCoin, sellCoin])\n\n  const currentPrice = useMemo(() => {\n    if (pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(buyAmount).div(sellPerOrder).toString(), buyCoin?.decimals, true)\n    }\n    if (!pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(sellPerOrder).div(buyAmount).toString(), sellCoin?.decimals, true)\n    }\n    return ''\n  }, [pageDirect, sellPerOrder, buyAmount])\n\n  const minPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMinPriceValue(val)\n  }, 500)\n\n  const maxPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMaxPriceValue(val)\n  }, 500)\n\n  const handleMinInputChange = (val: string) => {\n    console.log('🚀 ~ handleMinInputChange ~ val:', val)\n    minPriceValueDebounce(val)\n  }\n  const handleMaxInputChange = (val: string) => {\n    console.log('🚀 ~ handleMaxInputChange ~ val:', val)\n    maxPriceValueDebounce(val)\n  }\n\n  useEffect(() => {\n    changeLowerPriceSize(minPriceValue)\n  }, [minPriceValue, currentPrice])\n\n  useEffect(() => {\n    changeUpperPriceSize(maxPriceValue)\n  }, [maxPriceValue, currentPrice])\n\n  const changeLowerPriceSize = (val: string) => {\n    console.log('🚀 ~ changeLowerPriceSize ~ val:', val)\n    if (currentPrice && val) {\n      // 公式 lowerPriceSize = (lowerPrice/currentPrice - 1)*100\n      const lowerPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', lowerPrice)\n      setLowerPriceSize(d(lowerPrice).gt(10000) ? '>10,000%' : `${formatNumber(lowerPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  const changeUpperPriceSize = (val: string) => {\n    if (currentPrice && val) {\n      // 公式 upperPriceSize = (upperPrice/currentPrice - 1)*100\n      const upperPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', upperPrice)\n      setUpperPriceSize(d(upperPrice).gt(10000) ? '>10,000%' : `${formatNumber(upperPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  return {\n    currentPrice,\n    handleMinInputChange,\n    handleMaxInputChange,\n    warningTokenList,\n    resetInputAmount,\n    cycleFrequency,\n    btnStatus,\n    fetchFindAvailableRouterDebounce,\n    queryDcaQuote,\n    findRouterLoading,\n    platformFee,\n    estEndDate,\n    sellPerOrder,\n    isDcaSelect,\n    onReverseClick,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handlePageToggleDirect,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError\n  }\n}\n","import useDcaStore from '@/store/dca'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\n\nexport default function () {\n  const { peripherySdk } = usePeripherySDKStore()\n  const { getTokenInfo } = useGetToken()\n  const { setFilterTokenLoading } = useTokenSelectStore()\n  const { setInCoinWhiteList, setOutCoinWhiteList } = useDcaStore()\n  // whitelist_mode = 0 关闭白名单模式\n  // whitelist_mode = 1 只开启in_coin\n  // whitelist_mode = 2 只开启out_coin\n  // whitelist_mode = 3 全部开启\n  const getDcaCoinWhiteList = async (whitelist_mode: number) => {\n    console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:44 ~ getDcaCoinWhiteList ~ getDcaCoinWhiteList:')\n    try {\n      setFilterTokenLoading(true)\n      const { inCoinList, outCoinList } = await peripherySdk.Dca.getDcaCoinWhiteList(whitelist_mode)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ outCoinList:', outCoinList)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ inCoinList:', inCoinList)\n      const inList: any = []\n      const outList: any = []\n      for (let i = 0; i < inCoinList.length; i++) {\n        const tokenInfo = await getTokenInfo(inCoinList[i])\n        inList.push({\n          ...tokenInfo,\n          labels: tokenInfo?.labels?.length > 0 ? tokenInfo.labels : ''\n        })\n      }\n\n      for (let i = 0; i < outCoinList.length; i++) {\n        const tokenInfo = await getTokenInfo(outCoinList[i])\n        outList.push({\n          ...tokenInfo,\n          labels: tokenInfo?.labels?.length > 0 ? tokenInfo.labels : ''\n        })\n      }\n\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ outList:', outList)\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ inList:', inList)\n      setInCoinWhiteList(inList)\n      setOutCoinWhiteList(outList)\n      setFilterTokenLoading(false)\n    } catch (error) {\n      setInCoinWhiteList([])\n      setOutCoinWhiteList([])\n      setFilterTokenLoading(false)\n      console.log('🚀 ~ file: useGetDcaTokenList.ts:35 ~ getDcaCoinWhiteList ~ error:', error)\n    }\n  }\n  return { getDcaCoinWhiteList }\n}\n","import usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { d, Decimal } from '@cetus/utils'\nimport { toDecimalsAmount, TokenInfo } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport useDcaGetQuote from './useGetDcaQuote'\nexport type OpenDcaOrderParams = {\n  in_coin: TokenInfo\n  out_coin: TokenInfo\n  in_coin_amount: number\n  cycle_count: number\n  min_price: number\n  max_price: number\n  freq: number\n}\nexport default function () {\n  const { peripherySdk } = usePeripherySDKStore()\n  const { getDcaQuote } = useDcaGetQuote()\n\n  // Helper function: 计算单周期最大最小期望数量\n  const calculateCycleAmounts = (\n    inCoinAmount: number,\n    cycleCount: number,\n    inCoinDecimals: number,\n    outCoinDecimals: number,\n    minPrice: number,\n    maxPrice: number\n  ) => {\n    const cycleCountAmount = d(toDecimalsAmount(inCoinAmount, inCoinDecimals)).div(cycleCount)\n\n    const maxAmount = d(cycleCountAmount).div(d(minPrice))\n    const minAmount = d(cycleCountAmount).div(d(maxPrice))\n\n    let perCycleMinOutAmount: string, perCycleMaxOutAmount: string\n\n    if (inCoinDecimals > outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, inCoinDecimals - outCoinDecimals)\n      perCycleMinOutAmount = minAmount.div(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.div(perCycleAmountDecimal).ceil().toString()\n    } else if (inCoinDecimals < outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, outCoinDecimals - inCoinDecimals)\n      perCycleMinOutAmount = minAmount.mul(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.mul(perCycleAmountDecimal).ceil().toString()\n    } else {\n      perCycleMinOutAmount = minAmount.ceil().toString()\n      perCycleMaxOutAmount = maxAmount.ceil().toString()\n    }\n\n    return { perCycleMinOutAmount, perCycleMaxOutAmount, cycleCountAmount }\n  }\n\n  // Helper function: 构造 DCA 参数\n  const buildDcaOrderPayload = (params: OpenDcaOrderParams, quoteResult: any, perCycleMinOutAmount: string, perCycleMaxOutAmount: string) => {\n    const { in_coin, in_coin_amount, freq, cycle_count, out_coin } = params\n\n    return {\n      in_coin_amount: String(toDecimalsAmount(in_coin_amount, in_coin.decimals)),\n      in_coin_type: in_coin.coin_type,\n      out_coin_type: out_coin.coin_type,\n      cycle_frequency: freq,\n      cycle_count,\n      per_cycle_min_out_amount: perCycleMinOutAmount,\n      per_cycle_max_out_amount: perCycleMaxOutAmount,\n      per_cycle_in_amount_limit: quoteResult.amountInLimitPerCycle,\n      fee_rate: quoteResult.feeRate,\n      timestamp: quoteResult.timestamp,\n      signature: quoteResult.signature\n    }\n  }\n\n  // Main function\n  const openDcaOrder = async (params: OpenDcaOrderParams) => {\n    const { in_coin, out_coin, in_coin_amount, cycle_count, min_price, max_price, freq } = params\n\n    // Step 1: 获取报价\n    const sender = peripherySdk.ClmmSDK.senderAddress || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    const quoteResult = await getDcaQuote({ inCoin: in_coin.coin_type, freq, count: cycle_count, sender })\n    if (!quoteResult) {\n      throw new Error('Request timed out')\n    }\n\n    // Step 2: 计算单周期金额\n    const { perCycleMinOutAmount, perCycleMaxOutAmount } = calculateCycleAmounts(\n      in_coin_amount,\n      cycle_count,\n      in_coin.decimals,\n      out_coin.decimals,\n      min_price,\n      max_price\n    )\n\n    // Step 3: 构造 DCA 开单参数\n    const dcaOpenOrderPayloadParams = buildDcaOrderPayload(params, quoteResult, perCycleMinOutAmount, perCycleMaxOutAmount)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:91 ~ openDcaOrder ~ dcaOpenOrderPayloadParams:', dcaOpenOrderPayloadParams)\n\n    // Step 4: 调用 SDK 提交订单\n    const tx = await peripherySdk.Dca.dcaOpenOrderPayload(dcaOpenOrderPayloadParams)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:55 ~ openDcaOrder ~ tx:', tx)\n    return tx\n  }\n\n  return { openDcaOrder }\n}\n","import useDcaStore from '@/store/dca'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport RangeValue from '../position/RangeValue'\nexport type detailsDataType = {\n  sellPerOrder: string | number\n  estEndDate: string\n  platformFee: string\n  minPriceValue: string\n  maxPriceValue: string\n  minPriceResever: string\n  maxPriceResever: string\n}\ninterface DetailsContentProps {\n  detailsData: detailsDataType\n  isConfirm?: boolean\n}\nexport default function DetailsContent({ detailsData, isConfirm = false }: DetailsContentProps) {\n  const { sellPerOrder, estEndDate, platformFee, minPriceValue, maxPriceValue, minPriceResever, maxPriceResever } = detailsData\n  const { sellCoin, buyCoin, sellTotalAmount, investNum, currentInvest, pageDirect } = useDcaStore()\n  console.log('🚀 ~ DetailsBlock ~ investNum:', detailsData, investNum)\n  return (\n    <VStack w=\"100%\" gap={isConfirm ? '20px' : '16px'}>\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell total\"\n        value={!sellTotalAmount ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellTotalAmount, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell per order\"\n        value={!sellPerOrder ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellPerOrder, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {!isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Receive\"\n          value={\n            <HStack gap=\"4px\">\n              <SingleCoinImage\n                imageUrl={buyCoin?.logo_url}\n                w=\"20px\"\n                h=\"20px\"\n                coinType={buyCoin?.coin_type}\n                showTagHeight=\"10px\"\n                showTagWidth=\"10px\"\n              />\n              <Text color=\"text_caption\">{buyCoin?.symbol}</Text>\n            </HStack>\n          }\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      {isConfirm && (\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text textAlign=\"left\" whiteSpace=\"nowrap\">\n            Price range\n          </Text>\n          <RangeValue\n            displayTokenA={buyCoin}\n            displayTokenB={sellCoin}\n            isRank={true}\n            justify=\"flex-end\"\n            priceInfo={{\n              minPrice: addComma(minPriceValue).toString(),\n              maxPrice: addComma(maxPriceValue).toString(),\n              minPriceResever: addComma(minPriceResever).toString(),\n              maxPriceResever: addComma(maxPriceResever).toString()\n            }}\n            fontSize=\"14px\"\n            color=\"text_caption\"\n          />\n        </HStack>\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Invest every\"\n        value={Number(investNum) > 1 ? `${investNum} ${currentInvest}s` : `${investNum} ${currentInvest}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Start date\"\n          value={String(timeFormatUTC(Date.now(), 'YMDHM'))}\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Est. end date(UTC)\"\n        value={estEndDate}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Platform fee\"\n        value={platformFee}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n    </VStack>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { Icon } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport DetailsContent from './DetailsContent'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onClose: () => void\n  toOpenDca: () => void\n  confirmData: any\n  toOpenDcaLoading: boolean\n}\n\nconst ConfirmModal = ({ confirmData, isOpen, onClose, toOpenDca, toOpenDcaLoading }: ConfirmModalProps) => {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Review your order\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"16px\" p=\"16px\">\n            <Block borderRadius=\"12px\" position=\"relative\" p=\"0 12px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <VStack align=\"flex-start\" w=\"calc(50% - 24px)\">\n                  <Text>Sell</Text>\n                  <SingleTokenInfo portal={false} token={sellCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n                <Box w=\"1px\" h=\"100px\" bg=\"border\" />\n                <VStack align=\"flex-end\" w=\"calc(50% - 24px)\">\n                  <Text>Buy</Text>\n                  <SingleTokenInfo portal={false} token={buyCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n              </HStack>\n              <Center\n                w=\"36px\"\n                h=\"36px\"\n                borderRadius=\"50%\"\n                position=\"absolute\"\n                left=\"calc(50% - 18px)\"\n                top=\"calc(50% - 18px)\"\n                border=\"1px solid\"\n                borderColor=\"border\"\n                boxShadow=\"trade_icon_shadow\"\n                bg=\"input_bg\"\n              >\n                <Icon mt=\"-1px\" svgW=\"12px\" svgH=\"12px\" xlinkHref=\"#icon-a-icon_trade\" svgFill=\"text_caption\" transform=\"rotate(-90deg)\" />\n              </Center>\n            </Block>\n            <DetailsContent detailsData={confirmData} isConfirm />\n            <Button\n              mt=\"12px\"\n              onClick={() => {\n                toOpenDca()\n                onClose()\n              }}\n              disabled={toOpenDcaLoading}\n              w=\"calc(100% + 32px)\"\n              mb=\"-30px\"\n              h=\"52px\"\n              fontWeight=\"500\"\n            >\n              Create DCA Order\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import { Block } from '@cetus/design'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport DetailsContent, { detailsDataType } from './DetailsContent'\n\ninterface DetailsBlockProps {\n  detailsData: detailsDataType\n}\nexport default function DetailsBlock({ detailsData }: DetailsBlockProps) {\n  return (\n    <Block>\n      <VStack gap=\"20px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text color=\"text_caption\">Details</Text>\n          <Text fontSize=\"12px\">Your first invest cycle will begin immediately</Text>\n        </HStack>\n        <DetailsContent detailsData={detailsData} />\n      </VStack>\n    </Block>\n  )\n}\n","import { InputBox } from '@cetus/design'\nimport { HStack, Input, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\nimport MenuDropBlock from '../common/MenuDropBlock'\n\ninterface InvestAndOrdersProps {\n  title: string | ReactNode\n  label: string\n  inputValue: string\n  inputChange?: (value: string) => void\n  list?: string[]\n  onListItemClick?: (item: string) => void\n}\n\nexport default function InvestAndOrders({\n  title,\n  label,\n  inputValue,\n  inputChange = () => {},\n  list = [],\n  onListItemClick = () => {}\n}: InvestAndOrdersProps) {\n  // 处理输入值的变化\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    inputChange(value)\n  }\n  return (\n    <InputBox w=\"50%\" borderRadius=\"16px\">\n      <VStack gap=\"16px\" align=\"flex-start\">\n        {typeof title === 'string' ? (\n          <Text fontWeight=\"500\" lineHeight=\"18px\" fontSize=\"13px\">\n            {title}\n          </Text>\n        ) : (\n          title\n        )}\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Input\n            value={inputValue}\n            onChange={handleInputChange}\n            style={{\n              width: 'calc(100% - 8px)',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n\n          {list.length > 0 ? (\n            <MenuDropBlock label={label} list={list} onListItemClick={onListItemClick} />\n          ) : (\n            <Text color=\"text_caption\">{label}</Text>\n          )}\n        </HStack>\n      </VStack>\n    </InputBox>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { InputBox } from '@cetus/design'\nimport { NumericFormatInput } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface InvestAndOrdersProps {\n  text?: string\n  inputValue: string\n  inputChange: (value: string) => void\n  align: string\n  direct: boolean\n}\n\nexport default function MinAndMaxPrice({ direct, text, align, inputValue, inputChange = () => {} }: InvestAndOrdersProps) {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <InputBox w=\"unset\" borderRadius=\"8px\">\n      <HStack>\n        <VStack align={align}>\n          <NumericFormatInput\n            value={inputValue}\n            placeholder=\"0.0\"\n            decimals={18}\n            onChange={value => inputChange(value)}\n            style={{\n              width: 'calc(100% - 8px)',\n              textAlign: align == 'flex-start' ? 'left' : 'right',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n          <HStack w=\"100%\" justify=\"space-between\">\n            <Text fontSize=\"12px\" fontWeight=\"500\">\n              {direct ? `${buyCoin?.symbol} per ${sellCoin?.symbol}` : `${sellCoin?.symbol} per ${buyCoin?.symbol}`}\n            </Text>\n            {text && (\n              <Text fontSize=\"12px\" fontWeight=\"500\">\n                {text}\n              </Text>\n            )}\n          </HStack>\n        </VStack>\n      </HStack>\n    </InputBox>\n  )\n}\n","import useInsufficientBalanceToast from '@/hooks/common/useInsufficientBalanceToast'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport { useDcaHook } from '@/hooks/dca/useDcaHook'\nimport useGetDcaTokenList from '@/hooks/dca/useGetDcaTokenList'\nimport useOpenDcaOrder from '@/hooks/dca/useOpenDcaOrder'\nimport useDcaStore from '@/store/dca'\nimport { Block, CurrentPrice, ErrorTips, TooltipIcon, TradeInputGroup, useGlobalToast } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, formatNumber, formatNumberWithDown } from '@cetus/utils'\nimport { Button, HStack, Image, RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport ConfirmModal from './ConfirmModal'\nimport DetailsBlock from './DetailsBlock'\nimport { detailsDataType } from './DetailsContent'\nimport InvestAndOrders from './InvestAndOrders'\nimport MinAndMaxPrice from './MinAndMaxPrice'\nimport icon_currentprice from '/images/icon_currentprice@2x.png'\n\nexport function DcaInputBlock({ handleGetDcaOrderList }: { handleGetDcaOrderList: (orderId: string) => void }) {\n  const {\n    sellCoin,\n    buyCoin,\n    sellAmount,\n    buyAmount,\n    setInvestNum,\n    setOrderNum,\n    investNum,\n    orderNum,\n    currentInvest,\n    setCurrentInvest,\n    pageDirect,\n    isDcaRefresh,\n    dcaMode,\n    setDcaMode,\n    sellTotalAmount,\n    upperPriceSize,\n    lowerPriceSize,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n  const {\n    currentPrice,\n    btnStatus,\n    findRouterLoading,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handleMinInputChange,\n    handleMaxInputChange,\n    handlePageToggleDirect,\n    onReverseClick,\n    orderSizeError,\n    orderInputError,\n    orderTimeError,\n    priceError,\n    sellPerOrder,\n    estEndDate,\n    platformFee,\n    fetchFindAvailableRouterDebounce,\n    cycleFrequency,\n    resetInputAmount,\n    warningTokenList\n  } = useDcaHook()\n\n  useEffect(() => {\n    if (isDcaRefresh) {\n      fetchFindAvailableRouterDebounce()\n    }\n  }, [isDcaRefresh])\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [tradeIcon, setTradeIcon] = useState<string>('#icon-a-icon_trade')\n\n  const timeList: string[] = ['Minute', 'Hour', 'Day', 'Week', 'Month']\n\n  const toggleTradeIcon = (hovered: boolean) => setTradeIcon(hovered ? '#icon-icon_swap1' : '#icon-a-icon_trade')\n  const { openDcaOrder } = useOpenDcaOrder()\n  const [toOpenDcaLoading, setToOpenDcaLoading] = useState(false)\n\n  const { fetchCoinBalance } = useAccountBalance()\n  const { signAndExecuteTransaction, transactionRejected, transactionConfirmation } = useTransaction()\n  const { failedTsToast } = useGlobalToast()\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const toOpenDca = async () => {\n    setToOpenDcaLoading(true)\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType) => {\n        const desc = `Creating DCA Order for ${formatNumber(sellTotalAmount)} ${sellCoin?.symbol} to ${buyCoin?.symbol} over ${orderNum} orders`\n        const info: CommonTypeInfo = {\n          modalDescriptionText: 'Creating DCA Order',\n          toastTitleText: 'Creating DCA Order'\n        }\n        if (status === 'success') {\n          info.modalDescriptionText = 'DCA Order Created'\n          info.toastDescriptionContent = ''\n          info.toastTitleText = 'DCA Order Created'\n        }\n        return info\n      }\n    }\n    transactionConfirmation(toastInfo)\n    const min_price = !pageDirect ? minPriceValue : d(1).div(maxPriceValue).toString()\n    const max_price = !pageDirect ? maxPriceValue : d(1).div(minPriceValue).toString()\n    try {\n      const params: any = {\n        in_coin: sellCoin,\n        out_coin: buyCoin,\n        in_coin_amount: sellTotalAmount,\n        cycle_count: orderNum,\n        min_price,\n        max_price,\n        freq: cycleFrequency\n      }\n\n      console.log('🚀 ~ toOpenDca ~ params:', !pageDirect, minPriceValue, maxPriceValue, min_price, max_price, params)\n      const tx = await openDcaOrder(params)\n      console.log('🚀 ~ toOpenDca ~ tx:', tx)\n      const res = await signAndExecuteTransaction(tx, toastInfo)\n      console.log('🚀 ~ toOpenDca ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        resetInputAmount()\n        setTimeout(() => {\n          fetchCoinBalance(currentAccount?.address, sellCoin?.coin_type)\n          handleGetDcaOrderList(currentAccount?.address as string)\n        }, 2000)\n      }\n      setToOpenDcaLoading(false)\n    } catch (error) {\n      const errorInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType): CommonTypeInfo => {\n          const info: CommonTypeInfo = {}\n          if (String(error) === 'Error: Each order size should be higher than $10') {\n            info['toastTitleText'] = 'Transaction Submission Error'\n            info['toastDescriptionContent'] = 'Each order size should be higher than $10.'\n          }\n          if (String(error) === 'Error: Request timed out') {\n            info['toastTitleText'] = 'Request timed out'\n            info['toastDescriptionContent'] = 'Please confirm the network status and resubmit the transaction.'\n          }\n          if (String(error) === 'Error: minPrice error') {\n            info['toastTitleText'] = 'DCA order submission failed'\n            info['toastDescriptionContent'] = 'Your nominated prices are out of scope. Please modify your accepted price range and submit it again.'\n          }\n          return info\n        }\n      }\n      console.log('🚀 ~ toOpenDca ~ error:', error)\n      console.error('Open DCA Order Error: ', error)\n      showInsufficientBalanceToast(String(error))\n      transactionRejected(errorInfo)\n      failedTsToast(errorInfo)\n      setToOpenDcaLoading(false)\n    }\n  }\n\n  const { currentCoinKey, inCoinWhiteList, outCoinWhiteList, dcaConfig } = useDcaStore()\n  const { getDcaCoinWhiteList } = useGetDcaTokenList()\n  const [whiteTokenList, setWhiteTokenList] = useState<Token[]>([])\n  useEffect(() => {\n    if (currentCoinKey == 'sellCoin') {\n      setWhiteTokenList(inCoinWhiteList)\n    } else {\n      setWhiteTokenList(outCoinWhiteList)\n    }\n  }, [currentCoinKey, inCoinWhiteList, outCoinWhiteList])\n\n  useEffect(() => {\n    if (dcaConfig && (dcaConfig.whitelistMode || dcaConfig.whitelistMode == 0)) {\n      console.log('🚀🚀🚀 ~ file: DcaInputBlock.tsx:101 ~ DcaInputBlock ~ dcaConfig:', dcaConfig)\n      getDcaCoinWhiteList(dcaConfig.whitelistMode)\n    }\n  }, [dcaConfig])\n\n  const [isOpenConfirmModal, setIsOpenConfirmModal] = useState(false)\n\n  const detailsData: detailsDataType = useMemo(() => {\n    const decimals = !pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    let minPrice = ''\n    let maxPrice = ''\n    let minPriceResever = ''\n    let maxPriceResever = ''\n    if (minPriceValue && maxPriceValue) {\n      minPrice = !pageDirect ? minPriceValue : formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString()\n      maxPrice = !pageDirect ? maxPriceValue : formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString()\n      minPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString() : minPriceValue\n      maxPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString() : maxPriceValue\n    }\n    return { estEndDate, sellPerOrder, platformFee, minPriceValue: minPrice, maxPriceValue: maxPrice, minPriceResever, maxPriceResever }\n  }, [pageDirect, estEndDate, sellPerOrder, platformFee, minPriceValue, maxPriceValue])\n\n  const tabList = [\n    { label: 'Total', value: 'total' },\n    { label: 'Per Order', value: 'perOrder' }\n  ]\n\n  const [value, setValue] = useState<number[]>([0, 0])\n  const [minValue, setMinValue] = useState<number>(0)\n  const [maxValue, setMaxValue] = useState<number>(0)\n\n  const handleSlider = (val: number[]) => {\n    console.log('🚀 ~ handleSlider ~ val:', val)\n    setValue(val)\n    handleMinInputChange(val[0].toString())\n    handleMaxInputChange(val[1].toString())\n  }\n\n  useEffect(() => {\n    // 计算滑杆的min和max值 实际为了保证当前价格在中间 min=0 max=currentPrice * 2\n    if (minPriceValue && maxPriceValue) {\n      const start = Number(minPriceValue)\n      const end = Number(maxPriceValue)\n      setValue([start, end])\n      console.log('🚀 ~ useEffect ~ start:', start, end)\n    }\n    if (!minPriceValue) {\n      setLowerPriceSize('0%')\n    }\n    if (!maxPriceValue) {\n      setUpperPriceSize('0%')\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  useEffect(() => {\n    if (currentPrice) {\n      const min = d('-100').div(100).plus(1).mul(currentPrice).toNumber()\n      const max = d('100').div(100).plus(1).mul(currentPrice).toNumber()\n      console.log('🚀 ~ useEffect ~ min:', min, max)\n      setMinValue(min)\n      setMaxValue(max)\n    }\n  }, [currentPrice])\n  return (\n    <VStack w=\"100%\">\n      <TradeInputGroup\n        onClick={onReverseClick}\n        currentCoinKey={currentCoinKey}\n        whiteTokenList={whiteTokenList}\n        from={{\n          inputTabOptions: {\n            type: 'outlineTab',\n            tabList,\n            currentTab: dcaMode == 'total' ? 'Total' : 'Per Order',\n            handleChangeTab: tab => {\n              setDcaMode(tab?.value)\n            },\n            wrapStyle: {\n              w: '168px',\n              h: '28px',\n              p: '3px',\n              borderRadius: '10px'\n            },\n            itemStyle: {\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px',\n              borderRadius: '6px'\n            }\n          },\n          title: 'You Pay',\n          balance: sellBalanceInfo?.balanceFormat || '',\n          value: sellAmount,\n          amountValue: sellAmountValue,\n          loading: false,\n          onChange: handleAmountChange,\n          selectable: true,\n          placeholder: '0.0',\n          token: sellCoin,\n          whiteTokenList: inCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, true)\n        }}\n        to={{\n          isDcaTo: true,\n          wrapStyle: {\n            backgroundColor: 'bg_secondary',\n            h: '94px'\n          },\n          title: 'You Receive',\n          inputAllowed: false,\n          balance: buyBalanceInfo?.balanceFormat || '',\n          value: '',\n          amountValue: '',\n          loading: false,\n          onChange: () => {},\n          token: buyCoin,\n          whiteTokenList: outCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, false),\n          selectable: true,\n          placeholder: '',\n          half: false,\n          max: false\n        }}\n        iconParams={{\n          xlinkHref: tradeIcon,\n          svgFill: 'text_caption',\n          transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n          fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n          onMouseEnter: () => toggleTradeIcon(true),\n          onMouseLeave: () => toggleTradeIcon(false)\n        }}\n      />\n      {orderSizeError?.status && <ErrorTips tips={orderSizeError?.tips} bg=\"primary_red_bg\" />}\n      <HStack w=\"100%\">\n        <InvestAndOrders\n          title=\"Invest Every\"\n          label={currentInvest}\n          inputValue={investNum}\n          list={timeList}\n          onListItemClick={item => {\n            setCurrentInvest(item)\n          }}\n          inputChange={item => {\n            console.log('🚀 ~ DcaInputBlock ~ item:', item)\n            setInvestNum(item)\n          }}\n        />\n        <InvestAndOrders\n          title={\n            <TooltipIcon\n              type=\"over\"\n              children={\n                <Text fontSize=\"13px\" fontWeight=\"500\" mr=\"4px\">\n                  Over\n                </Text>\n              }\n            />\n          }\n          label=\"Orders\"\n          inputValue={orderNum}\n          inputChange={item => {\n            setOrderNum(item)\n            fetchFindAvailableRouterDebounce()\n          }}\n        />\n      </HStack>\n      {orderInputError?.status && <ErrorTips tips={orderInputError?.tips} bg=\"primary_red_bg\" />}\n      {orderTimeError?.status && <ErrorTips tips={orderTimeError?.tips} bg=\"primary_red_bg\" />}\n      <Block zIndex=\"1\" p=\"16px\" borderRadius=\"16px\">\n        <VStack align=\"flex-start\">\n          <Text color=\"text_caption\">Set Price Range</Text>\n          <Text lineHeight=\"16px\" fontSize=\"12px\" m={{ base: '4px 0', lg: '0' }} mb={{ base: sellAmount ? '4px' : '0' }}>\n            DCA will only be executed if the price falls within the range of your pricing strategy.\n          </Text>\n          {sellAmount && sellPerOrder && (\n            <HStack mt=\"8px\" w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'align', lg: 'center' }}>\n              <Text>Current Rate</Text>\n              <VStack align={{ base: 'flex-start', lg: 'flex-end' }}>\n                <CurrentPrice\n                  color=\"text_caption\"\n                  pageDirect={pageDirect}\n                  handlePageToggleDirect={handlePageToggleDirect}\n                  fromToken={sellCoin!}\n                  toToken={buyCoin!}\n                  fromValue={sellPerOrder}\n                  toValue={buyAmount}\n                  isLoading={findRouterLoading || !buyAmount || !sellPerOrder}\n                />\n              </VStack>\n            </HStack>\n          )}\n        </VStack>\n        <HStack justify=\"space-between\" gap=\"8px\" mt=\"20px\">\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && minPriceValue ? lowerPriceSize : ''}\n            inputValue={minPriceValue}\n            inputChange={val => handleMinInputChange(val)}\n            align=\"flex-start\"\n          />\n          <Text color=\"text_caption\">-</Text>\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && maxPriceValue ? upperPriceSize : ''}\n            inputValue={maxPriceValue}\n            inputChange={val => handleMaxInputChange(val)}\n            align=\"flex-start\"\n          />\n        </HStack>\n        {!findRouterLoading &&\n          sellAmount &&\n          minPriceValue &&\n          maxPriceValue &&\n          Number(maxPriceValue) >= Number(minPriceValue) &&\n          btnStatus?.text !== 'No Available Route' && (\n            <VStack w=\"100%\" gap=\"0\" mt=\"20px\">\n              <RangeSlider\n                min={minValue}\n                max={maxValue}\n                step={0.1}\n                value={value}\n                onChange={val => {\n                  handleSlider(val)\n                }}\n                colorScheme=\"teal\"\n              >\n                <RangeSliderTrack>\n                  <RangeSliderFilledTrack />\n                </RangeSliderTrack>\n                <RangeSliderThumb index={0} />\n                <RangeSliderThumb index={1} />\n              </RangeSlider>\n              <Image src={icon_currentprice} w=\"32px\" h=\"32px\" />\n              <HStack w=\"100%\" h=\"14px\" justify=\"center\" mt=\"-2px\">\n                <Text>Current Rate</Text>\n              </HStack>\n            </VStack>\n          )}\n      </Block>\n      {priceError?.status && <ErrorTips tips={priceError?.tips} bg=\"primary_red_bg\" />}\n      <Button\n        isLoading={toOpenDcaLoading}\n        disabled={btnStatus?.disabled || toOpenDcaLoading}\n        w=\"100%\"\n        h=\"52px\"\n        fontSize=\"18px\"\n        fontWeight=\"500\"\n        onClick={btnStatus?.text == 'Connect Wallet' ? () => onWalletModal(true) : () => setIsOpenConfirmModal(true)}\n      >\n        {btnStatus?.text}\n      </Button>\n      {sellAmount && <DetailsBlock detailsData={detailsData} />}\n      {isOpenConfirmModal && (\n        <ConfirmModal\n          confirmData={detailsData}\n          isOpen={isOpenConfirmModal}\n          onClose={() => setIsOpenConfirmModal(false)}\n          toOpenDca={toOpenDca}\n          toOpenDcaLoading={toOpenDcaLoading}\n        />\n      )}\n      {(buyCoin || sellCoin) && (\n        <WarningTokenTipsModal\n          addToken\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            tokenInfo.forEach(coin => {\n              const hasFind = coin.coin_type === buyCoin?.coin_type || coin.coin_type === sellCoin?.coin_type\n              if (hasFind) {\n                handleSelectToken(undefined, coin.coin_type === buyCoin?.coin_type)\n              }\n            })\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","export function convertSecondsToString(seconds: number): string {\n  const SECONDS_IN_A_MINUTE = 60\n  const SECONDS_IN_AN_HOUR = SECONDS_IN_A_MINUTE * 60\n  const SECONDS_IN_A_DAY = SECONDS_IN_AN_HOUR * 24\n  const SECONDS_IN_A_WEEK = SECONDS_IN_A_DAY * 7\n  const SECONDS_IN_A_MONTH = SECONDS_IN_A_DAY * 30 // 简化假设一个月有30天\n\n  const months = Math.floor(seconds / SECONDS_IN_A_MONTH)\n  seconds %= SECONDS_IN_A_MONTH\n\n  const weeks = Math.floor(seconds / SECONDS_IN_A_WEEK)\n  seconds %= SECONDS_IN_A_WEEK\n\n  const days = Math.floor(seconds / SECONDS_IN_A_DAY)\n  seconds %= SECONDS_IN_A_DAY\n\n  const hours = Math.floor(seconds / SECONDS_IN_AN_HOUR)\n  seconds %= SECONDS_IN_AN_HOUR\n\n  const minutes = Math.floor(seconds / SECONDS_IN_A_MINUTE)\n  seconds %= SECONDS_IN_A_MINUTE\n\n  const result: any = []\n\n  if (months > 0) result.push(`${months} Month${months > 1 ? 's' : ''}`)\n  if (weeks > 0) result.push(`${weeks} Week${weeks > 1 ? 's' : ''}`)\n  if (days > 0) result.push(`${days} Day${days > 1 ? 's' : ''}`)\n  if (hours > 0) result.push(`${hours} Hour${hours > 1 ? 's' : ''}`)\n  if (minutes > 0) result.push(`${minutes} Minute${minutes > 1 ? 's' : ''}`)\n\n  return result.join(' ')\n}\n","import { convertSecondsToString } from '@/utils/dca'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { d, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport Decimal from 'decimal.js'\n\nexport function useGetDcaOrderList() {\n  const { getTokenInfo } = useGetToken()\n  const { peripherySdk } = usePeripherySDKStore()\n\n  const getDcaOrderList = async (walletAddress: string) => {\n    console.log('🚀 ~ getDcaOrderList ~ walletAddress:', walletAddress)\n    try {\n      const list = await peripherySdk.Dca.getDcaOrders(walletAddress)\n      console.log('🚀 ~ getDcaOrderList ~ list:', list)\n      return await buildDcaOrderList(list?.data)\n    } catch (error) {\n      console.log('🚀 ~ getDcaOrderList ~ error:', error)\n    }\n  }\n\n  // Helper: 获取 token 信息\n  const getTokenDetails = async (tokenType: string) => {\n    const token = await getTokenInfo(tokenType)\n    const decimalsPow = Decimal.pow(10, token?.decimals)\n    return { token, decimalsPow }\n  }\n\n  // Helper: 计算价格区间\n  const calculatePriceRanges = (\n    inAmountPerCycle: string,\n    inCoinDecimalsPow: Decimal,\n    outCoinDecimalsPow: Decimal,\n    maxOutAmountPerCycle: string,\n    minOutAmountPerCycle: string\n  ) => {\n    const minPrice = d(inAmountPerCycle).div(inCoinDecimalsPow).div(d(maxOutAmountPerCycle).div(outCoinDecimalsPow)).toString()\n\n    const maxPrice = d(inAmountPerCycle).div(inCoinDecimalsPow).div(d(minOutAmountPerCycle).div(outCoinDecimalsPow)).toString()\n\n    return {\n      minPrice,\n      maxPrice,\n      minPriceResever: d(1).div(d(maxPrice)).toString(),\n      maxPriceResever: d(1).div(d(minPrice)).toString()\n    }\n  }\n\n  // Helper: 确定订单状态\n  const determineOrderStatus = (order: any) => {\n    if (order.in_withdrawn > 0 && order.in_withdrawn == order.in_deposited) {\n      // 订单关闭 = 提取incoin数量大于0并且等于总支付incoin数量\n      return 'Close'\n    } else if (order.in_withdrawn > 0 && order.out_withdrawn > 0) {\n      // 部分成交 = 提取数量大于0并且可提取outcoin数量大于0\n      return 'PartialDeal'\n    } else if (order.amount_left_next_cycle == 0 && order.next_cycle_at == 0) {\n      // 完全成交 = 订单下次支付数量为0并且下次执行时间为0\n      return 'AllDeal'\n    }\n    return 'Active'\n  }\n\n  // Helper: 计算订单当前价格及相关数据\n  const calculateCurrentOrderMetrics = (\n    orderStatus: string,\n    inDeposited: Decimal,\n    inWithdrawn: Decimal,\n    inBalance: Decimal,\n    outBalance: Decimal,\n    outWithdraw: Decimal,\n    inCoinDecimalsPow: Decimal\n  ) => {\n    const calculateReseverPrice = (price: string) => (price === '--' ? '--' : d(1).div(price).toString())\n\n    switch (orderStatus) {\n      case 'Close':\n        return {\n          currentAvgPrice: '--',\n          currentAvgPriceResever: '--',\n          inBalanceRatio: '0',\n          inDepositedOut: '0'\n        }\n      case 'PartialDeal': {\n        const currentAvgPrice = inDeposited.sub(inWithdrawn).div(outWithdraw).toString()\n        const inBalanceRatio = inDeposited.sub(inWithdrawn).div(inDeposited).mul(100).toDP(2, Decimal.ROUND_HALF_UP).toString()\n        console.log('🚀 ~ useGetDcaOrderList ~ inDeposited:', inWithdrawn, inDeposited)\n        return {\n          currentAvgPrice,\n          currentAvgPriceResever: calculateReseverPrice(currentAvgPrice),\n          inBalanceRatio,\n          inDepositedOut: inDeposited.sub(inWithdrawn).toString()\n        }\n      }\n      case 'AllDeal': {\n        const currentAvgPrice = inDeposited.div(outWithdraw).toString()\n        return {\n          currentAvgPrice,\n          currentAvgPriceResever: calculateReseverPrice(currentAvgPrice),\n          inBalanceRatio: '100',\n          inDepositedOut: inDeposited.sub(inBalance).toString()\n        }\n      }\n      case 'Active': {\n        const currentAvgPrice = outBalance.gt(0) || outWithdraw.gt(0) ? inDeposited.sub(inBalance).div(outBalance.add(outWithdraw)).toString() : '--'\n        const inBalanceRatio = inDeposited.sub(inBalance).div(inDeposited).mul(100).toDP(2, Decimal.ROUND_HALF_UP).toString()\n        return {\n          currentAvgPrice,\n          currentAvgPriceResever: calculateReseverPrice(currentAvgPrice),\n          inBalanceRatio,\n          inDepositedOut: inDeposited.sub(inBalance).toString()\n        }\n      }\n      default:\n        return {\n          currentAvgPrice: '--',\n          currentAvgPriceResever: '--',\n          inBalanceRatio: '0',\n          inDepositedOut: '0'\n        }\n    }\n  }\n\n  // Helper: 是否显示提示\n\n  const shouldShowTradeTips = (createdAt: number, cycleFrequency: number, outBalance: Decimal, outWithdraw: Decimal): boolean => {\n    const nowTime = Date.now() / 1000\n    const executedTimes = d(nowTime).sub(createdAt).div(cycleFrequency)\n    const noRewards = outBalance.lte(0) && d(outWithdraw).lte(0)\n\n    return executedTimes.gt(3) && noRewards\n  }\n\n  // Main Function\n  const buildDcaOrderList = async (list: any[]) => {\n    const activeResult: any[] = []\n    const pastResult: any[] = []\n\n    for (const order of list) {\n      // Step 1: 获取 token 信息\n      const { token: inCoin, decimalsPow: inCoinDecimalsPow } = await getTokenDetails(order.in_coin_type)\n      const { token: outCoin, decimalsPow: outCoinDecimalsPow } = await getTokenDetails(order.out_coin_type)\n\n      // Step 2: 计算基本数据\n      const inDeposited = d(order.in_deposited).div(inCoinDecimalsPow)\n      console.log('🚀 ~ buildDcaOrderList ~ order.in_deposited:', order.in_deposited, inCoinDecimalsPow)\n      const cycleCount = d(order.in_deposited).div(order.in_amount_per_cycle).floor().toString()\n      const inAmountPerCycle = d(order.in_amount_per_cycle).div(inCoinDecimalsPow).toString()\n      const inBalance = d(order.in_balance).div(inCoinDecimalsPow)\n      const inWithdrawn = d(order.in_withdrawn).div(inCoinDecimalsPow)\n      const outBalance = d(order.out_balance).gt(0) ? d(order.out_balance).div(outCoinDecimalsPow) : d(0)\n      const outWithdraw = d(order.out_withdrawn).div(outCoinDecimalsPow)\n      const eachOrderSize = formatNumber(inDeposited.div(cycleCount).toString())\n      const ofOrderLeft = inBalance.div(inAmountPerCycle).floor().toNumber()\n\n      // Step 3: 计算价格区间\n      const { minPrice, maxPrice, minPriceResever, maxPriceResever } = calculatePriceRanges(\n        order.in_amount_per_cycle,\n        inCoinDecimalsPow,\n        outCoinDecimalsPow,\n        order.max_out_amount_per_cycle,\n        order.min_out_amount_per_cycle\n      )\n\n      // Step 4: 确定订单状态\n      const orderStatus = determineOrderStatus(order)\n\n      // Step 5: 计算订单当前价格及其他相关数据\n      const { currentAvgPrice, currentAvgPriceResever, inBalanceRatio, inDepositedOut } = calculateCurrentOrderMetrics(\n        orderStatus,\n        inDeposited,\n        inWithdrawn,\n        inBalance,\n        outBalance,\n        outWithdraw,\n        inCoinDecimalsPow\n      )\n      const isShowTradeTips = shouldShowTradeTips(order.created_at, order.cycle_frequency, outBalance, outWithdraw)\n\n      // Step 6: 构造订单项\n      const orderItem = {\n        createAt: timeFormatUTC(order.created_at * 1000, 'YMDHM'),\n        cycleFrequency: order.cycle_frequency,\n        orderID: order.id,\n        inAmountPerCycle,\n        nextCycleAt: timeFormatUTC(order.next_cycle_at * 1000, 'YMDHM'),\n        inDeposited: inDeposited.toString(),\n        cycleCount,\n        inDepositedOut,\n        inBalance: inBalance.toString(),\n        minPrice: formatNumber(minPrice),\n        maxPrice: formatNumber(maxPrice),\n        minPriceResever: formatNumber(minPriceResever),\n        maxPriceResever: formatNumber(maxPriceResever),\n        inCoin,\n        outCoin,\n        outBalance: outBalance.toString(),\n        inBalanceRatio,\n        outWithdraw: outWithdraw.toString(),\n        investEvery: convertSecondsToString(order.cycle_frequency),\n        eachOrderSize,\n        currentAvgPrice: currentAvgPrice === '--' ? '--' : formatNumber(currentAvgPrice, outCoin.decimals),\n        currentAvgPriceResever: currentAvgPrice === '--' ? '--' : formatNumber(currentAvgPriceResever, inCoin.decimals),\n        orderStatus,\n        inWithdrawn: inWithdrawn.toString(),\n        ofOrderLeft,\n        isShowTradeTips,\n        next_cycle_at: order.created_at + ofOrderLeft * order.cycle_frequency,\n        created_at: order.created_at,\n        version: order.version\n      }\n\n      if (orderStatus === 'Active') {\n        activeResult.push(orderItem)\n      } else {\n        pastResult.push(orderItem)\n      }\n    }\n    const sortActiveResult = activeResult?.sort((a, b) => {\n      return b.version - a.version\n    })\n    const sortPastResult = pastResult?.sort((a, b) => {\n      return b.version - a.version\n    })\n    console.log('🚀 ~ buildDcaOrderList ~ activeResult, pastResult:', sortActiveResult, sortPastResult, activeResult, pastResult)\n    return { activeResult: sortActiveResult, pastResult: sortPastResult }\n  }\n\n  return { getDcaOrderList }\n}\n","import { ChartOrderIcon } from '@/components/common/ChartOrderIcon'\nimport { TradeTab } from '@/components/common/TradeTab'\nimport ActiveAndPastDcas from '@/components/dca/ActiveAndPastDcas'\nimport { DcaInputBlock } from '@/components/dca/DcaInputBlock'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart'\nimport { TradeTabs } from '@/components/swap/type'\nimport { useGetDcaOrderList } from '@/hooks/dca/useGetDcaOrderList'\nimport useGlobalStore from '@/store/common/global'\nimport useDcaStore from '@/store/dca'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nexport default function Dca() {\n  const [activeList, setActiveList] = useState([])\n  const [pastList, setPastList] = useState([])\n  const { currentAccount } = useAccountStore()\n  const { sellCoin, buyCoin, setIsDcaRefresh } = useDcaStore()\n  const [isOrderLoading, setIsOrderLoading] = useState(true)\n  const { isShowTradeChart, isShowTradeOrders } = useGlobalStore()\n  const { getDcaOrderList } = useGetDcaOrderList()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const handleGetDcaOrderList = async (account: string, isLoading: boolean = false) => {\n    if (!isShowTradeOrders) return\n    if (isLoading) {\n      setIsOrderLoading(true)\n    }\n    const { activeResult, pastResult } = await getDcaOrderList(account)\n    setActiveList(activeResult)\n    setPastList(pastResult)\n    setIsOrderLoading(false)\n    console.log('🚀 ~ handleGetDcaOrderList ~ list:', activeResult, pastResult)\n  }\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      handleGetDcaOrderList(currentAccount?.address, true)\n    } else {\n      setActiveList([])\n      setPastList([])\n    }\n  }, [currentAccount?.address, isShowTradeOrders])\n\n  const handleRefresh = (isLoading: boolean = true) => {\n    setRefreshCount(0)\n    setIsDcaRefresh(true)\n    setTimeout(() => {\n      setIsDcaRefresh(false)\n    }, 1000)\n    if (currentAccount?.address) {\n      if (!isLoading) {\n        // 手动刷新的时候只请求记录不请求余额 只有20s自动刷新和进入页面时请求余额\n        fetchAccountBalance()\n      }\n      handleGetDcaOrderList(currentAccount?.address, isLoading)\n    }\n  }\n\n  useRpcListener({\n    onRpcChange: () => {\n      handleRefresh()\n    }\n  })\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [currentAccount?.address])\n\n  const { isApp, windowWidth } = useWindowWidth()\n\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n  // 20s轮询订单列表\n  useInterval({\n    interval: 1000,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= 20) {\n        handleRefresh(false)\n      }\n    }\n  })\n\n  return (\n    <HStack\n      mt={windowWidth && windowWidth < 1024 ? '28px' : '42px'}\n      className={isApp || isShowTradeChart || isShowTradeOrders ? '' : 'bg_img'}\n      w=\"100%\"\n      gap=\"16px\"\n      justify=\"center\"\n      align=\"flex-start\"\n      flexDirection={{ base: 'column', lg: 'row' }}\n    >\n      {(isShowTradeOrders || isShowTradeChart) && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }} mt={isApp && !isShowTradeChart ? '-16px' : '0'}>\n          {isShowTradeChart && <LimitPriceChart baseToken={sellCoin} quoteToken={buyCoin} />}\n          {isShowTradeOrders && !isApp && (\n            <ActiveAndPastDcas handleRefresh={handleRefresh} activeList={activeList} pastList={pastList} isOrderLoading={isOrderLoading} />\n          )}\n        </VStack>\n      )}\n      <VStack w={{ base: '100%', lg: '470px' }}>\n        <HStack w=\"100%\" justify=\"space-between\" mb=\"8px\">\n          <TradeTab currTradeTab={TradeTabs.DCA} />\n          <ChartOrderIcon />\n        </HStack>\n        <DcaInputBlock handleGetDcaOrderList={(walletAddress: string) => handleGetDcaOrderList(walletAddress)} />\n      </VStack>\n      {isApp && isShowTradeOrders && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n          <ActiveAndPastDcas handleRefresh={handleRefresh} activeList={activeList} pastList={pastList} isOrderLoading={isOrderLoading} />\n        </VStack>\n      )}\n    </HStack>\n  )\n}\n"],"names":["useDcaCancel","peripherySdk","usePeripherySDKStore","params","useDcaClaim","store","set","get","upperPriceSize","lowerPriceSize","dcaMode","isDcaRefresh","pageDirect","value","data","list","useDcaStore","create","useGetDcaOrderHistory","fetchByApi","useFetch","setOrderHistoryObj","orderId","limit","offset","res","DcaOrderHistoryPath","result","_a","item","OverviewOrders","isDetail","currentTabVal","orderInfo","handleRefresh","isApp","useWindowWidth","sellCoin","buyCoin","getDcaOrderHistory","direct","setDirect","useState","rateDirect","setRateDirect","orderHistoryPageSize","orderHistoryList","setOrderHistoryList","total","setTotal","currentPage","setCurrentPage","orderHistoryListLoading","setOrderHistoryListLoading","currentTab","setCurrentTab","tabList","useMemo","handleChangeTab","handleGetDcaOrderHistory","useEffect","handleCurrentPage","page","loading","_b","_c","_d","isClaimLoading","setIsClaimLoading","dcaWithdrawPayload","useAccountBalance","signAndExecuteTransaction","useTransaction","toClaim","paramsArr","claimOrderParams","tx","status","info","error","getExplorerUrl","useExplorer","jsxs","VStack","jsx","SelectTab","Block","Skeleton","NoData","HStack","DcaVLabel","orderHistory","inAmount","bnToAmount","outAmount","rate","d","rateResever","formatNumber","Text","Icon","Center","Pagination","WarningText","HTextLabelBox","Button","label","onChangeDirect","textAlign","showDirectIcon","rest","Box","ErrorTips","DcaItem","setIsDetail","isCloseLoading","setIsCloseLoading","getTokenRank","useTokenRank","setPageDirect","dcaCloseOrderPayload","closeOrder","closeOrderParams","CoinPairImage","BtnContent","Progress","RangeValue","onClickDetail","ActiveAndPastDcas","activeList","pastList","isOrderLoading","pageList","setPageList","paginationList","setPaginationList","currentAccount","onWalletModal","useAccountStore","currentList","start","end","totalClaimNum","sum","isClaimAllLoading","setIsClaimAllLoading","isCloseAllLoading","setIsCloseAllLoading","closeAll","claimAll","RefreshButton","index","OrderLoading","SkeletonCircle","useDcaConfig","setDcaConfig","getDcaConfigFromApi","DcaConfigPath","getDcaConfigFromContract","dcaConfig","apiConfig","contractConfig","useDcaGetQuote","setDcaQuote","inCoin","freq","count","sender","DcaQuotePath","useDcaHook","setSellCoin","setBuyCoin","sellAmount","buyAmount","setBuyAmount","setSellAmount","setCurrentCoinKey","currentCoinKey","investNum","currentInvest","orderNum","dcaQuote","setInvestNum","setOrderNum","setCurrentInvest","sellTotalAmount","setSellTotalAmount","setLowerPriceSize","setUpperPriceSize","getDcaConfig","getDcaQuote","coinPriceObj","useTokenPriceStore","fetchTokenPrices","getTokenAmountValue","useTokenPrice","uuid","setUuid","uuidRef","useRef","initiaTokenSelect","envConfigs","resetInputAmount","minPriceValue","setMinPriceValue","maxPriceValue","setMaxPriceValue","sellBalanceInfo","useGetTokenBalance","buyBalanceInfo","sellAmountValue","handleAmountChange","amount","fetchFindAvailableRouterDebounce","handlePageToggleDirect","decimals","newMinVal","newMaxVal","formatNumberWithDown","handleSelectToken","coin","isSell","onReverseClick","isDcaSelect","whitelistMode","sellCoinPrice","extractStructTagFromType","sellPerOrder","sellPerOrderUSD","platformFee","Decimal","amountInLimit","orderSizeError","orderInputError","priceError","estEndDate","setEstEndDate","orderTimeError","setOrderTimeError","getEstEndDate","date","investTime","timeFormatUTC","cycleFrequency","queryDcaQuoteDebounce","queryDcaQuote","coinAddress","defaultWalletAddress","useDebounceFunction","findBestRouters","useFindBestRouting","findRouterLoading","setFindRouterLoading","routerData","setRouterData","getTokensPrice","findAvailableRouterDebounce","findAvailableRouter","newUuid","providersKeys","AggregatorDexMap","key","toDecimalsAmount","uniqueTokens","btnStatus","btnInfo","AggregatorServerErrorCode","warningTokenList","currentPrice","minPriceValueDebounce","val","maxPriceValueDebounce","handleMinInputChange","handleMaxInputChange","changeLowerPriceSize","changeUpperPriceSize","lowerPrice","upperPrice","useGetDcaTokenList","getTokenInfo","useGetToken","setFilterTokenLoading","useTokenSelectStore","setInCoinWhiteList","setOutCoinWhiteList","whitelist_mode","inCoinList","outCoinList","inList","outList","i","tokenInfo","useOpenDcaOrder","calculateCycleAmounts","inCoinAmount","cycleCount","inCoinDecimals","outCoinDecimals","minPrice","maxPrice","cycleCountAmount","maxAmount","minAmount","perCycleMinOutAmount","perCycleMaxOutAmount","perCycleAmountDecimal","buildDcaOrderPayload","quoteResult","in_coin","in_coin_amount","cycle_count","out_coin","min_price","max_price","dcaOpenOrderPayloadParams","DetailsContent","detailsData","isConfirm","minPriceResever","maxPriceResever","SingleCoinImage","addComma","ConfirmModal","confirmData","isOpen","onClose","toOpenDca","toOpenDcaLoading","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","SingleTokenInfo","DetailsBlock","InvestAndOrders","title","inputValue","inputChange","onListItemClick","handleInputChange","event","InputBox","Input","MenuDropBlock","MinAndMaxPrice","text","align","NumericFormatInput","DcaInputBlock","handleGetDcaOrderList","setDcaMode","tradeIcon","setTradeIcon","timeList","toggleTradeIcon","hovered","openDcaOrder","setToOpenDcaLoading","fetchCoinBalance","transactionRejected","transactionConfirmation","failedTsToast","useGlobalToast","showInsufficientBalanceToast","useInsufficientBalanceToast","toastInfo","errorInfo","inCoinWhiteList","outCoinWhiteList","getDcaCoinWhiteList","whiteTokenList","setWhiteTokenList","isOpenConfirmModal","setIsOpenConfirmModal","setValue","minValue","setMinValue","maxValue","setMaxValue","handleSlider","min","max","TradeInputGroup","tab","token","TooltipIcon","CurrentPrice","RangeSlider","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderThumb","Image","icon_currentprice","WarningTokenTipsModal","convertSecondsToString","seconds","months","weeks","days","hours","minutes","useGetDcaOrderList","getDcaOrderList","walletAddress","buildDcaOrderList","getTokenDetails","tokenType","decimalsPow","calculatePriceRanges","inAmountPerCycle","inCoinDecimalsPow","outCoinDecimalsPow","maxOutAmountPerCycle","minOutAmountPerCycle","determineOrderStatus","order","calculateCurrentOrderMetrics","orderStatus","inDeposited","inWithdrawn","inBalance","outBalance","outWithdraw","calculateReseverPrice","price","currentAvgPrice","inBalanceRatio","shouldShowTradeTips","createdAt","nowTime","executedTimes","noRewards","activeResult","pastResult","outCoin","eachOrderSize","ofOrderLeft","currentAvgPriceResever","inDepositedOut","isShowTradeTips","orderItem","sortActiveResult","a","b","sortPastResult","Dca","setActiveList","setPastList","setIsDcaRefresh","setIsOrderLoading","isShowTradeChart","isShowTradeOrders","useGlobalStore","fetchAccountBalance","account","isLoading","setRefreshCount","useRpcListener","windowWidth","refreshCount","useInterval","LimitPriceChart","TradeTab","TradeTabs","ChartOrderIcon"],"mappings":"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"}