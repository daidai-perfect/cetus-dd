{"version":3,"file":"DepositMode-Dl5Ie3mY.js","sources":["../../src/components/vaults/modal/DepositMode.tsx"],"sourcesContent":["import useGetPythLastPrice from '@/hooks/unstable-vault/useGetPythLastPrice'\nimport vaultInterface from '@/hooks/vault-interface'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vaults/useVaultsHelper'\nimport useGlobalStore from '@/store/common/global'\nimport useVaultsAddStore from '@/store/unstable-vaults/useVaultsAdd'\nimport useVaultsRiskStore from '@/store/vaults/useVaultsRisk'\nimport { VaultApiInfo } from '@/types'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport { useInterval } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { fixCoinType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport AvailableCapacity from '../detail/AvailableCapacity'\nimport { VaultsAddResult } from '../detail/VaultsAddResult'\nimport RiskModal from '../risk-modal'\n\ntype VaultDepositModeProps = {\n  isUnstableVault: boolean\n  displayTokenA?: Token | undefined\n  displayTokenB?: Token | undefined\n  vaultId: string\n  isReverse: boolean\n  assetAction: string\n  isCheckedZAP: boolean\n  currentActionTab: string\n  autoRefresh: () => void\n  apiVaultInfo: VaultApiInfo\n  quoteCoin?: Token\n  maxCapNum?: string\n  hardCapUSD: string\n  vaultTvl: string\n  depositRatio: string\n  calculateVaultTvlLoading: boolean\n  contractVault: any\n  availableCapacityWithQuoteCoin: string\n  availableCapacityWithBaseCoin: string\n  gtAumLimit: boolean\n  lpTokenInfo: any\n}\nexport default function VaultDepositMode(props: VaultDepositModeProps) {\n  const {\n    isUnstableVault,\n    displayTokenA,\n    displayTokenB,\n    vaultId,\n    isReverse,\n    assetAction,\n    isCheckedZAP,\n    autoRefresh,\n    apiVaultInfo,\n    quoteCoin,\n    baseCoin,\n    maxCapNum,\n    availableCapacityWithQuoteCoin,\n    availableCapacityWithBaseCoin,\n    hardCapUSD,\n    vaultTvl,\n    depositRatio,\n    calculateVaultTvlLoading,\n    contractVault,\n    gtAumLimit,\n    lpTokenInfo\n  } = props\n  console.log('🚀🚀🚀 ~ DepositMode.tsx:66 ~ VaultDepositMode ~ lpTokenInfo:', lpTokenInfo)\n  const useVaultsAdd = vaultInterface.useVaultsAdd(isUnstableVault)\n  const useAddButtonStatus = vaultInterface.useAddButtonStatus(isUnstableVault)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const isQuoteCoin = useMemo(() => {\n    return assetAction == quoteCoin?.coin_type\n  }, [assetAction, quoteCoin])\n\n  // 初始化add hook时区分 传入tokenA,B按照合约方向\n  const {\n    amountInputA,\n    amountInputB,\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    preCalculateLoading,\n    fixAmountA,\n    inputTotalValue,\n    handleAmountInputChange,\n    calculateResult,\n    showOnlySideTips,\n    doAddAction,\n    overHardtop,\n    zapNumError,\n    calculateLpLoading,\n    inputTotalValueError,\n    percentage,\n    setPercentage,\n    setIsSlider,\n    debouncedPreCalculateDepositValue,\n    isSlider,\n    setUuid\n  } = useVaultsAdd(\n    assetAction,\n    autoRefresh,\n    vaultId,\n    isReverse ? displayTokenB : displayTokenA,\n    isReverse ? displayTokenA : displayTokenB,\n    isReverse,\n    isCheckedZAP,\n    hardCapUSD,\n    vaultTvl,\n    gtAumLimit,\n    availableCapacityWithQuoteCoin,\n    availableCapacityWithBaseCoin,\n    quoteCoin,\n    baseCoin,\n    isQuoteCoin\n  )\n\n  const { btnText, btnDisabled } = useAddButtonStatus(\n    isCheckedZAP,\n    assetAction,\n    true,\n    amountInputA,\n    amountInputB,\n    fixAmountA,\n    balanceInfoA?.balanceFormat,\n    balanceInfoB?.balanceFormat,\n    displayTokenA,\n    displayTokenB,\n    zapNumError,\n    calculateResult,\n    overHardtop,\n    inputTotalValueError\n  )\n\n  const { vaultsSlippage } = useGlobalStore()\n\n  // 最小可接收\n  const { amountLimit } = useCalculateSlippageAmount(Number(vaultsSlippage), calculateResult?.ft_amount, false)\n  // 占比 非稳 lp_token_treasury 稳定total_supply 分别表示池子总lp_token数量\n  const { lpRate } = useCalculateChangeLpRate(\n    calculateResult?.ft_amount,\n    isUnstableVault ? contractVault?.lp_token_treasury : contractVault?.total_supply\n  )\n\n  const { isApp } = useWindowWidth()\n\n  const { pythPriceMap } = useVaultsAddStore()\n\n  const priceMap = useMemo(() => {\n    if (pythPriceMap) {\n      return pythPriceMap\n    }\n  }, [pythPriceMap])\n\n  const { getPythLastPrice } = useGetPythLastPrice()\n\n  useEffect(() => {\n    if (isSlider) {\n      const uuid = v4()\n      setUuid(uuid)\n      debouncedPreCalculateDepositValue(\n        percentage,\n        uuid,\n        isQuoteCoin ? availableCapacityWithQuoteCoin : availableCapacityWithBaseCoin,\n        isQuoteCoin ? quoteCoin : baseCoin\n      )\n    }\n  }, [priceMap])\n\n  useInterval({\n    interval: 20 * 1000,\n    callback: () => {\n      getPythLastPrice([fixCoinType(apiVaultInfo.tokenA.coin_type), fixCoinType(apiVaultInfo.tokenB.coin_type)])\n    }\n  })\n\n  const hasFetchedPrice = useRef(false)\n\n  useEffect(() => {\n    if (!hasFetchedPrice.current && apiVaultInfo?.tokenA?.coin_type && apiVaultInfo?.tokenB?.coin_type) {\n      getPythLastPrice([fixCoinType(apiVaultInfo.tokenA.coin_type), fixCoinType(apiVaultInfo.tokenB.coin_type)])\n      hasFetchedPrice.current = true\n    }\n  }, [apiVaultInfo?.tokenA?.coin_type, apiVaultInfo?.tokenB?.coin_type])\n\n  const { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj } = useVaultsRiskStore()\n  const [isOpenRiskModal, setIsOpenRiskModal] = useState(false)\n  const isShowRiskModal = useMemo(() => {\n    console.log(\n      '🚀🚀🚀 ~ VaultsAdd.tsx:211 ~ isShowRiskModal ~ isCheckedDontRemindWalletObj[currentAccount?.address]:',\n      isCheckedDontRemindWalletObj[currentAccount?.address]\n    )\n    return !isCheckedDontRemindWalletObj[currentAccount?.address]\n  }, [isCheckedDontRemindWalletObj, currentAccount?.address])\n\n  return (\n    <>\n      <Box w=\"100%\" position=\"relative\">\n        <TradeInputGroup\n          onClick={() => {}}\n          from={{\n            wrapStyle: { h: '108px' },\n            balance: balanceInfoA?.balanceFormat || '',\n            value: amountInputA,\n            amountValue: amountInputA && amountValueA,\n            loading: (isReverse ? fixAmountA : !fixAmountA) && preCalculateLoading && !isCheckedZAP,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenA?.coin_type,\n            onChange: value => {\n              if (apiVaultInfo?.category == 'haedal') {\n                setIsSlider(false)\n              }\n              handleAmountInputChange(value, !isReverse, true, amountInputB)\n            },\n            selectable: false,\n            placeholder: '0.0',\n            token: displayTokenA,\n            onFocusChange: (focus: boolean) => {}\n          }}\n          to={{\n            wrapStyle: { h: '108px' },\n            balance: balanceInfoB?.balanceFormat || '',\n            value: amountInputB,\n            amountValue: amountInputB && amountValueB,\n            loading: (isReverse ? !fixAmountA : fixAmountA) && preCalculateLoading && !isCheckedZAP,\n            onFocusChange: (focus: boolean) => {},\n            onChange: value => {\n              if (apiVaultInfo?.category == 'haedal') {\n                setIsSlider(false)\n              }\n              handleAmountInputChange(value, isReverse, true, amountInputA)\n            },\n            selectable: false,\n            hideSelf: assetAction !== 'both' && assetAction !== displayTokenB?.coin_type,\n            placeholder: '0.0',\n            token: displayTokenB\n          }}\n          iconParams={{\n            xlinkHref: '#icon-icon_add',\n            svgFill: 'text_caption',\n            iconCursor: 'default'\n          }}\n          iconHover={false}\n        />\n      </Box>\n\n      {zapNumError && percentage > 0 && (amountInputA || amountInputB) ? (\n        <VStack w=\"100%\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\" gap=\"20px\">\n          <Text\n            color=\"primary_yellow\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_yellow_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            Single-asset deposit can't be higher than $10,000 at a time.\n          </Text>\n        </VStack>\n      ) : null}\n\n      <Button\n        width=\"100%\"\n        height=\"52px\"\n        borderRadius=\"12px\"\n        marginBottom=\"8px\"\n        fontWeight=\"500\"\n        fontSize={zapNumError ? (isApp ? '12px' : '15px') : '16px'}\n        isLoading={preCalculateLoading}\n        disabled={btnDisabled || preCalculateLoading || (currentAccount?.address && (gtAumLimit || overHardtop))}\n        onClick={() => {\n          if (!currentAccount?.address) {\n            onWalletModal(true)\n          } else {\n            if (isShowRiskModal) {\n              setIsOpenRiskModal(true)\n            } else {\n              doAddAction()\n            }\n          }\n        }}\n      >\n        {btnText || (isCheckedZAP ? 'Zap In' : 'Deposit')}\n      </Button>\n\n      {apiVaultInfo?.category == 'haedal' && (\n        <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p=\"16px\" mb=\"8px\">\n          <AvailableCapacity\n            depositRatio={depositRatio}\n            percentage={percentage}\n            hardCapUSD={hardCapUSD}\n            vaultTvl={vaultTvl}\n            calculateVaultTvlLoading={calculateVaultTvlLoading}\n            quoteCoin={quoteCoin}\n            maxCapNum={maxCapNum}\n            gtAumLimit={gtAumLimit}\n            availableCapacityWithQuoteCoin={availableCapacityWithQuoteCoin}\n            key={vaultId}\n            onChange={value => {\n              setIsSlider(true)\n              setPercentage(value)\n              const uuid = v4()\n              setUuid(uuid)\n              debouncedPreCalculateDepositValue(\n                value,\n                uuid,\n                isQuoteCoin ? availableCapacityWithQuoteCoin : availableCapacityWithBaseCoin,\n                isQuoteCoin ? quoteCoin : baseCoin\n              )\n            }}\n          />\n        </Block>\n      )}\n\n      {inputTotalValueError && (\n        <VStack w=\"100%\" alignItems=\"start\">\n          <Text\n            color=\"primary_red\"\n            fontSize=\"12px\"\n            textAlign=\"left\"\n            w=\"100%\"\n            bg=\"primary_red_opacity.10\"\n            p=\"12px\"\n            borderRadius=\"8px\"\n            lineHeight=\"20px\"\n          >\n            The input is too small. Zap mode is not available.\n          </Text>\n        </VStack>\n      )}\n\n      {/* 展示计算结果 */}\n      {(calculateResult || showOnlySideTips) && !inputTotalValueError && (amountInputA || amountInputB) && (\n        <VStack w=\"100%\" pb=\"20px\" alignItems=\"start\" gap=\"0\">\n          {assetAction !== 'both' && showOnlySideTips && (\n            <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\" pb={calculateResult ? '20px' : '0'}>\n              {showOnlySideTips}\n            </Text>\n          )}\n          {calculateResult && (\n            <VaultsAddResult\n              amountLimit={amountLimit}\n              inputTotalValue={inputTotalValue}\n              preCalculateLoading={preCalculateLoading}\n              calculateLpLoading={calculateLpLoading}\n              lpRate={lpRate}\n              lpDecimals={lpTokenInfo?.decimals}\n              poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n              labelColor=\"primary_gray\"\n            />\n          )}\n        </VStack>\n      )}\n\n      {isOpenRiskModal && (\n        <RiskModal\n          isOpen={isOpenRiskModal}\n          setIsOpen={setIsOpenRiskModal}\n          continueFunc={() => {\n            setIsOpenRiskModal(false)\n            doAddAction()\n          }}\n        />\n      )}\n    </>\n  )\n}\n"],"names":["VaultDepositMode","props","isUnstableVault","displayTokenA","displayTokenB","vaultId","isReverse","assetAction","isCheckedZAP","autoRefresh","apiVaultInfo","quoteCoin","baseCoin","maxCapNum","availableCapacityWithQuoteCoin","availableCapacityWithBaseCoin","hardCapUSD","vaultTvl","depositRatio","calculateVaultTvlLoading","contractVault","gtAumLimit","lpTokenInfo","useVaultsAdd","vaultInterface","useAddButtonStatus","currentAccount","onWalletModal","useAccountStore","isQuoteCoin","useMemo","amountInputA","amountInputB","balanceInfoA","balanceInfoB","amountValueA","amountValueB","preCalculateLoading","fixAmountA","inputTotalValue","handleAmountInputChange","calculateResult","showOnlySideTips","doAddAction","overHardtop","zapNumError","calculateLpLoading","inputTotalValueError","percentage","setPercentage","setIsSlider","debouncedPreCalculateDepositValue","isSlider","setUuid","btnText","btnDisabled","vaultsSlippage","useGlobalStore","amountLimit","useCalculateSlippageAmount","lpRate","useCalculateChangeLpRate","isApp","useWindowWidth","pythPriceMap","useVaultsAddStore","priceMap","getPythLastPrice","useGetPythLastPrice","useEffect","uuid","v4","useInterval","fixCoinType","hasFetchedPrice","useRef","_a","_b","isCheckedAcceptWalletObj","isCheckedDontRemindWalletObj","useVaultsRiskStore","isOpenRiskModal","setIsOpenRiskModal","useState","isShowRiskModal","jsxs","Fragment","jsx","Box","TradeInputGroup","value","focus","VStack","Text","Button","Block","AvailableCapacity","VaultsAddResult","RiskModal"],"mappings":"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"}