import{k as w,n as x,cf as E,cg as h,ch as p,y as A,aK as u,ci as d}from"./index-e1XEidi2.js";import{a as k}from"./vendor-BowHGuwE.js";function C(){const g=w("clmm"),{currentAccount:i}=x(),{mutateAsync:m}=E(),{mutate:T}=h(),{mutate:S}=p({execute:async({bytes:s,signature:t})=>await f(s,t)}),l=k.useMemo(()=>A.env==="mainnet"?"sui:mainnet":"sui:testnet",[i]),f=async(s,t,o=!1)=>{var a,n;if(o){const r=await g.FullClient.devInspectTransactionBlock({transactionBlock:u.from(d(s)),sender:i.address});if(console.log("devInspectTransactionBlock:",r),!r||((a=r.effects)==null?void 0:a.status.status)==="failure")throw Error((n=r.effects)==null?void 0:n.status.error)}return await g.FullClient.executeTransactionBlock({transactionBlock:s,signature:t,options:{showEvents:!0,showRawEffects:!0,showEffects:!0,showBalanceChanges:!0,showObjectChanges:!0,showInput:!0}})};return{signAndExecuteTransactionBlock:async(s,t=!1)=>{var e,a;let o;if(typeof s=="string"?o=u.from(s):o=s,console.log("chain: ",{chain:l,transactionBlock:s}),t){const n=await g.FullClient.devInspectTransactionBlock({transactionBlock:s,sender:i.address});if(console.log("devInspectTransactionBlock:",n),!n||((e=n.effects)==null?void 0:e.status.status)==="failure")throw Error((a=n.effects)==null?void 0:a.status.error)}return o.setGasBudget(1e8),console.log("ðŸš€ ~ file: useSigner.ts:71 ~ signTransactionBlock ~ transactionBlock:",s),new Promise((n,r)=>{S({transaction:o,chain:l},{onSuccess:c=>{console.log(" signAndExecuteTransactionBlock  executed transaction",c),n(c)},onError:c=>{console.error("signAndExecuteTransactionBlock transaction failed",c),r(c)}})})},signTransactionBlock:async s=>(console.log("ðŸš€ðŸš€ðŸš€ ~ file: useSigner.ts:74 ~ signTransactionBlock ~ transactionBlock:",s instanceof Uint8Array,s),s instanceof Uint8Array&&(s=u.from(s)),typeof s=="string"&&(s=u.from(d(s))),console.log("ðŸš€ ~ file: useSigner.ts:105 ~ signTransactionBlock ~ transactionBlock:",{transactionBlock:s,chain:l}),new Promise((t,o)=>{m({transaction:s,chain:l},{onSuccess:e=>{console.log("signTransactionBlock result",e),t(e)},onError:e=>{console.error("signTransactionBlock failed",e),o(e)},onSettled:(e,a,n,r)=>{}})})),executeTransactionBlock:f,signUserMessage:async s=>(console.log("ðŸš€ðŸš€ðŸš€ ~ useSigner.ts:167 ~ signUserMessage ~ message:",s),console.log("ðŸš€ðŸš€ðŸš€ ~ useSigner.ts:167 ~ returnnewPromise ~ currentAccount:",i),new Promise((t,o)=>{T({message:s},{onSuccess:e=>{console.log("signUserMessage result",e),t(e)},onError:e=>{console.error("signUserMessage failed",e),o(e)},onSettled:(e,a,n,r)=>{}})}))}}export{C as u};
//# sourceMappingURL=useSigner-BuuzyvGs.js.map
