{"version":3,"file":"global-JZuWLvX4.js","sources":["../../src/store/common/global.ts"],"sourcesContent":["import { TransactionMode } from '@/types'\nimport { PoolApiInfo } from '@/types/pool'\nimport { create, StateCreator } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface GlobalState {\n  pageLoading: boolean\n  setPageLoading: (value: boolean) => void\n  // 滑点 UI 0.5%,  存 0.005\n  slippage: string | number\n  setSlippage: (value: string | number) => void\n  mevProtect: boolean\n  setMevProtect: (value: boolean) => void\n\n  vaultsSlippage: string | number\n  setVaultsSlippage: (value: string | number) => void\n\n  zapSlippage: string | number\n  setZapSlippage: (value: string | number) => void\n\n  poolApiMap: Record<string, PoolApiInfo[]>\n  setPoolApiMap: (key: string, poolAddress: PoolApiInfo[]) => void\n\n  isShowProfileAssets: boolean\n  setIsShowProfileAssets: (isOpen: boolean) => void\n\n  isShowTradeChart: boolean\n  setIsShowTradeChart: (isOpen: boolean) => void\n  isShowTradeOrders: boolean\n  setIsShowTradeOrders: (isOpen: boolean) => void\n  settingOpen: boolean\n  setSettingOpen: (value: boolean) => void\n  transactionMode: TransactionMode\n  setTransctionMode: (value: TransactionMode) => void\n  maxCapForGas: string\n  setMaxCapForGas: (value: string) => void\n  customGasPrice: string\n  setCustomGasPrice: (value: string) => void\n}\n\nconst store: StateCreator<GlobalState> = (set, get) => ({\n  poolApiMap: {},\n  pageLoading: true,\n  setPageLoading: (value: boolean) => {\n    set(() => ({\n      pageLoading: value\n    }))\n  },\n  slippage: 0.005,\n  setSlippage: (value: string | number) => {\n    set(() => ({\n      slippage: value\n    }))\n  },\n  mevProtect: true,\n  setMevProtect: (value: boolean) => {\n    set(() => ({\n      mevProtect: value\n    }))\n  },\n\n  vaultsSlippage: '0.001',\n  setVaultsSlippage: (value: string | number) => {\n    set(() => ({\n      vaultsSlippage: value\n    }))\n  },\n\n  zapSlippage: '0.005',\n  setZapSlippage: (value: string | number) => {\n    set(() => ({\n      zapSlippage: value\n    }))\n  },\n\n  setPoolApiMap: (key: string, poolApiList: PoolApiInfo[]) => {\n    const poolApiMap = get().poolApiMap\n    poolApiMap[key] = poolApiList\n    set(() => ({\n      poolApiMap: { ...poolApiMap }\n    }))\n  },\n  isShowTradeChart: false,\n  setIsShowTradeChart: (isOpen: boolean) => {\n    set(() => ({\n      isShowTradeChart: isOpen\n    }))\n  },\n  isShowTradeOrders: false,\n  setIsShowTradeOrders: (isOpen: boolean) => {\n    set(() => ({\n      isShowTradeOrders: isOpen\n    }))\n  },\n  isShowProfileAssets: true,\n  setIsShowProfileAssets: (isShow: boolean) => {\n    set(() => ({\n      isShowProfileAssets: isShow\n    }))\n  },\n  settingOpen: false,\n  setSettingOpen: (value: boolean) => {\n    set(() => ({\n      settingOpen: value\n    }))\n  },\n  transactionMode: 'Default',\n  setTransctionMode: (value: TransactionMode) => {\n    set(() => ({\n      transactionMode: value\n    }))\n  },\n  maxCapForGas: '0.5',\n  setMaxCapForGas: (value: string) => {\n    set(() => ({\n      maxCapForGas: value\n    }))\n  },\n  customGasPrice: '1500',\n  setCustomGasPrice: (value: string) => {\n    set(() => ({\n      customGasPrice: value\n    }))\n  }\n})\n\nconst useGlobalStore = create(\n  persist(store, {\n    name: 'useGlobalStore',\n    partialize: state => {\n      const {\n        slippage,\n        mevProtect,\n        vaultsSlippage,\n        isShowTradeChart,\n        transactionMode,\n        maxCapForGas,\n        customGasPrice,\n        zapSlippage,\n        isShowProfileAssets\n      } = state\n      return {\n        slippage,\n        mevProtect,\n        vaultsSlippage,\n        isShowTradeChart,\n        transactionMode,\n        maxCapForGas,\n        customGasPrice,\n        zapSlippage,\n        isShowProfileAssets\n      }\n    },\n    version: 3\n  })\n)\nexport default useGlobalStore\n"],"names":["store","set","get","value","key","poolApiList","poolApiMap","isOpen","isShow","useGlobalStore","create","persist","state","slippage","mevProtect","vaultsSlippage","isShowTradeChart","transactionMode","maxCapForGas","customGasPrice","zapSlippage","isShowProfileAssets"],"mappings":"gDAwCA,MAAMA,EAAmC,CAACC,EAAKC,KAAS,CACtD,WAAY,CAAC,EACb,YAAa,GACb,eAAiBC,GAAmB,CAClCF,EAAI,KAAO,CACT,YAAaE,CAAA,EACb,CACJ,EACA,SAAU,KACV,YAAcA,GAA2B,CACvCF,EAAI,KAAO,CACT,SAAUE,CAAA,EACV,CACJ,EACA,WAAY,GACZ,cAAgBA,GAAmB,CACjCF,EAAI,KAAO,CACT,WAAYE,CAAA,EACZ,CACJ,EAEA,eAAgB,QAChB,kBAAoBA,GAA2B,CAC7CF,EAAI,KAAO,CACT,eAAgBE,CAAA,EAChB,CACJ,EAEA,YAAa,QACb,eAAiBA,GAA2B,CAC1CF,EAAI,KAAO,CACT,YAAaE,CAAA,EACb,CACJ,EAEA,cAAe,CAACC,EAAaC,IAA+B,CACpD,MAAAC,EAAaJ,IAAM,WACzBI,EAAWF,CAAG,EAAIC,EAClBJ,EAAI,KAAO,CACT,WAAY,CAAE,GAAGK,CAAW,CAAA,EAC5B,CACJ,EACA,iBAAkB,GAClB,oBAAsBC,GAAoB,CACxCN,EAAI,KAAO,CACT,iBAAkBM,CAAA,EAClB,CACJ,EACA,kBAAmB,GACnB,qBAAuBA,GAAoB,CACzCN,EAAI,KAAO,CACT,kBAAmBM,CAAA,EACnB,CACJ,EACA,oBAAqB,GACrB,uBAAyBC,GAAoB,CAC3CP,EAAI,KAAO,CACT,oBAAqBO,CAAA,EACrB,CACJ,EACA,YAAa,GACb,eAAiBL,GAAmB,CAClCF,EAAI,KAAO,CACT,YAAaE,CAAA,EACb,CACJ,EACA,gBAAiB,UACjB,kBAAoBA,GAA2B,CAC7CF,EAAI,KAAO,CACT,gBAAiBE,CAAA,EACjB,CACJ,EACA,aAAc,MACd,gBAAkBA,GAAkB,CAClCF,EAAI,KAAO,CACT,aAAcE,CAAA,EACd,CACJ,EACA,eAAgB,OAChB,kBAAoBA,GAAkB,CACpCF,EAAI,KAAO,CACT,eAAgBE,CAAA,EAChB,CAAA,CAEN,GAEMM,EAAiBC,EACrBC,EAAQX,EAAO,CACb,KAAM,iBACN,WAAqBY,GAAA,CACb,KAAA,CACJ,SAAAC,EACA,WAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,aAAAC,EACA,eAAAC,EACA,YAAAC,EACA,oBAAAC,CAAA,EACET,EACG,MAAA,CACL,SAAAC,EACA,WAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,aAAAC,EACA,eAAAC,EACA,YAAAC,EACA,oBAAAC,CACF,CACF,EACA,QAAS,CACV,CAAA,CACH"}