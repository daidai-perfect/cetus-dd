import{u as D,g as L,h as N,i as j,e as E}from"./usePositionList-B802Vh58.js";import{u as M}from"./useAccountBalance-B0xlJzQj.js";import{k as h,d as B,a9 as R,ai as U,aj as k,ak as q,al as b,am as X,n as W,G}from"./index-C2ps9-Dy.js";import{a as Z}from"./vendor-BowHGuwE.js";import{u as z}from"./useTransaction-Ck5-rOQU.js";import{M as J}from"./msafe-oYBkW7LJ.js";import{u as K}from"./ExpendItem-CPm9nAfZ.js";function Q(){const l=h("burn"),g=r=>{const{posId:_,clmmPool:P,coinTypeA:t,coinTypeB:o}=r,s={pos_id:_,pool_id:P,coin_type_a:t,coin_type_b:o};return l.Burn.createBurnPayload(s)},n=r=>{const{poolAddress:_,posId:P,coinTypeA:t,coinTypeB:o,account:s,rewarderCoinTypes:c}=r,d=l.Burn.createCollectFeesPayload([{pool_id:_,pos_id:P,coin_type_a:t,coin_type_b:o,account:s}]);return l.Burn.crateCollectRewardsPayload([{pool_id:_,pos_id:P,coin_type_a:t,coin_type_b:o,rewarder_coin_types:c,account:s}],d)},A=r=>{var c,d;console.log("ðŸš€ðŸš€ðŸš€ ~ file: usePositionList.ts:71 ~ getCoinAmountFromLiquidity ~ params:",r);const _=R.tickIndexToSqrtPriceX64(r.lowerTick),P=R.tickIndexToSqrtPriceX64(r.upperTick),t=U.getCoinAmountFromLiquidity(new k.BN(r.liquidity),new k.BN(r.currentSqrtPrice),_,P,r.roundUp),o=q(t.coin_amount_a.toString(),(c=r.defaultCoinA)==null?void 0:c.decimals),s=q(t.coin_amount_b.toString(),(d=r.defaultCoinB)==null?void 0:d.decimals);return{coinAAmount:o,coinBAmount:s}};return{getBurnTxPayload:g,getBurnClaimTxPayload:n,getBurnPositionAmountByPool:async(r,_)=>{const{poolAddress:P}=r,t=await l.Burn.getPoolBurnPositionList(P)||[];console.log("ðŸš€ðŸš€ðŸš€ ~ file: useBurn.ts:92 ~ getBurnPositionAmountByPool ~ positionList:",t);let o=B(0),s=B(0);for(let c=0;c<(t==null?void 0:t.length);c++){const d=t[c],{tick_lower_index:e,tick_upper_index:u,liquidity:w}=d,i=r==null?void 0:r.tokenA,T=r==null?void 0:r.tokenB,{coinAAmount:m,coinBAmount:x}=A({lowerTick:e,upperTick:u,currentSqrtPrice:_,roundUp:!1,liquidity:w,defaultCoinA:i,defaultCoinB:T});o=B(o).add(B(m)),s=B(s).add(B(x))}return{totalA:o.toString(),totalB:s.toString()}}}}const v=l=>l.startsWith("0x")?l.slice(2):l;function oe(l){const g=[];for(const n of l){const A={objectId:n.objectId,index:Number(X(BigInt(n.index)).toString()),sqrtPrice:n.sqrtPrice,liquidityNet:new b(BigInt.asIntN(128,BigInt(BigInt(n.liquidityNet.toString()))).toString()),liquidityGross:n.liquidityGross,feeGrowthOutsideA:n.feeGrowthOutsideA,feeGrowthOutsideB:n.feeGrowthOutsideB,rewardersGrowthOutside:[new b(n.rewardersGrowthOutside[0]),new b(n.rewardersGrowthOutside[1]),new b(n.rewardersGrowthOutside[2])]};g.push(A)}return g}function V(){const l=h("clmm"),g=h("farms"),n=h("burn"),{getBurnClaimTxPayload:A}=Q(),{getHarvestFarmsTxPayload:C}=K(),r=async t=>{const{posType:o,id:s,clmmPool:c,coinTypeA:d,coinTypeB:e,rewarderCoinTypes:u,account:w}=t;let i,T;if(o==="clmm"){const m={pool_id:c,pos_id:s,rewarder_coin_types:u,coin_type_a:d,coin_type_b:e,collect_fee:!0};i=await l.Rewarder.collectRewarderPayload(m),T={action:J.ClaimFeeAndMining,txbParams:m}}else if(o==="farms"){const m={coin_type_a:d,coin_type_b:e,clmm_pool_id:c,position_nft_id:s,clmm_rewarder_types:u,collect_fee:!0};i=await g.Farms.claimFeeAndClmmReward(m),T={action:"FarmingClaimFeeAndReward",txbParams:m}}else o==="burn"&&(i=A({poolAddress:c,posId:s,coinTypeA:d,coinTypeB:e,account:w,rewarderCoinTypes:u}));return{tx:i,msafeParams:T}};return{getPosClaimFeeAndRewardAndFarmsTxPayload:async t=>{console.log("ðŸš€ ~ usePosClaimFeeAndReward ~ params:",t);const{id:o,farmsPool:s}=t;let c;const{tx:d,msafeParams:e}=await r(t);if(c=d,s){const{tx:u,msafeParams:w}=await C(s,o,c);return{tx:u,msafeParams:w}}return{tx:d,msafeParams:e}},getPosClaimFeeAndRewardTxPayload:r,getBatchHarvestFeeAndRewardsTxPayload:async(t,o,s)=>{console.log("ðŸš€ ~ getBatchHarvestFeeAndRewardsTxPayload ~ posBaseList:",t,o,s);const c=[],d=[],e=[],u=[];t.forEach(a=>{var f;const y=((f=o[a.posId])==null?void 0:f.map(F=>F.coin_address))||[];console.log("ðŸš€ ~ getBatchHarvestFeeAndRewardsTxPayload ~ rewarderCoinTypes:",y),a.posType=="clmm"?c.push({pool_id:a.clmmPool,pos_id:a.id,collect_fee:!0,rewarder_coin_types:y,coin_type_a:v(a.coinTypeA),coin_type_b:v(a.coinTypeB)}):a.posType=="farms"?(d.push({pool_id:a.farmsPool||"",position_nft_id:a.id,clmm_pool_id:a.clmmPool,collect_fee:!0,collect_farms_rewarder:!1,clmm_rewarder_types:y,coin_type_a:a.coinTypeA,coin_type_b:a.coinTypeB}),u.push({pool_id:a.farmsPool||"",position_nft_id:a.id})):e.push({pos_id:(a==null?void 0:a.id)||"",pool_id:a.clmmPool,coin_type_a:a.coinTypeA,coin_type_b:a.coinTypeB,rewarder_coin_types:y,account:s})});const w=await g.Farms.batchHarvestAndClmmFeePayload(d,c),i=[];for(let a=0;a<e.length;a++){const y=e[a];(y==null?void 0:y.rewarder_coin_types.length)>0&&i.push(y)}const T=n.Burn.createCollectFeesPayload(e,w),m=n.Burn.crateCollectRewardsPayload(i,T),x=await g.Farms.batchHarvestPayload(u,m);return{txb:T,tx:m,txf:x}}}}function ce(){const{fetchAccountBalance:l}=M(),{posRewardsData:g,farmsPosRewardsData:n}=D(),{getPosFeeData:A}=L(),{getPosRewardsData:C}=N(),{getFarmsRewardsData:r}=j(),{signAndExecuteTransaction:_}=z(),{getPosClaimFeeAndRewardAndFarmsTxPayload:P}=V(),{currentAccount:t}=W(),[o,s]=Z.useState(!1),{getPosPoolsOriginalObj:c}=E();return{toClaimPosition:async(e,u,w)=>{s(!0);try{const i=e==null?void 0:e.posId,T=e==null?void 0:e.id,m=n[T]||[],x=g[i]||[],a=m.map(p=>G(p.token.coin_type)),y=x.map(p=>G(p.token.coin_type)),f=w?[...a,...y]:y,F=Array.from(new Set(f)),S={posType:e==null?void 0:e.posType,id:T,clmmPool:e==null?void 0:e.clmmPool,coinTypeA:e==null?void 0:e.coinTypeA,coinTypeB:e==null?void 0:e.coinTypeB,rewarderCoinTypes:F,account:t==null?void 0:t.address};w&&(S.farmsPool=e==null?void 0:e.farmsPool),console.log("ðŸš€ ~ toClaim ~ params:",F,S);const{tx:H,msafeParams:O}=await P(S);if(await _(H,{getShowInfo:p=>({modalDescriptionText:"",toastTitleText:p==="success"?"Claim Successful":""})},{msafeParams:O})){const p=u||await c([e]);console.log("ðŸš€ ~ toClaim ~ poolInfo:",p),setTimeout(()=>{l(),w&&r([e]),A([e]),C([e],{[p.poolAddress]:p})},2e3)}}catch(i){console.error("ðŸš€ ~ toClaim ~ error:",i)}finally{s(!1)}},isClaimLoading:o}}export{V as a,ce as b,oe as g,Q as u};
//# sourceMappingURL=useClaimPosition-DmR0MUnL.js.map
