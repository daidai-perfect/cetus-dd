import{V as w,j as x,c6 as E,c7 as h,c8 as p,aR as u,c9 as d,w as A}from"./index-BnmCMmyx.js";import{a as B}from"./vendor-BulRdKUe.js";function U(){const{clmmSdk:g}=w(),{currentAccount:i}=x(),{mutateAsync:m}=E(),{mutate:T}=h(),{mutate:S}=p({execute:async({bytes:e,signature:t})=>await f(e,t)}),l=B.useMemo(()=>A.env==="mainnet"?"sui:mainnet":"sui:testnet",[i]),f=async(e,t,o=!1)=>{var a,n;if(o){const r=await g.fullClient.devInspectTransactionBlock({transactionBlock:u.from(d(e)),sender:i.address});if(console.log("devInspectTransactionBlock:",r),!r||((a=r.effects)==null?void 0:a.status.status)==="failure")throw Error((n=r.effects)==null?void 0:n.status.error)}return await g.fullClient.executeTransactionBlock({transactionBlock:e,signature:t,options:{showEvents:!0,showRawEffects:!0,showEffects:!0,showBalanceChanges:!0,showObjectChanges:!0,showInput:!0}})};return{signAndExecuteTransactionBlock:async(e,t=!1)=>{var s,a;let o;if(typeof e=="string"?o=u.from(e):o=e,console.log("chain: ",{chain:l,transactionBlock:e}),t){const n=await g.fullClient.devInspectTransactionBlock({transactionBlock:e,sender:i.address});if(console.log("devInspectTransactionBlock:",n),!n||((s=n.effects)==null?void 0:s.status.status)==="failure")throw Error((a=n.effects)==null?void 0:a.status.error)}return o.setGasBudget(1e8),console.log("ðŸš€ ~ file: useSigner.ts:71 ~ signTransactionBlock ~ transactionBlock:",e),new Promise((n,r)=>{S({transaction:o,chain:l},{onSuccess:c=>{console.log(" signAndExecuteTransactionBlock  executed transaction",c),n(c)},onError:c=>{console.error("signAndExecuteTransactionBlock transaction failed",c),r(c)}})})},signTransactionBlock:async e=>(console.log("ðŸš€ðŸš€ðŸš€ ~ file: useSigner.ts:74 ~ signTransactionBlock ~ transactionBlock:",e instanceof Uint8Array,e),e instanceof Uint8Array&&(e=u.from(e)),typeof e=="string"&&(e=u.from(d(e))),console.log("ðŸš€ ~ file: useSigner.ts:105 ~ signTransactionBlock ~ transactionBlock:",{transactionBlock:e,chain:l}),new Promise((t,o)=>{m({transaction:e,chain:l},{onSuccess:s=>{console.log("signTransactionBlock result",s),t(s)},onError:s=>{console.error("signTransactionBlock failed",s),o(s)},onSettled:(s,a,n,r)=>{}})})),executeTransactionBlock:f,signUserMessage:async e=>(console.log("ðŸš€ðŸš€ðŸš€ ~ useSigner.ts:167 ~ signUserMessage ~ message:",e),console.log("ðŸš€ðŸš€ðŸš€ ~ useSigner.ts:167 ~ returnnewPromise ~ currentAccount:",i),new Promise((t,o)=>{T({message:e},{onSuccess:s=>{console.log("signUserMessage result",s),t(s)},onError:s=>{console.error("signUserMessage failed",s),o(s)},onSettled:(s,a,n,r)=>{}})}))}}export{U as u};
//# sourceMappingURL=useSigner-BUnTeKmJ.js.map
