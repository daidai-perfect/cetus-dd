{"version":3,"file":"AvailableCapacity-BBS2n6da.js","sources":["../../src/components/vaults/detail/VaultsAddResult.tsx","../../src/components/vaults/detail/AvailableCapacity.tsx"],"sourcesContent":["import TotalAmount from '@/components/common/TotalAmount'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { convertScientificToDecimal, formatNumber } from '@cetus/utils'\nimport { fromDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { VStack } from '@chakra-ui/react'\n\ntype VaultsAddResultProps = {\n  preCalculateLoading: boolean\n  inputTotalValue?: string\n  lpRate: string\n  amountLimit?: string\n  labelColor?: string\n  lpDecimals?: number\n  poolName: string\n  calculateLpLoading?: boolean\n}\n\nexport function VaultsAddResult(props: VaultsAddResultProps) {\n  const { poolName, amountLimit, lpRate, inputTotalValue, preCalculateLoading, labelColor, lpDecimals, calculateLpLoading } = props\n\n  return (\n    <VStack w=\"100%\" gap=\"20px\">\n      <TotalAmount totalAmount={inputTotalValue} loading={preCalculateLoading} />\n\n      {/* <HTextLabelBox\n        label=\"Total Amount\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={formatCurrency(inputTotalValue, 2)}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={preCalculateLoading}\n      /> */}\n      <HTextLabelBox\n        label=\"Share of Pool\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={lpRate}\n        isLoading={calculateLpLoading}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n      />\n      <HTextLabelBox\n        label=\"Est. Received LP\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={`${convertScientificToDecimal(formatNumber(fromDecimalsAmount(amountLimit || '0', lpDecimals ? lpDecimals : 9)).toString(), 9)} ${poolName}`}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={calculateLpLoading}\n      />\n    </VStack>\n  )\n}\n","import { PercentageTab } from '@/components/position/details/RemoveBlock'\nimport { CetusTooltip } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { d, formatNumber, formatPercentage, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Box, HStack, Image, Skeleton, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype AvailableCapacityProps = {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  depositRatio: string | number\n  hardCapUSD: string | number\n  vaultTvl: string | number\n  gtAumLimit: boolean\n  calculateVaultTvlLoading: boolean\n  quoteCoin?: Token\n  maxCapNum?: string\n}\n\nexport default function AvailableCapacity({\n  percentage,\n  onChange,\n  depositRatio,\n  hardCapUSD,\n  vaultTvl,\n  gtAumLimit,\n  calculateVaultTvlLoading,\n  quoteCoin,\n  maxCapNum\n}: AvailableCapacityProps) {\n  const available = useMemo(() => {\n    const amount = d(hardCapUSD).sub(d(vaultTvl))\n    if (amount.gt(0)) {\n      return amount.toString()\n    }\n    return '0'\n  }, [hardCapUSD, vaultTvl])\n\n  const loading = useMemo(() => {\n    return !available || !depositRatio || !hardCapUSD || !vaultTvl || calculateVaultTvlLoading\n  }, [available, depositRatio, hardCapUSD, vaultTvl])\n\n  return (\n    <>\n      {loading ? (\n        <VStack width=\"100%\" maxHeight=\"164px\" justifyContent=\"space-between\">\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n        </VStack>\n      ) : (\n        <VStack width=\"100%\" gap=\"10px\">\n          <HStack width=\"100%\" justifyContent=\"flex-start\">\n            <Text color=\"text_paragraph\">Available Capacity</Text>\n            <Text color=\"text_caption\">{symbolDataDisplayProcessing(available, '$')}</Text>\n          </HStack>\n          <PercentageTab\n            percentage={percentage}\n            onChange={value => {\n              if (Number(available) <= 0) {\n                return\n              }\n              onChange(value)\n            }}\n            wrapStyle={{\n              justifyContent: 'space-between',\n              height: '38px'\n            }}\n            selectTabStyle={{\n              w: { base: '220px', lg: '276px' },\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px'\n            }}\n            selectTabItemStyle={{\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px'\n            }}\n            selectTabItemTextStyle={{\n              _hover: {\n                color: Number(available) <= 0 ? 'primary_gray' : 'text_paragraph'\n              }\n            }}\n            textFontSize=\"28px\"\n          />\n          <HStack width=\"100%\" bg=\"bg_secondary\" borderRadius=\"4px\" height=\"8px\" gap=\"0px\" mt=\"4px\">\n            <Box w={depositRatio + '%'} height=\"4px\" bg=\"primary\" borderRadius=\"2px\" />\n            <Slider\n              aria-label=\"slider-ex-1\"\n              min={0}\n              max={100}\n              focusThumbOnChange={false}\n              value={percentage == '--' ? 0 : Number(percentage)}\n              onChange={value => onChange(value)}\n              w={100 - Number(depositRatio) + '%'}\n              isDisabled={Number(available) <= 0}\n            >\n              <SliderTrack bg=\"none\">\n                <SliderFilledTrack bg=\"#217557\" />\n              </SliderTrack>\n              <SliderThumb bg=\"#217557\" />\n            </Slider>\n          </HStack>\n          <HStack width=\"100%\" justifyContent=\"space-between\">\n            <VStack alignItems=\"flex-start\">\n              <Text color=\"text_paragraph\">Current Liquidity</Text>\n              <HStack gap=\"4px\">\n                <Text color=\"primary\">{symbolDataDisplayProcessing(vaultTvl, '$')}</Text>\n                <Text>({formatPercentage(depositRatio, 2)})</Text>\n              </HStack>\n            </VStack>\n            <CetusTooltip\n              tooltip={\n                <HStack>\n                  <Image src={quoteCoin?.logo_url} w=\"20px\" h=\"20px\" />\n                  <Text color=\"text_caption\">{formatNumber(maxCapNum, 2)}</Text>\n                  <Text color=\"text_caption\">{quoteCoin?.symbol}</Text>\n                </HStack>\n              }\n            >\n              <VStack alignItems=\"flex-end\">\n                <Text color=\"text_paragraph\">Max Cap</Text>\n                <Text color=\"text_caption\">{symbolDataDisplayProcessing(hardCapUSD, '$')}</Text>\n              </VStack>\n            </CetusTooltip>\n          </HStack>\n          {gtAumLimit ? (\n            <VStack w=\"100%\" alignItems=\"start\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The vault has reached its current capacity. New deposits are not accepted at this time.\n              </Text>\n            </VStack>\n          ) : null}\n\n          {/* <VStack w=\"100%\" pl=\"16px\" pr=\"16px\" pb={calculateResult || showOnlySideTips ? '0px' : '20px'} alignItems=\"start\" gap=\"20px\">\n               <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                Your deposit has gone over the vault capacity. Try reducing your deposit amount.\n              </Text>\n            </VStack> */}\n        </VStack>\n      )}\n    </>\n  )\n}\n"],"names":["VaultsAddResult","props","poolName","amountLimit","lpRate","inputTotalValue","preCalculateLoading","labelColor","lpDecimals","calculateLpLoading","jsxs","VStack","jsx","TotalAmount","HTextLabelBox","convertScientificToDecimal","formatNumber","fromDecimalsAmount","AvailableCapacity","percentage","onChange","depositRatio","hardCapUSD","vaultTvl","gtAumLimit","calculateVaultTvlLoading","quoteCoin","maxCapNum","available","useMemo","amount","d","loading","Fragment","Skeleton","HStack","Text","symbolDataDisplayProcessing","PercentageTab","value","Box","Slider","SliderTrack","SliderFilledTrack","SliderThumb","formatPercentage","CetusTooltip","Image"],"mappings":"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"}