{"version":3,"file":"VolumeChart-DzTLtJHr.js","sources":["../../../../node_modules/.pnpm/recharts@2.15.3_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/recharts/es6/chart/BarChart.js","../../src/hooks/common/useChartTime.ts","../../src/hooks/stats/useGetHistogramData.ts","../../src/components/chart/VolumeChart.tsx"],"sourcesContent":["/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import { timeFormat } from '@cetus/utils'\nimport { useState } from 'react'\nexport enum Month {\n  Jan = 1,\n  Feb = 2,\n  Mar = 3,\n  Apr = 4,\n  May = 5,\n  Jun = 6,\n  Jul = 7,\n  Aug = 8,\n  Sep = 9,\n  Oct = 10,\n  Nov = 11,\n  Dec = 12\n}\nexport function useChartTime() {\n  const [time, setTime] = useState('')\n\n  const getCurrentTime = () => {\n    const nowTime = timeFormat(Date.parse(new Date().toUTCString()), 'YMD') || ''\n    const months = nowTime.slice(5, 7)\n    const value = Month[Number(months)]\n    const currentDay = nowTime.slice(8, 10)\n    const currentMonth = value\n    const currentYear = nowTime.slice(0, 4)\n    const date = currentMonth + ' ' + currentDay + ',' + ' ' + currentYear + ' ' + '(UTC)'\n    setTime(date)\n  }\n\n  const getHoverTime = (timeDate: any, type: 'D' | 'W' | 'M') => {\n    const timestamp = Date.parse(timeDate)\n    const weekDate = new Date(timestamp)\n    weekDate.setDate(weekDate.getDate() + 7)\n    const monthDate = new Date(timestamp)\n    monthDate.setDate(monthDate.getDate() + 31)\n    const gmtUTCWeekEnd = weekDate.toUTCString()\n    const gmtUTCMonthEnd = monthDate.toUTCString()\n\n    const monthTime = timeFormat(Date.parse(gmtUTCMonthEnd), 'YMD') || ''\n    const nowTime = timeFormat(Date.parse(new Date().toUTCString()), 'YMD') || ''\n    const weekTime =\n      Date.parse(gmtUTCWeekEnd) > Date.parse(new Date().toUTCString())\n        ? timeFormat(Date.parse(new Date().toUTCString()), 'YMD') || ''\n        : timeFormat(Date.parse(gmtUTCWeekEnd), 'YMD') || ''\n\n    const nowMonths = nowTime.slice(5, 7)\n    const nowValue = Month[Number(nowMonths)]\n    const nowDay = nowTime.slice(8, 10)\n    const nowMonth = nowValue\n    const nowYear = nowTime.slice(0, 4)\n\n    const months = timeDate.slice(5, 7)\n    const value = Month[Number(months)]\n    const currentDay = timeDate.slice(8, 10)\n    const currentMonth = value\n    const currentYear = timeDate.slice(0, 4)\n\n    const weekMonths = weekTime.slice(5, 7)\n    const weekValue = Month[Number(weekMonths)]\n    const weekDay = weekTime.slice(8, 10)\n    const weekMonth = weekValue\n    const weekYear = weekTime.slice(0, 4)\n\n    const monthValue = Number(months) == 12 ? Month[1] : Month[Number(months) + 1]\n    const monthMonth = monthValue\n    const monthYear = monthTime.slice(0, 4)\n    let date\n    if (type == 'D') {\n      date = currentMonth + ' ' + currentDay + ',' + ' ' + currentYear + ' ' + '(UTC)'\n    } else if (type == 'W') {\n      date = currentDay + ' ' + currentMonth + '-' + weekDay + ' ' + weekMonth + ' ' + ',' + ' ' + weekYear + ' ' + '(UTC)'\n    } else {\n      date =\n        Date.parse(gmtUTCMonthEnd) >= Date.parse(new Date().toUTCString())\n          ? currentMonth + ' ' + '01' + '-' + nowMonth + ' ' + nowDay + ',' + ' ' + nowYear + ' ' + '(UTC)'\n          : currentMonth + ' ' + '01' + '-' + monthMonth + ' ' + '01' + ',' + ' ' + monthYear + ' ' + '(UTC)'\n    }\n    setTime(date)\n  }\n\n  return {\n    time,\n    getCurrentTime,\n    getHoverTime\n  }\n}\n","import { HistogramPathTotalVolV3, HistogramPathV3 } from '@/apis/path'\nimport { dayStrZeroPadding } from '@/utils/api-data-utils'\nimport { useFetch } from '@cetus/hooks'\nimport { identity, pickBy } from 'lodash-es'\nimport { Month } from '../common/useChartTime'\n\nexport type GetHistogramDataParams = {\n  type: 'vol' | 'tvl' | 'fee'\n  date_type?: 'day' | 'wek' | 'mon'\n  limit?: number\n  address?: string\n}\n\nexport default function useGetHistogramData() {\n  const { fetchByApi } = useFetch()\n\n  const getHistogramData = async (params: GetHistogramDataParams) => {\n    const { type, date_type = 'day', limit, address = 'all' } = params\n    console.log('ðŸš€ ~ getHistogramData ~ limit:', type, date_type, limit)\n    const isTotalVol = address == 'all' && type == 'vol'\n\n    const dateTypeMap: Record<string, string> = { day: 'day', wek: 'week', mon: 'month' }\n    const resolvedDateType = dateTypeMap[date_type]\n\n    // è®¡ç®— beginTimestamp\n    const now = Date.now()\n    const oneDay = 86400 // 1 å¤©çš„ç§’æ•°\n    const oneWeek = 604800 // 7 å¤©çš„ç§’æ•°\n    const oneMonth = 2592000 // 30 å¤©çš„ç§’æ•°\n    const timeLimit = !limit ? undefined : date_type == 'day' ? limit * oneDay : date_type == 'wek' ? limit * oneWeek : limit * oneMonth\n    const beginTimestamp = !timeLimit ? 0 : String(Math.floor(now / 1000 - timeLimit))\n\n    const requestParams: Record<string, any> = isTotalVol\n      ? { dataType: type, dateType: resolvedDateType, beginTimestamp }\n      : { dataType: type, dateType: resolvedDateType, address, beginTimestamp }\n\n    const options = pickBy(requestParams, identity)\n    const apiPath = isTotalVol ? HistogramPathTotalVolV3 : HistogramPathV3\n\n    const res = await fetchByApi(apiPath, 'GET', options)\n    console.log('ðŸš€ ~ getHistogramData response:', res)\n\n    const result = (res?.list || []).map((item: any) => {\n      const dateTime = new Date(item.timestamp * 1000).toISOString().split('.')[0] + 'Z'\n\n      const monthIndex = Number(dateTime.slice(5, 7))\n      const mDateValue = Month[monthIndex]\n\n      return {\n        num: Number(item.value),\n        date: dateTime,\n        xAxis: date_type === 'mon' ? mDateValue : dayStrZeroPadding(dateTime)\n      }\n    })\n\n    const returnArr = [...result].reverse()\n    console.log('ðŸš€ ~ getHistogramData ~ isPureTvl:', returnArr)\n    return returnArr\n  }\n\n  return { getHistogramData }\n}\n","import { Month } from '@/hooks/common/useChartTime'\nimport { useState } from 'react'\nimport { Bar, BarChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport { CustomizedXAxisTick } from './CustomizedAxisTick'\nimport EmptyTooltip from './EmptyTooltip'\n\nconst VolumeChart = ({\n  data,\n  onChangeValue,\n  noXAxis,\n  pageFrom = 'stats'\n}: {\n  data: any\n  onChangeValue: (data: any) => void\n  noXAxis?: boolean\n  pageFrom?: 'stats' | 'pools'\n}) => {\n  const [hoverTime, setHoverTime] = useState('')\n  const handleMouseMove = (e: any) => {\n    if (e && e.activePayload && e.activePayload.length) {\n      const date = e.activePayload[0].payload.date\n      onChangeValue(e.activePayload[0].payload)\n      const months = date.slice(5, 7)\n      const value = Month[Number(months)]\n      const day = date.slice(8, 10)\n      const month = value\n      const year = date.slice(0, 4)\n      setHoverTime(day + ' ' + month + ' ' + year)\n    }\n  }\n\n  const handleMouseLeave = () => {\n    onChangeValue(null)\n  }\n\n  const minValue = data?.length > 0 ? Math.floor(Math.min(...data.map((item: any) => item.num))) : 0\n  const maxValue = Math.ceil(Math.max(...data.map((item: any) => item.num)))\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart barCategoryGap=\"25%\" data={data} onMouseMove={handleMouseMove} onMouseLeave={handleMouseLeave} maxBarSize={24}>\n        {!noXAxis && <XAxis type=\"category\" dataKey=\"xAxis\" minTickGap={18} tickLine={false} axisLine={false} tick={<CustomizedXAxisTick />} />}\n        {maxValue && <YAxis domain={[0, maxValue * 1.05]} hide={true} axisLine={false} tickLine={false} />}\n        {/* <Tooltip content={<EmptyTooltip value={pageFrom !== 'stats' ? hoverTime : ''} />} cursor={{ fill: 'rgba(118,200,255,0.5)' }} /> */}\n        <Tooltip content={<EmptyTooltip value={pageFrom !== 'stats' ? hoverTime : ''} />} cursor={<CustomizedCursor />} />\n        {/* <Bar dataKey=\"num\" fill=\"#75C8FF\" activeBar={<Rectangle stroke=\"rgba(0,0,0,0)\" />} isAnimationActive={false} /> */}\n        <Bar dataKey=\"num\" fill=\"#75C8FF\" isAnimationActive={false} />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default VolumeChart\n\nfunction CustomizedCursor(params: any) {\n  const { x, y, width, height, payload } = params\n\n  if (!payload || !payload?.[0] || !payload?.[0]?.payload?.num) return\n\n  const v = width > 192 ? width / 1.2 : width > 96 ? width / 1.5 : width > 48 ? width / 2 : width > 24 ? width / 4 : width / 8\n\n  return (\n    <g>\n      <rect width={width - v} height={height} x={x + v / 2} fill=\"rgba(118,200,255,0.5)\" y={y + 1} />\n    </g>\n  )\n}\n"],"names":["BarChart","generateCategoricalChart","Bar","XAxis","YAxis","formatAxisMap","Month","useChartTime","time","setTime","useState","nowTime","timeFormat","months","value","currentDay","currentMonth","currentYear","date","timeDate","type","timestamp","weekDate","monthDate","gmtUTCWeekEnd","gmtUTCMonthEnd","monthTime","weekTime","nowMonths","nowValue","nowDay","nowMonth","nowYear","weekMonths","weekValue","weekDay","weekMonth","weekYear","monthMonth","monthYear","useGetHistogramData","fetchByApi","useFetch","params","date_type","limit","address","isTotalVol","resolvedDateType","now","timeLimit","beginTimestamp","options","pickBy","identity","res","HistogramPathTotalVolV3","HistogramPathV3","returnArr","item","dateTime","monthIndex","mDateValue","dayStrZeroPadding","VolumeChart","data","onChangeValue","noXAxis","pageFrom","hoverTime","setHoverTime","handleMouseMove","e","day","month","year","handleMouseLeave","maxValue","ResponsiveContainer","jsxs","jsx","CustomizedXAxisTick","Tooltip","EmptyTooltip","CustomizedCursor","x","y","width","height","payload","_b","_a","v"],"mappings":"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","x_google_ignoreList":[0]}