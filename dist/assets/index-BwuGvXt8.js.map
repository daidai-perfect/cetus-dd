{"version":3,"mappings":";kwBAWA,MAAMA,GAAc,CAAC,CAAE,QAAAC,EAAS,GAAGC,KAAwB,CACzD,MAAMC,EAAWC,EAAY,EACvB,CAAE,MAAAC,CAAM,EAAIC,EAAe,EAE/B,OAAAC,EAAA,IAACC,EAAA,CACC,EAAE,OACF,EAAE,OACF,QAAcC,GAAA,CACZC,GAAaD,CAAC,EACNJ,GAAKF,EAAS,QAAQ,CAChC,EACC,GAAGD,EAEJ,SAAAK,EAAA,IAACI,GAAa,WAAU,MAAM,QAASV,GAAqBM,EAAA,IAAAK,EAAA,CAAK,SAAS,OAAO,SAAsB,2BACrG,eAACC,GACC,UAAAN,MAACO,GAAM,GAAE,OAAO,EAAE,OAAO,KAAK,OAAO,IAAI,wBAAyB,GACpE,CACF,GACF,CAEJ,ECnBMC,GACJ,oTAEIC,GAAe,CAACC,EAA4BC,IACzC,uFAAuFA,CAAM,QAAQD,CAAiB,iMAgB/H,SAASE,GAAoBC,EAAiC,CACtD,MACJ,cAAAC,EACA,cAAAC,EACA,mBAAAC,EACA,sBAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,iBAAAC,EACA,eAAAC,EACA,oBAAAC,EACA,gBAAAC,EACA,YAAAC,CAAA,EACEX,EAEE,CAAE,kBAAAH,CAAsB,EAAAe,GAAuBX,GAAA,YAAAA,EAAe,SAAS,EACvE,CAAE,gBAAAY,EAAiB,gBAAAC,CAAgB,EAAIC,GAAkB,EAEzDC,EAAyBC,UAAQ,IAAM,CAC3C,GAAIV,GAAoB,UAAW,CACjC,MAAMW,EAAS,CACb,CACE,OAAOjB,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAOA,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAQA,GAAA,YAAAA,EAAe,UACvB,UAAWI,GAAgB,CAACK,EAAkB,CAAE,UAAW,mBAAsB,OACjF,QAASA,EAAkB,gDAAgDT,GAAA,YAAAA,EAAe,MAAM,IAAMN,EACxG,EACA,CACE,MAAO,GAAGM,GAAA,YAAAA,EAAe,MAAM,IAAIC,GAAA,YAAAA,EAAe,MAAM,GACxD,MAAO,GAAGD,GAAA,YAAAA,EAAe,MAAM,IAAIC,GAAA,YAAAA,EAAe,MAAM,GACxD,OAAQ,OACR,UAAWG,GAAgB,CAACK,EAAkB,CAAE,UAAW,mBAAsB,OACjF,QAASA,GAAmBL,EAAe,mDAAqD,EAClG,EACA,CACE,OAAOH,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAOA,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAQA,GAAA,YAAAA,EAAe,UACvB,UAAWG,GAAgB,CAACK,EAAkB,CAAE,UAAW,mBAAsB,OACjF,QAASA,EACL,gDAAgDR,GAAA,YAAAA,EAAe,MAAM,IACrEN,GAAaC,EAAmBI,GAAA,YAAAA,EAAe,MAAM,EAE7D,EACA,OAAOS,EAAkBQ,EAASA,EAAO,OAAcC,KAAI,SAAW,MAAM,MAErE,QACL,CACE,OAAOlB,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAOA,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAQA,GAAA,YAAAA,EAAe,SACzB,EACA,CACE,OAAOC,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAOA,GAAA,YAAAA,EAAe,QAAS,QAC/B,OAAQA,GAAA,YAAAA,EAAe,UAE3B,CACF,EACC,CAACD,EAAeC,EAAeK,EAAkBG,EAAiBL,EAAcR,CAAiB,CAAC,EAE/FuB,EAAiB,CACrB,CACE,MAAO,UACP,MAAO,SACT,EACA,CACE,MAAO,WACP,MAAO,WAEX,EACM,CAACC,EAAcC,CAAe,EAAIC,WAAiB,CAAC,EAE9CC,GAAA,CACV,SAAU,IACV,SAAU,IAAM,CACdF,EAAgBD,EAAe,CAAC,EAC5BA,GAAgB,IACAI,EAAA,CACpB,CACF,CACD,EAED,MAAMA,EAAoB,IAAM,CAC9BH,EAAgB,CAAC,EACLX,EAAA,CACd,EAEMe,EAAcT,UAAQ,IACtBV,GAAoB,UACfG,EAAkB,gBAAkB,UAEtC,WACN,CAACH,EAAkBG,CAAe,CAAC,EACtC,OAEIiB,EAAA,KAAAC,WAAA,WAAAD,EAAA,KAACvC,EAAO,OAAM,OAAO,WAAW,SAC9B,UAAAD,EAAA,IAAC0C,EAAA,CACC,KAAK,YACL,UAAW,CACT,EAAG,OACH,EAAG,OACH,OAAQ,OACR,GAAI,MACN,EACA,UAAW,CACT,SAAU,OACV,GAAI,OACJ,WAAY,KACd,EACA,QAAAT,EACA,WAAYb,EACZ,gBAAkBuB,GAAc,CAC9BrB,EAAoBqB,EAAK,KAAK,EACftB,EAAAH,EAAeJ,GAAA,YAAAA,EAAe,UAAY,MAAM,EACzCG,GAAAH,GAAA,YAAAA,EAAe,QAAS,OAAO,EACvD,CACF,EACCd,EAAA,IAAA4C,GAAA,CAAS,aAAa,SAAS,QAAS,GAAM,EAC/C5C,EAAA,IAAC6C,GAAA,CACC,cAAeP,EACf,EAAE,OACF,EAAE,OACF,KAAK,OACL,KAAK,OACL,WAAY,CAAE,EAAG,OAAQ,EAAG,OAAQ,aAAc,MAAO,GAAI,cAAe,GAC9E,EACF,EACAE,OAACM,GAAK,MAAM,OAAO,WAAW,SAAS,QAAQ,gBAAgB,GAAG,MAChE,UAAAN,OAACnC,EAAM,WAAAe,EAAiB,YAAQ,EAUhCpB,EAAA,IAAC+C,GAAA,CACC,aAAA7B,EACA,QAASE,GAAoB,UAAY,SAAW,UACpD,YAAAmB,EACA,gBAA2BS,GAAA,CACzBtB,EAAgB,EAAE,EAClBC,EAAgB,EAAE,EAClBR,EAAgB,CAACD,CAAY,EAI3BG,EAHG2B,EAGYlC,GAAA,YAAAA,EAAe,UAFf,MAEwB,EAEnBG,GAAAH,GAAA,YAAAA,EAAe,QAAS,OAAO,EACvD,EACF,EACF,EACCI,EACClB,EAAA,IAAC0C,EAAA,CACC,KAAK,aACL,UAAW,CACT,EAAG,CACD,KAAM,MACR,EACA,EAAG,OACH,QAAS,MACT,UAAW,KAEb,EACA,UAAW,CACT,EAAG,GAAG,IAAMb,EAAgB,MAAM,IAClC,SAAU,OACV,aAAc,KAChB,EACA,QAASA,EACT,WAAYb,EACZ,gBAAyB2B,GAAA,CACvB1B,EAAsB0B,EAAK,KAAK,EAChCtB,EAAesB,EAAK,MAAM,EAC5B,GAEA,MACN,CAEJ,CC5MA,SAASM,GAAcpC,EAA2B,CAChD,KAAM,CAAE,oBAAAqC,EAAqB,oBAAAC,EAAqB,SAAAC,EAAU,SAAAC,EAAU,UAAAC,GAAczC,EAC9E,CAAC0C,EAAcC,CAAe,EAAIpB,WAAiB,CAAC,EACpD,CAACqB,EAAgBC,CAAiB,EAAItB,WAAiB,CAAC,EACxDuB,EAAaC,SAAuB,IAAI,EACxCC,EAAeD,SAAuB,IAAI,EAEhDE,YAAU,IAAM,CACd,MAAMC,EAAkB,IAAM,CACxBJ,EAAW,SACGH,EAAAG,EAAW,QAAQ,WAAW,CAElD,EACMK,EAAoB,IAAM,CAC1BH,EAAa,SACGH,EAAAG,EAAa,QAAQ,WAAW,CAEtD,EAEgBE,EAAA,EACEC,EAAA,EAEZ,MAAAC,EAAiB,IAAI,eAAeF,CAAe,EACnDG,EAAsB,IAAI,eAAeF,CAAiB,EAEhE,OAAIL,EAAW,SACEM,EAAA,QAAQN,EAAW,OAAO,EAEvCE,EAAa,SACKK,EAAA,QAAQL,EAAa,OAAO,EAG3C,IAAM,CACPF,EAAW,SACEM,EAAA,UAAUN,EAAW,OAAO,EAEzCE,EAAa,SACKK,EAAA,UAAUL,EAAa,OAAO,CAEtD,CACF,EAAG,EAAE,EAEC,MAAAM,EAAWrC,UAAQ,IAAM,CACzB,GAAAuB,IAAa,IAAY,YACzB,GAAAC,GAAaF,GAAYC,EAAU,CACjC,KAAEC,CAAS,EAAE,kBAAkBD,CAAQ,GAAK,EAAEC,CAAS,EAAE,qBAAqBF,CAAQ,EAAG,CAC3F,MAAMgB,EAAmB,EAAEd,CAAS,EACjC,IAAIF,CAAQ,EACZ,IAAI,EAAEC,CAAQ,EAAE,IAAI,EAAED,CAAQ,CAAC,CAAC,EAChC,SAAS,EACL,SAAG,EAAEG,CAAY,EAAE,IAAIa,CAAgB,EAAE,QAAQ,CAAC,CAAC,KAE5D,GAAI,EAAEd,CAAS,EAAE,GAAGF,CAAQ,EACnB,cAET,GAAI,EAAEE,CAAS,EAAE,GAAGD,CAAQ,EACnB,yBACT,CAEK,aACN,CAACC,EAAWF,EAAUC,EAAUE,CAAY,CAAC,EAE1Cc,EAAYvC,UAAQ,IAAM,CAC9B,MAAMwC,EAAOH,EAAS,QAAQ,KAAM,EAAE,EACtC,OAAO,OAAOG,CAAI,EAAIb,EAAiB,EAAI,MAC1C,CAACU,EAAUV,CAAc,CAAC,EAEvB,CAAE,MAAA3D,CAAM,EAAIC,EAAe,EACjC,yBAeK,SAAaqD,IAAA,aAAeC,IAAa,kBACvCpD,EAAO,GAAE,OAAO,OAAO,OAAO,WAAW,qBAAqB,aAAa,OAAO,EAAE,cACnF,SAAAuC,EAAA,KAAC+B,EAAA,CACC,EAAE,OACF,QAASnB,GAAY,EAAEE,CAAS,EAAE,GAAGF,CAAQ,EAAI,gBAAkBC,GAAY,EAAEC,CAAS,EAAE,GAAGD,CAAQ,EAAI,gBAAkB,SAC7H,SAAS,WAET,UAAArD,EAAA,IAACK,EAAA,CACC,WAAW,SACX,SAAS,WACT,IAAI,OACJ,KAAM+C,GAAY,EAAEE,CAAS,EAAE,GAAGF,CAAQ,EAAI,OAAS,OACvD,SAAS,OACT,MAAM,eAEL,WAAqBA,CAAQ,EAChC,EACApD,EAAA,IAACuE,EAAA,CACC,EAAE,OACF,SAAS,WACT,OAAO,OACP,IAAKZ,EACL,QAAQ,kCACR,OAAO,YACP,WAAW,SAEX,SAACnB,OAAAgC,GAAA,CAAQ,OAAM,GAAC,UAAU,MAAM,QAAS1E,EAAQ,QAAU,QAAS,UAAW,GAAO,mBAAoB,GAAO,OAAQ,EACvH,UAAAE,MAACyE,GACC,UAAAzE,EAAA,IAACuE,EAAI,IAAG,SACN,SAAAvE,EAAA,IAACuE,EAAA,CACC,GAAG,OACH,aAAa,MACb,EAAE,MACF,OAAO,OACP,SAAS,WACT,IAAI,MACJ,UAAU,mBACV,KAAMJ,EACN,GAAG,OACH,OAAO,MAEX,CACF,GACAnE,EAAA,IAAC0E,GAAA,CACC,EAAE,cACF,GAAG,OACH,OAAO,OACP,IAAKb,EACL,SAAS,WACT,IAAI,mBACJ,KAAMQ,EACN,OAAO,IAEP,SAAArE,EAAA,IAAC2E,IAAY,SAAS,OAAO,EAAE,cAAc,GAAG,OAAO,OAAO,OAC5D,eAACtE,EAAK,YAAW,SAAS,SAAS,OAAO,MAAM,UAC7C,SAAAuE,EAAqBtB,CAAS,CACjC,EACF,IACF,CACF,GACF,EACAtD,EAAA,IAACK,EAAA,CACC,WAAW,SACX,SAAS,WACT,IAAI,OACJ,MAAOgD,GAAY,EAAEC,CAAS,EAAE,GAAGD,CAAQ,EAAI,OAAS,OACxD,SAAS,OACT,MAAM,eAEL,WAAqBA,CAAQ,GAChC,IAEJ,EAUF,IACF,EAEJ,CC7JA,SAASwB,GAAahE,EAA0B,eACxC,MAAE,cAAAC,EAAe,cAAAC,EAAe,WAAA+D,EAAY,SAAAC,EAAU,UAAAC,EAAW,SAAA5B,EAAU,SAAAC,EAAU,gBAAA9B,EAAiB,UAAA+B,CAAc,EAAAzC,EACpH,CAAE,cAAAoE,CAAc,EAAIC,GAAe,EACnC,CAAE,eAAAC,CAAe,EAAIC,GAAgB,EACrC,CAACC,EAAWC,CAAY,EAAIlD,WAAS,EAAE,EAC7C0B,YAAU,IAAM,OACVyB,GAAkBN,CAAa,GAAKA,EAAcF,CAAQ,EAC/CO,GAAAE,EAAAP,EAAcF,CAAQ,IAAtB,YAAAS,EAAyB,gBAAgB,EAEvCL,EAAA,CACjB,EACC,CAACF,EAAeF,CAAQ,CAAC,EAEtB,MAAE,gBAAAU,EAAiB,gBAAAC,CAAA,EAAoBC,GAAoB,CAAE,SAAAvC,EAAU,SAAAC,EAAU,WAAY2B,EAAW,EAE9G,OACGxC,OAAAoD,EAAA,CAAO,MAAM,oBAAoB,QAAQ,SAAS,WAAW,OAAO,cAAc,OAAO,aAAa,YAAY,YAAY,SAC7H,UAAApD,OAACM,EACC,WAAA9C,EAAA,IAAC6F,GAAA,CACC,aAAc/E,GAAA,YAAAA,EAAe,SAC7B,aAAcC,GAAA,YAAAA,EAAe,SAC7B,WAAY,CACV,EAAG,OACH,EAAG,MACL,EACA,YAAa,CACX,EAAG,OACH,EAAG,OACL,CACF,EACAyB,OAACM,GAAK,WAAW,MAAM,eAAe,gBAAgB,WAAW,SAAS,MAAM,OAC9E,UAAA9C,MAACuE,EACC,UAAA/B,OAACM,EAAK,YAAW,SACf,UAAC9C,EAAA,IAAAK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAG,GAAAS,GAAA,YAAAA,EAAe,MAAM,MAAMC,GAAA,YAAAA,EAAe,MAAM,GACtD,EACAf,MAAC8F,IAAM,EAAE,QAAQ,EAAE,eAAe,aAAa,OAAO,GAAG,OAAO,YAAY,UAAU,WAAW,MAC/F,SAAC9F,EAAA,IAAAK,EAAA,CAAK,SAAS,OAAO,MAAM,UACzB,SAAAyE,CACH,EACF,IACF,CACF,GACA9E,MAAC8C,EAAK,eAAc,SAClB,SAAA9C,EAAA,IAAC+F,GAAA,CACC,UAAW,CACT,IAAK,MACL,WAAY,qBACd,EACA,MAAM,MACN,WAAY,CACV,MAAO,UACP,SAAU,MACZ,EACA,aACE/F,EAAA,IAACgG,GAAA,CACC,sBAAqBR,EAAAP,EAAcF,CAAQ,IAAtB,YAAAS,EAAyB,sBAAuB,GACrE,mBAAkBS,EAAAhB,EAAcF,CAAQ,IAAtB,YAAAkB,EAAyB,mBAAoB,GAC/D,wBAAuBC,EAAAjB,EAAcF,CAAQ,IAAtB,YAAAmB,EAAyB,wBAAyB,GACzE,mBAAkBC,EAAAlB,EAAcF,CAAQ,IAAtB,YAAAoB,EAAyB,mBAAoB,GAC/D,UAAUC,EAAAnB,EAAcF,CAAQ,IAAtB,YAAAqB,EAAyB,SACrC,EAEF,MAAOf,GAAa,IACpB,WAAY,CACV,MAAO,iBACP,EAAG,OACH,WAAY,OACZ,SAAU,OACV,WAAY,MACd,EAEJ,GACF,IACF,EACArF,EAAA,IAACqG,GAAA,CACC,oBAAiCtF,GAAA,YAAAA,EAAe,OAChD,oBAAiCD,GAAA,YAAAA,EAAe,OAChD,SAAU4E,EACV,SAAUD,EACV,UAAAnC,CAAA,EACF,EACF,CAEJ,CC5FA,MAAMgD,GAAmBC,OAAK,UAAM,OAAO,2BAAmB,EAAC,kGAEzDC,GAAoBD,OAAK,UAAM,OAAO,4BAAoB,EAAC,qFAajE,SAASE,GAAW5F,EAAwB,CACpC,MAAE,OAAA6F,EAAQ,UAAAC,EAAW,cAAA7F,EAAe,cAAAC,EAAe,WAAA+D,EAAY,SAAAC,EAAU,QAAA6B,EAAS,UAAA5B,EAAW,gBAAAzD,CAAoB,EAAAV,EACjH,CAACO,EAAkBE,CAAmB,EAAIc,WAAS,SAAS,EAC5D,CAACpB,EAAoBC,CAAqB,EAAImB,EAAS,UAAAtB,GAAA,YAAAA,EAAe,QAAS,OAAO,EACtF,CAAC+F,EAAaxF,CAAc,EAAIe,WAA0B,MAAM,EAChE,CAAClB,EAAcC,CAAe,EAAIiB,WAAS,EAAK,EAChD0E,EAA0BC,GAAe,wBAAwBxF,CAAe,EAEhF,CAAE,aAAAyF,EAAc,gBAAAC,GAAoBC,GAAmBN,CAAO,EAC9D,CACJ,2BAAAO,EACA,cAAAC,EACA,YAAAC,EACA,0BAAAC,EACA,gBAAAC,EACA,SAAAlE,EACA,UAAAC,EACA,SAAAF,EACA,kBAAAoE,EACA,iBAAAC,EACA,SAAAC,EACA,WAAAC,EACA,aAAAC,EACA,iBAAAC,EACA,yBAAAC,EACA,UAAAC,GACA,UAAAC,GACA,SAAAC,GACA,aAAAC,GACA,+BAAAC,GACA,8BAAAC,GACA,WAAAC,EAAA,EACEvB,EACFE,GAAA,YAAAA,EAAc,SACdA,GAAA,YAAAA,EAAc,gBACdA,GAAA,YAAAA,EAAc,OACdA,GAAA,YAAAA,EAAc,OACdA,GAAA,YAAAA,EAAc,UACd,EACF,EAEM,CAAE,oBAAAsB,EAAoB,EAAIC,GAAkB,EAE5C3I,GAAWC,EAAY,EACvB,CAAE,eAAA2I,EAAgB,kBAAAC,EAAkB,EAAIC,GAAgB,EACxDlH,EAAc,IAAM,OAEJ8G,GAAA,EAEZ,YAAI,sDAAuDtB,CAAY,GAC3EA,GAAA,YAAAA,EAAc,WAAY,UAC5BQ,EAAkBgB,GAAA,YAAAA,EAAgB,QAAS5B,GAASpB,EAAAwB,GAAA,YAAAA,EAAc,SAAd,YAAAxB,EAAsB,QAAQ,EAIhFwB,GACwBM,EAAAN,EAAa,gBAAiB,EAAI,EAI1DJ,IACFO,EAA2BP,EAAS,EAAI,EACxCK,EAAgBL,EAAS,EAAI,EAEjC,EAEA9C,YAAU,IAAM,CACd3C,EAAgB,EAAK,EACrBE,EAAe,MAAM,GACpB,CAACD,CAAgB,CAAC,EAErB0C,YAAU,IAAM,CACVkD,GACwBM,EAAAN,EAAa,gBAAiB,EAAI,CAC9D,EACC,CAACA,GAAA,YAAAA,EAAc,eAAe,CAAC,EAElClD,YAAU,IAAM,CACV8C,GACFO,EAA2BP,EAAS,EAAI,CAC1C,EACC,CAACA,CAAO,CAAC,EAEN,MAAE,oBAAA+B,EAAoB,EAAIC,GAAqB,EACrD9E,mBAAU,IAAM,CACM6E,GAAA,CAAE,YAAa,IAAK,YAAa,IAAK,aAAc,IAAK,aAAc,IAAK,CAClG,EAAG,EAAE,EAGHnG,EAAA,KAACqG,GAAA,CACC,WAAU,GACV,OAAQnC,GAAU,CAAC+B,GACnB,QAAS,IAAM,CACb9B,EAAU,EAAK,EACfrF,EAAoB,SAAS,CAC/B,EAEA,UAAAtB,EAAA,IAAC8I,GAAa,UACbC,GAAa,OAAO,CAAE,KAAM,OAAQ,GAAI,OACvC,WAAA/I,MAACgJ,IAAU,EAAE,UACX,SAACxG,OAAAoD,EAAA,CAAO,MAAM,OACZ,UAAApD,EAAA,KAACoD,EAAA,CACC,MAAM,OACN,EAAE,gBACF,GAAG,QACH,IAAI,IACJ,aAAa,OACb,GAAI,CACF,gBAAiB,uCACjB,mBAAoB,aACpB,iBAAkB,YAClB,eAAgB,OAClB,EAEA,UAAApD,OAACvC,GAAO,EAAE,OAAO,EAAE,OAAO,GAAG,OAC3B,UAAAD,MAACK,GAAK,MAAM,eAAe,WAAW,MAAM,SAAS,OAAO,SAE5D,qBACC4I,GAAiB,KACpB,EACAjJ,EAAA,IAAC6E,GAAA,CACC,cAAA/D,EACA,cAAAC,EACA,WAAA+D,EACA,SAAAC,EACA,UAAAC,EACA,SAAA5B,EACA,SAAAC,EACA,UAAW2B,EAAY,EAAE,CAAC,EAAE,IAAI,EAAE1B,CAAS,CAAC,EAAE,WAAaA,EAC3D,gBAAA/B,CAAA,CACF,EACAvB,EAAA,IAACY,GAAA,CACC,cAAAE,EACA,cAAAC,EACA,iBAAAK,EACA,oBAAAE,EACA,mBAAAN,EACA,sBAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,eAAAE,EACA,gBAAAE,EACA,YAAAC,CAAA,EACF,EACF,EAOCgB,EAAA,KAAAoD,EAAA,CAAO,EAAE,OAAO,EAAE,SACjB,UAAA5F,EAAA,IAACkJ,EAAA,UACC,SACG1G,OAAA2G,EAAA,CAAM,EAAE,OAAO,OAAO,QACrB,UAAA3G,EAAA,KAACoD,EAAA,CACC,MAAM,WACN,EAAE,OACF,EAAE,QACF,EAAE,OACF,aAAa,OACb,OAAO,YACP,YAAY,SACZ,GAAG,eAEH,UAAA5F,EAAA,IAACoJ,EAAS,GAAE,OAAO,OAAO,OAAO,EAChCpJ,EAAA,IAAAoJ,EAAA,CAAS,EAAE,MAAM,OAAO,MAAO,IAClC,EACA5G,EAAA,KAACoD,EAAA,CACC,MAAM,WACN,EAAE,OACF,EAAE,QACF,EAAE,OACF,aAAa,OACb,OAAO,YACP,YAAY,SACZ,GAAG,eAEH,UAAA5F,EAAA,IAACoJ,EAAS,GAAE,OAAO,OAAO,OAAO,EAChCpJ,EAAA,IAAAoJ,EAAA,CAAS,EAAE,MAAM,OAAO,MAAO,IAClC,QACC7E,EAAI,GAAE,OAAO,EAAE,OAAO,GAAG,MAAM,aAAa,OAC3C,SAAAvE,EAAA,IAACoJ,GAAS,EAAE,OAAO,OAAO,OAAO,aAAa,OAAO,CACvD,IACF,EAGD,YAAoB,WACnBpJ,EAAA,IAACsG,GAAA,CACC,gBAAA/E,EACA,cAAAT,EACA,cAAAC,EACA,QAAA6F,EACA,UAAA5B,EACA,YAAA6B,EACA,aAAA3F,EACA,iBAAAE,EACA,YAAAI,EACA,aAAAwF,EACA,UAAAgB,GACA,YAAAX,EACA,SAAAY,GACA,UAAAF,GACA,+BAAAI,GACA,8BAAAC,GACA,WAAAT,EACA,SAAAD,EACA,aAAAE,EACA,yBAAAE,EACA,cAAAV,EACA,iBAAAS,EACA,WAAAQ,EAAA,EACKzB,CAAA,CACP,CAEJ,EAEA5G,EAAA,IAACkJ,EAAA,UACC,SACG1G,OAAA2G,EAAA,CAAM,EAAE,OAAO,OAAO,QACrB,UAAA3G,EAAA,KAACoD,EAAA,CACC,MAAM,WACN,EAAE,OACF,EAAE,QACF,EAAE,OACF,aAAa,OACb,OAAO,YACP,YAAY,SACZ,GAAG,eAEH,UAAA5F,EAAA,IAACoJ,EAAS,GAAE,OAAO,OAAO,OAAO,EAChCpJ,EAAA,IAAAoJ,EAAA,CAAS,EAAE,MAAM,OAAO,MAAO,IAClC,EACA5G,EAAA,KAACoD,EAAA,CACC,MAAM,WACN,EAAE,OACF,EAAE,QACF,EAAE,OACF,aAAa,OACb,OAAO,YACP,YAAY,SACZ,GAAG,eAEH,UAAA5F,EAAA,IAACoJ,EAAS,GAAE,OAAO,OAAO,OAAO,EAChCpJ,EAAA,IAAAoJ,EAAA,CAAS,EAAE,MAAM,OAAO,MAAO,IAClC,QACC7E,EAAI,GAAE,OAAO,EAAE,OAAO,GAAG,MAAM,aAAa,OAC3C,SAAAvE,EAAA,IAACoJ,GAAS,EAAE,OAAO,OAAO,OAAO,aAAa,OAAO,CACvD,IACF,EAGD,YAAoB,YACnBpJ,EAAA,IAACwG,GAAA,CACC,gBAAAjF,EACA,cAAAT,EACA,cAAAC,EACA,QAAA6F,EACA,UAAA5B,EACA,YAAA6B,EACA,aAAA3F,EACA,YAAAM,EACA,aAAAwF,EACA,YAAAK,EACA,gBAAAE,EACA,kBAAAC,EACA,iBAAAC,EACA,aAAAS,EAAA,EACF,CAEJ,EAGA1F,EAAA,KAACvC,EAAA,CACC,UAAU,YACV,YAAY,SACZ,MAAM,oBACN,QAAQ,gBACR,eAAgBsB,EAAkB,gBAAkB,SAEpD,UAAAvB,MAACqJ,IAAgB,GAAG,IAAI,SAAU9H,EAAkB,SAAW,QAAS,EACxEvB,EAAA,IAACK,EAAA,CACC,SAAS,OACT,OAAQ,CAAE,MAAO,SAAU,EAC3B,WAAW,SACX,OAAO,UACP,QAAS,IAAMT,GAAS,kBAAkBgH,CAAO,IAAII,GAAA,YAAAA,EAAc,QAAQ,EAAE,EAC9E,4BAED,GACF,CACF,GAEF,EACF,EACF,IACF,CAEJ","names":["FarmingIcon","tooltip","rest","navigate","useNavigate","isApp","useWindowWidth","jsx","HStack","e","cancelBubble","CetusTooltip","Text","Center","Image","hoverCoinTips","hoverSuiTips","stakeProtocolName","symbol","DepositWithdrawMode","props","displayTokenA","displayTokenB","currentActionToken","setCurrentActionToken","isCheckedZAP","setIsCheckedZAP","currentActionTab","setAssetAction","setCurrentActionTab","isUnstableVault","autoRefresh","useGetSuiStakeProtocol","setAmountInputA","setAmountInputB","useVaultsAddStore","depositTypeList","useMemo","result","ele","tabList","refreshCount","setRefreshCount","useState","useInterval","handleAutoRefresh","tooltipType","jsxs","Fragment","SelectTab","item","Slippage","RefreshButton","Flex","ZapSwitch","status","UnstableRange","displayTokenASymbol","displayTokenBSymbol","minPrice","maxPrice","currPrice","elementWidth","setElementWidth","currPriceWidth","setCurrPriceWidth","elementRef","useRef","currPriceRef","useEffect","getElementWidth","getCurrPriceWidth","resizeObserver","priceResizeObserver","sliderML","relativePosition","priceLeft","left","Box","Popover","PopoverTrigger","PopoverContent","PopoverBody","formatNumberWithDown","UnstableInfo","feeDisplay","clmmPool","isReverse","vaultStatsObj","useVaultsStore","getVaultsStats","useGetVaultList","vaultsAPY","setVaultsAPY","isAvailableObject","_a","displayMaxPrice","displayMinPrice","useDisplayTickPrice","VStack","CoinPairImage","Block","VTextLabelBox","VaultsAprTooltipContent","_b","_c","_d","_e","VaultRange","VaultDepositMode","lazy","VaultWithdrawMode","VaultModal","isOpen","setIsOpen","vaultId","assetAction","useGetContractVaultInfo","vaultInterface","apiVaultInfo","getApiVaultInfo","useGetApiVaultInfo","fetchVaultInfoFromContract","contractVault","lpTokenInfo","fetchClmmPoolFromContract","holdCoinAmounts","fetchVaultBalance","isBalanceLoading","vaultTvl","hardCapUSD","depositRatio","refreshPythPrice","calculateVaultTvlLoading","maxCapNum","quoteCoin","baseCoin","holdLpAmount","availableCapacityWithQuoteCoin","availableCapacityWithBaseCoin","gtAumLimit","fetchAccountBalance","useAccountBalance","currentAccount","isOpenWalletModal","useAccountStore","setVaultCoinAmounts","useVaultsDetailStore","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","Suspense","Stack","Skeleton","PoweredByHaedal"],"ignoreList":[],"sources":["../../src/components/common/FarmingIcon.tsx","../../src/components/vaults/modal/DepositWithdrawMode.tsx","../../src/components/vaults/modal/VaultRange.tsx","../../src/components/vaults/modal/VaultInfo.tsx","../../src/components/vaults/modal/index.tsx"],"sourcesContent":["import { CetusTooltip } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { cancelBubble } from '@cetus/utils'\nimport { Center, HStack, Image, StackProps, Text } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ninterface FarmingIcon extends StackProps {\n  tooltip?: ReactNode\n}\n\nconst FarmingIcon = ({ tooltip, ...rest }: FarmingIcon) => {\n  const navigate = useNavigate()\n  const { isApp } = useWindowWidth()\n  return (\n    <HStack\n      w=\"20px\"\n      h=\"20px\"\n      onClick={e => {\n        cancelBubble(e)\n        isApp ? '' : navigate('/farms')\n      }}\n      {...rest}\n    >\n      <CetusTooltip placement=\"top\" tooltip={tooltip ? tooltip : <Text fontSize=\"12px\">Farm rewards available</Text>}>\n        <Center>\n          <Image w=\"100%\" h=\"100%\" minW=\"100%\" src=\"/images/icon_farms.png\" />\n        </Center>\n      </CetusTooltip>\n    </HStack>\n  )\n}\n\nexport default FarmingIcon\n","import Slippage from '@/components/common/Slippage'\nimport { useGetSuiStakeProtocol } from '@/hooks/unstable-vault/useVaultsHelper'\nimport useVaultsAddStore from '@/store/unstable-vaults/useVaultsAdd'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { useInterval } from '@cetus/hooks'\nimport { Token } from '@cetus/types'\nimport { RefreshButton } from '@cetus/ui-kit'\nimport { Flex, HStack, Text } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport ZapSwitch from './common/ZapSwitch'\n\nconst hoverCoinTips =\n  'You can also choose to deposit in only one asset type. In that case,the vault will convert your asset to the required propositions using Cetus.Please note that trading fees & slippage will be applied. When slippage is involved,a certain amount of post-swap dust (no loss of funds) will be returned to you.'\n\nconst hoverSuiTips = (stakeProtocolName?: string, symbol?: string) => {\n  return `When you deposit in only SUI tokens, a part of your SUI amount will be converted to ${symbol} via ${stakeProtocolName} liquid staking services to match required liquidity compositions of the liquidity pool on Cetus. A certain amount of dust (no loss of funds) will be returned to you if slippage is involved.`\n}\ntype DepositWithdrawModeProps = {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  currentActionToken: string // 当前操作token\n  setCurrentActionToken: (value: string) => void\n  isCheckedZAP: boolean // 是否开启zap模式\n  currentActionTab: string // 当前操作类型 Deposit Withdraw\n  setIsCheckedZAP: (value: boolean) => void\n  setAssetAction: (value: string) => void\n  setCurrentActionTab: (value: string) => void\n  autoRefresh: () => void\n  isUnstableVault: boolean\n}\n\nfunction DepositWithdrawMode(props: DepositWithdrawModeProps) {\n  const {\n    displayTokenA,\n    displayTokenB,\n    currentActionToken,\n    setCurrentActionToken,\n    isCheckedZAP,\n    setIsCheckedZAP,\n    currentActionTab,\n    setAssetAction,\n    setCurrentActionTab,\n    isUnstableVault,\n    autoRefresh\n  } = props\n\n  const { stakeProtocolName } = useGetSuiStakeProtocol(displayTokenA?.coin_type)\n  const { setAmountInputA, setAmountInputB } = useVaultsAddStore()\n\n  const depositTypeList: Tab[] = useMemo(() => {\n    if (currentActionTab == 'Deposit') {\n      const result = [\n        {\n          label: displayTokenA?.symbol + ' only',\n          value: displayTokenA?.symbol + ' only',\n          action: displayTokenA?.coin_type,\n          afterIcon: isCheckedZAP && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n          tooltip: isUnstableVault ? `You can add liquidity in this pool with only ${displayTokenA?.symbol}.` : hoverCoinTips\n        },\n        {\n          label: `${displayTokenA?.symbol}+${displayTokenB?.symbol}`,\n          value: `${displayTokenA?.symbol}+${displayTokenB?.symbol}`,\n          action: 'both',\n          afterIcon: isCheckedZAP && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n          tooltip: isUnstableVault && isCheckedZAP ? `You can add any value you want from both assets.` : ''\n        },\n        {\n          label: displayTokenB?.symbol + ' only',\n          value: displayTokenB?.symbol + ' only',\n          action: displayTokenB?.coin_type,\n          afterIcon: isCheckedZAP && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n          tooltip: isUnstableVault\n            ? `You can add liquidity in this pool with only ${displayTokenB?.symbol}.`\n            : hoverSuiTips(stakeProtocolName, displayTokenA?.symbol)\n        }\n      ]\n      return isUnstableVault ? result : result.filter(ele => ele.action !== 'both')\n    } else {\n      return [\n        {\n          label: displayTokenA?.symbol + ' only',\n          value: displayTokenA?.symbol + ' only',\n          action: displayTokenA?.coin_type\n        },\n        {\n          label: displayTokenB?.symbol + ' only',\n          value: displayTokenB?.symbol + ' only',\n          action: displayTokenB?.coin_type\n        }\n      ]\n    }\n  }, [displayTokenA, displayTokenB, currentActionTab, isUnstableVault, isCheckedZAP, stakeProtocolName])\n\n  const tabList: Tab[] = [\n    {\n      label: 'Deposit',\n      value: 'Deposit'\n    },\n    {\n      label: 'Withdraw',\n      value: 'Withdraw'\n    }\n  ]\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n  // 30s轮询\n  useInterval({\n    interval: 1000,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= 20) {\n        handleAutoRefresh()\n      }\n    }\n  })\n\n  const handleAutoRefresh = () => {\n    setRefreshCount(0)\n    autoRefresh()\n  }\n\n  const tooltipType = useMemo(() => {\n    if (currentActionTab == 'Deposit') {\n      return isUnstableVault ? 'customDeposit' : 'deposit'\n    }\n    return 'withdraw'\n  }, [currentActionTab, isUnstableVault])\n  return (\n    <>\n      <HStack width=\"100%\" alignItems=\"center\">\n        <SelectTab\n          type=\"borderTab\"\n          wrapStyle={{\n            w: '100%',\n            h: '54px',\n            border: 'none',\n            bg: 'none'\n          }}\n          itemStyle={{\n            fontSize: '14px',\n            mr: '28px',\n            fontWeight: '500'\n          }}\n          tabList={tabList}\n          currentTab={currentActionTab}\n          handleChangeTab={(item: Tab) => {\n            setCurrentActionTab(item.value)\n            setAssetAction(isCheckedZAP ? displayTokenA?.coin_type : 'both')\n            setCurrentActionToken(displayTokenA?.symbol + ' only')\n          }}\n        />\n        <Slippage slippageType=\"vaults\" compact={true} />\n        <RefreshButton\n          handleRefresh={handleAutoRefresh}\n          w=\"28px\"\n          h=\"28px\"\n          minW=\"28px\"\n          minH=\"28px\"\n          innerStyle={{ w: '28px', h: '28px', borderRadius: '8px', bg: 'bg_secondary' }}\n        />\n      </HStack>\n      <Flex width=\"100%\" alignItems=\"center\" justify=\"space-between\" mt=\"8px\">\n        <Text>{currentActionTab} Amounts</Text>\n        {/* <ZapSwitch\n          isUnstableVault={isUnstableVault}\n          displayTokenA={displayTokenA}\n          currentActionTab={currentActionTab}\n          isCheckedZAP={isCheckedZAP}\n          setIsCheckedZAP={setIsCheckedZAP}\n          setCurrentActionToken={setCurrentActionToken}\n          setAssetAction={setAssetAction}\n        /> */}\n        <ZapSwitch\n          isCheckedZAP={isCheckedZAP}\n          zapText={currentActionTab == 'Deposit' ? 'Zap In' : 'Zap Out'}\n          tooltipType={tooltipType}\n          zapSwitchChange={status => {\n            setAmountInputA('')\n            setAmountInputB('')\n            setIsCheckedZAP(!isCheckedZAP)\n            if (!status) {\n              setAssetAction('both')\n            } else {\n              setAssetAction(displayTokenA?.coin_type)\n            }\n            setCurrentActionToken(displayTokenA?.symbol + ' only')\n          }}\n        />\n      </Flex>\n      {isCheckedZAP ? (\n        <SelectTab\n          type=\"outlineTab\"\n          wrapStyle={{\n            w: {\n              base: '100%'\n            },\n            h: '42px',\n            padding: '4px',\n            marginTop: '8px'\n            // marginBottom: '4px'\n          }}\n          itemStyle={{\n            w: `${100 / depositTypeList.length}%`,\n            fontSize: '14px',\n            borderRadius: '8px'\n          }}\n          tabList={depositTypeList}\n          currentTab={currentActionToken}\n          handleChangeTab={item => {\n            setCurrentActionToken(item.value)\n            setAssetAction(item.action)\n          }}\n        />\n      ) : null}\n    </>\n  )\n}\n\nexport default DepositWithdrawMode\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { Box, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Text } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\n\ntype UnstableRangeProps = {\n  displayTokenASymbol: string\n  displayTokenBSymbol: string\n  minPrice?: string\n  maxPrice?: string\n  currPrice?: string\n}\nfunction UnstableRange(props: UnstableRangeProps) {\n  const { displayTokenASymbol, displayTokenBSymbol, minPrice, maxPrice, currPrice } = props\n  const [elementWidth, setElementWidth] = useState<number>(0)\n  const [currPriceWidth, setCurrPriceWidth] = useState<number>(0)\n  const elementRef = useRef<HTMLDivElement>(null)\n  const currPriceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const getElementWidth = () => {\n      if (elementRef.current) {\n        setElementWidth(elementRef.current.offsetWidth)\n      }\n    }\n    const getCurrPriceWidth = () => {\n      if (currPriceRef.current) {\n        setCurrPriceWidth(currPriceRef.current.offsetWidth)\n      }\n    }\n\n    getElementWidth()\n    getCurrPriceWidth()\n\n    const resizeObserver = new ResizeObserver(getElementWidth)\n    const priceResizeObserver = new ResizeObserver(getCurrPriceWidth)\n\n    if (elementRef.current) {\n      resizeObserver.observe(elementRef.current)\n    }\n    if (currPriceRef.current) {\n      priceResizeObserver.observe(currPriceRef.current)\n    }\n\n    return () => {\n      if (elementRef.current) {\n        resizeObserver.unobserve(elementRef.current)\n      }\n      if (currPriceRef.current) {\n        priceResizeObserver.unobserve(currPriceRef.current)\n      }\n    }\n  }, [])\n\n  const sliderML = useMemo(() => {\n    if (maxPrice === '∞') return '0px'\n    if (currPrice && minPrice && maxPrice) {\n      if (d(currPrice).lessThanOrEqualTo(maxPrice) && d(currPrice).greaterThanOrEqualTo(minPrice)) {\n        const relativePosition = d(currPrice)\n          .sub(minPrice)\n          .div(d(maxPrice).sub(d(minPrice)))\n          .toString()\n        return `${d(elementWidth).mul(relativePosition).toFixed(0)}px`\n      }\n      if (d(currPrice).lt(minPrice)) {\n        return '-36px'\n      }\n      if (d(currPrice).gt(maxPrice)) {\n        return 'calc(100% + 36px)'\n      }\n    }\n    return '0px'\n  }, [currPrice, minPrice, maxPrice, elementWidth])\n\n  const priceLeft = useMemo(() => {\n    const left = sliderML.replace('px', '')\n    return Number(left) - currPriceWidth / 2 + 'px'\n  }, [sliderML, currPriceWidth])\n\n  const { isApp } = useWindowWidth()\n  return (\n    // <>\n    //   {minPrice !== 'undefined' && maxPrice !== 'undefined' ? (\n    //     <Flex marginTop=\"4px\" background=\"primary_opacity.10\" borderRadius=\"8px\" p=\"12px\">\n    //       <Text color=\"primary_gray\" fontSize=\"12px\">\n    //         Range\n    //       </Text>\n    //       <Text color=\"text_caption\" fontSize=\"12px\" marginLeft=\"4px\">\n    //         {formatNumber(minPrice, 6, true, Decimal.ROUND_DOWN)}-{formatNumber(maxPrice, 6, true, Decimal.ROUND_DOWN)} {displayTokenASymbol} per{' '}\n    //         {displayTokenBSymbol}\n    //       </Text>\n    //     </Flex>\n    //   ) : null}\n    // </>\n    <>\n      {minPrice !== 'undefined' && maxPrice !== 'undefined' ? (\n        <HStack w=\"100%\" height=\"60px\" background=\"primary_opacity.10\" borderRadius=\"16px\" p=\"0px 0px 8px\">\n          <Box\n            w=\"100%\"\n            padding={minPrice && d(currPrice).lt(minPrice) ? '0 40px 0 60px' : maxPrice && d(currPrice).gt(maxPrice) ? '0 60px 0 40px' : '0 40px'}\n            position=\"relative\"\n          >\n            <Text\n              whiteSpace=\"nowrap\"\n              position=\"absolute\"\n              top=\"20px\"\n              left={minPrice && d(currPrice).lt(minPrice) ? '60px' : '40px'}\n              fontSize=\"12px\"\n              color=\"text_caption\"\n            >\n              {formatNumberWithDown(minPrice)}\n            </Text>\n            <Box\n              w=\"100%\"\n              position=\"relative\"\n              height=\"14px\"\n              ref={elementRef}\n              bgImage=\"url('/images/img_range@2x.png')\"\n              bgSize=\"100% 14px\"\n              bgPosition=\"center\"\n            >\n              <Popover isLazy placement=\"top\" trigger={isApp ? 'click' : 'hover'} autoFocus={false} returnFocusOnClose={false} gutter={4}>\n                <PopoverTrigger>\n                  <Box as=\"button\">\n                    <Box\n                      bg=\"#fff\"\n                      borderRadius=\"8px\"\n                      w=\"4px\"\n                      height=\"15px\"\n                      position=\"absolute\"\n                      top=\"50%\"\n                      transform=\"translateY(-50%)\"\n                      left={sliderML}\n                      ml=\"-2px\"\n                      zIndex=\"5\"\n                    />\n                  </Box>\n                </PopoverTrigger>\n                <PopoverContent\n                  w=\"fit-content\"\n                  bg=\"none\"\n                  border=\"none\"\n                  ref={currPriceRef}\n                  position=\"absolute\"\n                  top=\"-32px !important\"\n                  left={priceLeft}\n                  zIndex=\"5\"\n                >\n                  <PopoverBody fontSize=\"12px\" w=\"fit-content\" bg=\"none\" border=\"none\">\n                    <Text whiteSpace=\"nowrap\" fontSize=\"12px\" color=\"primary\">\n                      {formatNumberWithDown(currPrice)}\n                    </Text>\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n            </Box>\n            <Text\n              whiteSpace=\"nowrap\"\n              position=\"absolute\"\n              top=\"20px\"\n              right={maxPrice && d(currPrice).gt(maxPrice) ? '60px' : '40px'}\n              fontSize=\"12px\"\n              color=\"text_caption\"\n            >\n              {formatNumberWithDown(maxPrice)}\n            </Text>\n          </Box>\n        </HStack>\n      ) : // <Flex marginTop=\"4px\" background=\"primary_opacity.10\" borderRadius=\"8px\" p=\"12px\">\n      //   <Text color=\"primary_gray\" fontSize=\"12px\">\n      //     Range\n      //   </Text>\n      //   <Text color=\"text_caption\" fontSize=\"12px\" marginLeft=\"4px\">\n      //     {formatNumber(minPrice, 6, true, Decimal.ROUND_DOWN)}-{formatNumber(maxPrice, 6, true, Decimal.ROUND_DOWN)} {displayTokenASymbol} per{' '}\n      //     {displayTokenBSymbol}\n      //   </Text>\n      // </Flex>\n      null}\n    </>\n  )\n}\nexport default UnstableRange\n","import useDisplayTickPrice from '@/hooks/common/useDisplayTickPrice'\nimport useGetVaultList from '@/hooks/vaults/useGetVaultList'\nimport useVaultsStore from '@/store/vaults/useVaultsList'\nimport { Block } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, VTextLabelBox } from '@cetus/ui-kit'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Box, Flex, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { VaultsAprTooltipContent } from '../list/common/VaultsAprBlock'\nimport VaultRange from './VaultRange'\n\ntype UnstableInfoProps = {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  feeDisplay: string\n  clmmPool: string\n  isReverse: boolean\n  minPrice?: string\n  maxPrice?: string\n  isUnstableVault: boolean\n  currPrice?: string\n}\nfunction UnstableInfo(props: UnstableInfoProps) {\n  const { displayTokenA, displayTokenB, feeDisplay, clmmPool, isReverse, minPrice, maxPrice, isUnstableVault, currPrice } = props\n  const { vaultStatsObj } = useVaultsStore()\n  const { getVaultsStats } = useGetVaultList()\n  const [vaultsAPY, setVaultsAPY] = useState('')\n  useEffect(() => {\n    if (isAvailableObject(vaultStatsObj) && vaultStatsObj[clmmPool]) {\n      setVaultsAPY(vaultStatsObj[clmmPool]?.vaultsApyDisplay)\n    } else {\n      getVaultsStats()\n    }\n  }, [vaultStatsObj, clmmPool])\n\n  const { displayMaxPrice, displayMinPrice } = useDisplayTickPrice({ minPrice, maxPrice, changeSide: isReverse })\n\n  return (\n    <VStack width=\"calc(100% + 32px)\" padding=\"0 16px\" alignItems=\"left\" paddingBottom=\"16px\" borderBottom=\"1px solid\" borderColor=\"border\">\n      <Flex>\n        <CoinPairImage\n          coinAIconUrl={displayTokenA?.logo_url}\n          coinBIconUrl={displayTokenB?.logo_url}\n          imageStyle={{\n            w: '32px',\n            h: '32px'\n          }}\n          imgBoxStyle={{\n            w: '32px',\n            h: '32px'\n          }}\n        />\n        <Flex marginLeft=\"8px\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n          <Box>\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"16px\" color=\"text_caption\">\n                {`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n              </Text>\n              <Block w=\"unset\" p=\"3px 12px 2px\" borderRadius=\"12px\" bg=\"none\" borderColor=\"primary\" marginLeft=\"8px\">\n                <Text fontSize=\"12px\" color=\"primary\">\n                  {feeDisplay}\n                </Text>\n              </Block>\n            </Flex>\n          </Box>\n          <Flex flexDirection=\"column\">\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '2px',\n                alignItems: 'flex-end !important'\n              }}\n              title=\"APY\"\n              titleStyle={{\n                color: 'primary',\n                fontSize: '12px'\n              }}\n              valueTooltip={\n                <VaultsAprTooltipContent\n                  vaultsLstApyDisplay={vaultStatsObj[clmmPool]?.vaultsLstApyDisplay || ''}\n                  vaultsApyDisplay={vaultStatsObj[clmmPool]?.vaultsApyDisplay || ''}\n                  vaultsTotalApyDisplay={vaultStatsObj[clmmPool]?.vaultsTotalApyDisplay || ''}\n                  vaultsAprDisplay={vaultStatsObj[clmmPool]?.vaultsAprDisplay || ''}\n                  category={vaultStatsObj[clmmPool]?.category}\n                />\n              }\n              value={vaultsAPY || '-'}\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n      <VaultRange\n        displayTokenASymbol={isReverse ? displayTokenB?.symbol : displayTokenB?.symbol}\n        displayTokenBSymbol={isReverse ? displayTokenA?.symbol : displayTokenA?.symbol}\n        minPrice={displayMinPrice}\n        maxPrice={displayMaxPrice}\n        currPrice={currPrice}\n      />\n    </VStack>\n  )\n}\n\nexport default UnstableInfo\n","import vaultInterface from '@/hooks/vault-interface'\nimport useGetApiVaultInfo from '@/hooks/vaults/useGetApiVaultInfo.ts'\nimport useVaultsDetailStore from '@/store/vaults/useVaultsDetail.ts'\nimport { AssetActionType } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { d } from '@cetus/utils'\nimport { Box, HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalOverlay, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport { lazy, Suspense, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PoweredByHaedal from './common/PoweredByHaedal.tsx'\nimport DepositWithdrawMode from './DepositWithdrawMode.tsx'\nimport UnstableInfo from './VaultInfo.tsx'\n\nconst VaultDepositMode = lazy(() => import('./DepositMode.tsx'))\n// const VaultDepositMode = lazy(() => new Promise((_, reject) => setTimeout(() => reject(new Error('Lazy load failed!')), 500000)))\nconst VaultWithdrawMode = lazy(() => import('./WithdrawMode.tsx'))\n\ntype VaultModalProps = {\n  isOpen: boolean\n  setIsOpen: (status: boolean) => void\n  displayTokenA?: Token | undefined\n  displayTokenB?: Token | undefined\n  feeDisplay: string\n  clmmPool: string\n  vaultId: string\n  isReverse: boolean\n  isUnstableVault: boolean\n}\nfunction VaultModal(props: VaultModalProps) {\n  const { isOpen, setIsOpen, displayTokenA, displayTokenB, feeDisplay, clmmPool, vaultId, isReverse, isUnstableVault } = props\n  const [currentActionTab, setCurrentActionTab] = useState('Deposit')\n  const [currentActionToken, setCurrentActionToken] = useState(displayTokenA?.symbol + ' only')\n  const [assetAction, setAssetAction] = useState<AssetActionType>('both')\n  const [isCheckedZAP, setIsCheckedZAP] = useState(false)\n  const useGetContractVaultInfo = vaultInterface.useGetContractVaultInfo(isUnstableVault)\n\n  const { apiVaultInfo, getApiVaultInfo } = useGetApiVaultInfo(vaultId)\n  const {\n    fetchVaultInfoFromContract,\n    contractVault,\n    lpTokenInfo,\n    fetchClmmPoolFromContract,\n    holdCoinAmounts,\n    maxPrice,\n    currPrice,\n    minPrice,\n    fetchVaultBalance,\n    isBalanceLoading,\n    vaultTvl,\n    hardCapUSD,\n    depositRatio,\n    refreshPythPrice,\n    calculateVaultTvlLoading,\n    maxCapNum,\n    quoteCoin,\n    baseCoin,\n    holdLpAmount,\n    availableCapacityWithQuoteCoin,\n    availableCapacityWithBaseCoin,\n    gtAumLimit\n  } = useGetContractVaultInfo(\n    apiVaultInfo?.vaultsId,\n    apiVaultInfo?.clmmPoolAddress,\n    apiVaultInfo?.tokenA,\n    apiVaultInfo?.tokenB,\n    apiVaultInfo?.isReverse,\n    true\n  )\n\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const navigate = useNavigate()\n  const { currentAccount, isOpenWalletModal } = useAccountStore()\n  const autoRefresh = () => {\n    // 刷新余额\n    fetchAccountBalance()\n\n    console.log('🚀🚀🚀 ~ index.tsx:57 ~ autoRefresh ~ apiVaultInfo:', apiVaultInfo)\n    if (apiVaultInfo?.category == 'haedal') {\n      fetchVaultBalance(currentAccount?.address, vaultId, apiVaultInfo?.tokenA?.decimals)\n    }\n\n    // 刷新 clmm 合约\n    if (apiVaultInfo) {\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n\n    // 刷新Vaults 合约\n    if (vaultId) {\n      fetchVaultInfoFromContract(vaultId, true)\n      getApiVaultInfo(vaultId, true)\n    }\n  }\n\n  useEffect(() => {\n    setIsCheckedZAP(false)\n    setAssetAction('both')\n  }, [currentActionTab])\n\n  useEffect(() => {\n    if (apiVaultInfo) {\n      fetchClmmPoolFromContract(apiVaultInfo.clmmPoolAddress, true)\n    }\n  }, [apiVaultInfo?.clmmPoolAddress])\n\n  useEffect(() => {\n    if (vaultId) {\n      fetchVaultInfoFromContract(vaultId, true)\n    }\n  }, [vaultId])\n\n  const { setVaultCoinAmounts } = useVaultsDetailStore()\n  useEffect(() => {\n    setVaultCoinAmounts({ coinAmountA: '0', coinAmountB: '0', displayCoinA: '0', displayCoinB: '0' })\n  }, [])\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen && !isOpenWalletModal}\n      onClose={() => {\n        setIsOpen(false)\n        setCurrentActionTab('Deposit')\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '420px' }}>\n        <ModalBody p=\"0 0 8px\">\n          <VStack width=\"100%\">\n            <VStack\n              width=\"100%\"\n              p=\"6px 16px 16px\"\n              mb=\"-16px\"\n              gap=\"0\"\n              borderRadius=\"12px\"\n              sx={{\n                backgroundImage: \"url('/images/vault_modal_bg@2x.png')\",\n                backgroundPosition: 'top center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover'\n              }}\n            >\n              <HStack h=\"36px\" w=\"100%\" mb=\"12px\">\n                <Text color=\"text_caption\" fontWeight=\"500\" fontSize=\"16px\">\n                  Auto Vault\n                </Text>\n                <ModalCloseButton />\n              </HStack>\n              <UnstableInfo\n                displayTokenA={displayTokenA}\n                displayTokenB={displayTokenB}\n                feeDisplay={feeDisplay}\n                clmmPool={clmmPool}\n                isReverse={isReverse}\n                minPrice={minPrice}\n                maxPrice={maxPrice}\n                currPrice={isReverse ? d(1).div(d(currPrice)).toString() : currPrice}\n                isUnstableVault={isUnstableVault}\n              />\n              <DepositWithdrawMode\n                displayTokenA={displayTokenA}\n                displayTokenB={displayTokenB}\n                currentActionTab={currentActionTab}\n                setCurrentActionTab={setCurrentActionTab}\n                currentActionToken={currentActionToken}\n                setCurrentActionToken={setCurrentActionToken}\n                isCheckedZAP={isCheckedZAP}\n                setIsCheckedZAP={setIsCheckedZAP}\n                setAssetAction={setAssetAction}\n                isUnstableVault={isUnstableVault}\n                autoRefresh={autoRefresh}\n              />\n            </VStack>\n            {/* <HStack bg=\"primary_opacity.10\" borderRadius=\"12px\" padding=\"8px 12px\" lineHeight=\"16px\" marginTop=\"12px\">\n              <Text color=\"primary\" fontSize=\"12px\">\n                Automatically stake your LP token into the farm to enjoy higher yield.\n              </Text>\n            </HStack> */}\n\n            <VStack w=\"100%\" p=\"0 16px\">\n              <Suspense\n                fallback={\n                  <Stack w=\"100%\" height=\"292px\">\n                    <VStack\n                      align=\"flex-end\"\n                      w=\"100%\"\n                      h=\"108px\"\n                      p=\"16px\"\n                      borderRadius=\"16px\"\n                      border=\"1px solid\"\n                      borderColor=\"border\"\n                      bg=\"bg_secondary\"\n                    >\n                      <Skeleton w=\"100%\" height=\"20px\" />\n                      <Skeleton w=\"40%\" height=\"20px\" />\n                    </VStack>\n                    <VStack\n                      align=\"flex-end\"\n                      w=\"100%\"\n                      h=\"108px\"\n                      p=\"16px\"\n                      borderRadius=\"16px\"\n                      border=\"1px solid\"\n                      borderColor=\"border\"\n                      bg=\"bg_secondary\"\n                    >\n                      <Skeleton w=\"100%\" height=\"20px\" />\n                      <Skeleton w=\"40%\" height=\"20px\" />\n                    </VStack>\n                    <Box w=\"100%\" h=\"52px\" mb=\"8px\" borderRadius=\"12px\">\n                      <Skeleton w=\"100%\" height=\"52px\" borderRadius=\"12px\" />\n                    </Box>\n                  </Stack>\n                }\n              >\n                {currentActionTab == 'Deposit' && (\n                  <VaultDepositMode\n                    isUnstableVault={isUnstableVault}\n                    displayTokenA={displayTokenA}\n                    displayTokenB={displayTokenB}\n                    vaultId={vaultId}\n                    isReverse={isReverse}\n                    assetAction={assetAction}\n                    isCheckedZAP={isCheckedZAP}\n                    currentActionTab={currentActionTab}\n                    autoRefresh={autoRefresh}\n                    apiVaultInfo={apiVaultInfo}\n                    quoteCoin={quoteCoin}\n                    lpTokenInfo={lpTokenInfo}\n                    baseCoin={baseCoin}\n                    maxCapNum={maxCapNum}\n                    availableCapacityWithQuoteCoin={availableCapacityWithQuoteCoin}\n                    availableCapacityWithBaseCoin={availableCapacityWithBaseCoin}\n                    hardCapUSD={hardCapUSD}\n                    vaultTvl={vaultTvl}\n                    depositRatio={depositRatio}\n                    calculateVaultTvlLoading={calculateVaultTvlLoading}\n                    contractVault={contractVault}\n                    refreshPythPrice={refreshPythPrice}\n                    gtAumLimit={gtAumLimit}\n                    key={vaultId}\n                  />\n                )}\n              </Suspense>\n\n              <Suspense\n                fallback={\n                  <Stack w=\"100%\" height=\"292px\">\n                    <VStack\n                      align=\"flex-end\"\n                      w=\"100%\"\n                      h=\"108px\"\n                      p=\"16px\"\n                      borderRadius=\"16px\"\n                      border=\"1px solid\"\n                      borderColor=\"border\"\n                      bg=\"bg_secondary\"\n                    >\n                      <Skeleton w=\"100%\" height=\"20px\" />\n                      <Skeleton w=\"60%\" height=\"20px\" />\n                    </VStack>\n                    <VStack\n                      align=\"flex-end\"\n                      w=\"100%\"\n                      h=\"108px\"\n                      p=\"16px\"\n                      borderRadius=\"16px\"\n                      border=\"1px solid\"\n                      borderColor=\"border\"\n                      bg=\"bg_secondary\"\n                    >\n                      <Skeleton w=\"100%\" height=\"20px\" />\n                      <Skeleton w=\"40%\" height=\"20px\" />\n                    </VStack>\n                    <Box w=\"100%\" h=\"52px\" mb=\"8px\" borderRadius=\"12px\">\n                      <Skeleton w=\"100%\" height=\"52px\" borderRadius=\"12px\" />\n                    </Box>\n                  </Stack>\n                }\n              >\n                {currentActionTab == 'Withdraw' && (\n                  <VaultWithdrawMode\n                    isUnstableVault={isUnstableVault}\n                    displayTokenA={displayTokenA}\n                    displayTokenB={displayTokenB}\n                    vaultId={vaultId}\n                    isReverse={isReverse}\n                    assetAction={assetAction}\n                    isCheckedZAP={isCheckedZAP}\n                    autoRefresh={autoRefresh}\n                    apiVaultInfo={apiVaultInfo}\n                    lpTokenInfo={lpTokenInfo}\n                    holdCoinAmounts={holdCoinAmounts}\n                    fetchVaultBalance={fetchVaultBalance}\n                    isBalanceLoading={isBalanceLoading}\n                    holdLpAmount={holdLpAmount}\n                  />\n                )}\n              </Suspense>\n\n              {/* {isUnstableVault && ( */}\n              <HStack\n                borderTop=\"1px solid\"\n                borderColor=\"border\"\n                width=\"calc(100% + 32px)\"\n                padding=\"12px 16px 4px\"\n                justifyContent={isUnstableVault ? 'space-between' : 'center'}\n              >\n                <PoweredByHaedal mt=\"0\" category={isUnstableVault ? 'Haedal' : 'Cetus'} />\n                <Text\n                  fontSize=\"12px\"\n                  _hover={{ color: 'primary' }}\n                  whiteSpace=\"nowrap\"\n                  cursor=\"pointer\"\n                  onClick={() => navigate(`/vaults-detail/${vaultId}/${apiVaultInfo?.category}`)}\n                >\n                  Vault Details &gt;\n                </Text>\n              </HStack>\n            </VStack>\n            {/* )} */}\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\nexport default VaultModal\n"],"file":"assets/index-BwuGvXt8.js"}