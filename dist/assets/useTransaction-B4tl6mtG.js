import{a as H,B as re}from"./vendor-BFGDaAdA.js";import{bw as ce,c9 as ie,ca as de,cb as G,cc as Z,cd as ue,ce as fe,cf as le,k as te,bq as be,aJ as ge,d as P,cg as he,ch as me,ci as xe,l as Te,A as we,h as Se,bL as pe,by as Ie,cj as je,ck as ve,cl as Ce}from"./index-CsPKGWlY.js";import{u as Ee,t as Be}from"./useTrack-4ZTqrnXN.js";import{u as ne}from"./useSigner-J-p9il0w.js";function Oe(e){try{return e&&e.includes("user")&&e.includes("reject")}catch{return!1}}function ke(e){const t=String(e);return t.indexOf('Some("create_pool_internal")')>-1&&t.indexOf(" }, 1")>-1}function ye(e){const t=String(e);return t.indexOf("withdraw_with_proof")>-1||t.indexOf("check_coin_threshold")>-1||t.indexOf('Identifier("balance")')>-1||t.indexOf("remove_liquidity")>-1&&(t.indexOf("in command 1")>-1||t.indexOf("in command 2")>-1||t.indexOf("in command 4")>-1||t.indexOf("in command 5")>-1)||t.indexOf("repay_add_liquidity")>-1&&(t.indexOf("in command 1")>-1||t.indexOf("in command 2")>-1||t.indexOf("in command 3")>-1||t.indexOf("in command 4")>-1||t.indexOf("in command 5")>-1)}function Me(e){return!!String(e).includes("Could not find the referenced transaction")}function Ae(e){return!!String(e).includes("TRPCClientError:")}function Re(e){const t=e.status,n=String(e);return!!([429,503,502,400].includes(t)||n.includes("Could not find the referenced object"))}function _e(e){return!!String(e).includes("Max cap reached.")}function Fe(e){return!!String(e).includes("Fast Mode service error")}function Ne(e){return!!String(e).includes("The current operation does not support msafe wallet")}function $e(e){return String(e).indexOf("hard_cap_reached")>-1}const We=[{matcher:Oe,message:"User rejected the request"},{matcher:Me,message:"Oops. Failed to sync data from your txid. Please check your txn status from explorer or from your wallet."},{matcher:Ae,message:e=>String(e).split(":")[1]},{matcher:Re,message:"RPC loading failed. Try resubmission or check your network. You can also switch an RPC in settings to try again."},{matcher:_e,message:"Max cap reached. This is to prevent your txn from overpaying. You can choose to edit your gas max cap in settings if needed."},{matcher:Fe,message:"Fast Mode service error, please switch to the Default Transaction Mode or try again later."},{matcher:Ne,message:"The current operation does not support msafe wallet."},{matcher:e=>String(e).includes("Transaction validator signing failed"),message:"Oops. Failed to pull your txid. Please check your txn status from explorer or from your wallet."},{matcher:ye,message:"Exceeded price slippage"},{matcher:ke,message:"Pool already exists"},{matcher:$e,message:"Deposit Exceeds Cap"}];function De(e){for(const{matcher:t,message:n}of We)if(t(e))return typeof n=="function"?n(e):n;return"Transaction failed"}function Ue(){const{setTransactionData:e,setTransactionModalVisible:t,manualCloseIdList:n}=ce(),o=H.useRef(n);H.useEffect(()=>{o.current=n},[n]);const r=c=>{if(c){const s=o.current.includes(c);return s&&t(!1),s}return!1};return{transactionConfirmation:c=>{r(c.transactionId)||(e({...c,status:"confirmation"}),t(!0))},transactionSubmitted:c=>{r(c.transactionId)||(t(!1),e({...c,status:"submitted"}),t(!0))},transactionSuccess:c=>{r(c.transactionId)||(t(!1),e({...c,status:"success"}),t(!0))},transactionRejected:(c,s=n)=>{console.log("ðŸš€ ~ file: useTransactionModal.ts:10 ~ useTransactionModal ~ id 55:",n),!r(c.transactionId)&&(t(!1),e({...c,status:"rejected"}),t(!0))},closeTransactionModal:()=>{t(!1)}}}const Le="0x2::sui::SUI",Ye="https://rpc.getshio.com/fast",qe="0x1889977f0fb56ae730e7bda8e8e32859ce78874458c74910d36121a81a615123",ee=[{objectId:"0xc32ce42eac951759666cbc993646b72387ec2708a2917c2c6fb7d21f00108c18",version:72869622},{objectId:"0x0289acae0edcdf1fe3aedc2e886bc23064d41c359e0179a18152a64d1c1c2b3e",version:327637282},{objectId:"0x03132160e8c2c45208abf3ccf165e82edcc42fee2e614afe54582f9740a808b8",version:327637282},{objectId:"0x072ae7307459e535379f422995a0d10132f12a3450298f8cf0cc07bd164f9999",version:327637282},{objectId:"0x1c1a96a2f4a34ea09ab15b8ff98f4b6b4338ce89f4158eb7d3eb2cd4dcbd6d86",version:327637282},{objectId:"0x20d76f37ad9f2421a9e6afaf3bb204250b1c2241c50e8a955e86a1a48767d06f",version:327637282},{objectId:"0x213ed368233cc7480fcb6336e70c5ae7ee106b2317ba02ccb5d0478e45bcc046",version:327637282},{objectId:"0x22ce1e80937354eba5549fed2937dc6e2b24026d03505bb51a3e4a64aa4142f6",version:327637282},{objectId:"0x26188cb7ce5ae633279f440f66081cb65cc585e428de18e194f8843e866f799f",version:327637282},{objectId:"0x38642f01422480128388d3e2948d3dc1b2680f9914077edb6bd3451ae1c5bcf0",version:327637282},{objectId:"0x3dd85b6424aea1cae9eff6e55456ca783e056226325f1362106eca8b3ed04ca0",version:327637282},{objectId:"0x42f8adc490542369d9c3b95e9f6eb70b2583102900feb7e103072ed49ba7fc3d",version:327637282},{objectId:"0x46b8158c82fa6bda7230d31a127d934c7295a0042083b4900f3096e9191f6f3f",version:327637282},{objectId:"0x6ebac88a8c3f7a4a9fb05ea49d188a1fe8520ae59ee736e0473004d3033512a4",version:327637282},{objectId:"0x6f55ad6cb40cfc124c11b11c19be0a80237b104acd955e7b52ccb7bf9046fe33",version:327637282},{objectId:"0x71aafb8bac986e82e5f78846bf3b36c2a82505585625207324140227a27ff279",version:327637282},{objectId:"0x7fe9b08680d4179de5672f213b863525b21f10604ca161538075e9338d1d2324",version:327637282},{objectId:"0x81538ef2909a3e0dd3d7f38bcbee191509bae4e8666272938ced295672e2ee8d",version:327637282},{objectId:"0x828eb6b3354ad68a23dd792313a16a0d888b7ea4fdb884bb22bd569f8e61319e",version:327637282},{objectId:"0x9705a332b8c1650dd7fe687ef9f9a9638afb51c30c0b34db150d60b920bc07eb",version:327637282},{objectId:"0x9918f73797a9390e9888b55454f2b31bc01de1a4634acab08f80641c4248e8a5",version:327637282},{objectId:"0x9cd4c08bdf2e132ec2cc77b0f03be60a94951e046d8e82ed5494f44e609edd2f",version:327637282},{objectId:"0xac8ce2033571140509788337c8a1f3aa8941a320ecd7047acda310d39cad9e03",version:327637282},{objectId:"0xbcd4527035265461a9a7b4f1e57c63ea7a6bdf0dc223c66033c218d880f928b1",version:327637282},{objectId:"0xbfdb691b8cc0b3c3a3b7a654f6682f3e53b164d9ee00b9582cdb4d0a353440a9",version:327637282},{objectId:"0xc2559d5c52ae04837ddf943a8c2cd53a5a0b512cee615d30d3abe25aa339465e",version:327637282},{objectId:"0xc56db634d02511e66d7ca1254312b71c60d64dc44bf67ea46b922c52d8aebba6",version:327637282},{objectId:"0xc84545cbff1b36b874ab2b69d11a3d108f23562e87550588c0bda335b27101e0",version:327637282},{objectId:"0xcc141659b5885043f9bfcfe470064819ab9ac667953bcedd1000e0652e90ee76",version:327637282},{objectId:"0xef6bf4952968d25d3e79f7e4db1dc38f2e9d99d61ad38f3829acb4100fe6383a",version:327637282},{objectId:"0xf2ed8d00ef829de5c4a3c5adf2d6b0f41f7fec005fb9c88e5616b98173b2fd66",version:327637282},{objectId:"0xfce73f3c32c3f56ddb924a04cabd44dd870b72954bbe7c3d7767c3b8c25c4326",version:327637282}];async function Ge(e){const t=e.client,n=await e.transaction.build({client:t,onlyTransactionKind:!0});let o=e.sender??e.transaction.getData().sender;if(!o)throw new Error("Sender need to be either set in options or in transaction data");return await t.call("shio_estimateFastModeFee",[o,e.transaction.getData().gasData.price,re.from(n).toString("base64")])}function He(){return ee[Math.floor(Math.random()*ee.length)]}async function Ve(e,t,n){return await e.executeTransactionBlock({transactionBlock:t.bytes,signature:t.signature,options:n})}async function ze(e,t,n){let o=e.moveCall({package:"0x2",module:"coin",function:"into_balance",typeArguments:[Le],arguments:[t]});return Ke(e,o,n)}async function Ke(e,t,n){let o=He();e.moveCall({package:qe,module:"auctioneer",function:"submit_bid",arguments:[e.sharedObjectRef({objectId:o.objectId,mutable:!0,initialSharedVersion:o.version}),e.pure.u64(n),t]})}const V="CoinWithBalance",Xe=de({type:le(),balance:fe()});async function Je(e,t,n){var l,c;const o=new Set,r=new Map;if(!e.sender)throw new Error("Sender must be set to resolve CoinWithBalance");for(const s of e.commands)if(s.$kind==="$Intent"&&s.$Intent.name===V){const{type:x,balance:d}=ie(Xe,s.$Intent.data);x!=="gas"&&d>0n&&o.add(x),r.set(x,(r.get(x)??0n)+d)}const i=new Set;for(const s of e.inputs)(l=s.Object)!=null&&l.ImmOrOwnedObject&&i.add(s.Object.ImmOrOwnedObject.objectId),(c=s.UnresolvedObject)!=null&&c.objectId&&i.add(s.UnresolvedObject.objectId);const g=new Map,I=t.client;await Promise.all([...o].map(async s=>{g.set(s,await Qe({coinType:s,balance:r.get(s),client:I,owner:e.sender,usedIds:i}))}));const m=new Map;m.set("gas",{$kind:"GasCoin",GasCoin:!0});for(const[s,x]of e.commands.entries()){if(x.$kind!=="$Intent"||x.$Intent.name!==V)continue;const{type:d,balance:v}=x.$Intent.data;if(v===0n&&d!=="gas"){e.replaceCommand(s,G.MoveCall({target:"0x2::coin::zero",typeArguments:[d]}));continue}const j=[];if(!m.has(d)){const[S,...A]=g.get(d).map(R=>e.addInput("object",Z.ObjectRef({objectId:R.coinObjectId,digest:R.digest,version:R.version})));A.length>0&&j.push(G.MergeCoins(S,A)),m.set(d,S)}j.push(G.SplitCoins(m.get(d),[e.addInput("pure",Z.Pure(ue.u64().serialize(v)))])),e.replaceCommand(s,j),e.mapArguments(S=>S.$kind==="Result"&&S.Result===s?{$kind:"NestedResult",NestedResult:[s+j.length-1,0]}:S)}return n()}async function Qe({coinType:e,balance:t,client:n,owner:o,usedIds:r}){let i=t;const g=[];return I();async function I(m=null){const{data:l,hasNextPage:c,nextCursor:s}=await n.getCoins({owner:o,coinType:e,cursor:m}),x=l.sort((d,v)=>Number(BigInt(v.balance)-BigInt(d.balance)));for(const d of x){if(r.has(d.coinObjectId))continue;const v=BigInt(d.balance);if(g.push(d),i-=v,i<=0)return g}if(c)return I(s);throw new Error(`Not enough coins of type ${e} to satisfy requested balance`)}}function Ze(){const{signTransactionBlock:e}=ne(),{currentAccount:t}=te(),n=async(o,r,i)=>{console.log("ðŸš€ðŸš€ðŸš€ ~ useFastModeTransaction.ts:12 ~ getFastModeTx ~ getFastModeTx:",n);let g,I,m;try{const l=new be({url:Ye});o.setSender(t==null?void 0:t.address),o.setGasPrice(Number(i));const c=ge.from(o);c.addIntentResolver(V,Je);const s=await Ge({transaction:c,client:l}),x=P(r).mul(Math.pow(10,9)).toString();if(P(s.gasBudget).gt(x))throw Error("Max cap reached. This is to prevent your txn from overpaying. You can choose to edit your gas max cap in settings if needed.");o.setGasBudget(s.gasBudget),console.log(s);const d=o.splitCoins(o.gas,[s.tipAmount]);ze(o,d[0],s.tipAmount);const v=await o.build({client:l}),j=await e(v);console.log("ðŸš€ ~ file: useTransaction.tsx:94 ~ useTransaction ~ signTx:",j);const{bytes:S,signature:A}=j;m=S,console.log("ðŸš€ ~ getFastModeTx ~ signTx:",j),I=new Date().getTime(),g=await Ve(l,j,{showEffects:!0,showEvents:!0}),console.log("ðŸš€ ~ getFastModeTx ~ result:",g)}catch(l){throw console.log("ðŸš€ ~ getFastModeTx ~ error:",l),console.log("ðŸš€ ~ getFastModeTx ~ String(error).includes(Failed to fetch):",String(l).includes("Failed to fetch")),String(l).includes("Failed to fetch")?Error("Fast Mode service error"):l}return{result:g,startExecuteTime:I,transactionBlockBytes:m}};return{getFastModeTx:n}}function Pe(){const e=he(),t=me(),n=H.useMemo(()=>{if(!e.currentWallet)return null;const r=e.currentWallet.features["sui:signAndExecuteTransactionBlock"];return r?r.signAndExecuteTransactionBlock:null},[e]);return{getMsafeRes:async(r,i)=>{if(!t||!n)throw new Error("No account information");return r.setSender(t==null?void 0:t.address),await n({transactionBlock:r,account:t,chain:t==null?void 0:t.chains[0],action:i==null?void 0:i.action,txbParams:i==null?void 0:i.txbParams})}}}var z={};Object.defineProperty(z,"__esModule",{value:!0});var et=z.executeAuction=oe,tt=xe,nt="https://rpc.getshio.com",ot=500,st=300;function oe(e,t,n){n===void 0&&(n=ot);var o={jsonrpc:"2.0",method:"shio_executeAuction",params:[e,t],id:1};return new Promise(function(r,i){setTimeout(r,n),tt.default.post(nt,o,{headers:{"Content-Type":"application/json"},timeout:n}).then(function(g){console.log("Shio executeAuction response:",g.data),setTimeout(r,st)}).catch(i)})}z.default={executeAuction:oe};function dt(){const{signTransactionBlock:e,executeTransactionBlock:t,signAndExecuteTransactionBlock:n}=ne(),{currentAccount:o}=te(),r=Te("clmm"),{transactionConfirmation:i,transactionSubmitted:g,transactionSuccess:I,transactionRejected:m,closeTransactionModal:l}=Ue(),{submittedTsToast:c,failedTsToast:s,successTsToast:x,closeToast:d}=we();Se();const{getFastModeTx:v}=Ze(),{getMsafeRes:j}=Pe(),{trackSwap:S}=Ee(),A=5,R=2e3;async function W(u,a=1){console.log("ðŸš€ ~ file: useTransaction.tsx:24 ~ getTransactionStatus ~ Checking transaction status, attempt:",a);try{let f;try{f=await r.FullClient.getTransactionBlock({digest:u,options:{showEvents:!0,showEffects:!0,showBalanceChanges:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0}})}catch{f=await r.FullClient.getTransactionBlock({digest:u,options:{showEvents:!0,showEffects:!0}})}if(console.log("ðŸš€ ~ file: useTransaction.tsx:28 ~ getTransactionStatus ~ response:",f),f)return f;throw new Error("Empty response")}catch(f){if(console.error(`Attempt ${a} failed:`,f),a>=A)throw new Error("Failed to fetch transaction status after maximum retries.");return await pe(R),W(u,a+1)}}const se=async(u,a,{useDevInspect:f=!1,useMev:w=!1,txAction:B="signTransactionBlock",showSuccessModal:ae=!0,useFastMode:y=!1,maxCapForGas:U="",customGasPrice:L="",msafeParams:C,otherParams:F}={})=>{var K,X,J,Q;console.log("ðŸš€ ~ useTransaction ~ msafeParams:",C),console.log("ðŸš€ ~ useTransaction ~ otherParams:",F),console.log("ðŸš€ ~ file: useTransaction.tsx:76 ~ useTransaction ~ option:",{useDevInspect:f,useMev:w,txAction:B,tx:u,toastType:a,useFastMode:y,maxCapForGas:U,customGasPrice:L,msafeParams:C});const N=a.transactionId?a.transactionId:new Date().getTime().toString();a.transactionId=N,i(a);const Y=(C==null?void 0:C.action)==="AggregatorSwap";let p="";try{let b,M,O;typeof u=="function"?O=await u():O=u,O.setSender(o==null?void 0:o.address);let _;if(y&&U&&L){console.log("ðŸš€ðŸš€ðŸš€ ~ useTransaction.tsx:135 ~ useTransaction ~ res:");const T=await v(O,U,L);b=T.result,_=T.startExecuteTime,M=T.transactionBlockBytes}else if((K=Ie)!=null&&K.inMSafeWallet())if(C)b=await j(O,C);else throw Error("The current operation does not support msafe wallet");else if(B==="signTransactionBlock"){const T=await e(O);_=new Date().getTime(),console.log("ðŸš€ ~ file: useTransaction.tsx:94 ~ useTransaction ~ signTx:",T);const{bytes:E,signature:k}=T;if(M=T.bytes,w)try{const $=await et(E,k,500);console.log("ðŸš€ ~ file: useTransaction.tsx:92 ~ useTransaction ~ shioRes: success",$)}catch($){console.log("ðŸš€ ~ file: useTransaction.tsx:95 ~ useTransaction ~ shioRes : error:",$)}console.log("ðŸš€ ~ useTransaction ~ useMev:",w),b=await t(E,k,f),console.log("ðŸš€ ~ useTransaction ~ response:",b)}else b=await n(O,f);if(p=b==null?void 0:b.digest,console.log("ðŸš€ ~ file: useTransaction.tsx:24 ~ signAndExecuteTransaction ~ response:",b),!p&&M){const T=je(M);p=ve.getDigestFromBytes(T)}a.tx=p,g(a),a.isSwapWidget||c(a),d(N);let h;if(((X=b==null?void 0:b.effects)==null?void 0:X.status.status)==="success"?h=b:(console.log("ðŸš€ðŸš€ðŸš€ ~ useTransaction.tsx:191 ~ useTransaction ~ digest:",p),h=await W(p,0)),!h||((J=h.effects)==null?void 0:J.status.status)==="failure"){const T=D(a,(Q=h.effects)==null?void 0:Q.status.error);Y&&S({...F,useMev:w,useFastMode:y},T,p)}else{if(_){const E=new Date().getTime(),k=(h==null?void 0:h.timestampMs)||0,q=(k&&Number(k)>_?Math.min(E,Number(k)):E)-_;console.log("ðŸš€ ~ useTransaction ~ executeTime:",q),q<1e3&&(a.executeTime=q)}const T=Ce(h,o==null?void 0:o.address,!1);if(console.log("ðŸš€ðŸš€ðŸš€ ~ useTransaction.tsx:165 ~ useTransaction ~ res:",h),console.log("ðŸš€ ~ file: useTransaction.tsx:48 ~ signAndExecuteTransaction ~ balanceChanges:",T),a.getShowInfo){const E=a.getShowInfo("success",T,h);a.getShowInfo=k=>E}if(ae?I(a):l(),a.isSwapWidget||(a.transactionId=void 0,x(a)),h&&!h.digest&&p&&(h.digest=p),C)try{Be(C.action,y||w,p)}catch(E){console.log("ðŸš€ ~ useTransaction ~ trackShioEvent error:",E)}return Y&&S({...F,useMev:w,useFastMode:y},"",p),h}}catch(b){console.log("ðŸš€ðŸš€ðŸš€ ~ useTransaction.tsx:253 ~ useTransaction ~ error:",b),N&&d(N);const M=D(a,b);Y&&S({...F,useMev:w,useFastMode:y},M,p)}},D=(u,a)=>{const f=De(a);if(console.error("ðŸš€ ~ file: useTransaction.tsx:270 ~ handleError ~ error:",{error:a,errorString:f}),u.getShowInfo){const w=u.getShowInfo("rejected");u.getShowInfo=B=>(w.toastDescriptionContent=f,w.modalDescriptionText=f,w),m(u),u.isSwapWidget||s(u)}else u.getShowInfo=w=>{const B={};return B.toastDescriptionContent=f,B.modalDescriptionText=f,B},m(u),u.isSwapWidget||s(u);return f};return{signAndExecuteTransaction:se,transactionSuccess:I,getTransactionStatus:W,transactionConfirmation:i,transactionRejected:m,handleError:D}}export{Ue as a,dt as u};
//# sourceMappingURL=useTransaction-B4tl6mtG.js.map
