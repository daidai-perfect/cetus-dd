{"version":3,"file":"useVaultList-a-4c-vVC.js","sources":["../../src/components/vaults-v2/list/common/VaultsHoldings.tsx","../../src/hooks/vault-v2/useVaultList.ts"],"sourcesContent":["import useVaultHoadings from '@/hooks/vault-v2/useVaultsHoldings'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Flex, Text } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nfunction VaultsHoldings({ vaultId, category, color = 'text_caption' }: { vaultId: string; category: string; color?: string }) {\n  const { currentAccount } = useAccountStore()\n  const { vaultsPositionObj } = useVaultsPositionStore()\n\n  const currentVaultPosition = useMemo(() => {\n    if (isAvailableObject(vaultsPositionObj)) {\n      return vaultsPositionObj[vaultId]\n    }\n  }, [vaultsPositionObj, vaultId])\n\n  const { holdingAmountDisplay } = useVaultHoadings(\n    currentVaultPosition?.displayAmountA,\n    currentVaultPosition?.displayAmountB,\n    currentVaultPosition?.displayCoinTypeA,\n    currentVaultPosition?.displayCoinTypeB,\n    category\n  )\n\n  return (\n    <Flex justifyContent=\"flex-end\">\n      {/* <Skeleton isLoaded={!!isAvailableObject(vaultsPositionObj)} width=\"80px\" borderRadius=\"4px\"> */}\n      <Text textColor={color} textAlign=\"right\" fontWeight=\"500\">\n        {!currentAccount?.address || !isAvailableObject(vaultsPositionObj) ? '--' : holdingAmountDisplay}\n      </Text>\n      {/* </Skeleton> */}\n    </Flex>\n  )\n}\n\nexport default VaultsHoldings\n","import { vaultsMaps } from '@/constant/vaults'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport { QueryVaultListOptions, SortVaultListOptions } from '@/types/vaultsV2'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Token } from '@cetus/types'\nimport { d, fixCoinType } from '@cetusprotocol/common-sdk'\nimport useGetPythLastPrice from './pyth-price/useGetPythLastPrice'\nimport useGetVaultPoolList from './useGetVaultPoolList'\nexport default function useVaultList() {\n  const { fetchTokenPrices } = useTokenPrice()\n  const { setVaultListLoading, setVaultsTokenList, lpTokenInfoObj, setLpTokenInfoObj, vaultsList, setVaultPageList } = useVaultsListV2Store()\n  const { getVaultPoolList } = useGetVaultPoolList()\n  const { fetchTokenInfo, getTokenListInfo } = useGetToken()\n  const { vaultsPositionObj } = useVaultsPositionStore()\n  const { getPythLastPrice } = useGetPythLastPrice()\n\n  // 列表筛选\n  const filterVaultList = (filterOptions: QueryVaultListOptions, originList = vaultsList, isGetTabNum = false) => {\n    console.log('🚀 ~ filterVaultList ~ originList:', originList)\n    const { currentTab, isYourHoldings, selectCoinList, sortOptions } = filterOptions\n    let filterList: any[] = []\n    let list: any[] = []\n    if (selectCoinList?.length > 0) {\n      list = filterVaultListByCoinList(originList, selectCoinList)\n    } else {\n      list = originList\n    }\n    if (currentTab === 'all') {\n      filterList = list\n    } else {\n      filterList = list.filter(vault => vault.category == currentTab)\n    }\n\n    let result\n    if (isYourHoldings) {\n      result = sortVaultList(sortOptions, filterMyVaultList(filterList))\n    } else {\n      result = sortVaultList(sortOptions, filterList)\n    }\n    if (!isGetTabNum) {\n      setVaultPageList(result)\n      setVaultListLoading(false)\n    }\n    return result\n  }\n\n  // 列表排序\n  const sortVaultList = (options: SortVaultListOptions, vaultList: any[]) => {\n    console.log('🚀 ~ sortVaultList ~ options:', options)\n    const { sortRule, sortType } = options\n\n    const result = vaultList?.sort((a: any, b: any) => {\n      if (sortType === 'apr') {\n        return sortRule === 'desc' ? b.vaultsTotalApy - a.vaultsTotalApy : a.vaultsTotalApy - b.vaultsTotalApy\n      }\n      return sortRule === 'desc' ? b.vaultsTvl - a.vaultsTvl : a.vaultsTvl - b.vaultsTvl\n    })\n    return result\n  }\n\n  // 获取vault列表\n  const fetchVaultList = async (options: QueryVaultListOptions, isLoading = true) => {\n    console.log('🚀 ~ fetchVaultList ~ fetchVaultList:', options)\n    if (isLoading) {\n      setVaultListLoading(true)\n    }\n    const list = await getVaultPoolList()\n    console.log('🚀🚀🚀 ~ useVaultList.ts:59 ~ fetchVaultList ~ list:', list)\n    // 获取可筛选token列表\n    getVaultsTokenList(list)\n    // 获取vaultLP Token信息\n    getVaultsLpTokenList(list)\n    const result = filterVaultList(options, JSON.parse(JSON.stringify(list)))\n    console.log('🚀 ~ fetchVaultList ~ result:', result)\n    setVaultListLoading(false)\n    setVaultPageList(result)\n    return list\n  }\n\n  // 列表筛选用\n  const getVaultsTokenList = async (list: any) => {\n    if (!list || list.length === 0) return\n    const tokenList: any[] = []\n    const haedalTokenList: any[] = []\n    for (let i = 0; i < list.length; i++) {\n      if (!tokenList.includes(list[i].displayTokenA.coin_type)) {\n        tokenList.push(list[i].displayTokenA.coin_type)\n      }\n      if (!tokenList.includes(list[i].displayTokenB.coin_type)) {\n        tokenList.push(list[i].displayTokenB.coin_type)\n      }\n      if (list[i].category == 'haedal' && !haedalTokenList.includes(fixCoinType(list[i].displayTokenA.coin_type))) {\n        haedalTokenList.push(fixCoinType(list[i].displayTokenA.coin_type, false))\n      }\n      if (list[i].category == 'haedal' && !haedalTokenList.includes(fixCoinType(list[i].displayTokenB.coin_type))) {\n        haedalTokenList.push(fixCoinType(list[i].displayTokenB.coin_type, false))\n      }\n      console.log('🚀🚀🚀 ~ useVaultList.ts:96 ~ getVaultsTokenList ~ haedalTokenList:', haedalTokenList)\n    }\n    getPythLastPrice(haedalTokenList)\n    if (tokenList.length > 0) {\n      fetchTokenPrices(tokenList)\n    }\n\n    const tokenInfos: any = await getTokenListInfo(tokenList)\n\n    const result = Array.from(tokenInfos.values())\n    setVaultsTokenList(result)\n  }\n\n  // LP Token信息\n  const getVaultsLpTokenList = async (list: any[]) => {\n    const lpTokenInfoObj: Record<string, Token | undefined> = {}\n    for (let i = 0; i < list.length; i++) {\n      const vault = list[i]\n      const lpTokenType = vault?.lpTokenType\n      lpTokenInfoObj[lpTokenType] =\n        vault.category === 'cetus' ? vaultsMaps[vault.clmmPoolAddress]?.lpToken : ((await fetchTokenInfo(lpTokenType)) as Token)\n    }\n    setLpTokenInfoObj(lpTokenInfoObj)\n  }\n\n  // 通过tokenA tokenB 筛选列表\n  const filterVaultListByCoinList = (listOrigin: any[], selectCoinList: any[]) => {\n    const firstTokenAddress = selectCoinList[0]?.coin_type ? fixCoinType(selectCoinList[0]?.coin_type) : undefined\n    const lastTokenAddress = selectCoinList[1]?.coin_type ? fixCoinType(selectCoinList[1]?.coin_type) : undefined\n    const filterArr = listOrigin?.filter((filterItem: any) => {\n      if (firstTokenAddress && lastTokenAddress) {\n        return (\n          (fixCoinType(filterItem.displayTokenA.coin_type) == firstTokenAddress &&\n            fixCoinType(filterItem.displayTokenB.coin_type) == lastTokenAddress) ||\n          (fixCoinType(filterItem.displayTokenA.coin_type) == lastTokenAddress &&\n            fixCoinType(filterItem.displayTokenB.coin_type) == firstTokenAddress)\n        )\n      } else if (firstTokenAddress) {\n        return (\n          fixCoinType(filterItem.displayTokenA.coin_type) == firstTokenAddress || fixCoinType(filterItem.displayTokenB.coin_type) == firstTokenAddress\n        )\n      } else {\n        return filterItem\n      }\n    })\n    return filterArr\n  }\n\n  // 筛选我的质押的vault\n  const filterMyVaultList = (list: any[]) => {\n    return list.filter(info => {\n      const vaultBalance = vaultsPositionObj[info.vaultId]\n      if (vaultBalance && d(vaultBalance.balance).gt(0)) {\n        return true\n      }\n      return false\n    })\n  }\n\n  // 获取tab数量\n  const getCurrentTabNum = (filterOptions: QueryVaultListOptions) => {\n    let list = filterVaultList(filterOptions, vaultsList, true)\n    return String((list && list.length) || '')\n  }\n\n  return {\n    getVaultsLpTokenList,\n    getVaultsTokenList,\n    filterVaultList,\n    sortVaultList,\n    fetchVaultList,\n    getCurrentTabNum\n  }\n}\n"],"names":["VaultsHoldings","vaultId","category","color","currentAccount","useAccountStore","vaultsPositionObj","useVaultsPositionStore","currentVaultPosition","useMemo","isAvailableObject","holdingAmountDisplay","useVaultHoadings","jsx","Flex","Text","useVaultList","fetchTokenPrices","useTokenPrice","setVaultListLoading","setVaultsTokenList","lpTokenInfoObj","setLpTokenInfoObj","vaultsList","setVaultPageList","useVaultsListV2Store","getVaultPoolList","useGetVaultPoolList","fetchTokenInfo","getTokenListInfo","useGetToken","getPythLastPrice","useGetPythLastPrice","filterVaultList","filterOptions","originList","isGetTabNum","currentTab","isYourHoldings","selectCoinList","sortOptions","filterList","list","filterVaultListByCoinList","vault","result","sortVaultList","filterMyVaultList","options","vaultList","sortRule","sortType","a","b","fetchVaultList","isLoading","getVaultsTokenList","getVaultsLpTokenList","tokenList","haedalTokenList","i","fixCoinType","tokenInfos","lpTokenType","_a","vaultsMaps","listOrigin","firstTokenAddress","_b","lastTokenAddress","_c","_d","filterItem","info","vaultBalance","d"],"mappings":"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"}