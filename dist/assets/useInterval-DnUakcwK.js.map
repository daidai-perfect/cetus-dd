{"version":3,"file":"useInterval-DnUakcwK.js","sources":["../../../hooks/src/useInterval.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react'\n\ntype IntervalHookOptions = {\n  interval: number\n  callback: (timestamp: number) => void\n}\n\nexport function useInterval({ interval, callback }: IntervalHookOptions) {\n  const savedCallback = useRef<(timestamp: number) => void>()\n  const timerIdRef = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  const startTimer = useCallback(() => {\n    // 清除旧的定时器\n    if (timerIdRef.current) {\n      clearInterval(timerIdRef.current)\n    }\n    // 创建新的定时器\n    if (interval > 0) {\n      timerIdRef.current = setInterval(() => {\n        if (savedCallback.current) {\n          savedCallback.current(Date.now())\n        }\n      }, interval)\n    }\n  }, [interval])\n\n  const stopTimer = useCallback(() => {\n    if (timerIdRef.current) {\n      clearInterval(timerIdRef.current)\n      timerIdRef.current = null\n    }\n  }, [])\n\n  useEffect(() => {\n    startTimer()\n    return () => stopTimer()\n  }, [])\n\n  return { startTimer, stopTimer }\n}\n"],"names":["useInterval","interval","callback","savedCallback","useRef","timerIdRef","useEffect","startTimer","useCallback","stopTimer"],"mappings":"yCAOO,SAASA,EAAY,CAAE,SAAAC,EAAU,SAAAC,GAAiC,CACvE,MAAMC,EAAgBC,EAAAA,OAAoC,EACpDC,EAAaD,SAA8B,IAAI,EAErDE,EAAAA,UAAU,IAAM,CACdH,EAAc,QAAUD,CAAA,EACvB,CAACA,CAAQ,CAAC,EAEP,MAAAK,EAAaC,EAAAA,YAAY,IAAM,CAE/BH,EAAW,SACb,cAAcA,EAAW,OAAO,EAG9BJ,EAAW,IACFI,EAAA,QAAU,YAAY,IAAM,CACjCF,EAAc,SACFA,EAAA,QAAQ,KAAK,KAAK,GAEjCF,CAAQ,EACb,EACC,CAACA,CAAQ,CAAC,EAEPQ,EAAYD,EAAAA,YAAY,IAAM,CAC9BH,EAAW,UACb,cAAcA,EAAW,OAAO,EAChCA,EAAW,QAAU,KAEzB,EAAG,EAAE,EAELC,OAAAA,EAAAA,UAAU,KACGC,EAAA,EACJ,IAAME,EAAU,GACtB,EAAE,EAEE,CAAE,WAAAF,EAAY,UAAAE,CAAU,CACjC"}