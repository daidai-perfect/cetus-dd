{"version":3,"file":"index-Bar0vT9M.js","sources":["../../src/store/liquidity/index.ts"],"sourcesContent":["import { PoolApiInfo, PoolContractInfo } from '@/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface LiquidityState {\n  netError: boolean\n  setNetError: (value: boolean) => void\n  contractPoolInfo: PoolContractInfo | null\n  setContractPoolInfo: (data: PoolContractInfo | null) => void\n  contractPoolInfoLoading: boolean\n  setContractPoolInfoLoading: (value: boolean) => void\n  apiPoolInfo: PoolApiInfo | null\n  setApiPoolInfo: (data: PoolApiInfo | null) => void\n  apiPoolInfoLoading: boolean\n  setApiPoolInfoLoading: (value: boolean) => void\n  currentPriceData: any\n  setCurrentPriceData: (data: any) => void\n  minPriceForDate: string\n  maxPriceForDate: string\n  setMinPriceForDate: (value: string) => void\n  setMaxPriceForDate: (value: string) => void\n  currentRange: string\n  setCurrentRange: (value: string) => void\n  manualRefresh: boolean\n  setManualRefresh: (value: boolean) => void\n  resetLiquidity: () => void\n}\n\nconst store: StateCreator<LiquidityState> = (set, get) => ({\n  netError: false,\n  setNetError: (value: boolean) => {\n    set(() => ({\n      netError: value\n    }))\n  },\n  contractPoolInfo: null,\n  setContractPoolInfo: (data: PoolContractInfo | null) => {\n    set(() => ({\n      contractPoolInfo: data,\n      contractPoolInfoLoading: false\n    }))\n  },\n  contractPoolInfoLoading: true,\n  setContractPoolInfoLoading: (value: boolean) => {\n    set(() => ({\n      contractPoolInfoLoading: value\n    }))\n  },\n  apiPoolInfo: null,\n  setApiPoolInfo: (data: PoolApiInfo | null) => {\n    set(() => ({\n      apiPoolInfo: data,\n      apiPoolInfoLoading: false\n    }))\n  },\n  apiPoolInfoLoading: true,\n  setApiPoolInfoLoading: (value: boolean) => {\n    set(() => ({\n      apiPoolInfoLoading: value\n    }))\n  },\n  currentPriceData: {},\n  setCurrentPriceData: (data: any) => {\n    set(() => ({\n      currentPriceData: data\n    }))\n  },\n  minPriceForDate: '',\n  maxPriceForDate: '',\n  setMinPriceForDate: (value: string) => {\n    set(() => ({\n      minPriceForDate: value\n    }))\n  },\n  setMaxPriceForDate: (value: string) => {\n    set(() => ({\n      maxPriceForDate: value\n    }))\n  },\n  currentRange: '',\n  setCurrentRange: (value: string) => {\n    set(() => ({\n      currentRange: value\n    }))\n  },\n  manualRefresh: false,\n  setManualRefresh: (value: boolean) => {\n    set(() => ({\n      manualRefresh: value\n    }))\n  },\n  resetLiquidity: () => {\n    set(() => ({\n      contractPoolInfo: null,\n      apiPoolInfo: null,\n      currentPriceData: {},\n      minPriceForDate: '',\n      maxPriceForDate: '',\n      currentRange: '',\n      manualRefresh: false\n    }))\n  }\n})\n\nconst useLiquidityStore = create(store)\nexport default useLiquidityStore\n"],"names":["store","set","get","value","data","useLiquidityStore","create"],"mappings":"wCA2BA,MAAMA,EAAsC,CAACC,EAAKC,KAAS,CACzD,SAAU,GACV,YAAcC,GAAmB,CAC/BF,EAAI,KAAO,CACT,SAAUE,CAAA,EACV,CACJ,EACA,iBAAkB,KAClB,oBAAsBC,GAAkC,CACtDH,EAAI,KAAO,CACT,iBAAkBG,EAClB,wBAAyB,EAAA,EACzB,CACJ,EACA,wBAAyB,GACzB,2BAA6BD,GAAmB,CAC9CF,EAAI,KAAO,CACT,wBAAyBE,CAAA,EACzB,CACJ,EACA,YAAa,KACb,eAAiBC,GAA6B,CAC5CH,EAAI,KAAO,CACT,YAAaG,EACb,mBAAoB,EAAA,EACpB,CACJ,EACA,mBAAoB,GACpB,sBAAwBD,GAAmB,CACzCF,EAAI,KAAO,CACT,mBAAoBE,CAAA,EACpB,CACJ,EACA,iBAAkB,CAAC,EACnB,oBAAsBC,GAAc,CAClCH,EAAI,KAAO,CACT,iBAAkBG,CAAA,EAClB,CACJ,EACA,gBAAiB,GACjB,gBAAiB,GACjB,mBAAqBD,GAAkB,CACrCF,EAAI,KAAO,CACT,gBAAiBE,CAAA,EACjB,CACJ,EACA,mBAAqBA,GAAkB,CACrCF,EAAI,KAAO,CACT,gBAAiBE,CAAA,EACjB,CACJ,EACA,aAAc,GACd,gBAAkBA,GAAkB,CAClCF,EAAI,KAAO,CACT,aAAcE,CAAA,EACd,CACJ,EACA,cAAe,GACf,iBAAmBA,GAAmB,CACpCF,EAAI,KAAO,CACT,cAAeE,CAAA,EACf,CACJ,EACA,eAAgB,IAAM,CACpBF,EAAI,KAAO,CACT,iBAAkB,KAClB,YAAa,KACb,iBAAkB,CAAC,EACnB,gBAAiB,GACjB,gBAAiB,GACjB,aAAc,GACd,cAAe,EAAA,EACf,CAAA,CAEN,GAEMI,EAAoBC,EAAON,CAAK"}