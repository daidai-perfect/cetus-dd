{"version":3,"file":"useRpcListener-C4BP2Br3.js","sources":["../../../hooks/src/useRpcListener.ts"],"sourcesContent":["import useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport useRpcConfigStore from '@cetus/stores/src/useRpcConfigStore'\nimport { RpcNode } from '@cetus/types'\nimport { useEffect, useRef } from 'react'\nimport { usePreviousValue } from './usePreviousValue'\n\ntype UseRpcListenerProps = {\n  onRpcChange: () => void\n}\n\nexport function useRpcListener({ onRpcChange }: UseRpcListenerProps) {\n  const { isInitLoading } = useClmmSDKStore()\n  const { currentNode } = useRpcConfigStore()\n  const preNode = usePreviousValue<RpcNode>(currentNode)\n  const hasChangeRef = useRef<boolean>(false)\n\n  useEffect(() => {\n    if (preNode && currentNode && preNode.link !== currentNode?.link) {\n      hasChangeRef.current = true\n    }\n  }, [preNode?.link, currentNode?.link, isInitLoading])\n\n  useEffect(() => {\n    if (hasChangeRef.current && !isInitLoading) {\n      onRpcChange()\n      hasChangeRef.current = false\n    }\n  }, [isInitLoading, hasChangeRef.current])\n}\n"],"names":["useRpcListener","onRpcChange","isInitLoading","useClmmSDKStore","currentNode","useRpcConfigStore","preNode","usePreviousValue","hasChangeRef","useRef","useEffect"],"mappings":"uIAUgB,SAAAA,EAAe,CAAE,YAAAC,GAAoC,CAC7D,KAAA,CAAE,cAAAC,CAAc,EAAIC,EAAgB,EACpC,CAAE,YAAAC,CAAY,EAAIC,EAAkB,EACpCC,EAAUC,EAA0BH,CAAW,EAC/CI,EAAeC,SAAgB,EAAK,EAE1CC,EAAAA,UAAU,IAAM,CACVJ,GAAWF,GAAeE,EAAQ,QAASF,GAAA,YAAAA,EAAa,QAC1DI,EAAa,QAAU,GACzB,EACC,CAACF,GAAA,YAAAA,EAAS,KAAMF,GAAA,YAAAA,EAAa,KAAMF,CAAa,CAAC,EAEpDQ,EAAAA,UAAU,IAAM,CACVF,EAAa,SAAW,CAACN,IACfD,EAAA,EACZO,EAAa,QAAU,GAExB,EAAA,CAACN,EAAeM,EAAa,OAAO,CAAC,CAC1C"}