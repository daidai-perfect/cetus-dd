{"version":3,"file":"useXCetusHelper-D5-Z9PzN.js","sources":["../../src/hooks/xcetus/useXCetusHelper.ts"],"sourcesContent":["import useXCetusStore from '@/store/xcetus/useXCetus'\nimport { XCetusRewardInfo } from '@/types/xcetus'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/cetus-burn-sdk'\nimport { DividendReward, PhaseDividendInfo, VeNFT, XCetusUtil } from '@cetusprotocol/cetus-periphery-sdk'\nimport { buildNFT, extractStructTagFromType, fromDecimalsAmount, getMoveObjectType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport CetusXcetusSDK, { DividendManager, LockCetus } from '@cetusprotocol/cetus-xcetus-sdk'\nimport { useDebounceEffect } from 'ahooks'\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n *  获取我的xcetus 订单\n * @returns\n */\nexport function useGetOwnerLockCetusList() {\n  const { xCetusSdk } = usePeripherySDKStore()\n  const { currentAccount } = useAccountStore()\n\n  const addressRef = useRef(currentAccount?.address)\n\n  useEffect(() => {\n    addressRef.current = currentAccount?.address\n  }, [currentAccount?.address])\n\n  const { setLockCetusListLoading, clearData, setLockCetusList } = useXCetusStore()\n\n  const fetchOwnerLockCetusList = async (address = currentAccount?.address) => {\n    if (!address) {\n      setLockCetusListLoading(false)\n      clearData()\n      return\n    }\n    try {\n      setLockCetusListLoading(true)\n      const lockList = await xCetusSdk.XCetusModule.getOwnerRedeemLockList(address)\n      console.log('🚀 ~ fetchOwnerLockCetusList ~ lockList:', lockList, address)\n      if (address === addressRef.current) {\n        lockList.sort((a, b) => a.locked_until_time - b.locked_until_time)\n        setLockCetusList(lockList)\n      }\n    } catch (error) {\n      console.log('🚀 ~ fetchOwnerLockCetusList ~ error:', error)\n    } finally {\n      setLockCetusListLoading(false)\n    }\n  }\n\n  return {\n    fetchOwnerLockCetusList\n  }\n}\n\n/**\n *  获取用户的分红信息\n */\nexport function useGetVeNFTDividendInfo() {\n  const { xCetusSdk } = usePeripherySDKStore()\n\n  const { setDividendRewardList } = useXCetusStore()\n\n  const fetchVeNFTDividendInfo = async (veNftId: string) => {\n    try {\n      const dividendInfo = await xCetusSdk.XCetusModule.getVeNFTDividendInfo(veNftId)\n      console.log('🚀 ~ file: useXCetusHelper.ts:62 ~ fetchVeNFTDividendInfo ~ dividendInfo:', dividendInfo)\n\n      if (dividendInfo) {\n        setDividendRewardList(dividendInfo.rewards)\n      }\n    } catch (error) {\n      console.log('🚀 ~ fetchVeNFTDividendInfo ~ error:', error, veNftId)\n    }\n  }\n\n  return { fetchVeNFTDividendInfo }\n}\n\nexport function useGetOwnerVeNFT() {\n  const { xCetusSdk } = usePeripherySDKStore()\n  const { currentAccount } = useAccountStore()\n\n  const { setVeNFTLoading, clearData, setVeNFT } = useXCetusStore()\n\n  const fetchOwnerVeNFT = async (address = currentAccount?.address, forceRefresh?: boolean) => {\n    if (!address) {\n      setVeNFTLoading(false)\n      clearData()\n      return\n    }\n\n    setVeNFTLoading(true)\n\n    try {\n      const veNFT = await xCetusSdk.XCetusModule.getOwnerVeNFT(address, forceRefresh)\n      console.log('🚀 ~ fetchOwnerVeNFT ~ veNFT:', veNFT)\n      if (veNFT) {\n        setVeNFT(veNFT, address)\n        return veNFT\n      }\n    } catch (error) {\n      console.log('🚀 ~ fetchOwnerVeNFT ~ error:', error)\n    } finally {\n      setVeNFTLoading(false)\n    }\n  }\n\n  return { fetchOwnerVeNFT }\n}\n\n/**\n * 获取当前期数和下一期开始时间\n */\nexport function useGetCurrPeriod() {\n  const { dividendManager } = useXCetusStore()\n  const [currentPeriod, setCurrentPeriod] = useState<number | undefined>()\n  const [nextStartTime, setNextStartTime] = useState<number | undefined>()\n\n  const calculateCurrPeriod = (dividendManager: DividendManager) => {\n    const currentTime = Date.now() / 1000\n    const { start_time, interval_day } = dividendManager\n\n    const nextStartTime = Number(XCetusUtil.getNextStartTime(dividendManager).toString())\n\n    const currentPeriod =\n      envConfigs.env == 'testnet'\n        ? Math.ceil((currentTime - start_time) / (interval_day * 60))\n        : Math.ceil((currentTime - start_time) / (interval_day * 24 * 3600))\n\n    setCurrentPeriod(currentPeriod)\n    setNextStartTime(nextStartTime)\n  }\n\n  useEffect(() => {\n    if (dividendManager) {\n      calculateCurrPeriod(dividendManager)\n    }\n  }, [dividendManager])\n\n  return {\n    currentPeriod,\n    nextStartTime,\n    calculateCurrPeriod\n  }\n}\n\n/**\n * 计算APR\n */\nexport function useGetXCetusApr(phaseDividendInfo?: PhaseDividendInfo, treasury?: string) {\n  const { fetchTokenInfo } = useGetToken()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { coinPriceObj } = useTokenPriceStore()\n  const [cetusApr, setCetusApr] = useState<string>('0')\n  const calculateAPR = useCallback(async () => {\n    if (!phaseDividendInfo || !treasury) return\n\n    try {\n      const bonusList = phaseDividendInfo.bonus\n      const coinTypeList = bonusList.map(bonus => fixCoinType(bonus.name, false))\n      const tokenMap = await fetchTokenInfo<string[]>(coinTypeList)\n      // 并行获取所有代币信息和金额价值\n      const totalBonusAmountValue = bonusList\n        .map(bonus => {\n          const coinType = fixCoinType(bonus.name, false)\n          const coinInfo = tokenMap?.get(coinType)\n          if (coinInfo) {\n            const amount = fromDecimalsAmount(bonus.value, coinInfo.decimals).toString()\n            const value = getTokenAmountValue(coinType, amount)\n            // console.log('🚀 ---------------------------------------------------------------🚀')\n            // console.log('🚀 ~ file: useXCetusHelper.ts:158 ~ calculateAPR ~ value:', value, coinType)\n            // console.log('🚀 ---------------------------------------------------------------🚀')\n            return value\n          }\n          return '0'\n        })\n        .reduce((acc, value) => acc.add(value), d(0)) // 汇总价值\n      // 获取 Cetus 的总价值\n      const cetusValue = getTokenAmountValue(envConfigs.cetus_coin.coin_type, fromDecimalsAmount(treasury, 9).toString())\n\n      // 计算 APR\n      const apr = d(cetusValue).gt(0) ? totalBonusAmountValue.div(7).mul(365).div(cetusValue).mul(100).toFixed(2) : '0'\n\n      setCetusApr(Number(apr) > 0 && Number(apr) < 0.01 ? '0.01' : apr.toString())\n    } catch (error) {\n      console.error('Error calculating APR:', error)\n      setCetusApr('0.01') // 处理错误时设置默认值\n    }\n  }, [phaseDividendInfo?.bonus, treasury, coinPriceObj])\n\n  useDebounceEffect(() => {\n    calculateAPR()\n  }, [phaseDividendInfo?.bonus, treasury, coinPriceObj])\n\n  return { cetusApr }\n}\n\n/**\n * 获取用户的奖励信息\n */\nexport function useGetUserRewards(currentPeriod?: number) {\n  const { dividendRewardList } = useXCetusStore()\n  const { fetchTokenInfo } = useGetToken()\n  const { getTokenAmountValue } = useTokenPrice()\n  const [summaryRewardList, setSummaryRewardList] = useState<XCetusRewardInfo[]>([])\n  const [rewardList, setRewardList] = useState<DividendReward[]>([])\n  const [totalRewardValue, setTotalRewardValue] = useState<string>('0')\n\n  const calculateRewards = useCallback(async () => {\n    let totalValue = d(0)\n\n    // 过滤掉奖励全为0的 和  当期的奖励\n    const filteredList = dividendRewardList.filter(item => {\n      if (item.period === currentPeriod) {\n        return false\n      }\n      if (item.rewards.find(reward => d(reward.amount).eq(0))) {\n        return false\n      }\n      return true\n    })\n\n    console.log('🚀 ~ file: useXCetusHelper.ts:107 ~ calculateRewards ~ filteredList:', {\n      filteredList,\n      dividendRewardList,\n      currentPeriod\n    })\n\n    setRewardList(filteredList)\n\n    const rewardMap: Record<string, XCetusRewardInfo> = {}\n    const coinTypeList = filteredList.flatMap(item => item.rewards.map(reward => fixCoinType(reward.coin_type, false)))\n    const tokenMap = await fetchTokenInfo<string[]>(coinTypeList)\n\n    filteredList.forEach(item => {\n      for (const reward of item.rewards) {\n        const coinType = fixCoinType(reward.coin_type, false)\n        const coinInfo = tokenMap?.get(coinType)\n        if (coinInfo) {\n          const amount = fromDecimalsAmount(reward.amount, coinInfo.decimals).toString()\n\n          const amountValue = getTokenAmountValue(coinType, amount)\n          // console.log('🚀 -------------------------------------------------------------------------------🚀')\n          // console.log('🚀 ~ file: useXCetusHelper.ts:213 ~ calculateRewards ~ amountValue:', amountValue, coinType)\n          // console.log('🚀 -------------------------------------------------------------------------------🚀')\n\n          totalValue = totalValue.add(amountValue)\n\n          // 更新 rewardMap\n          rewardMap[coinType] = rewardMap[coinType]\n            ? {\n                ...rewardMap[coinType],\n                amount: d(rewardMap[coinType].amount).add(amount).toString(),\n                value: d(rewardMap[coinType].value).add(amountValue).toString()\n              }\n            : {\n                amount,\n                coin_type: coinType,\n                value: amountValue\n              }\n        }\n      }\n    })\n    setSummaryRewardList(\n      Object.values(rewardMap)\n        .filter(item => d(item.amount).gt(0))\n        .sort((a, b) => d(b.value).sub(a.value).toNumber())\n    )\n    setTotalRewardValue(totalValue.toString())\n  }, [dividendRewardList, getTokenAmountValue, currentPeriod])\n\n  useEffect(() => {\n    if (currentPeriod) {\n      calculateRewards()\n    }\n  }, [dividendRewardList, currentPeriod])\n\n  return {\n    summaryRewardList,\n    rewardList,\n    totalRewardValue\n  }\n}\n\nexport const XCetusVeNFTType = `${envConfigs.xcetus_sdk_options.xcetus.package_id}::xcetus::VeNFT`\nexport const XCetusLockCetusType = `${envConfigs.xcetus_sdk_options.xcetus.package_id}::lock_coin::LockedCoin<${envConfigs.cetus_coin.coin_type}>`\n\nexport function buildVeNFT(dataList: any[]) {\n  let veNFT: VeNFT | undefined\n  dataList.forEach(item => {\n    if (item) {\n      const type = extractStructTagFromType(getMoveObjectType(item) as string).source_address\n      if (type === XCetusVeNFTType && item.data && item.data.content) {\n        const { fields } = item.data.content\n\n        veNFT = {\n          ...buildNFT(item),\n          id: fields.id.id,\n          index: fields.index,\n          type,\n          xcetus_balance: fields.xcetus_balance\n        }\n        return veNFT\n      }\n    }\n  })\n  return veNFT\n}\n\nexport async function buildLockCetus(dataList: any[], xCetusSdk: CetusXcetusSDK) {\n  const lockCetusList: LockCetus[] = []\n  for (let i = 0; i < dataList.length; i++) {\n    const item = dataList[i]\n    if (item) {\n      const type = extractStructTagFromType(getMoveObjectType(item) as string).source_address\n      if (type === XCetusLockCetusType && item.data) {\n        const lockCetus = XCetusUtil.buildLockCetus(item.data.content)\n        lockCetus.xcetus_amount = await xCetusSdk.XCetusModule.getXCetusAmount(lockCetus.id)\n        lockCetusList.push(lockCetus)\n      }\n    }\n  }\n  return lockCetusList\n}\n"],"names":["useGetOwnerLockCetusList","xCetusSdk","usePeripherySDKStore","currentAccount","useAccountStore","addressRef","useRef","useEffect","setLockCetusListLoading","clearData","setLockCetusList","useXCetusStore","address","lockList","a","b","error","useGetVeNFTDividendInfo","setDividendRewardList","veNftId","dividendInfo","useGetOwnerVeNFT","setVeNFTLoading","setVeNFT","forceRefresh","veNFT","useGetCurrPeriod","dividendManager","currentPeriod","setCurrentPeriod","useState","nextStartTime","setNextStartTime","calculateCurrPeriod","currentTime","start_time","interval_day","XCetusUtil","envConfigs","useGetXCetusApr","phaseDividendInfo","treasury","fetchTokenInfo","useGetToken","getTokenAmountValue","useTokenPrice","coinPriceObj","useTokenPriceStore","cetusApr","setCetusApr","calculateAPR","useCallback","bonusList","coinTypeList","bonus","fixCoinType","tokenMap","totalBonusAmountValue","coinType","coinInfo","amount","fromDecimalsAmount","acc","value","d","cetusValue","apr","useDebounceEffect","useGetUserRewards","dividendRewardList","summaryRewardList","setSummaryRewardList","rewardList","setRewardList","totalRewardValue","setTotalRewardValue","calculateRewards","totalValue","filteredList","item","reward","rewardMap","amountValue","XCetusVeNFTType","XCetusLockCetusType","buildVeNFT","dataList","type","extractStructTagFromType","getMoveObjectType","fields","buildNFT","buildLockCetus","lockCetusList","i","lockCetus"],"mappings":"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"}