{"version":3,"file":"Liquidity-Dd69v7C9.js","sources":["../../src/components/liquidity/recentTransactions/type.ts","../../src/hooks/liquidity/useTransactionHistory.ts","../../src/hooks/liquidity/useRecentTransactions.ts","../../src/components/liquidity/recentTransactions/components.tsx","../../src/components/liquidity/recentTransactions/index.tsx","../../src/hooks/liquidity/useAnalyticChart.ts","../../src/components/liquidity/analytics/AnalyticsCharts.tsx","../../src/store/liquidity/liquidityTvl.ts","../../src/hooks/liquidity/useBurnedLiquidity.ts","../../src/components/liquidity/analytics/BurnedLiquidity.tsx","../../src/hooks/liquidity/usePoolInfo.ts","../../src/components/liquidity/analytics/PoolInfo.tsx","../../src/components/liquidity/analytics/PoolsAnalytics.tsx","../../src/hooks/liquidity/useMyPositions.ts","../../src/components/liquidity/MyPositions.tsx","../../src/components/liquidity/PoolsStats.tsx","../../src/components/liquidity/AddLiquidityConfirmModal.tsx","../../src/hooks/liquidity/useAddLiquidity.ts","../../src/hooks/liquidity/useAddLiquidityButton.ts","../../src/hooks/common/useGetLeverage.ts","../../src/hooks/liquidity/useDeposit.ts","../../src/components/liquidity/NFTModal.tsx","../../src/components/liquidity/ControlPriceRange/index.tsx","../../src/components/liquidity/FarmRelated.tsx","../../src/store/liquidity/deposit.ts","../../src/components/liquidity/PriceRangeForDate.tsx","../../src/hooks/liquidity/useRecommendRanges.ts","../../src/components/liquidity/SelectRecommendPriceRange.tsx","../../src/components/vaults/add-liquidity/VaultsBanner.tsx","../../src/components/liquidity/provideLiquidity/common.tsx","../../src/components/liquidity/provideLiquidity/H5.tsx","../../src/components/liquidity/DivisionBlock.tsx","../../src/components/liquidity/provideLiquidity/PC.tsx","../../src/components/liquidity/provideLiquidity/index.tsx","../../src/hooks/liquidity/useGetTvlInfo.ts","../../src/hooks/liquidity/useGetPriceRange.ts","../../src/hooks/liquidity/useGetRelatedPools.ts","../../src/hooks/liquidity/useGetPoolRelatedInfo.ts","../../src/hooks/liquidity/useLiquidityInteraction.ts","../../src/hooks/liquidity/useLiquidity.ts","../../src/pages/Liquidity.tsx"],"sourcesContent":["export enum EventEnums {\n  add = 'add_liquidity_event',\n  remove = 'remove_liquidity_event',\n  swap = 'swap_event'\n}\nexport type IconProps = {\n  icon: string\n  color: string\n  title: string\n}\n\nexport type Item = {\n  address: string\n  amount: string\n  symbol: string\n  url: string\n}\n\nexport type DataItem = {\n  block_time: string\n  pool: string\n  sender: string\n  tx: string\n  type: EventEnums\n  items: Item[]\n}\n","import { TransactionsHistory } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport { PageQuery } from '@cetusprotocol/cetus-sui-clmm-sdk'\n\nexport type getTransactionsHistoryParams = {\n  limit?: number\n  offset?: number\n  timestamp_ms?: string | number\n  address?: string\n}\n\nfunction useTransactionHistory() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { fetchByApi } = useFetch()\n\n  const getTransactionsHistory = async (params: getTransactionsHistoryParams) => {\n    try {\n      const res = await fetchByApi(TransactionsHistory, 'GET', params)\n      console.log(res, 'getTransactionsHistory')\n      if (res) {\n        return res\n      } else {\n        throw new Error('no data')\n      }\n    } catch (error) {\n      console.error(error, 'getTransactionsHistory ~ error')\n    }\n  }\n\n  const getTransactionsHistoryBySDK = async (poolId: string, paginationArgs: PageQuery) => {\n    try {\n      const res = await clmmSdk.Pool.getPoolTransactionList({\n        poolId,\n        paginationArgs,\n        fullRpcUrl: 'https://rpc-mainnet.suiscan.xyz:443'\n      })\n      console.log(res, 'getTransactionsHistoryBySDK')\n      if (res) {\n        return res\n      } else {\n        throw new Error('no data')\n      }\n    } catch (error) {\n      console.error(error, 'getTransactionsHistoryBySDK ~ error')\n    }\n\n    return undefined\n  }\n\n  return { getTransactionsHistory, getTransactionsHistoryBySDK }\n}\n\nexport default useTransactionHistory\n","import { DataItem, EventEnums } from '@/components/liquidity/recentTransactions/type'\nimport useTransactionHistory from '@/hooks/liquidity/useTransactionHistory'\nimport useLiquidityStore from '@/store/liquidity'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { bnToAmount } from '@cetus/utils'\nimport { PageQuery } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useDebounceEffect } from 'ahooks'\nimport { useEffect, useState } from 'react'\n\nfunction useRecentTransactions() {\n  const pageSize = 10\n\n  const { getTransactionsHistoryBySDK } = useTransactionHistory()\n  const [isLoading, setIsLoading] = useState(true)\n  const [list, setList] = useState<DataItem[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [nextCursor, setNextCursor] = useState<string | undefined>()\n  const [hasNextPage, setHasNextPage] = useState(true)\n  const { apiPoolInfo, manualRefresh, setManualRefresh } = useLiquidityStore()\n  const { poolAddress } = useQueryParams()\n  /**\n   * 根据池子地址初始化第一页数据\n   * Initialize the first page data based on the pool address\n   */\n  useEffect(() => {\n    setList([])\n    setCurrentPage(1)\n    setNextCursor(undefined)\n    setHasNextPage(true)\n  }, [poolAddress])\n\n  /**\n   * 手动刷新，回到第一页，重新请求第一页数据\n   * Manually refresh and request the first page data\n   */\n  useEffect(() => {\n    if (manualRefresh) {\n      setList([])\n      setCurrentPage(1)\n      setNextCursor(undefined)\n      setHasNextPage(true)\n      fetchData({\n        cursor: undefined,\n        limit: pageSize\n      })\n    }\n  }, [poolAddress, manualRefresh])\n\n  const fetchData = async (params: PageQuery) => {\n    try {\n      if (!hasNextPage) return\n      if (poolAddress) {\n        setIsLoading(true)\n        const result: any = await getTransactionsHistoryBySDK(poolAddress, { ...params })\n        if (result) {\n          const _data = result?.data?.map((item: any) => {\n            const _parsedJson = item?.parsedJson\n            const _firstToken = _parsedJson?.amount_a ? apiPoolInfo?.tokenA : _parsedJson?.atob ? apiPoolInfo?.tokenA : apiPoolInfo?.tokenB\n            const _secondToken = _parsedJson?.amount_b ? apiPoolInfo?.tokenB : _parsedJson?.atob ? apiPoolInfo?.tokenB : apiPoolInfo?.tokenA\n            return {\n              ...item,\n              type: item.type?.includes('Add') ? EventEnums.add : item.type?.includes('Remove') ? EventEnums.remove : EventEnums.swap,\n              items: [\n                {\n                  amount: bnToAmount(_parsedJson?.amount_a ? _parsedJson?.amount_a : _parsedJson?.amount_in, _firstToken?.decimals).toString(),\n                  address: _firstToken?.coin_type,\n                  url: _firstToken?.logo_url,\n                  symbol: _firstToken?.symbol\n                },\n                {\n                  amount: bnToAmount(_parsedJson?.amount_b ? _parsedJson?.amount_b : _parsedJson?.amount_out, _secondToken?.decimals).toString(),\n                  address: _secondToken?.coin_type,\n                  url: _secondToken?.logo_url,\n                  symbol: _secondToken?.symbol\n                }\n              ]\n            }\n          })\n          if (params?.cursor) {\n            setList(pre => [...pre, ...(_data || [])])\n          } else {\n            setList(_data || [])\n          }\n\n          setNextCursor(result?.nextCursor)\n          setHasNextPage(result?.hasNextPage)\n          setIsLoading(false)\n        }\n      }\n    } catch (error) {\n      console.log(error, 'getTransactionsHistoryBySDK-error')\n      setIsLoading(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  /**\n   * 监听页码和池子地址变化，重新请求数据\n   * Listen for changes in page number and pool address, and request data again\n   */\n  useDebounceEffect(\n    () => {\n      const params: PageQuery = {\n        cursor: nextCursor,\n        limit: pageSize\n      }\n      fetchData(params)\n    },\n    [currentPage, poolAddress],\n    {\n      wait: 500,\n      leading: true,\n      trailing: false\n    }\n  )\n\n  /**\n   * 切换下一页\n   * Switch to the next page\n   */\n  const onCurrentPageChange = () => {\n    setCurrentPage(pre => pre + 1)\n  }\n\n  return {\n    isLoading,\n    list,\n    apiPoolInfo,\n    currentPage,\n    onCurrentPageChange,\n    hasNextPage\n  }\n}\n\nexport default useRecentTransactions\n","import { AddressUnderline } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { ColumnsType } from '@cetus/ui-kit/src/components/Table'\nimport { addComma, getTimeDifferenceString, textEllipses } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { DataItem, EventEnums, IconProps, Item } from './type'\n\nconst iconMap: Record<EventEnums, IconProps> = {\n  [EventEnums.add]: {\n    icon: '#icon-a-icon_add1',\n    color: 'primary_green',\n    title: 'Add Liquidity'\n  },\n  [EventEnums.remove]: {\n    icon: '#icon-tx_remove',\n    color: 'light_coral',\n    title: 'Remove Liquidity'\n  },\n  [EventEnums.swap]: {\n    icon: '#icon-icon_swap',\n    color: 'primary',\n    title: 'Swap'\n  }\n}\n\nconst Event = ({ type }: { type: EventEnums }) => {\n  return (\n    <HStack>\n      <Icon xlinkHref={iconMap[type]?.icon} svgFill={iconMap[type]?.color} svgHover={iconMap[type]?.color} />\n      <Text color=\"text_caption\">{iconMap[type]?.title}</Text>\n    </HStack>\n  )\n}\n\nconst Amounts = ({ items, type, isReverse }: Pick<DataItem, 'items' | 'type'> & { isReverse: boolean }) => {\n  const { isApp } = useWindowWidth()\n  return items ? (\n    type === EventEnums.swap ? (\n      isApp ? (\n        <VStack align=\"flex-end\" gap=\"8px\">\n          <AmountItem item={items?.[0]} />\n          <HStack justify=\"flex-end\">\n            <Icon xlinkHref=\"#icon-icon_right\" svgFill=\"text_caption\" svgHover=\"text_caption\" />\n            <AmountItem item={items?.[1]} />\n          </HStack>\n        </VStack>\n      ) : (\n        <HStack justify=\"flex-end\" gap=\"8px\">\n          <AmountItem item={items?.[0]} />\n          <Icon xlinkHref=\"#icon-icon_right\" svgFill=\"text_caption\" svgHover=\"text_caption\" />\n          <AmountItem item={items?.[1]} />\n        </HStack>\n      )\n    ) : isApp ? (\n      <VStack align=\"flex-end\" gap=\"8px 16px\" flexDir={isReverse ? 'column-reverse' : 'column'}>\n        {items?.filter(item => !!+item.amount)?.map(item => <AmountItem item={item} key={item?.address} />)}\n      </VStack>\n    ) : (\n      <HStack justify={isReverse ? 'flex-start' : 'flex-end'} gap=\"8px 16px\" flexDir={isReverse ? 'row-reverse' : 'row'}>\n        {items?.filter(item => !!+item.amount)?.map(item => <AmountItem item={item} key={item?.address} />)}\n      </HStack>\n    )\n  ) : null\n}\n\nconst AmountItem = ({ item }: { item: Item }) => {\n  return (\n    <HStack gap=\"4px\">\n      <SingleCoinImage imageUrl={item?.url} w=\"20px\" h=\"20px\" />\n      <Text color=\"text_caption\">{addComma(item?.amount)}</Text>\n      <Text>{textEllipses(item?.symbol, 10)}</Text>\n    </HStack>\n  )\n}\n\nconst getColumns = (getExplorerUrl: any, isReverse: boolean = false): ColumnsType<DataItem>[] => {\n  return [\n    {\n      title: <Text>Event</Text>,\n      key: 'type',\n      render: ({ type }) => {\n        return <Event type={type} />\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Amounts</Text>,\n      key: 'amounts',\n      render: ({ items, type }) => {\n        return <Amounts items={items} type={type} isReverse={isReverse} />\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Transactions</Text>,\n      key: 'tx',\n      render: ({ tx }) => {\n        return (\n          <AddressUnderline\n            address={tx}\n            color=\"primary\"\n            fontSize=\"14px\"\n            onClickLink={() => {\n              window.open(getExplorerUrl(tx, 'tx'), '_blank')\n            }}\n          />\n        )\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Time</Text>,\n      key: 'block_time',\n      render: ({ block_time }) => {\n        return <Text color=\"text_caption\">{getTimeDifferenceString(block_time)}</Text>\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    }\n  ]\n}\n\nexport { AmountItem, Amounts, Event, getColumns }\n","import useRecentTransactions from '@/hooks/liquidity/useRecentTransactions'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { H5MapTable, NoData, Table } from '@cetus/ui-kit'\nimport { Button, Center, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { getColumns } from './components'\nimport { DataItem } from './type'\n\nfunction RecentTransactions() {\n  const { getExplorerUrl } = useExplorer()\n\n  const { isLoading, list, apiPoolInfo, currentPage, onCurrentPageChange, hasNextPage } = useRecentTransactions()\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\" position=\"relative\" mt={{ base: '12px', lg: '24px' }} gap=\"0px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text fontSize=\"24px\" color=\"text_caption\" fontWeight=\"500\">\n          Transactions\n        </Text>\n      </HStack>\n      {!isLoading && list?.length == 0 ? (\n        <NoData type=\"nodata\" mt=\"16px\" text=\"No Recent Transactions\" />\n      ) : isApp ? (\n        <H5MapTable<DataItem>\n          columns={getColumns(getExplorerUrl, apiPoolInfo?.isReverse)}\n          dataSource={list}\n          loading={isLoading && currentPage === 1}\n          itemSkeletonLength={5}\n          itemHeight=\"30px\"\n          wrapStyle={{ gap: 0 }}\n          rowStyle={(_, index) => ({\n            w: '100%',\n            p: '0px',\n            mt: '20px'\n          })}\n          onRowClick={(item: any) => {\n            window.open(getExplorerUrl(item?.tx, 'tx'), '_blank')\n          }}\n        />\n      ) : (\n        <Table<DataItem>\n          columns={getColumns(getExplorerUrl, apiPoolInfo?.isReverse)}\n          dataSource={list}\n          skeletonLength={10}\n          loading={isLoading && currentPage === 1}\n          onRowClick={(item: any) => {\n            window.open(getExplorerUrl(item?.tx, 'tx'), '_blank')\n          }}\n          rowStyle={{ h: '52px', cursor: 'pointer' }}\n        />\n      )}\n      {hasNextPage && (\n        <Center mt={{ base: '40px', lg: '20px' }}>\n          <Button\n            w=\"120px\"\n            h=\"32px\"\n            fontSize=\"12px\"\n            borderRadius=\"8px\"\n            bg=\"button_ghost_bg\"\n            color=\"primary\"\n            borderColor=\"border\"\n            variant=\"outline\"\n            onClick={onCurrentPageChange}\n          >\n            {isLoading ? <Spinner size=\"sm\" color=\"text_caption\" /> : 'Load More'}\n          </Button>\n        </Center>\n      )}\n    </VStack>\n  )\n}\n\nexport default RecentTransactions\n","import useLiquidityStore from '@/store/liquidity'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useChartTime } from '../common/useChartTime'\nimport useGetHistogramData from '../stats/useGetHistogramData'\n\nexport enum ChartsTabsEnum {\n  volume = 'Volume',\n  tvl = 'TVL',\n  fees = 'Fees'\n}\nexport enum ChartsTypeEnum {\n  volume = 'vol',\n  tvl = 'tvl',\n  fees = 'fee'\n}\n\nexport enum DateTabsEnum {\n  d = 'D',\n  w = 'W',\n  m = 'M'\n}\n\nexport enum DateTypeEnum {\n  d = 'day',\n  w = 'wek',\n  m = 'mon'\n}\n\nexport type ChartsTabsType = { label: ChartsTabsEnum }\n\nexport type DateTypes = { label: DateTabsEnum }\n\nconst LimitMap: Record<DateTabsEnum, number> = {\n  [DateTabsEnum.d]: 40,\n  [DateTabsEnum.w]: 30,\n  [DateTabsEnum.m]: 20\n}\nfunction useAnalyticChart() {\n  const [currentChartTab, setCurrentChartTab] = useState<ChartsTabsEnum>(ChartsTabsEnum.volume)\n  const [currentDateType, setCurrentDateType] = useState<DateTabsEnum>(DateTabsEnum.d)\n  const [analyticsData, setAnalyticsData] = useState([])\n  const { apiPoolInfo } = useLiquidityStore()\n  const [chartLoading, setChartLoading] = useState(true)\n  const [hoverData, setHoverData] = useState<any>(null)\n  const { getHistogramData } = useGetHistogramData()\n  const { poolAddress } = useQueryParams()\n  const { getHoverTime, time } = useChartTime()\n\n  /**\n   * 根据池子地址初始化数据\n   * Initialize data based on pool address\n   */\n  useLayoutEffect(() => {\n    setAnalyticsData([])\n    setCurrentChartTab(ChartsTabsEnum.volume)\n    setCurrentDateType(DateTabsEnum.d)\n    setHoverData(null)\n  }, [poolAddress])\n\n  const fetchAnalyticsData = async () => {\n    if (!poolAddress) return\n    try {\n      setChartLoading(true)\n      const result = await getHistogramData({\n        date_type: DateTypeEnum[currentDateType.toLowerCase() as keyof typeof DateTypeEnum],\n        type: ChartsTypeEnum[currentChartTab.toLowerCase() as keyof typeof ChartsTypeEnum],\n        limit: LimitMap[currentDateType],\n        address: poolAddress\n      })\n\n      if (result && result.length) {\n        setAnalyticsData(result)\n      }\n    } catch (error) {\n      console.error(error, 'res-fetchAnalyticsData')\n      throw error\n    } finally {\n      setChartLoading(false)\n    }\n  }\n\n  /**\n   * 切换图表类型或日期类型时，重新获取数据\n   * Re-get data when switching chart type or date type\n   */\n  useEffect(() => {\n    fetchAnalyticsData()\n  }, [poolAddress, currentChartTab, currentDateType])\n\n  /**\n   * 鼠标移动到图表上时，获取时间\n   * Get time when mouse moves over chart\n   */\n  useEffect(() => {\n    if (hoverData?.date) {\n      getHoverTime(hoverData?.date, currentDateType)\n    }\n  }, [hoverData?.date, currentDateType])\n\n  /**\n   * 切换图表类型\n   * Switch chart type\n   */\n  const handleChartTabChange = (item: Tab<ChartsTabsType>) => {\n    setCurrentChartTab(item.label)\n    if (item.label !== currentChartTab) {\n      setAnalyticsData([])\n    }\n  }\n  /**\n   * 切换日期类型\n   * Switch date type\n   */\n  const handleDateTabChange = (item: Tab<DateTypes>) => {\n    setCurrentDateType(item.label)\n    if (item.label !== currentDateType) {\n      setAnalyticsData([])\n    }\n  }\n  /**\n   * 默认展示数据\n   * Default display data\n   */\n  const defaultDisplay = useMemo(() => {\n    if (currentChartTab === ChartsTabsEnum.volume) {\n      return { value: apiPoolInfo?.volume24Display, title: 'Volume (24H)' }\n    } else if (currentChartTab === ChartsTabsEnum.tvl) {\n      return { value: apiPoolInfo?.tvlDisplay, title: 'TVL' }\n    } else if (currentChartTab === ChartsTabsEnum.fees) {\n      return { value: apiPoolInfo?.fees24Display, title: 'Fees (24H)' }\n    }\n  }, [currentChartTab, apiPoolInfo?.volume24Display, apiPoolInfo?.tvlDisplay, apiPoolInfo?.fees24Display])\n\n  const chartsTabs = Object.values(ChartsTabsEnum).map(value => ({\n    label: value\n  }))\n  const dateTypes = Object.values(DateTabsEnum).map(value => ({\n    label: value\n  }))\n\n  return {\n    handleChartTabChange,\n    handleDateTabChange,\n    defaultDisplay,\n    chartsTabs,\n    dateTypes,\n    chartLoading,\n    analyticsData,\n    hoverData,\n    setHoverData,\n    currentChartTab,\n    currentDateType,\n    time\n  }\n}\n\nexport default useAnalyticChart\n","import TvlChart from '@/components/chart/TvlChart'\nimport VolumeChart from '@/components/chart/VolumeChart'\nimport useAnalyticChart, { ChartsTabsEnum, ChartsTabsType, DateTabsEnum, DateTypes } from '@/hooks/liquidity/useAnalyticChart'\nimport { SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatPrice, removeComma } from '@cetus/utils'\nimport { Box, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\n\nfunction AnalyticsCharts() {\n  const { isApp } = useWindowWidth()\n  const {\n    handleChartTabChange,\n    handleDateTabChange,\n    defaultDisplay,\n    chartsTabs,\n    dateTypes,\n    chartLoading,\n    analyticsData,\n    hoverData,\n    setHoverData,\n    currentChartTab,\n    currentDateType,\n    time\n  } = useAnalyticChart()\n\n  return (\n    <VStack flex=\"1\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"16px\" p={{ base: '8px', lg: '20px' }} bg=\"bg_secondary\" gap=\"20px\">\n      <HStack w=\"100%\" justify={{ base: 'center', lg: 'space-between' }}>\n        <SelectTab<ChartsTabsType, ChartsTabsEnum>\n          type=\"outlineTab\"\n          tabList={chartsTabs}\n          currentTab={currentChartTab}\n          handleChangeTab={handleChartTabChange}\n          wrapStyle={{\n            h: '32px',\n            p: '3px',\n            borderRadius: '8px',\n            flex: { base: '1', lg: '0 0 308px' }\n          }}\n          itemStyle={{\n            fontSize: '12px',\n            flex: 1,\n            borderRadius: '6px'\n          }}\n        />\n        {!isApp && (\n          <SelectTab<DateTypes, DateTabsEnum>\n            type=\"outlineTab\"\n            tabList={dateTypes}\n            currentTab={currentDateType}\n            handleChangeTab={handleDateTabChange}\n            wrapStyle={{\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px',\n              flex: '0 0 128px'\n            }}\n            itemStyle={{\n              fontSize: '12px',\n              flex: 1,\n              borderRadius: '6px'\n            }}\n          />\n        )}\n      </HStack>\n      <VStack w=\"100%\" align=\"flex-start\">\n        <Text color=\"text_caption\" fontSize=\"24px\">\n          {hoverData?.num !== undefined && hoverData !== null\n            ? d(removeComma(hoverData.num)).gte('0.01') || d(removeComma(hoverData.num)).equals('0')\n              ? `$${formatPrice(hoverData?.num, 2)}`\n              : '<$0.01'\n            : defaultDisplay?.value}\n        </Text>\n        <Text>{hoverData?.date ? time : defaultDisplay?.title}</Text>\n        {isApp && (\n          <SelectTab<DateTypes, DateTabsEnum>\n            type=\"outlineTab\"\n            tabList={dateTypes}\n            currentTab={currentDateType}\n            handleChangeTab={handleDateTabChange}\n            wrapStyle={{\n              mt: '8px',\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px',\n              w: '128px'\n            }}\n            itemStyle={{\n              fontSize: '12px',\n              flex: 1,\n              borderRadius: '6px'\n            }}\n          />\n        )}\n      </VStack>\n      <Box w=\"100%\" h=\"340px\" mt=\"20px\">\n        <Box w=\"100%\" h=\"100%\" position=\"relative\">\n          {chartLoading && (\n            <Box position=\"absolute\" top=\"30%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          )}\n          {currentChartTab === ChartsTabsEnum.tvl ? (\n            <TvlChart data={analyticsData} onChangeValue={data => setHoverData(data)} />\n          ) : (\n            <VolumeChart data={analyticsData} onChangeValue={data => setHoverData(data)} pageFrom=\"pools\" />\n          )}\n        </Box>\n      </Box>\n    </VStack>\n  )\n}\n\nexport default AnalyticsCharts\n","import { CoinPrice } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface TvlInfoState {\n  tokenAPrice: CoinPrice | undefined\n  setTokenAPrice: (price: CoinPrice | undefined) => void\n  tokenBPrice: CoinPrice | undefined\n  setTokenBPrice: (price: CoinPrice | undefined) => void\n  tokenAAmount: string\n  setTokenAAmount: (value: string) => void\n  tokenBAmount: string\n  setTokenBAmount: (value: string) => void\n  tokenAAmountUSD: string\n  setTokenAAmountUSD: (value: string) => void\n  tokenBAmountUSD: string\n  setTokenBAmountUSD: (value: string) => void\n  totalAmountUSD: string\n  setTotalAmountUSD: (value: string) => void\n  tvlLoading: boolean\n  setTvlLoading: (value: boolean) => void\n  resetTvlInfo: () => void\n}\n\nconst store: StateCreator<TvlInfoState> = (set, get) => ({\n  tokenAPrice: undefined,\n  setTokenAPrice: (value: CoinPrice | undefined) => {\n    set(() => ({\n      tokenAPrice: value\n    }))\n  },\n  tokenBPrice: undefined,\n  setTokenBPrice: (value: CoinPrice | undefined) => {\n    set(() => ({\n      tokenBPrice: value\n    }))\n  },\n  tokenAAmount: '',\n  setTokenAAmount: (value: string) => {\n    set(() => ({\n      tokenAAmount: value\n    }))\n  },\n  tokenBAmount: '',\n  setTokenBAmount: (value: string) => {\n    set(() => ({\n      tokenBAmount: value\n    }))\n  },\n  tokenAAmountUSD: '',\n  setTokenAAmountUSD: (value: string) => {\n    set(() => ({\n      tokenAAmountUSD: value\n    }))\n  },\n  tokenBAmountUSD: '',\n  setTokenBAmountUSD: (value: string) => {\n    set(() => ({\n      tokenBAmountUSD: value\n    }))\n  },\n  totalAmountUSD: '',\n  setTotalAmountUSD: (value: string) => {\n    set(() => ({\n      totalAmountUSD: value\n    }))\n  },\n  tvlLoading: true,\n  setTvlLoading: (value: boolean) => {\n    set(() => ({\n      tvlLoading: value\n    }))\n  },\n  resetTvlInfo: () => {\n    set(() => ({\n      tokenAPrice: undefined,\n      tokenBPrice: undefined,\n      tokenAAmount: '',\n      tokenBAmount: '',\n      tokenAAmountUSD: '',\n      tokenBAmountUSD: '',\n      totalAmountUSD: ''\n    }))\n  }\n})\n\nconst useTvlInfoStore = create(store)\nexport default useTvlInfoStore\n","import useLiquidityStore from '@/store/liquidity'\nimport useTvlInfoStore from '@/store/liquidity/liquidityTvl'\nimport { PoolApiInfo } from '@/types'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d } from '@cetus/utils'\nimport { useDebounceEffect } from 'ahooks'\nimport { useState } from 'react'\nimport useBurn from '../burn/useBurn'\n\nfunction useBurnedLiquidity() {\n  const { getBurnPositionAmountByPool } = useBurn()\n  const { apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n  const [burnAmountA, setBurnAmountA] = useState<string>('0')\n  const [burnAmountB, setBurnAmountB] = useState<string>('0')\n  const [burnAmountAUSD, setBurnAmountAUSD] = useState<string>('0')\n  const [burnAmountBUSD, setBurnAmountBUSD] = useState<string>('0')\n  const [loading, setLoading] = useState<boolean>(false)\n  const { poolAddress } = useQueryParams()\n  const { tokenAPrice, tokenBPrice } = useTvlInfoStore()\n\n  /**\n   * 获取burn liquidity amount 及其价值usd\n   * Get the amount of burn liquidity and its value in usd\n   * @param poolInfo PoolApiInfo\n   * @param current_sqrt_price string\n   */\n  const getBurnAmount = async (poolInfo: PoolApiInfo, current_sqrt_price: string) => {\n    try {\n      setLoading(true)\n      console.log('🚀🚀🚀 ~ file: burn-position-amount 29 ~ getBurnAmount ~ getBurnAmount:')\n      const { totalA, totalB } = await getBurnPositionAmountByPool(poolInfo, current_sqrt_price)\n      setBurnAmountA(totalA)\n      setBurnAmountB(totalB)\n      if (tokenAPrice) {\n        setBurnAmountAUSD(d(totalA).mul(tokenAPrice?.price).toString())\n      }\n      if (tokenBPrice) {\n        setBurnAmountBUSD(d(totalB).mul(tokenBPrice?.price).toString())\n      }\n    } catch (error) {\n      console.log('🚀🚀🚀  ~ getBurnAmount ~ error:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * 监听池子地址变化和价格变化\n   * Listen to pool address changes and price changes\n   */\n  useDebounceEffect(\n    () => {\n      if (apiPoolInfo && contractPoolInfo?.current_sqrt_price) {\n        getBurnAmount(apiPoolInfo, contractPoolInfo?.current_sqrt_price)\n      }\n    },\n    [poolAddress, contractPoolInfo?.current_sqrt_price, tokenAPrice?.price, tokenBPrice?.price],\n    {\n      wait: 500\n    }\n  )\n  return {\n    burnAmountA,\n    burnAmountB,\n    burnAmountAUSD,\n    burnAmountBUSD,\n    loading\n  }\n}\n\nexport default useBurnedLiquidity\n","import useBurnedLiquidity from '@/hooks/liquidity/useBurnedLiquidity'\nimport useLiquidityStore from '@/store/liquidity'\nimport { TooltipIcon } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, d, formatNumber, fromDecimalsAmountFix, textEllipses } from '@cetus/utils'\nimport { HStack, Stack, Text, VStack } from '@chakra-ui/react'\n\nfunction BurnedLiquidity() {\n  const { apiPoolInfo } = useLiquidityStore()\n  const { burnAmountA, burnAmountB, burnAmountAUSD, burnAmountBUSD, loading } = useBurnedLiquidity()\n\n  return d(burnAmountA).gt(0) || d(burnAmountB).gt(0) ? (\n    <Stack\n      flexDir={{ base: 'column', lg: 'row' }}\n      w=\"100%\"\n      bg=\"bg_secondary\"\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      justify=\"space-between\"\n      align=\"flex-start\"\n      p={{ base: '16px 8px 8px', lg: '20px 16px 20px 20px' }}\n    >\n      <HStack>\n        <Text fontSize=\"16px\" color=\"text_caption\">\n          Burned Liquidity\n        </Text>\n        <TooltipIcon type=\"burnedLiquidity\" />\n      </HStack>\n      <Stack\n        gap=\"16px\"\n        flexDir={{ base: apiPoolInfo?.isReverse ? 'column-reverse' : 'column', lg: apiPoolInfo?.isReverse ? 'row-reverse' : 'row' }}\n        w={{ base: '100%', lg: '822px', xl: '862px' }}\n      >\n        <TokenBurnedLiquidity token={apiPoolInfo?.tokenA as Token} amount={burnAmountA} amountUSD={burnAmountAUSD} loading={loading} />\n        <TokenBurnedLiquidity token={apiPoolInfo?.tokenB as Token} amount={burnAmountB} amountUSD={burnAmountBUSD} loading={loading} />\n      </Stack>\n    </Stack>\n  ) : null\n}\n\nconst TokenBurnedLiquidity = ({ token, amount, amountUSD, loading }: { token: Token; amount: string; amountUSD: string; loading: boolean }) => {\n  return (\n    <VStack\n      flex=\"1\"\n      align=\"flex-start\"\n      gap=\"16px\"\n      p={{ base: '16px 8px', lg: '16px 20px' }}\n      borderRadius=\"8px\"\n      bg=\"background\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n    >\n      <HStack gap=\"12px\">\n        <SingleCoinImage imageUrl={token?.logo_url} w=\"28px\" h=\"28px\" />\n        <VStack align=\"flex-start\" gap=\"4px\">\n          <Text color=\"text_caption\" fontSize=\"16px\">\n            {textEllipses(token?.symbol, 10)}\n          </Text>\n          <Text fontSize=\"12px\">{token?.name}</Text>\n        </VStack>\n      </HStack>\n      <HTextLabelBox\n        label=\"Amount\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={addComma(fromDecimalsAmountFix(amount, token?.decimals)) as string}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n      <HTextLabelBox\n        label=\"Amount (USD)\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={d(amountUSD).gt('0') ? `$${formatNumber(fromDecimalsAmountFix(amountUSD, token?.decimals), 2)}` : '--'}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n    </VStack>\n  )\n}\n\nexport default BurnedLiquidity\n","import useTvlInfoStore from '@/store/liquidity/liquidityTvl'\nimport { d, fixRounding } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nfunction usePoolInfo() {\n  const { tokenAAmountUSD, totalAmountUSD } = useTvlInfoStore()\n  /**\n   * tokenA amount 占比\n   * tokenA amount ratio\n   */\n  const tokenARatio = useMemo(() => {\n    if (tokenAAmountUSD && totalAmountUSD && tokenAAmountUSD !== '--' && totalAmountUSD !== '--') {\n      const ratio = fixRounding(d(tokenAAmountUSD).div(totalAmountUSD).mul(100).toString(), 2)\n      return ratio === 'NaN' ? '--' : ratio\n    }\n    return '--'\n  }, [tokenAAmountUSD, totalAmountUSD])\n  /**\n   * tokenB amount 占比\n   * tokenB amount ratio\n   */\n  const tokenBRatio = useMemo(() => {\n    if (tokenARatio && tokenARatio !== '--') {\n      return d(100).minus(tokenARatio).toString()\n    }\n    return '--'\n  }, [tokenARatio])\n  return {\n    tokenARatio,\n    tokenBRatio\n  }\n}\n\nexport default usePoolInfo\n","import usePoolInfo from '@/hooks/liquidity/usePoolInfo'\nimport useLiquidityStore from '@/store/liquidity'\nimport useTvlInfoStore from '@/store/liquidity/liquidityTvl'\nimport { AddressCopyLink } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatPrice, fromDecimalsAmountFix, textEllipses } from '@cetus/utils'\nimport { Box, Grid, Heading, HStack, Progress, Skeleton, Text, VStack } from '@chakra-ui/react'\n\nconst getRatio = (value: string) => {\n  if (value === '--') return '--'\n  return `${value}%`\n}\n\nfunction PoolInfo() {\n  const { apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n  const { getExplorerUrl } = useExplorer()\n  const { poolAddress } = useQueryParams()\n  const { tokenAAmount, tokenBAmount, tokenAAmountUSD, tokenBAmountUSD, tvlLoading } = useTvlInfoStore()\n  const { tokenARatio, tokenBRatio } = usePoolInfo()\n  return (\n    <VStack\n      w={{ base: '100%', lg: '420px', xl: '440px' }}\n      gap={{ base: '20px', lg: '40px' }}\n      p={{ base: '20px 8px 8px', lg: '20px 16px' }}\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      bg=\"bg_secondary\"\n      minW={{ base: '100%', lg: '420px' }}\n      maxW={{ base: '100%', lg: '440px' }}\n    >\n      <VStack gap=\"20px\" w=\"100%\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Heading fontSize=\"16px\" fontWeight=\"400\">\n            Pool Info\n          </Heading>\n        </HStack>\n        <Grid templateColumns={{ base: 'repeat(1, 1fr)', lg: 'repeat(2, 1fr)' }} w=\"100%\" gap={{ base: '20px', lg: '20px 36px' }}>\n          <HTextLabelBox\n            label=\"Pool Address\"\n            labelStyle={{\n              fontSize: '14px',\n              whiteSpace: 'nowrap'\n            }}\n            value={\n              <AddressCopyLink\n                address={poolAddress || ''}\n                fontSize=\"14px\"\n                color=\"text_caption\"\n                onClickLink={() => window.open(getExplorerUrl(poolAddress, 'poolAddress'))}\n              />\n            }\n            valueStyle={{\n              fontSize: '14px'\n            }}\n          />\n          <HTextLabelBox\n            label=\"Tick Spacing\"\n            labelStyle={{\n              whiteSpace: 'nowrap',\n              fontSize: '14px'\n            }}\n            value={apiPoolInfo?.tickSpacing || ''}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n          />\n\n          <HTextLabelBox\n            label=\"Pool ID\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            value={contractPoolInfo?.index || apiPoolInfo?.index ? `#${contractPoolInfo?.index || apiPoolInfo?.index}` : '--'}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n          />\n\n          <HTextLabelBox\n            label=\"Fee Tier\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            value={`${apiPoolInfo?.feeDisplay}` || '--'}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n          />\n        </Grid>\n      </VStack>\n      <VStack gap=\"20px\" w=\"100%\">\n        <HStack justify=\"flex-start\" w=\"100%\">\n          <Heading fontSize=\"16px\" fontWeight=\"400\">\n            Pool Composition\n          </Heading>\n        </HStack>\n        <VStack gap=\"16px\" w=\"100%\">\n          <HStack w=\"100%\" justify=\"space-between\">\n            <HStack gap=\"12px\">\n              <SingleCoinImage\n                imageUrl={apiPoolInfo?.displayTokenA?.logo_url}\n                w=\"28px\"\n                h=\"28px\"\n                coinType={apiPoolInfo?.displayTokenA ? apiPoolInfo?.displayTokenA?.coin_type : ''}\n              />\n              <VStack align=\"flex-start\" gap=\"4px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  {textEllipses(apiPoolInfo?.displayTokenA?.symbol, 10)}\n                </Text>\n                {tvlLoading ? (\n                  <Skeleton h=\"12px\" w=\"46px\" />\n                ) : (\n                  <Text fontSize=\"12px\" fontWeight=\"500\">\n                    {apiPoolInfo?.isReverse ? getRatio(tokenBRatio) : getRatio(tokenARatio)}\n                  </Text>\n                )}\n              </VStack>\n            </HStack>\n            <Box w=\"200px\">\n              <Progress\n                value={Number(apiPoolInfo?.isReverse ? tokenBRatio : tokenARatio)}\n                size=\"xs\"\n                h=\"4px\"\n                borderRadius=\"4px\"\n                bg={[tokenARatio, tokenBRatio].includes('--') ? 'border' : 'quote_green'}\n                sx={{\n                  'div[role=\"progressbar\"]': {\n                    bg: [tokenARatio, tokenBRatio].includes('--') ? 'background' : 'primary'\n                  }\n                }}\n              />\n            </Box>\n            <HStack gap=\"12px\">\n              <VStack align=\"flex-end\" gap=\"4px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  {textEllipses(apiPoolInfo?.displayTokenB?.symbol, 10)}\n                </Text>\n                {tvlLoading ? (\n                  <Skeleton h=\"12px\" w=\"46px\" />\n                ) : (\n                  <Text fontSize=\"12px\" fontWeight=\"500\">\n                    {apiPoolInfo?.isReverse ? getRatio(tokenARatio) : getRatio(tokenBRatio)}\n                  </Text>\n                )}\n              </VStack>\n              <SingleCoinImage\n                imageUrl={apiPoolInfo?.displayTokenB?.logo_url}\n                w=\"28px\"\n                h=\"28px\"\n                coinType={apiPoolInfo?.displayTokenB ? apiPoolInfo?.displayTokenB?.coin_type : ''}\n              />\n            </HStack>\n          </HStack>\n          <VStack w=\"100%\" flexDir={apiPoolInfo?.isReverse ? 'column-reverse' : 'column'} gap=\"16px\">\n            <TokenCard loading={tvlLoading} token={apiPoolInfo?.tokenA} amount={tokenAAmount} amountUSD={tokenAAmountUSD} />\n            <TokenCard loading={tvlLoading} token={apiPoolInfo?.tokenB} amount={tokenBAmount} amountUSD={tokenBAmountUSD} />\n          </VStack>\n        </VStack>\n      </VStack>\n    </VStack>\n  )\n}\n\ninterface TokenCardProps {\n  token?: Token\n  amount?: string\n  amountUSD: string\n  loading: boolean\n}\n\nconst TokenCard = ({ token, amount, amountUSD, loading }: TokenCardProps) => {\n  const { getExplorerUrl } = useExplorer()\n  return token ? (\n    <VStack w=\"100%\" p={{ base: '16px 8px', lg: '16px 20px' }} borderRadius=\"8px\" bg=\"background\" border=\"1px solid\" borderColor=\"border\" gap=\"16px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <HStack gap=\"12px\">\n          <SingleCoinImage imageUrl={token?.logo_url} w=\"28px\" h=\"28px\" coinType={token ? token?.coin_type : ''} />\n          <VStack align=\"flex-start\" gap=\"4px\">\n            <Text color=\"text_caption\" fontSize=\"16px\">\n              {textEllipses(token?.symbol, 10)}\n            </Text>\n            <Text fontSize=\"12px\">{token?.name}</Text>\n          </VStack>\n        </HStack>\n        <AddressCopyLink\n          address={token?.coin_type || ''}\n          fontSize=\"14px\"\n          color=\"text_caption\"\n          onClickLink={() => window.open(getExplorerUrl(token?.coin_type, 'coin'))}\n        />\n      </HStack>\n      <HTextLabelBox\n        label=\"Amount\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={addComma(fromDecimalsAmountFix(amount || '0', token.decimals)) as string}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n      <HTextLabelBox\n        label=\"Amount (USD)\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={amountUSD && amountUSD !== '--' ? `$${formatPrice(amountUSD)}` : '--'}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n    </VStack>\n  ) : null\n}\n\nexport default PoolInfo\n","import { Stack, VStack } from '@chakra-ui/react'\nimport RecentTransaction from '../recentTransactions'\nimport AnalyticsCharts from './AnalyticsCharts'\nimport BurnedLiquidity from './BurnedLiquidity'\nimport PoolInfo from './PoolInfo'\n\nfunction PoolsAnalytics() {\n  return (\n    <VStack w=\"100%\" gap=\"16px\" minW={{ base: '100%', lg: '1024px' }}>\n      <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap=\"16px\">\n        <AnalyticsCharts />\n        <PoolInfo />\n      </Stack>\n      <BurnedLiquidity />\n      <RecentTransaction />\n    </VStack>\n  )\n}\n\nexport default PoolsAnalytics\n","import useLiquidityStore from '@/store/liquidity'\nimport usePositionStore from '@/store/position'\nimport { useRpcListener } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useAccountStore } from '@cetus/stores'\nimport { useEffect, useMemo, useState } from 'react'\nimport usePositionList from '../position/usePositionList'\n\nfunction useMyPositions() {\n  const { posBaseListLoading, posBaseListGroupByPool } = usePositionStore()\n  const { manualRefresh } = useLiquidityStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const [rpcNodeErrorStr, setRpcNodeErrorStr] = useState('')\n  const { poolAddress } = useQueryParams()\n  /**\n   * 获取个人所有仓位列表\n   * Get the list of all personal positions\n   * @param walletAddress string 钱包地址 Wallet address\n   */\n  const handleGetPositionList = async (walletAddress: string) => {\n    const res = await getPositionBaseList(walletAddress)\n    if (Array.isArray(res)) {\n      getPosRelatedData(res)\n    }\n    if (typeof res === 'string') {\n      setRpcNodeErrorStr(res)\n    }\n  }\n  /**\n   * 初始化请求个人所有仓位列表\n   * Initialize request personal position list\n   */\n  useEffect(() => {\n    if (currentAccount?.address) {\n      handleGetPositionList(currentAccount?.address)\n    }\n  }, [currentAccount?.address])\n\n  /**\n   * 手动刷新，重新请求个人所有仓位列表\n   * Manually refresh and request personal position list\n   */\n\n  useEffect(() => {\n    if (manualRefresh && currentAccount?.address) {\n      handleGetPositionList(currentAccount?.address)\n    }\n  }, [manualRefresh])\n\n  /**\n   * 监听rpc节点切换，重新请求个人仓位列表\n   * Listen for rpc node switching and request personal position list\n   */\n  useRpcListener({\n    onRpcChange: () => {\n      if (currentAccount?.address) {\n        handleGetPositionList(currentAccount?.address)\n      }\n    }\n  })\n  /**\n   * 获取当前池子的个人仓位列表\n   * Get the personal position list of the current pool\n   */\n  const data = useMemo(() => {\n    if (poolAddress) {\n      const res = posBaseListGroupByPool[poolAddress.toLowerCase() || '']\n      if (res) {\n        return res?.list\n      }\n      return []\n    }\n    return []\n  }, [poolAddress, JSON.stringify(posBaseListGroupByPool)])\n\n  return {\n    data,\n    rpcNodeErrorStr,\n    posBaseListLoading,\n    currentAccount,\n    onWalletModal\n  }\n}\n\nexport default useMyPositions\n","import useMyPositions from '@/hooks/liquidity/useMyPositions'\nimport useLiquidityStore from '@/store/liquidity'\nimport { PosBaseInfo } from '@/types'\nimport { NoData } from '@cetus/ui-kit'\nimport { Button, VStack } from '@chakra-ui/react'\nimport { useNavigate } from 'react-router-dom'\nimport PositionItem from '../position/list/PositionItem'\nimport PositionListLoading from '../position/list/PositionListLoading'\n\nfunction MyPositions() {\n  const navigate = useNavigate()\n  const { apiPoolInfo } = useLiquidityStore()\n  const { currentAccount, posBaseListLoading, data, rpcNodeErrorStr, onWalletModal } = useMyPositions()\n\n  return (\n    <VStack minW={{ base: '100%', lg: '1024px' }}>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : posBaseListLoading ? (\n        [{}, {}].map((item, index) => {\n          return <PositionListLoading key={index} />\n        })\n      ) : data && data?.length > 0 ? (\n        data?.map((item: PosBaseInfo, index: number) => {\n          return <PositionItem key={item?.posId} positionInfo={item} />\n        })\n      ) : rpcNodeErrorStr ? (\n        <NoData type=\"nodata\" text={rpcNodeErrorStr} />\n      ) : (\n        <NoData\n          type=\"nodata\"\n          text=\"You don't have positions for this pool\"\n          children={\n            <Button\n              borderRadius=\"8px\"\n              mt=\"8px\"\n              fontWeight=\"500\"\n              w=\"120px\"\n              h=\"28px\"\n              fontSize=\"12px\"\n              onClick={() => navigate(`/liquidity?tab=deposit&poolAddress=${apiPoolInfo?.poolAddress}`)}\n            >\n              Create Position\n            </Button>\n          }\n        />\n      )}\n    </VStack>\n  )\n}\n\nexport default MyPositions\n","import { PoolApiInfo } from '@/types'\nimport { formatPrice } from '@cetus/utils'\nimport { HStack, Stack, Text } from '@chakra-ui/react'\nimport AprTooltip from '../common/aprTooltip'\nimport StatsInfo from './StatsInfo'\n\ntype PoolsStatsProps = {\n  apiPoolInfo: PoolApiInfo\n  apiPoolInfoLoading: boolean\n  tvlLoading: boolean\n  totalTvl: string\n}\n\nfunction PoolsStats({ apiPoolInfo, apiPoolInfoLoading, tvlLoading, totalTvl }: PoolsStatsProps) {\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '20px', lg: '28px' }}>\n      <StatsInfo\n        label=\"Pool APR\"\n        value={\n          <AprTooltip poolInfo={apiPoolInfo} placement=\"bottom\">\n            <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n              <Text\n                as=\"span\"\n                fontSize=\"14px\"\n                color=\"text_caption\"\n                fontWeight=\"500\"\n                cursor={apiPoolInfo?.farmingAprDisplay || (apiPoolInfo?.miningAprList && apiPoolInfo?.miningAprList.length > 0) ? 'help' : 'text'}\n              >\n                {apiPoolInfo?.feeAndMiningAprDisplay}\n              </Text>\n              {apiPoolInfo?.haveFarming && (\n                <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                  +{apiPoolInfo?.farmingAprDisplay}\n                </Text>\n              )}\n            </HStack>\n          </AprTooltip>\n        }\n      />\n      <StatsInfo\n        label=\"TVL\"\n        value={totalTvl && totalTvl !== '--' ? `$${formatPrice(totalTvl, 2)}` : '--'}\n        loading={apiPoolInfoLoading || tvlLoading}\n      />\n      <StatsInfo label=\"Volume (24H)\" value={(apiPoolInfo?.volume24Display as string) || ''} loading={apiPoolInfoLoading} />\n      <StatsInfo label=\"Fees (24H)\" value={(apiPoolInfo?.fees24Display as string) || ''} loading={apiPoolInfoLoading} />\n    </Stack>\n  )\n}\n\nexport default PoolsStats\n","import ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { Block, TradeConfirmAmountInfo } from '@cetus/design'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { formatNumberWithDown, textEllipses } from '@cetus/utils'\nimport {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { debounce } from 'lodash-es'\nimport { useMemo, useState } from 'react'\nimport DepositRatio from '../common/DepositRatio'\nimport TotalAmount from '../common/TotalAmount'\nimport PositionStatus from '../position/PositionStatus'\nimport RangeAlerts from '../position/details/RangeAlerts'\n\ntype AddLiquidityConfirmModalProps = {\n  onClose: () => void\n  onSubmit: () => void\n  data: {\n    feeTier?: {\n      title: string\n      feeDisplay: string\n      feeRate: string\n      poolAddress: string\n      tvl: string\n    }\n    zapData?: {\n      amount: string\n      token: any\n    }\n  }\n}\n\nexport default function AddLiquidityConfirmModal(props: AddLiquidityConfirmModalProps) {\n  const {\n    onClose,\n    onSubmit,\n    data: { feeTier, zapData }\n  } = props\n  const { fromToken, toToken, fromAmount, toAmount, totalAmount, percentMap, fromTokenLock, toTokenLock } = useAddLiquidityStore()\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const { currentPriceData, apiPoolInfo } = useLiquidityStore()\n  const { setIsChecked } = useNotifiStore()\n  const [direct, setDirect] = useState(true)\n  const showReverse = useMemo(() => {\n    if (apiPoolInfo?.tokenA?.coin_type === fromToken?.coin_type) {\n      if (direct) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (direct) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }, [apiPoolInfo, fromToken, toToken, direct])\n\n  const perText = useMemo(() => {\n    return direct\n      ? `${textEllipses(toToken?.symbol, 10)} per ${textEllipses(fromToken?.symbol, 10)}`\n      : `${textEllipses(fromToken?.symbol, 10)} per ${textEllipses(toToken?.symbol)}`\n  }, [direct, fromToken?.symbol, toToken?.symbol])\n\n  const onOk = debounce(\n    () => {\n      onSubmit()\n      onClose()\n    },\n    1000,\n    {\n      leading: true,\n      trailing: false\n    }\n  )\n\n  const { notifiStatus } = useNotifiStore()\n  return (\n    <Modal\n      isOpen={true}\n      onClose={() => {\n        onClose()\n        setIsChecked(false)\n      }}\n      isCentered\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Add Liquidity\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"20px\" p=\"8px 16px\" pb=\"0px\">\n            <HStack w=\"100%\" justifyContent=\"space-between\" h=\"40px\">\n              <HStack>\n                <CoinPairImage\n                  coinACoinType={fromToken?.coin_type}\n                  coinBCoinType={toToken?.coin_type}\n                  coinAIconUrl={fromToken?.logo_url}\n                  coinBIconUrl={toToken?.logo_url}\n                  imageStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                  imgBoxStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                />\n                <Text fontSize=\"16px\" color=\"text_caption\" textAlign=\"left\">\n                  {`${textEllipses(fromToken?.symbol, 10)} - ${textEllipses(toToken?.symbol, 10)}`}\n                </Text>\n              </HStack>\n\n              <Block w=\"unset\" p=\"8px 12px\" borderRadius=\"12px\" ml=\"4px\">\n                <HStack gap=\"12px\">\n                  <Text whiteSpace=\"nowrap\">Fee Tier</Text>\n                  <Text color=\"primary\">{feeTier?.feeDisplay}</Text>\n                </HStack>\n              </Block>\n            </HStack>\n\n            {/* 交易数量展示 */}\n            {zapData ? (\n              <TradeConfirmAmountInfo\n                coinA={{\n                  amount: zapData?.amount as string,\n                  ...(zapData?.token as Token)\n                }}\n              />\n            ) : (\n              <TradeConfirmAmountInfo\n                coinA={{\n                  amount: fromAmount as string,\n                  ...(fromToken as Token)\n                }}\n                coinB={{\n                  amount: toAmount as string,\n                  ...(toToken as Token)\n                }}\n              />\n            )}\n            <Box w=\"100%\">\n              <HStack w=\"100%\" justify=\"space-between\" h=\"32px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  Selected Range\n                </Text>\n                <PositionStatus isActive={!fromTokenLock && !toTokenLock} isRow imgStyle={{ imgW: '29px', imgH: '16px' }} w=\"105px\" h=\"32px\" />\n              </HStack>\n              <VStack gap=\"0\" border=\"1px solid\" bg=\"bg_secondary\" borderColor=\"border\" borderRadius=\"12px\" mt=\"8px\">\n                <HStack justify=\"center\" h=\"48px\" w=\"100%\" gap=\"4px\">\n                  <Text>Current Price</Text>\n                  <Text as=\"span\" color=\"text_caption\">\n                    {formatNumberWithDown(showReverse ? currentPriceData.reverseCurrentPrice : currentPriceData?.currentPrice, 6)}\n                  </Text>\n                  <Text>{perText}</Text>\n                  <Button variant=\"unstyled\" onClick={() => setDirect(!direct)}>\n                    <Icon xlinkHref=\"#icon-icon_swap1\" />\n                  </Button>\n                </HStack>\n                <Box h=\"1px\" w=\"calc(100% - 32px)\" p=\"0 12px\" bg=\"border\" />\n                <HStack w=\"100%\" h=\"100px\">\n                  <PriceItem\n                    title=\"Min Price\"\n                    price={formatNumberWithDown(showReverse ? upperTickData?.reversePrice : lowerTickData?.price, 6)}\n                    perText={perText}\n                  />\n                  <Divider orientation=\"vertical\" h=\"40px\" />\n                  <PriceItem\n                    title=\"Max Price\"\n                    price={formatNumberWithDown(showReverse ? lowerTickData?.reversePrice : upperTickData?.price, 6)}\n                    perText={perText}\n                  />\n                </HStack>\n              </VStack>\n            </Box>\n\n            {zapData ? (\n              <ZapSubmiteInfo action=\"Deposit\" inConfirmModal={true} />\n            ) : (\n              <>\n                <DepositRatio\n                  tokenA={fromToken}\n                  tokenB={toToken}\n                  isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type}\n                  type=\"text\"\n                  percentMap={percentMap}\n                />\n                <TotalAmount loading={false} totalAmount={totalAmount} />\n\n                {!fromTokenLock &&\n                  !toTokenLock &&\n                  !(lowerTickData?.price === '0' && upperTickData?.price === '∞') &&\n                  notifiStatus == 'authenticated' && (\n                    <RangeAlerts\n                      subscriptionSource=\"AddLiquidity\"\n                      title=\"Range alerts for this position\"\n                      description=\"Subscribe to receive alerts on email, SMS, or Telegram when the price for this pool moves out of your selected range.\"\n                      wrapStyle={{\n                        bg: 'bg_secondary',\n                        borderRadius: '12px'\n                      }}\n                    />\n                  )}\n              </>\n            )}\n            <Button w=\"calc(100% + 32px)\" bottom=\"0px\" mt=\"4px\" h=\"52px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\" onClick={onOk}>\n              Add Liquidity\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst PriceItem = ({ title, price, perText }: { title: string; price: string; perText: string }) => {\n  return (\n    <VStack flex=\"1\">\n      <Text>{title}</Text>\n      <Text color=\"text_caption\">{price}</Text>\n      <Text>{perText}</Text>\n    </VStack>\n  )\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useGetCurrentPrice from '@/hooks/liquidity/useGetCurrentPrice'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useGlobalStore from '@/store/common/global'\nimport useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport useZapStore from '@/store/zap'\nimport { formatDescription } from '@/utils'\nimport { calcCoinProportion } from '@/utils/pool'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, Decimal, getBalanceChanges, isAvailableObject, parsePositionIdFromEvent } from '@cetus/utils'\nimport { d, TickUtil } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useDebounceEffect, useDeepCompareEffect } from 'ahooks'\nimport { debounce } from 'lodash-es'\nimport { useEffect, useState } from 'react'\nimport useQuoteWhiteTokenList from '../create-pool/useQuoteWhiteTokenList'\nimport useNotifiSubscription from '../notifi/useNotifiSubscription'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport usePosAdd from '../position/usePosAdd'\ninterface DebouncedPreAddProps {\n  amount?: string | number\n  isTokenA: boolean\n  isFullRange: boolean\n}\n\nfunction useAddLiquidity(getList: () => Promise<void>, direct?: boolean) {\n  const { preAdd, getClmmCreateAddData, getFarmsCreateAddData } = usePosAdd()\n  const [preAddLoading, setPreAddLoading] = useState<boolean>(false)\n  const { currentPriceData, apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const { signAndExecuteTransaction, getTransactionStatus, transactionSuccess } = useTransaction()\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  // const [nftOpen, setNftOpen] = useState(false)\n  // const [relatedPosId, setRelatedPosId] = useState('')\n  const { transactionConfirmation } = useTransactionModal()\n  const { getCurrentPrice } = useGetCurrentPrice()\n  const {\n    fromAmount,\n    setFromAmount,\n    fromAmountValue,\n    setFromAmountValue,\n    toAmount,\n    setToAmount,\n    toAmountValue,\n    setToAmountValue,\n    byAmountIn,\n    setByAmountIn,\n    isTokenA,\n    setIsTokenA,\n    percentMap,\n    setPercentMap,\n    isFullRange,\n    setIsFullRange,\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    totalAmount,\n    setTotalAmount,\n    fromTokenLock,\n    setFromTokenLock,\n    toTokenLock,\n    setToTokenLock,\n    setTokenMaxA,\n    setTokenMaxB,\n    tokenMaxA,\n    tokenMaxB,\n    autoStakePosition,\n    liquidityAmount,\n    setLiquidityAmount,\n    useZapIn,\n    setUseZapIn,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    setRelatedPosId\n  } = useAddLiquidityStore()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const { getZapDepositTx, getZapDepositToastInfo, reCalculateZapData } = useZapSubmit()\n  const { setZapAmount } = useZapStore()\n\n  useDeepCompareEffect(() => {\n    if (apiPoolInfo) {\n      setIsTokenA(apiPoolInfo?.displayTokenA?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n    }\n  }, [apiPoolInfo])\n\n  const { isWhiteQuoteToken } = useQuoteWhiteTokenList()\n\n  // notifi\n  const { notifiSubscription } = useNotifiSubscription()\n  const { isChecked } = useNotifiStore()\n\n  useDebounceEffect(\n    () => {\n      if (isFullRange) {\n        setPercentMap({ percentA: '50', percentB: '50' })\n        return\n      }\n\n      if (\n        apiPoolInfo &&\n        apiPoolInfo?.tokenA &&\n        apiPoolInfo?.tokenB &&\n        typeof contractPoolInfo?.current_tick_index === 'number' &&\n        lowerTickData?.tick !== undefined &&\n        upperTickData?.tick !== undefined &&\n        currentPriceData.currentSqrtPrice\n      ) {\n        if (d(lowerTickData.tick).lte(contractPoolInfo.current_tick_index) && d(upperTickData.tick).gt(contractPoolInfo.current_tick_index)) {\n          const baseToken = isWhiteQuoteToken(apiPoolInfo.tokenA.coin_type) ? apiPoolInfo.tokenA : apiPoolInfo.tokenB\n          const isTokenA = baseToken.coin_type === apiPoolInfo.tokenA.coin_type\n\n          const res = preAdd({\n            amount: amountToBN('1', baseToken.decimals).toString(),\n            tokenA: apiPoolInfo?.tokenA,\n            tokenB: apiPoolInfo?.tokenB,\n            isTokenA,\n            lowerTick: lowerTickData?.tick,\n            upperTick: upperTickData?.tick,\n            curSqrtPrice: currentPriceData.currentSqrtPrice,\n            isReverse: apiPoolInfo?.isReverse,\n            roundUp: true\n          })\n\n          const rateMap = calcCoinProportion(res.coinAmountA, res.coinAmountB, currentPriceData?.currentPrice, isFullRange)\n          setPercentMap(rateMap)\n\n          return\n        }\n\n        if (d(lowerTickData.tick).gt(contractPoolInfo.current_tick_index)) {\n          setPercentMap({ percentA: '100', percentB: '0' })\n          return\n        }\n\n        if (d(upperTickData.tick).lte(contractPoolInfo.current_tick_index)) {\n          setPercentMap({ percentA: '0', percentB: '100' })\n          return\n        }\n      }\n    },\n    [JSON.stringify(apiPoolInfo), currentPriceData, lowerTickData?.tick, upperTickData?.tick, isFullRange],\n    { wait: 300 }\n  )\n\n  const handlePreCalc = ({ amount, isTokenA, isFullRange }: DebouncedPreAddProps) => {\n    if (\n      apiPoolInfo &&\n      apiPoolInfo?.tokenA &&\n      apiPoolInfo?.tokenB &&\n      Object.keys(currentPriceData).length > 0 &&\n      lowerTickData?.tick !== undefined &&\n      upperTickData?.tick !== undefined &&\n      fromToken &&\n      toToken\n    ) {\n      let res\n\n      if (\n        typeof contractPoolInfo?.current_tick_index === 'number' &&\n        d(lowerTickData?.tick).lte(contractPoolInfo?.current_tick_index) &&\n        d(upperTickData?.tick).gt(contractPoolInfo?.current_tick_index)\n      ) {\n        res = preAdd({\n          amount: amountToBN(amount && +amount ? amount + '' : '1', byAmountIn ? fromToken?.decimals : toToken?.decimals).toString(),\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          isTokenA,\n          lowerTick: lowerTickData?.tick,\n          upperTick: upperTickData?.tick,\n          curSqrtPrice: currentPriceData.currentSqrtPrice,\n          isReverse: apiPoolInfo?.isReverse,\n          roundUp: true\n        })\n      } else if (fromTokenLock && !toTokenLock) {\n        const isTokenA = toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n        res = preAdd({\n          amount: amountToBN(amount ? amount + '' : '1', toToken?.decimals).toString(),\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          isTokenA,\n          lowerTick: lowerTickData?.tick,\n          upperTick: upperTickData?.tick,\n          curSqrtPrice: currentPriceData.currentSqrtPrice,\n          isReverse: apiPoolInfo?.isReverse,\n          roundUp: true\n        })\n\n        // setPercentMap({\n        //   percentA: isTokenA ? '100' : '0',\n        //   percentB: isTokenA ? '0' : '100'\n        // })\n      } else if (toTokenLock && !fromTokenLock) {\n        const isTokenA = fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n        res = preAdd({\n          amount: amountToBN(amount ? amount + '' : '1', fromToken?.decimals).toString(),\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          isTokenA,\n          lowerTick: lowerTickData?.tick,\n          upperTick: upperTickData?.tick,\n          curSqrtPrice: currentPriceData.currentSqrtPrice,\n          isReverse: apiPoolInfo?.isReverse,\n          roundUp: true\n        })\n\n        // setPercentMap({\n        //   percentA: isTokenA ? '100' : '0',\n        //   percentB: isTokenA ? '0' : '100'\n        // })\n      } else if (fromTokenLock && toTokenLock) {\n        res = isTokenA\n          ? { coinAmountA: amount ? amount + '' : '1', coinAmountB: '', tokenMaxA: amount ? amount + '' : '1', tokenMaxB: '' }\n          : { coinAmountA: '', coinAmountB: amount ? amount + '' : '1', tokenMaxA: '', tokenMaxB: amount ? amount + '' : '1' }\n      }\n      setTokenMaxA(res?.tokenMaxA)\n      setTokenMaxB(res?.tokenMaxB)\n      if (amount) {\n        if (d(amount).gt('0')) {\n          if (byAmountIn) {\n            const _toAmount = toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type ? res?.coinAmountA : res?.coinAmountB\n            const _fromAmountValue = getTokenAmountValue(fromToken?.coin_type, amount + '')\n            const _toAmountValue = getTokenAmountValue(toToken?.coin_type, _toAmount)\n            const _totalAmountValue = d(_fromAmountValue).plus(_toAmountValue).toString()\n            console.log(_toAmount, _fromAmountValue, _toAmountValue, _totalAmountValue, '_totalAmountValue')\n            setToAmount(_toAmount || '')\n            setFromAmountValue(_fromAmountValue)\n            setToAmountValue(_toAmountValue)\n            setTotalAmount(_totalAmountValue)\n          } else {\n            const _fromAmount = fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type ? res?.coinAmountA : res?.coinAmountB\n            const _fromAmountValue = getTokenAmountValue(fromToken?.coin_type, _fromAmount)\n            const _toAmountValue = getTokenAmountValue(toToken?.coin_type, amount + '')\n            const _totalAmountValue = d(_fromAmountValue).plus(_toAmountValue).toString()\n            console.log(_fromAmount, _fromAmountValue, _toAmountValue, _totalAmountValue, '_totalAmountValue')\n            setFromAmountValue(_fromAmountValue)\n            setToAmountValue(_toAmountValue)\n            setFromAmount(_fromAmount || '')\n            setTotalAmount(_totalAmountValue)\n          }\n        } else {\n          if (byAmountIn) {\n            setToAmount('')\n            setFromAmountValue('')\n            setToAmountValue('')\n            setTotalAmount('')\n          } else {\n            setFromAmount('')\n            setFromAmountValue('')\n            setToAmountValue('')\n            setTotalAmount('')\n          }\n        }\n      } else {\n        setFromAmount('')\n        setToAmount('')\n        setFromAmountValue('')\n        setToAmountValue('')\n        setTotalAmount('')\n      }\n      if (res) {\n        setLiquidityAmount(res?.liquidityAmount || '')\n        // if ([fromTokenLock, toTokenLock]?.filter(Boolean).length !== 1) {\n        //   //    const rateMap = calcCoinProportion(res.coinAmountA, res.coinAmountB, currentPriceData?.currentPrice, isFullRange)\n        //   //  setPercentMap(rateMap)\n        // }\n      }\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      handlePreCalc({ amount: byAmountIn ? fromAmount : toAmount, isTokenA, isFullRange })\n    },\n    [\n      JSON.stringify(apiPoolInfo),\n      currentPriceData,\n      lowerTickData?.tick,\n      upperTickData?.tick,\n      fromAmount,\n      toAmount,\n      byAmountIn,\n      isTokenA,\n      fromTokenLock,\n      toTokenLock,\n      isFullRange\n    ],\n    { wait: 300 }\n  )\n\n  const handleAmountChange = (value: string, _byAmountIn: boolean, _isTokenA?: boolean) => {\n    setByAmountIn(_byAmountIn)\n    if (_byAmountIn) {\n      setFromAmount(value)\n    } else {\n      setToAmount(value)\n    }\n    if (_isTokenA !== undefined) {\n      setIsTokenA(_isTokenA)\n    } else {\n      setIsTokenA(false)\n    }\n  }\n\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromToken)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n\n  useDeepCompareEffect(() => {\n    if (byAmountIn) {\n      setIsTokenA(fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n    } else {\n      setIsTokenA(toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n    }\n  }, [apiPoolInfo, byAmountIn, fromToken, toToken])\n\n  useEffect(() => {\n    if (\n      lowerTickData?.tick === TickUtil.getMinIndex(Number(lowerTickData?.tickSpacing || 0)) &&\n      upperTickData?.tick === TickUtil.getMaxIndex(Number(upperTickData?.tickSpacing || 0))\n    ) {\n      setIsFullRange(true)\n    } else {\n      setIsFullRange(false)\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick])\n\n  useEffect(() => {\n    if (contractPoolInfo?.current_tick_index !== undefined && isAvailableObject(lowerTickData) && isAvailableObject(upperTickData)) {\n      if (d(lowerTickData?.tick).gte(d(upperTickData.tick))) {\n        setFromTokenLock(true)\n        setToTokenLock(true)\n      } else {\n        if (d(lowerTickData?.tick).gt(contractPoolInfo?.current_tick_index)) {\n          setFromTokenLock(!direct)\n          setToTokenLock(!!direct)\n        } else if (d(upperTickData.tick).lte(contractPoolInfo?.current_tick_index)) {\n          setFromTokenLock(!!direct)\n          setToTokenLock(!direct)\n        } else {\n          setFromTokenLock(false)\n          setToTokenLock(false)\n        }\n      }\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick, contractPoolInfo, direct])\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n\n  const handleAdd = debounce(\n    () => {\n      if (!currentAccount) {\n        onWalletModal(true)\n      } else {\n        setConfirmModalOpen(true)\n      }\n    },\n    300,\n    { leading: true, trailing: false }\n  )\n\n  const resetInputAmount = () => {\n    setFromAmount('')\n    setToAmount('')\n    setFromAmountValue('')\n    setToAmountValue('')\n    setTotalAmount('')\n  }\n\n  const { fetchAccountBalance } = useAccountBalance()\n  const handleSubmit = async () => {\n    try {\n      let tx\n      let toastInfo: ToastType\n      let msafeParams\n      if (!useZapIn) {\n        const inputAmount = byAmountIn ? fromAmount : toAmount\n        const tokenDecimals = byAmountIn ? fromToken?.decimals : toToken?.decimals\n        const amount = d(inputAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n\n        const fixAmountA =\n          byAmountIn && fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n            ? true\n            : toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type && !byAmountIn\n              ? true\n              : false\n        let amount_a\n        let amount_b\n        const lowerTick = lowerTickData.tick\n        const upperTick = upperTickData.tick\n        const currentTickIndex = contractPoolInfo?.current_tick_index\n\n        if (lowerTick !== undefined && upperTick !== undefined && currentTickIndex !== undefined) {\n          if (currentTickIndex >= lowerTick && currentTickIndex <= upperTick) {\n            amount_a = fixAmountA ? amount : tokenMaxA\n            amount_b = fixAmountA ? tokenMaxB : amount\n          } else if (currentTickIndex > upperTick) {\n            amount_a = 0\n            amount_b = amount\n          } else if (currentTickIndex < lowerTick) {\n            amount_a = amount\n            amount_b = 0\n          }\n        }\n\n        let rewarderCoinTypes: string[] = []\n        if (contractPoolInfo?.index) {\n          const { rewarder_infos } = contractPoolInfo\n          rewarderCoinTypes =\n            (rewarder_infos?.length > 0 &&\n              rewarder_infos?.map((ele: any) => {\n                return ele.coinAddress\n              })) ||\n            []\n        }\n\n        const params: any = {\n          poolAddress: contractPoolInfo?.poolAddress,\n          coinTypeA: contractPoolInfo?.coinTypeA,\n          coinTypeB: contractPoolInfo?.coinTypeB,\n          amountA: amount_a,\n          amountB: amount_b,\n          fixAmountA,\n          lowerTick,\n          upperTick,\n          // currentSqrtPrice: currentPosPoolsRelatedData?.curSqrtPrice,\n          currentSqrtPrice: contractPoolInfo?.current_sqrt_price,\n          rewarderCoinTypes,\n          farmsPoolId: apiPoolInfo?.farmsPoolAddress\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Add ' + [formatDescription(fromAmount, fromToken?.symbol), formatDescription(toAmount, toToken?.symbol)].filter(Boolean).join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = fromAmount\n              let amountBF = toAmount\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, fromToken) || fromAmount\n                amountBF = getBalanceChanges(balanceChanges, toToken) || toAmount\n              }\n              const description =\n                'Add ' + [formatDescription(amountAF, fromToken?.symbol), formatDescription(amountBF, toToken?.symbol)].filter(Boolean).join(' and ')\n\n              info.toastDescriptionContent = description\n              info.modalDescriptionText = description\n              info.toastTitleText = 'Supplied Successful'\n            }\n\n            return info\n          }\n        }\n        transactionConfirmation(toastInfo)\n\n        if (autoStakePosition) {\n          const res = await getFarmsCreateAddData(params)\n          tx = res?.tx\n          msafeParams = res?.msafeParams\n        } else {\n          const res = await getClmmCreateAddData(params)\n          tx = res?.tx\n          msafeParams = res?.msafeParams\n        }\n      } else {\n        toastInfo = getZapDepositToastInfo()\n        transactionConfirmation(toastInfo)\n        tx = await getZapDepositTx(lowerTickData?.tick, upperTickData?.tick, autoStakePosition)\n      }\n\n      let res = await signAndExecuteTransaction(tx, toastInfo, {\n        useDevInspect: true,\n        useMev: mevProtect,\n        showSuccessModal: false,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams\n      })\n\n      if (res) {\n        console.log('🚀🚀🚀 ~ file: useAddLiquidity.ts:403 ~ handleSubmit ~ res:', res)\n        console.log('🚀🚀🚀 ~ file: useAddLiquidity.ts:411 ~ handleSubmit ~ isChecked:', isChecked)\n        if (res?.events?.length === 0) {\n          res = await getTransactionStatus(res.digest)\n        }\n        const { posId, farmsPosId } = parsePositionIdFromEvent(res)\n        console.log('🚀 ~ file: useAddLiquidity.ts:436 ~ handleSubmit ~ posId:', { posId, farmsPosId })\n        if (posId) {\n          setNftOpen(true)\n          if (farmsPosId) {\n            setRelatedPosId(farmsPosId)\n          } else {\n            setRelatedPosId(posId)\n          }\n        } else {\n          transactionSuccess(toastInfo)\n        }\n\n        if (isChecked) {\n          const params = { subscriptionSource: 'AddLiquidity', events: res.events }\n          notifiSubscription(params)\n        }\n        // 重新拿数据\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        getList()\n      } else {\n        // 如果失败，大概率都是池子价格变化了，重新手动获取一次池子价格，避免用户重复提交导致再次失败\n        if (contractPoolInfo) {\n          getContractPoolInfo(contractPoolInfo?.poolAddress).then(res => {\n            reCalculateZapData()\n          })\n        }\n      }\n    } catch (error) {\n      console.error(error, 'handleSubmit ~ error')\n      const errorLowerString = String(error).toLocaleLowerCase()\n      if (errorLowerString.includes('user') && errorLowerString.includes('reject')) {\n        if (apiPoolInfo?.poolAddress) {\n          const _contractPoolInfo = await getContractPoolInfo(apiPoolInfo?.poolAddress)\n          if (_contractPoolInfo) {\n            getCurrentPrice(_contractPoolInfo?.current_sqrt_price, apiPoolInfo)\n          }\n        }\n      }\n      throw new Error(error)\n    }\n  }\n\n  const handleChangeZapIn = () => {\n    setUseZapIn(!useZapIn)\n  }\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [useZapIn])\n\n  return {\n    percentMap,\n    handleAmountChange,\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    byAmountIn,\n    setByAmountIn,\n    fromAmount,\n    fromAmountValue,\n    setFromAmount,\n    toAmount,\n    toAmountValue,\n    setToAmount,\n    liquidityAmount,\n    fromBalanceInfo,\n    toBalanceInfo,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock,\n    handleAdd,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    handleSubmit,\n    useZapIn,\n    handleChangeZapIn\n  }\n}\n\nexport default useAddLiquidity\n","import useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport { useAccountStore } from '@cetus/stores'\nimport { d, textEllipses } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nfunction useAddLiquidityButton() {\n  const { fromAmount, toAmount, fromToken, toToken, fromTokenLock, toTokenLock, liquidityAmount } = useAddLiquidityStore()\n  const { currentAccount } = useAccountStore()\n\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromToken)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Add Liquidity',\n      disabled: false\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!fromTokenLock && !toTokenLock && (!fromAmount || !toAmount || (fromAmount && !+fromAmount) || (toAmount && !+toAmount))) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (fromTokenLock && !toTokenLock && (!toAmount || (toAmount && !+toAmount))) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    if (toTokenLock && !fromTokenLock && (!fromAmount || (fromAmount && !+fromAmount))) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //判断余额\n    if (fromAmount && +fromAmount && d(fromAmount).gt(fromBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(fromToken?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    //判断余额\n    if (toAmount && +toAmount && d(toAmount).gt(toBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(toToken?.symbol, 10)} Balance`\n      return btnInfo\n    }\n\n    if (!fromTokenLock && !toTokenLock && (!fromAmount || !toAmount)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (d(liquidityAmount).lte('0')) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    fromAmount,\n    toAmount,\n    fromBalanceInfo?.balanceDisplay,\n    toBalanceInfo?.balanceDisplay,\n    fromToken,\n    toToken,\n    fromTokenLock,\n    toTokenLock,\n    liquidityAmount\n  ])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n\nexport default useAddLiquidityButton\n","import { d, formatNumber } from '@cetus/utils'\n\nfunction useGetLeverage() {\n  const getLeverage = (minPrice?: string | number, maxPrice?: string | number) => {\n    if (minPrice && maxPrice) {\n      if (minPrice !== '0' && maxPrice !== '∞') {\n        return formatNumber(1 / (1 - Number(d(minPrice).div(maxPrice).toNumber() ** 0.25)), 2) + 'x'\n      } else {\n        return '1x'\n      }\n    }\n\n    return '1x'\n  }\n  return {\n    getLeverage\n  }\n}\n\nexport default useGetLeverage\n","import useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Token } from '@cetus/types'\nimport { d, textEllipses } from '@cetus/utils'\nimport { useEffect, useMemo, useState } from 'react'\nimport useGetLeverage from '../common/useGetLeverage'\nimport usePriceRange from './usePriceRange'\n\ntype DepositProps<T> = {\n  rangeTabList: T[]\n}\n\nfunction useDeposit<T>({ rangeTabList }: DepositProps<T>) {\n  // 获取流动性池信息 Get liquidity pool information\n  const { apiPoolInfo } = useLiquidityStore()\n\n  // 获取添加流动性相关状态和方法 Get add liquidity related states and methods\n  const {\n    fromToken,\n    toToken,\n    setFromToken,\n    setToToken,\n    byAmountIn,\n    setByAmountIn,\n    setIsFarmRewardsRange,\n    setAutoStakePosition,\n    fromTokenLock,\n    toTokenLock,\n    fromAmount,\n    toAmount,\n    setFromAmount,\n    setToAmount\n  } = useAddLiquidityStore()\n\n  // 获取价格范围数据 Get price range data\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const [currentRangeTab, setCurrentRangeTab] = useState<string>()\n  const { handleInitTickData } = usePriceRange()\n  const { getLeverage } = useGetLeverage()\n\n  // 初始化当前选中coin标签 Initialize current coin tab\n  useEffect(() => {\n    if (apiPoolInfo) {\n      const coinType = apiPoolInfo?.displayTokenA?.coin_type\n      setCurrentRangeTab(coinType)\n    }\n  }, [apiPoolInfo?.poolAddress])\n\n  // 计算方向 Calculate direction\n  const direct = useMemo(() => {\n    return currentRangeTab === apiPoolInfo?.tokenA?.coin_type\n  }, [currentRangeTab, apiPoolInfo?.tokenA?.coin_type])\n\n  // 计算价格显示文本 Calculate price display text\n  const perText = useMemo(() => {\n    if (!apiPoolInfo?.tokenA || !apiPoolInfo?.tokenB) return ''\n    return direct\n      ? `${textEllipses(apiPoolInfo?.tokenB?.symbol, 10)} per ${textEllipses(apiPoolInfo?.tokenA?.symbol, 10)}`\n      : `${textEllipses(apiPoolInfo?.tokenA?.symbol, 10)} per ${textEllipses(apiPoolInfo?.tokenB?.symbol, 10)}`\n  }, [direct, apiPoolInfo?.tokenA as Token, apiPoolInfo?.tokenB as Token])\n\n  // 计算杠杆率 Calculate leverage\n  const leverage = useMemo(() => {\n    const minPrice = lowerTickData?.price\n    const maxPrice = upperTickData?.price\n    return getLeverage(minPrice, maxPrice)\n  }, [lowerTickData?.price, upperTickData?.price])\n\n  // 处理farm奖励范围变化 Handle farm rewards range change\n  const handleChangeIsFarmRewardsRange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsFarmRewardsRange(event.target.checked)\n    if (event.target.checked && apiPoolInfo?.farmsEffectiveTickLower && apiPoolInfo?.farmsEffectiveTickUpper) {\n      handleInitTickData(apiPoolInfo?.farmsEffectiveTickLower, apiPoolInfo?.farmsEffectiveTickUpper, apiPoolInfo)\n    }\n  }\n\n  // 监控farm奖励范围 Monitor farm rewards range\n  useEffect(() => {\n    if (d(lowerTickData?.tick).eq(d(apiPoolInfo?.farmsEffectiveTickLower)) && d(upperTickData?.tick).eq(d(apiPoolInfo?.farmsEffectiveTickUpper))) {\n      setIsFarmRewardsRange(true)\n    } else {\n      setIsFarmRewardsRange(false)\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick, apiPoolInfo?.farmsEffectiveTickLower, apiPoolInfo?.farmsEffectiveTickUpper])\n\n  // 判断是否为全范围 Check if full range\n  const isFullRange = useMemo(() => {\n    return lowerTickData?.price === '0' && upperTickData?.price === '∞'\n  }, [lowerTickData?.price, upperTickData?.price])\n\n  // 处理tab反转点击 Handle tab reverse click\n  const onReverseClick = (item?: Tab) => {\n    if (item && item?.coin_type) {\n      setCurrentRangeTab(item?.coin_type)\n    } else {\n      setCurrentRangeTab(rangeTabList?.find(tab => tab.key !== currentRangeTab)?.key)\n    }\n    setFromToken(toToken)\n    setToToken(fromToken)\n    setByAmountIn(!byAmountIn)\n    if (byAmountIn) {\n      setToAmount(fromAmount)\n      setFromAmount('')\n    } else {\n      setFromAmount(toAmount)\n      setToAmount('')\n    }\n  }\n\n  // 处理自动质押仓位 Handle auto stake position\n  useEffect(() => {\n    if (apiPoolInfo?.haveFarming) {\n      if (fromTokenLock || toTokenLock) {\n        setAutoStakePosition(false)\n      } else {\n        setAutoStakePosition(true)\n      }\n    }\n  }, [fromTokenLock, toTokenLock, apiPoolInfo?.haveFarming])\n\n  // 处理输入框锁定状态 Handle input lock status\n  useEffect(() => {\n    if (byAmountIn && fromTokenLock && !toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n    if (!byAmountIn && !fromTokenLock && toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n    if (byAmountIn && !fromTokenLock && toTokenLock) {\n      setToAmount('')\n    }\n    if (!byAmountIn && fromTokenLock && !toTokenLock) {\n      setFromAmount('')\n    }\n    if (fromTokenLock && toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n  }, [fromTokenLock, toTokenLock])\n\n  return {\n    direct,\n    perText,\n    handleChangeIsFarmRewardsRange,\n    onReverseClick,\n    leverage,\n    currentRangeTab,\n    isFullRange\n  }\n}\n\nexport default useDeposit\n","import usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { cancelBubble, formatPrice, textEllipses } from '@cetus/utils'\nimport { Button, HStack, Modal, ModalBody, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useLayoutEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ninterface NFTModalProps {\n  onClose: () => void\n  posId: string\n  tokenA: Token\n  tokenB: Token\n  fee: string\n  isReverse: boolean\n}\nfunction NFTModal({ onClose, posId, tokenA, tokenB, fee, isReverse }: NFTModalProps) {\n  const navigate = useNavigate()\n  const [isDirect, setIsDirect] = useState(true)\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n\n  useLayoutEffect(() => {\n    if (isReverse) {\n      setIsDirect(false)\n    }\n  }, [isReverse])\n\n  return (\n    <Modal isOpen={true} autoFocus={false} returnFocusOnClose={false} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent w=\"400px\">\n        <ModalHeader>\n          <HStack justify=\"space-between\" w=\"100%\">\n            <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Open position successful\n            </Text>\n            <Button onClick={onClose} variant=\"unstyled\" p=\"0\" minW=\"unset\" minH=\"unset\" w=\"20px\" h=\"20px\">\n              <Icon xlinkHref=\"#icon-icon_close\" />\n            </Button>\n          </HStack>\n        </ModalHeader>\n\n        <ModalBody>\n          <VStack gap=\"36px\">\n            <VStack\n              gap=\"16px\"\n              bg=\"center / contain no-repeat url('/images/active-sui.gif') \"\n              w=\"240px\"\n              h=\"240px\"\n              justify=\"center\"\n              border=\"1px solid\"\n              borderColor=\"border\"\n              borderRadius=\"16px\"\n            >\n              <CoinPairImage\n                coinAIconUrl={tokenA?.logo_url}\n                coinBIconUrl={tokenB?.logo_url}\n                coinACoinType={tokenA?.coin_type}\n                coinBCoinType={tokenB?.coin_type}\n                w=\"48px\"\n                h=\"48px\"\n              />\n              <Text fontSize=\"20px\" fontWeight=\"500\" color=\"text_caption\" lineHeight=\"28px\">\n                {textEllipses(tokenA?.symbol, 10)} - {textEllipses(tokenB?.symbol, 10)}\n              </Text>\n\n              <HStack bg=\"bg_secondary\" p=\"8px 12px\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"12px\">\n                <Text fontSize=\"14px\">Fee tier</Text>\n                <Text fontSize=\"14px\" color=\"text_highlight\">\n                  {fee}\n                </Text>\n              </HStack>\n            </VStack>\n            <VStack w=\"100%\" justify=\"center\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" bg=\"input_bg\" p=\"16px 8px\">\n              <Text color=\"text_caption\" whiteSpace=\"nowrap\">\n                {isDirect ? formatPrice(lowerTickData?.price, 6) : formatPrice(upperTickData?.reversePrice, 6)} -&nbsp;\n                {isDirect ? formatPrice(upperTickData?.price, 6) : formatPrice(lowerTickData?.reversePrice, 6)}\n              </Text>\n              <HStack>\n                <HStack gap=\"0\">\n                  <Text color=\"primary_gray\">\n                    {textEllipses(isDirect ? (isReverse ? tokenA?.symbol : tokenB?.symbol) : isReverse ? tokenB?.symbol : tokenA?.symbol, 10)}\n                  </Text>\n                  <Text color=\"primary_gray\">&nbsp;per&nbsp;</Text>\n                  <Text color=\"primary_gray\">\n                    {textEllipses(isDirect ? (isReverse ? tokenB?.symbol : tokenA?.symbol) : isReverse ? tokenA?.symbol : tokenB?.symbol, 10)}\n                  </Text>\n                </HStack>\n                <Icon\n                  xlinkHref=\"#icon-icon_swap1\"\n                  w=\"16px\"\n                  h=\"16px\"\n                  onClick={(e: any) => {\n                    cancelBubble(e)\n                    setIsDirect(!isDirect)\n                  }}\n                />\n              </HStack>\n            </VStack>\n          </VStack>\n        </ModalBody>\n\n        <ModalFooter p=\"20px 0 0\">\n          <Button flex=\"1\" onClick={() => navigate(`/position-detail/${posId}`)} h=\"52px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\">\n            View Detail\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default NFTModal\n","import usePriceRange from '@/hooks/liquidity/usePriceRange'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { TickData } from '@/types'\nimport { Stack } from '@chakra-ui/react'\nimport PriceInput from './PriceInput'\n\nexport default function ControlPriceRange({\n  perText,\n  direct,\n  minPriceData,\n  maxPriceData,\n  isFullRange = false\n}: {\n  perText: string\n  direct: boolean\n  minPriceData: Partial<TickData>\n  maxPriceData: Partial<TickData>\n  isFullRange?: boolean\n}) {\n  const { tickDataLoading } = usePriceRangeStore()\n  const { handleAddPrice, handleSubPrice, setTickDataBasedOnPrice } = usePriceRange()\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap={{ base: '8px', lg: '16px' }}>\n      <PriceInput\n        title=\"Min Price\"\n        perText={perText}\n        data={minPriceData}\n        direct={direct}\n        loading={tickDataLoading}\n        handleAddPrice={handleAddPrice}\n        handleSubPrice={handleSubPrice}\n        setTickDataBasedOnPrice={setTickDataBasedOnPrice}\n        isFullRange={isFullRange}\n      />\n      <PriceInput\n        title=\"Max Price\"\n        perText={perText}\n        data={maxPriceData}\n        direct={direct}\n        loading={tickDataLoading}\n        handleAddPrice={handleAddPrice}\n        handleSubPrice={handleSubPrice}\n        setTickDataBasedOnPrice={setTickDataBasedOnPrice}\n        isFullRange={isFullRange}\n      />\n    </Stack>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { cancelBubble } from '@cetus/utils'\nimport { Box, HStack, Skeleton, Stack, Switch, Text, VStack } from '@chakra-ui/react'\nimport FarmingIcon from '../common/FarmingIcon'\n\nconst FarmRewardsRange = ({\n  minPrice,\n  maxPrice,\n  perText,\n  checked,\n  onChange,\n  loading\n}: {\n  minPrice: string\n  maxPrice: string\n  perText: string\n  checked: boolean\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  loading?: boolean\n}) => {\n  return (\n    <HStack w=\"100%\" justify={{ base: 'space-between', lg: 'center' }} align={{ base: 'flex-start', lg: 'center' }} p={{ base: '0 12px', lg: '0' }}>\n      <Stack flexDir={{ base: 'column', lg: 'row' }}>\n        <HStack>\n          <FarmingIcon\n            tooltip={\n              <Box as=\"div\" lineHeight=\"20px\" fontSize=\"12px\">\n                Farm reward range: Only liquidity within this range is eligible to receive farming rewards of the pool. &nbsp;\n                <Box\n                  as=\"a\"\n                  color=\"primary\"\n                  onClick={(e: any) => {\n                    cancelBubble(e)\n                    window.open('https://medium.com/@CetusProtocol/cetus-new-farms-everything-you-should-know-about-it-c6b60e6a6ae5')\n                  }}\n                >\n                  Learn More\n                </Box>\n              </Box>\n            }\n          />\n          <Text>Farm rewards range</Text>\n        </HStack>\n        <HStack>\n          {loading ? (\n            <Skeleton w=\"120px\" h=\"14px\" />\n          ) : (\n            <Text color=\"primary_yellow\">\n              {minPrice}&nbsp;-&nbsp;{maxPrice}\n            </Text>\n          )}\n\n          <Text>{perText}</Text>\n        </HStack>\n      </Stack>\n\n      <Switch isChecked={checked} onChange={onChange} />\n    </HStack>\n  )\n}\n\nconst AutoStakePosition = ({\n  disabled,\n  checked,\n  onChange\n}: {\n  disabled: boolean\n  checked: boolean\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}) => {\n  return (\n    <HStack\n      p={{ base: '16px 8px', lg: '16px 8px' }}\n      border={{ base: 'none', lg: '1px solid' }}\n      borderColor={{ base: 'transparent', lg: 'border' }}\n      borderRadius={{ base: '12px', lg: '12px' }}\n      bg=\"bg_eight\"\n      gap=\"12px\"\n      width=\"100%\"\n    >\n      {/* <FarmingIcon flex=\"0 0 24px\" h=\"24px\" /> */}\n      <Text lineHeight=\"20px\" color=\"text_highlight\" fontSize=\"12px\">\n        Automatically stake your position into the farm to enjoy higher yield.\n      </Text>\n      {disabled ? (\n        <CetusTooltip\n          tooltip={\n            <VStack gap=\"4px\" align=\"flex-start\">\n              <Text fontSize=\"12px\">Farming rewards only available</Text>\n              <Text fontSize=\"12px\">for active positions.</Text>\n            </VStack>\n          }\n          placement=\"top\"\n          maxW=\"198px\"\n        >\n          <Switch isChecked={checked} disabled={disabled} maxW=\"24px\" onChange={onChange} />\n        </CetusTooltip>\n      ) : (\n        <Switch isChecked={checked} disabled={disabled} maxW=\"24px\" onChange={onChange} />\n      )}\n    </HStack>\n  )\n}\n\nexport { AutoStakePosition, FarmRewardsRange }\n","import { RecommendRangesType } from '@/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface DepositState {\n  priceRangeMap: Record<string, object> | null\n  setPriceRangeMap: (value: Record<string, object> | null) => void\n  recommendRangesInfo: RecommendRangesType | null\n  setRecommendRangesInfo: (value: RecommendRangesType | null) => void\n  resetDeposit: () => void\n}\n\nconst store: StateCreator<DepositState> = (set, get) => ({\n  priceRangeMap: null,\n  setPriceRangeMap: (value: Record<string, object> | null) => {\n    set(() => ({\n      priceRangeMap: value\n    }))\n  },\n  recommendRangesInfo: null,\n  setRecommendRangesInfo: (value: RecommendRangesType | null) => {\n    set(() => ({\n      recommendRangesInfo: value\n    }))\n  },\n  resetDeposit: () => {\n    set(() => ({\n      priceRangeMap: null,\n      recommendRangesInfo: null\n    }))\n  }\n})\n\nconst useDepositStore = create(store)\nexport default useDepositStore\n","import useLiquidityStore from '@/store/liquidity'\nimport useDepositStore from '@/store/liquidity/deposit'\nimport { SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatPrice, isAvailableObject } from '@cetus/utils'\nimport { Center, Divider, HStack, Stack, StackProps, Text } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nconst dateTypeList = [\n  {\n    label: '24H',\n    key: 'day'\n  },\n  {\n    label: '7D',\n    key: 'week'\n  },\n  {\n    label: '30D',\n    key: 'month'\n  }\n]\n\nfunction PriceRangeForDate({ direct, wrapStyle = {} }: { direct: boolean; wrapStyle?: StackProps }) {\n  const { priceRangeMap } = useDepositStore()\n  const [tab, setTab] = useState({ type: '30D', key: 'month' })\n  const { minPriceForDate, maxPriceForDate, setMinPriceForDate, setMaxPriceForDate } = useLiquidityStore()\n  useEffect(() => {\n    let _min = ''\n    let _max = ''\n    if (isAvailableObject(priceRangeMap)) {\n      const lowest = (priceRangeMap as any)[tab?.key]?.[0]\n      const lowValue = direct ? lowest : d(1).div(lowest).toString()\n      const highest = (priceRangeMap as any)[tab?.key]?.[1]\n      const highValue = direct ? highest : d(1).div(highest).toString()\n      _min = formatPrice(lowValue, 6)\n      _max = formatPrice(highValue, 6)\n    } else {\n      _min = '-'\n      _max = '-'\n    }\n    setMinPriceForDate(_min)\n    setMaxPriceForDate(_max)\n  }, [direct, tab.key, priceRangeMap])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <HStack w=\"100%\" justify=\"space-between\" {...wrapStyle}>\n      <Stack flexDir={{ base: 'column', lg: 'row' }} align={{ base: 'flex-start', lg: 'center' }}>\n        <HStack>\n          <Center borderRadius=\"4px\" border=\"1px solid\" borderColor=\"border\" w=\"20px\" h=\"20px\" color=\"text_caption\">\n            <Divider w=\"14px\" border=\"1px dashed\" />\n          </Center>\n          <Text fontSize=\"12px\" whiteSpace=\"nowrap\">\n            {tab?.type}&nbsp;Price Range\n          </Text>\n        </HStack>\n\n        <Text color=\"text_caption\" fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\">\n          {direct ? minPriceForDate : maxPriceForDate}&nbsp;-&nbsp;\n          {direct ? maxPriceForDate : minPriceForDate}\n        </Text>\n      </Stack>\n      <SelectTab<any, any>\n        type=\"outlineTab\"\n        tabList={dateTypeList}\n        currentTab={tab}\n        handleChangeTab={tab => {\n          setTab({ type: tab.label, key: tab.key })\n        }}\n        isActive={(currentTab, tab) => currentTab.key === tab.key}\n        wrapStyle={{\n          h: isApp ? '28px' : '20px',\n          p: '1px',\n          border: '1px solid',\n          borderColor: 'border',\n          borderRadius: { base: '8px', lg: '4px' },\n          gap: '0px',\n          w: 'auto'\n        }}\n        itemStyle={{\n          h: isApp ? '24px' : '16px',\n          p: '2px 8px',\n          fontSize: '12px',\n          borderRadius: '4px',\n          flex: 1\n        }}\n      />\n    </HStack>\n  )\n}\n\nexport default PriceRangeForDate\n","import { GetRecommendRangesListParams, RecommendRange } from '@/types'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { getNearestTickByTick, TickUtil } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useState } from 'react'\n\nexport default function useGetRecommendRanges() {\n  const [poolType, setPoolType] = useState('')\n\n  // 获取稳定区间\n  const getStableRange = (farmsEffectTickLower: number, farmsEffectTickUpper: number) => ({\n    default: {\n      lower: farmsEffectTickLower,\n      upper: farmsEffectTickUpper,\n      sort: 3\n    }\n  })\n\n  // 获取全范围区间\n  const getFullRange = (tickSpacing: number) => ({\n    'full range': {\n      lower: TickUtil.getMinIndex(tickSpacing),\n      upper: TickUtil.getMaxIndex(tickSpacing),\n      sort: 2\n    }\n  })\n\n  // 获取自定义区间\n  const getCustomRange = (currentTick: number, type: string, tickSpacing: number) => {\n    const addTick = d(tickSpacing)\n      .mul(type === 'unstable' ? 2 : 3)\n      .toNumber()\n    const nearesCurrentTick = getNearestTickByTick(Number(currentTick), Number(tickSpacing))\n\n    return {\n      custom: {\n        lower: d(nearesCurrentTick).sub(addTick).toNumber(),\n        upper: d(nearesCurrentTick).add(addTick).toNumber(),\n        sort: 1\n      }\n    }\n  }\n\n  // 获取推荐区间列表\n  const getRecommendRangesList = async (params: GetRecommendRangesListParams): Promise<{ rangeList: RecommendRange[]; error: boolean }> => {\n    try {\n      const stableRange =\n        params.farmsEffectTickLower && params.farmsEffectTickUpper ? getStableRange(params.farmsEffectTickLower, params.farmsEffectTickUpper) : null\n\n      const recommendRangesResult =\n        params.farmsEffectTickLower && params.farmsEffectTickUpper ? { ranges: {}, type: '' } : params?.recommendRangesInfo\n      console.log(recommendRangesResult, 'recommendRangesResult')\n      if (recommendRangesResult) {\n        // 更新 poolType\n        setPoolType(recommendRangesResult.type)\n        const fullRange = getFullRange(params.tickSpacing)\n        const customRange = getCustomRange(params.currentTick, recommendRangesResult.type, params.tickSpacing)\n\n        const combinedRanges = {\n          ...stableRange,\n          ...recommendRangesResult.ranges,\n          ...fullRange,\n          ...customRange\n        }\n        const rangesList = Object.entries(combinedRanges)\n          .map(([key, value]) => ({ key, ...value }))\n          .sort((a, b) => b.sort - a.sort)\n\n        if (isAvailableObject(recommendRangesResult.ranges) || isAvailableObject(stableRange)) {\n          return {\n            rangeList: rangesList,\n            error: false\n          }\n        } else {\n          return {\n            rangeList: rangesList,\n            error: true\n          }\n        }\n      } else {\n        return { rangeList: [], error: true }\n      }\n    } catch (error) {\n      console.error('Error in getRecommendRangesList:', error)\n      return { rangeList: [], error: true }\n    }\n  }\n\n  return { getRecommendRangesList, poolType }\n}\n","import usePriceRange from '@/hooks/liquidity/usePriceRange'\nimport useGetRecommendRanges from '@/hooks/liquidity/useRecommendRanges'\nimport useLiquidityStore from '@/store/liquidity'\nimport useDepositStore from '@/store/liquidity/deposit'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { RecommendRange } from '@/types'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { Box, Flex, Image, Text, Tooltip, VStack } from '@chakra-ui/react'\nimport { useDebounceEffect } from 'ahooks'\nimport { useEffect, useState } from 'react'\n\ntype SelectRecommendPriceRangeProps = {\n  poolAddress: string\n  currentTick: number\n  tickSpacing: number\n  farmsEffectTickLower?: number\n  farmsEffectTickUpper?: number\n}\n\nconst getRecommendRangeData = (rangeName: string, isActive = false) => {\n  switch (rangeName) {\n    case 'passive':\n      return {\n        name: 'Conservative',\n        image: isActive ? 'img_conservative_sel@2x.png' : 'img_conservative_nor@2x.png'\n      }\n    case 'active':\n      return {\n        name: 'Active',\n        image: isActive ? 'img_active_sel@2x.png' : 'img_active_nor@2x.png'\n      }\n    case 'full range':\n      return {\n        name: 'Full Range',\n        image: isActive ? 'img_fullrange_sel@2x.png' : 'img_fullrange_nor@2x.png'\n      }\n    case 'custom':\n      return {\n        name: 'Custom',\n        image: isActive ? 'img_custom_sel@2x.png' : 'img_custom_nor@2x.png'\n      }\n    case 'suggested':\n      return {\n        name: 'Stable',\n        image: isActive ? 'img_stable_sel@2x.png' : 'img_stable_nor@2x.png'\n      }\n    default:\n      return {\n        name: 'Default',\n        image: isActive ? 'img_stable_sel@2x.png' : 'img_stable_nor@2x.png'\n      }\n  }\n}\n\nconst getRecommendRangeTipText = (rangeName: string) => {\n  switch (rangeName) {\n    case 'passive':\n      return 'Lower yields and lower impermanent loss. Less frequent rebalancing.'\n    case 'active':\n      return 'Higher yields but higher impermanent loss potentially. Requires frequent rebalancing.'\n    case 'full range':\n      return 'Full range positions are active all the time with no need to be rebalanced but may earn less fees than concentrated liquidity.'\n    case 'custom':\n      return 'Recommended only if you understand how concentrated liquidity works.'\n    case 'suggested':\n      return 'Stable range according to the price history of last 7 days.'\n    default:\n      return 'The default range of this pool is set following the real-time valid range of its farm.'\n  }\n}\nconst rangeWidthMap: Record<string, string> = {\n  '1': '100%',\n  '2': '50%',\n  '3': '33.33%',\n  '4': '50%'\n}\n\nexport default function SelectRecommendPriceRange(props: SelectRecommendPriceRangeProps) {\n  const { getRecommendRangesList } = useGetRecommendRanges()\n  const [recommendRanges, setRecommendRanges] = useState<RecommendRange[]>()\n  const { poolAddress, currentTick, tickSpacing, farmsEffectTickLower, farmsEffectTickUpper } = props\n  const { isApp } = useWindowWidth()\n  const { handleInitTickData } = usePriceRange()\n  const { apiPoolInfo, currentRange, setCurrentRange } = useLiquidityStore()\n  const { lowerTickData, upperTickData, setLowerTickData, setUpperTickData, setTickDataLoading, tickDataLoading } = usePriceRangeStore()\n  const { recommendRangesInfo } = useDepositStore()\n  const fetchRecommendRanges = async () => {\n    try {\n      if (!currentRange) {\n        setTickDataLoading(true)\n      }\n\n      const { rangeList, error } = await getRecommendRangesList({ ...props, recommendRangesInfo })\n      setRecommendRanges(rangeList)\n      if (error) {\n        setCurrentRange('custom')\n        if (!currentRange && apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n          const range = rangeList.find(item => item.key === 'custom')\n          if (range) {\n            handleInitTickData(range?.lower, range?.upper, apiPoolInfo)\n          }\n        }\n      } else {\n        setCurrentRange(rangeList[0]?.key)\n        if (!currentRange && apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n          handleInitTickData(rangeList[0]?.lower, rangeList[0]?.upper, apiPoolInfo)\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setTickDataLoading(false)\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      if (poolAddress && currentTick !== undefined && tickSpacing !== undefined) {\n        fetchRecommendRanges()\n      }\n    },\n    [poolAddress, tickSpacing, recommendRangesInfo],\n    { wait: 500 }\n  )\n\n  useEffect(() => {\n    if (recommendRanges && recommendRanges.length > 0 && isAvailableObject(lowerTickData) && isAvailableObject(upperTickData)) {\n      const range = recommendRanges?.find(range => d(range.lower).eq(d(lowerTickData?.tick)) && d(range.upper).eq(d(upperTickData?.tick)))\n\n      if (range) {\n        if (range.key !== currentRange) {\n          setCurrentRange(range.key)\n        }\n      } else {\n        setCurrentRange('custom')\n      }\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick, recommendRanges])\n  return (\n    <>\n      <Flex\n        w={{ base: '100%', lg: '124px' }}\n        flexDirection={{ base: 'row', lg: 'column' }}\n        flexWrap=\"wrap\"\n        border=\"1px solid\"\n        borderColor={recommendRanges && recommendRanges.length > 0 ? 'border' : 'transparent'}\n        borderRadius=\"16px\"\n        p=\"4px\"\n        rowGap={{ base: '20px', lg: '0' }}\n        bg={recommendRanges && recommendRanges.length > 0 ? 'background' : 'transparent'}\n        marginTop=\"0\"\n        minH=\"62px\"\n      >\n        {recommendRanges?.map((range, index) => {\n          return (\n            <Tooltip label={getRecommendRangeTipText(range.key)} key={range.key} lineHeight=\"1.5\" placement=\"top\" gutter={-4}>\n              <VStack\n                cursor=\"pointer\"\n                textAlign=\"center\"\n                width={{ base: recommendRanges?.length ? rangeWidthMap[recommendRanges.length + ''] : 'auto', lg: 'auto' }}\n                p=\"8px 20px\"\n                gap=\"4px\"\n                onClick={() => {\n                  if (range.key !== currentRange) {\n                    setCurrentRange(range.key)\n\n                    if (apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n                      handleInitTickData(range.lower, range.upper, apiPoolInfo)\n                    }\n                  }\n                }}\n                bg={range.key == currentRange ? 'card_bg' : 'transparent'}\n                borderRadius=\"12px\"\n                sx={{\n                  _hover: {\n                    p: {\n                      color: 'primary'\n                    }\n                  }\n                }}\n              >\n                <Image\n                  decoding=\"async\"\n                  display={range.key === currentRange ? 'block' : 'none'}\n                  src={`/images/${getRecommendRangeData(range.key, true)?.image}`}\n                  w=\"72px\"\n                  h={range.key === currentRange ? '22px' : '0px'}\n                  fallback={<Box bg=\"background\" w=\"72px\" h={range.key === currentRange ? '22px' : '0px'} borderRadius=\"4px\" />}\n                />\n                <Image\n                  decoding=\"async\"\n                  display={range.key === currentRange ? 'none' : 'block'}\n                  src={`/images/${getRecommendRangeData(range.key, false)?.image}`}\n                  w=\"72px\"\n                  h={range.key === currentRange ? '0px' : '22px'}\n                  fallback={<Box bg=\"background\" w=\"72px\" h={range.key === currentRange ? '0px' : '22px'} borderRadius=\"4px\" />}\n                />\n                <Text color={range.key == currentRange ? 'primary' : 'primary_gray'} fontSize=\"12px\">\n                  {getRecommendRangeData(range.key).name}\n                </Text>\n              </VStack>\n            </Tooltip>\n          )\n        })}\n      </Flex>\n    </>\n  )\n}\n","import useGetVaultList from '@/hooks/vaults/useGetVaultList'\nimport useVaultsStore from '@/store/vaults/useVaultsList'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { VaultsAprTooltipContent } from '../list/common/VaultsAprBlock'\nimport VaultModal from '../modal/index'\n\ntype VaultBannerProps = {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  feeDisplay: string\n  clmmPool: string\n  vaultId: string\n  isReverse: boolean\n  isUnstableVault: boolean\n}\nfunction vaultBanner(props: VaultBannerProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const { displayTokenA, displayTokenB, feeDisplay, clmmPool, vaultId, isReverse, isUnstableVault } = props\n  const [vaultsAPY, setVaultsAPY] = useState('')\n  const { vaultStatsObj } = useVaultsStore()\n  const { getVaultsStats } = useGetVaultList()\n  useEffect(() => {\n    if (isAvailableObject(vaultStatsObj) && vaultStatsObj[clmmPool]) {\n      const statsItem = vaultStatsObj[clmmPool]\n      setVaultsAPY(statsItem.category == 'cetus' ? statsItem.vaultsTotalApyDisplay : statsItem.vaultsApyDisplay)\n    } else {\n      getVaultsStats()\n    }\n  }, [vaultStatsObj, clmmPool])\n\n  const { isApp } = useWindowWidth()\n  return (\n    <>\n      <VStack\n        width={isApp ? '100%' : '460px'}\n        height=\"128px\"\n        backgroundImage=\"/images/bg_autorebalancer@2x.png\"\n        backgroundSize=\"100% 100%\"\n        padding=\"12px 16px 20px\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <HStack width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text color=\"primary\" fontWeight=\"500\">\n            Join via an Auto Vault{' '}\n          </Text>\n          <HStack>\n            <HTextLabelBox\n              wrapStyle={{\n                w: 'unset',\n                gap: '6px'\n              }}\n              label=\"APY:\"\n              labelStyle={{\n                fontSize: '14px',\n                color: 'text_highlight',\n                fontWeight: '500'\n              }}\n              rightValueTip={\n                <VaultsAprTooltipContent\n                  vaultsLstApyDisplay={vaultStatsObj[clmmPool]?.vaultsLstApyDisplay || ''}\n                  vaultsApyDisplay={vaultStatsObj[clmmPool]?.vaultsApyDisplay || ''}\n                  vaultsTotalApyDisplay={vaultStatsObj[clmmPool]?.vaultsTotalApyDisplay || ''}\n                  vaultsAprDisplay={vaultStatsObj[clmmPool]?.vaultsAprDisplay}\n                  category={vaultStatsObj[clmmPool]?.category}\n                />\n              }\n              value={vaultsAPY || '-'}\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n            />\n            <Button width=\"88px\" height=\"24px\" borderRadius=\"4px\" fontSize=\"12px\" onClick={() => setIsOpen(true)} fontWeight=\"500\">\n              Deposit\n            </Button>\n          </HStack>\n        </HStack>\n        <HStack w=\"100%\" mt=\"14px\">\n          <Text lineHeight=\"20px\" maxWidth=\"290px\" fontSize=\"12px\">\n            Automate your LPing by selecting a {isUnstableVault ? '3rd party' : ''} strategy provider and enjoy higher yields powered by experts!{' '}\n          </Text>\n        </HStack>\n      </VStack>\n      <VaultModal\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        displayTokenA={displayTokenA}\n        displayTokenB={displayTokenB}\n        feeDisplay={feeDisplay}\n        clmmPool={clmmPool}\n        vaultId={vaultId}\n        isReverse={isReverse}\n        isUnstableVault={isUnstableVault}\n      />\n    </>\n  )\n}\nexport default vaultBanner\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { Box, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Skeleton, Stack, StackProps, Text } from '@chakra-ui/react'\n\nexport const CurrentPrice = ({\n  price,\n  perText,\n  wrapStyle,\n  loading\n}: {\n  price: string\n  perText: string\n  wrapStyle?: StackProps\n  loading?: boolean\n}) => {\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} align=\"flex-start\" {...wrapStyle}>\n      <Text>Current Price</Text>\n      <HStack as=\"div\" h=\"14px\">\n        {loading || price === '--' ? (\n          <Skeleton w=\"66px\" h=\"14px\" display=\"inline-block\" />\n        ) : (\n          <Text as=\"span\" color=\"text_caption\" display=\"inline-block\" h=\"14px\" lineHeight=\"14px\">\n            {price}\n          </Text>\n        )}\n        <Text as=\"span\" display=\"inline-block\" h=\"14px\" lineHeight=\"14px\">{` ${perText}`}</Text>\n      </HStack>\n    </Stack>\n  )\n}\n\nexport const Item = ({\n  label,\n  tooltip,\n  children,\n  wrapStyle = {}\n}: {\n  label: string\n  tooltip: string\n  children: React.ReactNode\n  wrapStyle?: StackProps\n}) => {\n  const { isApp } = useWindowWidth()\n  return (\n    <HStack w=\"100%\" justify=\"space-between\" {...wrapStyle}>\n      <HStack gap=\"4px\">\n        <Text>{label}</Text>\n        <Popover isLazy trigger={isApp ? 'click' : 'hover'}>\n          <PopoverTrigger>\n            <Box>\n              <Icon xlinkHref=\"#icon-icon_tips\" />\n            </Box>\n          </PopoverTrigger>\n          <PopoverContent>\n            <PopoverBody p=\"12px\" fontSize=\"12px\" lineHeight=\"20px\">\n              {tooltip}\n            </PopoverBody>\n          </PopoverContent>\n        </Popover>\n      </HStack>\n      {children}\n    </HStack>\n  )\n}\n","import Slippage from '@/components/common/Slippage'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport WithTooltipInfo from '@/components/common/WithTooltipInfo'\nimport ControlPriceRange from '@/components/liquidity/ControlPriceRange'\nimport { AutoStakePosition, FarmRewardsRange } from '@/components/liquidity/FarmRelated'\nimport LiquidityRangeChart from '@/components/liquidity/LiquidityRangeChart'\nimport PriceRangeForDate from '@/components/liquidity/PriceRangeForDate'\nimport SelectRecommendPriceRange from '@/components/liquidity/SelectRecommendPriceRange'\nimport VaultBanner from '@/components/vaults/add-liquidity/VaultsBanner'\nimport ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport ZapSwitch from '@/components/zap/ZapSwitch'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { getDisplayPrice, getDisplayReversePrice } from '@/utils/pool'\nimport { ErrorTips, SelectTab, TradeInputGroup } from '@cetus/design'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d, formatTickPrice } from '@cetus/utils'\nimport { Box, Button, Heading, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport DepositRatio from '../../common/DepositRatio'\nimport { CurrentPrice } from './common'\nimport { ProvideLiquidityProps } from './type'\n\nfunction H5ProvideLiquidity({\n  btnText,\n  btnDisabled,\n  handleChangeIsFarmRewardsRange,\n  onReverseClick,\n  leverage,\n  direct,\n  perText,\n  rangeTabList,\n  currentRangeTab,\n  fromBalanceInfo,\n  toBalanceInfo,\n  fromAmountValue,\n  toAmountValue,\n  handleAmountChange,\n  handleAdd,\n  isFullRange,\n  useZapIn,\n  handleChangeZapIn\n}: ProvideLiquidityProps) {\n  const {\n    currentPriceData,\n    contractPoolInfo,\n    apiPoolInfo,\n    resetLiquidity,\n    contractPoolInfoLoading,\n    apiPoolInfoLoading,\n    minPriceForDate,\n    maxPriceForDate\n  } = useLiquidityStore()\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n\n  const {\n    autoStakePosition,\n    setAutoStakePosition,\n    isFarmRewardsRange,\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    percentMap,\n    fromToken,\n    toToken,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock\n  } = useAddLiquidityStore()\n\n  const { poolAddress } = useQueryParams()\n  const handleChangeAutoStake = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAutoStakePosition(event.target.checked)\n  }\n\n  const currentPrice = useMemo(() => {\n    if (currentPriceData?.currentPrice && currentPriceData.pool === poolAddress) {\n      return currentPriceData?.currentPrice\n    }\n    return undefined\n  }, [currentPriceData?.currentPrice])\n\n  const { priceImpactBasedOnMarket } = usePriceImpact(\n    fromToken,\n    toToken,\n    direct ? '1' : (formatTickPrice(currentPrice) as string),\n    direct ? (formatTickPrice(currentPrice) as string) : '1',\n    true\n  )\n  const priceImpactBasedOnMarketDisplay = useMemo(() => {\n    if (priceImpactBasedOnMarket && d(priceImpactBasedOnMarket).abs().gte(30)) {\n      if (d(priceImpactBasedOnMarket).gte(30)) {\n        return `+${d(priceImpactBasedOnMarket).toFixed(0)}%`\n      }\n      return `${d(priceImpactBasedOnMarket).toFixed(0)}%`\n    }\n    return undefined\n  }, [priceImpactBasedOnMarket])\n\n  const showFarming = useMemo(() => {\n    return !!apiPoolInfo?.haveFarming && !!apiPoolInfo?.displayFarmsEffectMaxPrice && !!apiPoolInfo?.displayFarmsEffectMinPrice\n  }, [apiPoolInfo?.haveFarming, apiPoolInfo?.displayFarmsEffectMaxPrice, apiPoolInfo?.displayFarmsEffectMinPrice])\n\n  return (\n    <Box w=\"100%\">\n      <Heading fontSize=\"14px\" fontWeight=\"500\" mb=\"16px\">\n        1. Select Range\n      </Heading>\n      <SelectRecommendPriceRange\n        poolAddress={poolAddress as string}\n        currentTick={contractPoolInfo?.current_tick_index as number}\n        tickSpacing={contractPoolInfo?.tickSpacing as number}\n        farmsEffectTickLower={apiPoolInfo?.farmsEffectiveTickLower}\n        farmsEffectTickUpper={apiPoolInfo?.farmsEffectiveTickUpper}\n      />\n      {apiPoolInfoLoading ? (\n        <Skeleton mt=\"20px\" h=\"40px\" borderRadius=\"8px\" w=\"100%\" />\n      ) : (\n        <SelectTab<any, any>\n          type=\"outlineTab\"\n          tabList={rangeTabList}\n          currentTab={currentRangeTab}\n          handleChangeTab={tab => onReverseClick(tab)}\n          wrapStyle={{\n            mt: '20px',\n            h: '40px',\n            p: '3px',\n            border: '1px solid',\n            borderColor: 'border',\n            borderRadius: '8px',\n            gap: '12px'\n          }}\n          itemStyle={{\n            flex: 1,\n            h: '32px',\n            borderRadius: '4px',\n            gap: '4px'\n          }}\n        />\n      )}\n\n      <CurrentPrice\n        price={formatTickPrice(direct ? currentPriceData?.currentPrice : currentPriceData.reverseCurrentPrice, 6)}\n        perText={perText}\n        loading={contractPoolInfoLoading}\n        wrapStyle={{\n          mt: '28px',\n          gap: '12px'\n        }}\n      />\n      <VStack flex=\"1\" h=\"180px\" pos=\"relative\" mt=\"20px\">\n        <LiquidityRangeChart\n          handleClickRefresh={() => {}}\n          direct={direct}\n          minPriceData={direct ? lowerTickData : upperTickData}\n          maxPriceData={direct ? upperTickData : lowerTickData}\n          dashedMarkerLine={[minPriceForDate, maxPriceForDate]}\n        />\n      </VStack>\n      {priceImpactBasedOnMarketDisplay && (\n        <ErrorTips\n          tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n          borderRadius=\"12px\"\n          p=\"8px\"\n          w=\"100%\"\n          mt=\"90px\"\n          mb=\"-70px\"\n          tipsFontSize=\"12px\"\n        />\n      )}\n      <PriceRangeForDate direct={direct} wrapStyle={{ mt: '90px', align: 'center', gap: '20px' }} />\n      <VStack borderRadius=\"20px\" border=\"1px solid\" borderColor=\"border\" bg=\"bg_six\" mt=\"20px\" mb=\"20px\" p=\"8px\" gap=\"12px\">\n        <ControlPriceRange\n          perText={perText}\n          direct={direct}\n          isFullRange={isFullRange}\n          minPriceData={direct ? lowerTickData : upperTickData}\n          maxPriceData={direct ? upperTickData : lowerTickData}\n        />\n        {fromTokenLock && toTokenLock && (\n          <ErrorTips\n            isShowIcon={false}\n            tipsFontSize=\"12px\"\n            justifyContent=\"center\"\n            tips=\"The max price should be higher than min price.\"\n            h=\"32px\"\n            borderRadius=\"8px\"\n          />\n        )}\n      </VStack>\n      <VStack mb=\"20px\" gap=\"16px\">\n        <WithTooltipInfo\n          label=\"Leverage\"\n          tooltip=\"This parameter indicates the concentration rate of your liquidity relative to a full range position.\"\n          wrapStyle={{\n            flexDir: 'row',\n            gap: '8px',\n            p: '0 12px 0'\n          }}\n        >\n          <Text color=\"text_caption\">{fromTokenLock && toTokenLock ? '--' : leverage}</Text>\n        </WithTooltipInfo>\n        {/* </Item> */}\n\n        {apiPoolInfo?.haveFarming && apiPoolInfo?.displayFarmsEffectMaxPrice && apiPoolInfo?.displayFarmsEffectMinPrice && (\n          <FarmRewardsRange\n            minPrice={\n              direct ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMinPrice) : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMaxPrice)\n            }\n            maxPrice={\n              direct ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMaxPrice) : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMinPrice)\n            }\n            loading={apiPoolInfoLoading}\n            perText={perText}\n            checked={isFarmRewardsRange}\n            onChange={handleChangeIsFarmRewardsRange}\n          />\n        )}\n      </VStack>\n\n      <Box w=\"100%\" bg=\"bg_secondary\" borderRadius=\"20px\" border={apiPoolInfo?.haveFarming ? '1px solid' : 'none'} borderColor=\"border\">\n        <VStack\n          w=\"calc(100% + 2px)\"\n          gap=\"16px\"\n          p=\"16px 8px\"\n          bg=\"bg_six\"\n          border=\"1px solid\"\n          borderColor=\"border\"\n          borderRadius=\"20px\"\n          margin=\"-1px -1px 0 -1px\"\n        >\n          <HStack w=\"100%\" justify=\"space-between\">\n            <Heading fontSize=\"14px\" fontWeight=\"500\">\n              2. Deposit Amounts\n            </Heading>\n            <HStack>\n              <Slippage />\n              {/* <MEVProtect /> */}\n              {apiPoolInfo?.haveZap && <ZapSwitch action=\"Deposit\" value={useZapIn} onChange={handleChangeZapIn} />}\n            </HStack>\n          </HStack>\n          <VStack w=\"100%\" gap=\"12px\">\n            <Box w=\"100%\" position=\"relative\">\n              {useZapIn && !(fromTokenLock && toTokenLock) ? (\n                <ZapDeposite\n                  apiPoolInfo={apiPoolInfo}\n                  action=\"Deposit\"\n                  currentSqrtPrice={currentPriceData?.currentSqrtPrice}\n                  lowerTick={lowerTickData?.tick}\n                  upperTick={upperTickData?.tick}\n                />\n              ) : (\n                <TradeInputGroup\n                  onClick={onReverseClick}\n                  from={{\n                    wrapStyle: { h: '108px' },\n                    balance: fromBalanceInfo?.balanceFormat || '',\n                    value: fromAmount + '',\n                    amountValue: fromAmountValue,\n                    loading: false,\n                    onChange: value => {\n                      handleAmountChange(value, true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                    },\n                    selectable: false,\n                    placeholder: '0.0',\n                    token: fromToken,\n                    onFocusChange: (focus: boolean) => {\n                      if (focus && +(fromAmount + '') && !byAmountIn) {\n                        handleAmountChange(fromAmount + '', true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      }\n                    },\n                    lock: {\n                      isLock: fromTokenLock && !toTokenLock,\n                      text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                    }\n                  }}\n                  to={{\n                    wrapStyle: { h: '108px' },\n                    balance: toBalanceInfo?.balanceFormat || '',\n                    value: toAmount + '',\n                    amountValue: toAmountValue,\n                    loading: false,\n                    onFocusChange: (focus: boolean) => {\n                      if (focus && +(toAmount + '') && byAmountIn) {\n                        handleAmountChange(toAmount + '', false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      }\n                    },\n                    onChange: value => {\n                      handleAmountChange(value, false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                    },\n                    selectable: false,\n                    placeholder: '0.0',\n                    token: toToken,\n                    lock: {\n                      isLock: !fromTokenLock && toTokenLock,\n                      text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                    }\n                  }}\n                  iconParams={{\n                    xlinkHref: '#icon-icon_add',\n                    svgFill: 'text_caption'\n                  }}\n                  lock={{\n                    isLock: fromTokenLock && toTokenLock,\n                    style: { h: '224px' }\n                  }}\n                />\n              )}\n            </Box>\n          </VStack>\n          {!useZapIn && !!apiPoolInfo?.poolAddress && !(fromTokenLock && toTokenLock) && (\n            <>\n              <VStack gap=\"12px\" w=\"100%\" borderRadius=\"20px\" border=\"1px solid\" borderColor=\"border\" bg=\"background\" p=\"20px 8px\">\n                <TotalAmount totalAmount={totalAmount} loading={false} />\n                <DepositRatio\n                  type=\"image\"\n                  percentMap={percentMap}\n                  lockRatio={fromTokenLock && toTokenLock}\n                  tokenA={fromToken}\n                  tokenB={toToken}\n                  isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type}\n                />\n              </VStack>\n              <Button\n                w=\"100%\"\n                h=\"52px\"\n                fontSize=\"20px\"\n                fontWeight=\"500\"\n                borderRadius=\"16px\"\n                isDisabled={btnDisabled}\n                isLoading={false}\n                onClick={handleAdd}\n              >\n                {btnText}\n              </Button>\n            </>\n          )}\n          {useZapIn && <ZapSubmiteInfo action=\"Deposit\" isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type} />}\n          {apiPoolInfo?.haveFarming && (\n            <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n          )}\n        </VStack>\n      </Box>\n      {(apiPoolInfo?.isVaults || apiPoolInfo?.isUnstableVault) && (\n        <VStack mt=\"16px\">\n          <VaultBanner\n            displayTokenA={apiPoolInfo?.displayTokenA}\n            displayTokenB={apiPoolInfo?.displayTokenB}\n            feeDisplay={apiPoolInfo?.feeDisplay}\n            clmmPool={apiPoolInfo?.poolAddress}\n            vaultId={apiPoolInfo?.vaultId}\n            isReverse={apiPoolInfo?.isReverse}\n            isUnstableVault={apiPoolInfo?.isUnstableVault}\n          />\n        </VStack>\n      )}\n    </Box>\n  )\n}\n\nexport default H5ProvideLiquidity\n","import { HStack, StackProps, Text, VStack } from '@chakra-ui/react'\nimport React from 'react'\n\ninterface DivisionBlockProps {\n  children: React.ReactNode[]\n  title: string\n  wrapStyle?: StackProps\n}\n\nfunction DivisionBlock({ children, title, wrapStyle = {} }: DivisionBlockProps) {\n  return (\n    <VStack gap=\"8px\" p=\"10px 16px 16px\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"16px\" bg=\"bg_six\" {...wrapStyle}>\n      <HStack w=\"100%\" justify=\"space-between\" h=\"32px\">\n        <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n          {title}\n        </Text>\n        {children?.[0]}\n      </HStack>\n      {children?.[1]}\n    </VStack>\n  )\n}\n\nexport default DivisionBlock\n","import DepositRatio from '@/components/common/DepositRatio'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport WithTooltipInfo from '@/components/common/WithTooltipInfo'\nimport ControlPriceRange from '@/components/liquidity/ControlPriceRange'\nimport DivisionBlock from '@/components/liquidity/DivisionBlock'\nimport { AutoStakePosition, FarmRewardsRange } from '@/components/liquidity/FarmRelated'\nimport LiquidityRangeChart from '@/components/liquidity/LiquidityRangeChart'\nimport SelectRecommendPriceRange from '@/components/liquidity/SelectRecommendPriceRange'\nimport VaultBanner from '@/components/vaults/add-liquidity/VaultsBanner'\nimport ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport ZapSwitch from '@/components/zap/ZapSwitch'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport usePriceRangeStore from '@/store/liquidity/priceRange'\nimport { getDisplayPrice, getDisplayReversePrice } from '@/utils/pool'\nimport { ErrorTips, SelectTab, TradeInputGroup } from '@cetus/design'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d, formatTickPrice, isAvailableObject } from '@cetus/utils'\nimport { Box, Button, Center, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport PriceRangeForDate from '../PriceRangeForDate'\nimport { CurrentPrice } from './common'\nimport { ProvideLiquidityProps } from './type'\n\nfunction PCProvideLiquidity({\n  btnText,\n  btnDisabled,\n  handleChangeIsFarmRewardsRange,\n  onReverseClick,\n  leverage,\n  direct,\n  perText,\n  rangeTabList,\n  currentRangeTab,\n  fromBalanceInfo,\n  toBalanceInfo,\n  fromAmountValue,\n  toAmountValue,\n  handleAmountChange,\n  handleAdd,\n  isFullRange,\n  useZapIn,\n  handleChangeZapIn,\n  handleSubmit\n}: ProvideLiquidityProps) {\n  const {\n    currentPriceData,\n    contractPoolInfo,\n    apiPoolInfo,\n    resetLiquidity,\n    contractPoolInfoLoading,\n    apiPoolInfoLoading,\n    minPriceForDate,\n    maxPriceForDate,\n    currentRange\n  } = useLiquidityStore()\n  console.log('🚀🚀🚀 ~ PC.tsx:53 ~ apiPoolInfo:', apiPoolInfo)\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const {\n    autoStakePosition,\n    setAutoStakePosition,\n    isFarmRewardsRange,\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    percentMap,\n    fromToken,\n    toToken,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock\n  } = useAddLiquidityStore()\n  const { poolAddress } = useQueryParams()\n  const handleChangeAutoStake = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAutoStakePosition(event.target.checked)\n  }\n\n  const currentPrice = useMemo(() => {\n    if (currentPriceData?.currentPrice && currentPriceData.pool === poolAddress) {\n      return currentPriceData?.currentPrice\n    }\n    return undefined\n  }, [currentPriceData?.currentPrice])\n\n  const { priceImpactBasedOnMarket } = usePriceImpact(\n    fromToken,\n    toToken,\n    direct ? '1' : (formatTickPrice(currentPrice) as string),\n    direct ? (formatTickPrice(currentPrice) as string) : '1',\n    true\n  )\n\n  const priceImpactBasedOnMarketDisplay = useMemo(() => {\n    if (priceImpactBasedOnMarket && d(priceImpactBasedOnMarket).abs().gte(30)) {\n      if (d(priceImpactBasedOnMarket).gte(30)) {\n        return `+${d(priceImpactBasedOnMarket).toFixed(0)}%`\n      }\n      return `${d(priceImpactBasedOnMarket).toFixed(0)}%`\n    }\n    return undefined\n  }, [priceImpactBasedOnMarket])\n\n  return (\n    <>\n      <HStack gap=\"12px\" align=\"flex-start\">\n        <DivisionBlock title=\"1. Select Range\" wrapStyle={{ flex: 1, minW: '588px', gap: '0' }}>\n          {!rangeTabList || !rangeTabList.length ? (\n            <Skeleton h=\"32px\" borderRadius=\"8px\" w=\"180px\" />\n          ) : (\n            <SelectTab<any, any>\n              type=\"outlineTab\"\n              tabList={rangeTabList}\n              currentTab={currentRangeTab}\n              handleChangeTab={tab => onReverseClick(tab)}\n              wrapStyle={{\n                h: '32px',\n                p: '3px',\n                border: '1px solid',\n                borderColor: 'border',\n                borderRadius: '8px',\n                gap: '4px',\n                zIndex: '99'\n              }}\n              itemStyle={{\n                h: '24px',\n                p: '4px 12px',\n                borderRadius: '4px',\n                gap: '4px'\n              }}\n            />\n          )}\n\n          <VStack w=\"100%\" gap=\"12px\">\n            <HStack w=\"100%\" justify=\"space-between\" gap=\"32px\" mt=\"16px\">\n              <VStack flex=\"1\" pos=\"relative\" gap=\"0px\">\n                <HStack w=\"100%\" h=\"24px\" justify=\"flex-start\">\n                  <CurrentPrice\n                    loading={apiPoolInfoLoading}\n                    price={\n                      isAvailableObject(currentPriceData)\n                        ? (formatTickPrice(direct ? currentPriceData?.currentPrice : currentPriceData.reverseCurrentPrice, 6) as string)\n                        : '--'\n                    }\n                    perText={perText}\n                    wrapStyle={{\n                      ml: '156px',\n                      zIndex: 99\n                    }}\n                  />\n                </HStack>\n\n                <HStack w=\"100%\" gap=\"32px\" alignItems=\"start\">\n                  <VStack gap=\"20px\">\n                    <Center h=\"226px\" mt=\"10px\">\n                      <SelectRecommendPriceRange\n                        poolAddress={poolAddress as string}\n                        currentTick={contractPoolInfo?.current_tick_index as number}\n                        tickSpacing={contractPoolInfo?.tickSpacing as number}\n                        farmsEffectTickLower={apiPoolInfo?.farmsEffectiveTickLower}\n                        farmsEffectTickUpper={apiPoolInfo?.farmsEffectiveTickUpper}\n                      />\n                    </Center>\n\n                    {isAvailableObject(lowerTickData) && isAvailableObject(upperTickData) && (\n                      <>\n                        <WithTooltipInfo\n                          label=\"Leverage\"\n                          tooltip=\"This parameter indicates the concentration rate of your liquidity relative to a full range position.\"\n                          wrapStyle={{\n                            flexDir: 'column',\n                            align: 'center',\n                            width: 'auto',\n                            gap: '2px'\n                          }}\n                        >\n                          <Text color=\"text_caption\">{fromTokenLock && toTokenLock ? '--' : leverage}</Text>\n                        </WithTooltipInfo>\n                      </>\n                    )}\n                  </VStack>\n                  <VStack w=\"100%\" gap=\"32px\">\n                    <Box w=\"100%\" h=\"230px\">\n                      <LiquidityRangeChart\n                        handleClickRefresh={() => {}}\n                        direct={direct}\n                        minPriceData={direct ? lowerTickData : upperTickData}\n                        maxPriceData={direct ? upperTickData : lowerTickData}\n                        dashedMarkerLine={[minPriceForDate, maxPriceForDate]}\n                        currentRange={currentRange}\n                      />\n                    </Box>\n                    {priceImpactBasedOnMarketDisplay && (\n                      <ErrorTips\n                        tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n                        borderRadius=\"12px\"\n                        p=\"8px\"\n                        w=\"100%\"\n                        mb=\"-20px\"\n                        tipsFontSize=\"12px\"\n                      />\n                    )}\n\n                    {isAvailableObject(lowerTickData) && isAvailableObject(upperTickData) && (\n                      <PriceRangeForDate\n                        direct={direct}\n                        wrapStyle={{\n                          w: '100%'\n                        }}\n                      />\n                    )}\n                  </VStack>\n                </HStack>\n              </VStack>\n            </HStack>\n            <ControlPriceRange\n              perText={perText}\n              direct={direct}\n              isFullRange={isFullRange}\n              minPriceData={direct ? lowerTickData : upperTickData}\n              maxPriceData={direct ? upperTickData : lowerTickData}\n            />\n            {fromTokenLock && toTokenLock && (\n              <ErrorTips\n                isShowIcon={false}\n                tipsFontSize=\"12px\"\n                justifyContent=\"center\"\n                tips=\"The max price should be higher than min price.\"\n                h=\"32px\"\n                borderRadius=\"8px\"\n              />\n            )}\n            {apiPoolInfo?.haveFarming && apiPoolInfo?.displayFarmsEffectMaxPrice && apiPoolInfo?.displayFarmsEffectMinPrice && (\n              <FarmRewardsRange\n                minPrice={\n                  direct ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMinPrice) : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMaxPrice)\n                }\n                maxPrice={\n                  direct ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMaxPrice) : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMinPrice)\n                }\n                loading={apiPoolInfoLoading}\n                perText={perText}\n                checked={isFarmRewardsRange}\n                onChange={handleChangeIsFarmRewardsRange}\n              />\n            )}\n          </VStack>\n        </DivisionBlock>\n        <VStack gap=\"8px\" minW=\"420px\" maxW=\"460px\" w=\"460px\">\n          <DivisionBlock title=\"2. Deposit Amounts\" wrapStyle={{ gap: '16px', w: '100%' }}>\n            <HStack>\n              {/* <MEVProtect /> */}\n\n              {apiPoolInfo?.haveZap && <ZapSwitch action=\"Deposit\" value={useZapIn} onChange={handleChangeZapIn} />}\n            </HStack>\n            <Box w=\"100%\" position=\"relative\">\n              {useZapIn && !(fromTokenLock && toTokenLock) ? (\n                <ZapDeposite\n                  apiPoolInfo={apiPoolInfo}\n                  action=\"Deposit\"\n                  currentSqrtPrice={currentPriceData?.currentSqrtPrice}\n                  lowerTick={lowerTickData?.tick}\n                  upperTick={upperTickData?.tick}\n                />\n              ) : (\n                <>\n                  <TradeInputGroup\n                    onClick={onReverseClick}\n                    from={{\n                      wrapStyle: { h: '108px' },\n                      balance: fromBalanceInfo?.balanceFormat || '',\n                      value: fromAmount,\n                      amountValue: fromAmountValue,\n                      loading: false,\n                      onChange: value => {\n                        handleAmountChange(value, true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      },\n                      selectable: false,\n                      placeholder: '0.0',\n                      token: fromToken,\n                      onFocusChange: (focus: boolean) => {\n                        if (focus && +(fromAmount + '') && !byAmountIn) {\n                          handleAmountChange(fromAmount + '', true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                        }\n                      },\n                      lock: {\n                        isLock: fromTokenLock && !toTokenLock,\n                        text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                      }\n                    }}\n                    to={{\n                      wrapStyle: { h: '108px' },\n                      balance: toBalanceInfo?.balanceFormat || '',\n                      value: toAmount,\n                      amountValue: toAmountValue,\n                      loading: false,\n                      onFocusChange: (focus: boolean) => {\n                        if (focus && +(toAmount + '') && byAmountIn) {\n                          handleAmountChange(toAmount + '', false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                        }\n                      },\n                      onChange: value => {\n                        handleAmountChange(value, false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      },\n                      selectable: false,\n                      placeholder: '0.0',\n                      token: toToken,\n                      lock: {\n                        isLock: !fromTokenLock && toTokenLock,\n                        text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                      }\n                    }}\n                    iconParams={{\n                      xlinkHref: '#icon-icon_add',\n                      svgFill: 'text_caption'\n                    }}\n                    lock={{\n                      isLock: fromTokenLock && toTokenLock,\n                      style: { h: '224px' }\n                    }}\n                  />\n                </>\n              )}\n            </Box>\n          </DivisionBlock>\n\n          <>\n            <VStack w=\"100%\" gap=\"8px\">\n              {!useZapIn && !!apiPoolInfo?.poolAddress && !(fromTokenLock && toTokenLock) && (\n                <VStack\n                  gap=\"12px\"\n                  w=\"100%\"\n                  borderRadius=\"16px\"\n                  border=\"1px solid\"\n                  borderColor=\"border\"\n                  bg=\"bg_six\"\n                  p={apiPoolInfo?.displayTokenA && apiPoolInfo?.displayTokenB ? '0 8px 16px' : '0 16px'}\n                >\n                  <Button\n                    w=\"calc(100% + 18px)\"\n                    h=\"52px\"\n                    margin=\"-1px -1px 5px\"\n                    fontSize=\"18px\"\n                    fontWeight=\"500\"\n                    borderRadius=\"12px\"\n                    isDisabled={btnDisabled}\n                    isLoading={false}\n                    onClick={handleAdd}\n                  >\n                    {btnText}\n                  </Button>\n\n                  {apiPoolInfo?.displayTokenA && apiPoolInfo?.displayTokenB && (\n                    <>\n                      <TotalAmount totalAmount={totalAmount} loading={false} valueStyle={{ h: '20px', lineHeight: '20px' }} />\n                      <DepositRatio\n                        type=\"image\"\n                        percentMap={percentMap}\n                        lockRatio={fromTokenLock && toTokenLock}\n                        tokenA={fromToken}\n                        tokenB={toToken}\n                        isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type}\n                      />\n                      {/* {apiPoolInfo?.haveFarming && (\n                        <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n                      )} */}\n                    </>\n                  )}\n                </VStack>\n              )}\n\n              {useZapIn && <ZapSubmiteInfo action=\"Deposit\" isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type} />}\n\n              {apiPoolInfo?.haveFarming && (\n                <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n              )}\n            </VStack>\n            {(apiPoolInfo?.isVaults || apiPoolInfo?.isUnstableVault) && (\n              <VaultBanner\n                displayTokenA={apiPoolInfo?.displayTokenA}\n                displayTokenB={apiPoolInfo?.displayTokenB}\n                feeDisplay={apiPoolInfo?.feeDisplay}\n                clmmPool={apiPoolInfo?.poolAddress}\n                vaultId={apiPoolInfo?.vaultId}\n                isReverse={apiPoolInfo?.isReverse}\n                isUnstableVault={apiPoolInfo?.isUnstableVault}\n              />\n            )}\n          </>\n        </VStack>\n      </HStack>\n    </>\n  )\n}\n\nexport default PCProvideLiquidity\n","import AddLiquidityConfirmModal from '@/components/liquidity/AddLiquidityConfirmModal'\nimport useAddLiquidity from '@/hooks/liquidity/useAddLiquidity'\nimport useAddLiquidityButton from '@/hooks/liquidity/useAddLiquidityButton'\nimport useDeposit from '@/hooks/liquidity/useDeposit'\nimport useLiquidityStore from '@/store/liquidity'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { isAvailableObject } from '@cetus/utils'\nimport NFTModal from '../NFTModal'\nimport H5ProvideLiquidity from './H5'\nimport PCProvideLiquidity from './PC'\n\nimport useZapStore from '@/store/zap/index'\n\ninterface RangeTab {\n  label: string\n  key: string\n  imgInfo: {\n    src: string | undefined\n    w: string\n    h: string\n    borderRadius: string\n    fallbackSrc: string\n  }\n}\n\ninterface FeeTier {\n  title: string\n  feeDisplay: string\n  feeRate: string\n  poolAddress: string\n  tvl: unknown\n}\n\ninterface ProvideLiquidityProps<T extends RangeTab = RangeTab, K extends FeeTier = FeeTier> {\n  rangeTabList: T[]\n  currentFeeTier?: K\n  getList: () => Promise<void>\n  getPrice: () => Promise<void>\n}\n\nfunction ProvideLiquidity<T extends RangeTab, K extends FeeTier>({ rangeTabList, currentFeeTier, getList, getPrice }: ProvideLiquidityProps<T, K>) {\n  const { apiPoolInfo } = useLiquidityStore()\n  const { zapAmount, currentZapToken } = useZapStore()\n  const { direct, perText, handleChangeIsFarmRewardsRange, onReverseClick, leverage, currentRangeTab, isFullRange } = useDeposit<T>({ rangeTabList })\n  const {\n    handleAmountChange,\n    fromAmountValue,\n    toAmountValue,\n    fromBalanceInfo,\n    toBalanceInfo,\n    fromTokenLock,\n    toTokenLock,\n    relatedPosId,\n    nftOpen,\n    setNftOpen,\n    handleAdd,\n    handleSubmit,\n    useZapIn,\n    handleChangeZapIn,\n    confirmModalOpen,\n    setConfirmModalOpen\n  } = useAddLiquidity(getList, direct)\n\n  const { btnText, btnDisabled } = useAddLiquidityButton()\n\n  const { isApp } = useWindowWidth()\n  const props = {\n    btnText,\n    btnDisabled,\n    handleChangeIsFarmRewardsRange,\n    onReverseClick,\n    leverage,\n    direct,\n    perText,\n    rangeTabList,\n    currentRangeTab,\n    fromBalanceInfo,\n    toBalanceInfo,\n    fromAmountValue,\n    toAmountValue,\n    handleAmountChange,\n    handleAdd,\n    isFullRange,\n    useZapIn,\n    handleChangeZapIn,\n    handleSubmit\n  }\n\n  return (\n    <>\n      {isApp ? <H5ProvideLiquidity {...props} /> : <PCProvideLiquidity {...props} />}\n      {confirmModalOpen && (\n        <AddLiquidityConfirmModal\n          onClose={() => setConfirmModalOpen(false)}\n          data={{ feeTier: currentFeeTier as any, zapData: useZapIn ? { amount: zapAmount, token: currentZapToken } : undefined }}\n          onSubmit={handleSubmit}\n        />\n      )}\n      {nftOpen && relatedPosId && isAvailableObject(apiPoolInfo) && (\n        <NFTModal\n          onClose={() => setNftOpen(false)}\n          tokenA={apiPoolInfo?.displayTokenA as Token}\n          tokenB={apiPoolInfo?.displayTokenB as Token}\n          posId={relatedPosId}\n          fee={apiPoolInfo?.feeDisplay as string}\n          isReverse={apiPoolInfo?.isReverse as boolean}\n        />\n      )}\n    </>\n  )\n}\n\nexport default ProvideLiquidity\n","import useLiquidityStore from '@/store/liquidity'\nimport useTvlInfoStore from '@/store/liquidity/liquidityTvl'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d, fetchGet } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useEffect } from 'react'\n\nconst getTokenUSD = (amount: string | undefined, price: string | undefined, decimals: string | number | undefined) => {\n  if (amount && price && decimals) {\n    return d(amount).mul(price).div(d(10).pow(decimals)).toString()\n  }\n  return '--'\n}\n\nfunction useGetTvlInfo() {\n  const {\n    tokenAPrice,\n    setTokenAPrice,\n    tokenBPrice,\n    setTokenBPrice,\n    tokenAAmount,\n    setTokenAAmount,\n    tokenBAmount,\n    setTokenBAmount,\n    tokenAAmountUSD,\n    setTokenAAmountUSD,\n    tokenBAmountUSD,\n    setTokenBAmountUSD,\n    totalAmountUSD,\n    setTotalAmountUSD,\n    resetTvlInfo,\n    tvlLoading,\n    setTvlLoading\n  } = useTvlInfoStore()\n  const { apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n\n  const getTokenPrice = async (coinType: string) => {\n    try {\n      const fullAddress = extractStructTagFromType(coinType)?.full_address\n      const normalizeCoinType =\n        fullAddress == '0x2::sui::SUI' ? '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' : fullAddress\n\n      const { prices } = await fetchGet(`${envConfigs?.cetus_api}/v2/sui/price?base_symbol_address=${normalizeCoinType}`)\n      const rate = prices?.[0]\n      return rate\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ file: useRate.ts:31 ~ getAmountPrice ~ error:', error)\n      return '--'\n    }\n  }\n\n  const { poolAddress } = useQueryParams()\n\n  const handleRefresh = async () => {\n    setTvlLoading(true)\n    try {\n      if (apiPoolInfo?.tokenA?.coin_type) {\n        const _tokenAPrice = await getTokenPrice(apiPoolInfo?.tokenA?.coin_type)\n        if (_tokenAPrice) {\n          setTokenAPrice(_tokenAPrice)\n        }\n      }\n      if (apiPoolInfo?.tokenB?.coin_type) {\n        const _tokenBPrice = await getTokenPrice(apiPoolInfo?.tokenB?.coin_type)\n        if (_tokenBPrice) {\n          setTokenBPrice(_tokenBPrice)\n        }\n      }\n    } catch (error) {\n      console.log('🚀 ~ PoolInfo ~ handleRefresh:', error)\n    } finally {\n      setTvlLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    resetTvlInfo()\n  }, [poolAddress])\n\n  useEffect(() => {\n    return () => {\n      resetTvlInfo()\n    }\n  }, [])\n\n  useEffect(() => {\n    handleRefresh()\n  }, [apiPoolInfo?.tvl, apiPoolInfo?.tokenA?.coin_type, apiPoolInfo?.tokenB?.coin_type])\n\n  useEffect(() => {\n    if (contractPoolInfo?.coinAmountA) {\n      setTokenAAmount(\n        d(contractPoolInfo?.coinAmountA)\n          .sub(contractPoolInfo?.fee_protocol_coin_a || '0')\n          .toString()\n      )\n    }\n  }, [contractPoolInfo?.coinAmountA, contractPoolInfo?.fee_protocol_coin_a, poolAddress])\n\n  useEffect(() => {\n    if (contractPoolInfo?.coinAmountB) {\n      setTokenBAmount(\n        d(contractPoolInfo?.coinAmountB)\n          .sub(contractPoolInfo?.fee_protocol_coin_b || '0')\n          .toString()\n      )\n    }\n  }, [contractPoolInfo?.coinAmountB, contractPoolInfo?.fee_protocol_coin_b, poolAddress])\n\n  useEffect(() => {\n    if (tokenAAmount && tokenAPrice?.price && apiPoolInfo?.tokenA.decimals && !Number.isNaN(Number(apiPoolInfo?.tokenA.decimals))) {\n      setTokenAAmountUSD(getTokenUSD(tokenAAmount, tokenAPrice?.price, apiPoolInfo?.tokenA.decimals))\n    }\n  }, [tokenAAmount, tokenAPrice])\n\n  useEffect(() => {\n    if (tokenBAmount && tokenBPrice?.price && apiPoolInfo?.tokenB.decimals && !Number.isNaN(Number(apiPoolInfo?.tokenB.decimals))) {\n      setTokenBAmountUSD(getTokenUSD(tokenBAmount, tokenBPrice?.price, apiPoolInfo?.tokenB.decimals))\n    }\n  }, [tokenBAmount, tokenBPrice])\n\n  useEffect(() => {\n    if (tokenAAmountUSD && tokenBAmountUSD && tokenAAmountUSD !== '--' && tokenBAmountUSD !== '--') {\n      setTotalAmountUSD(d(tokenAAmountUSD).plus(tokenBAmountUSD).toString())\n    } else {\n      setTotalAmountUSD('--')\n    }\n  }, [tokenAAmountUSD, tokenBAmountUSD])\n  return {\n    tokenAPrice,\n    tokenBPrice,\n    tokenAAmount,\n    tokenBAmount,\n    tokenAAmountUSD,\n    tokenBAmountUSD,\n    totalAmountUSD,\n    setTotalAmountUSD,\n    tvlLoading\n  }\n}\n\nexport default useGetTvlInfo\n","import { PriceRangePath } from '@/apis/path'\nimport useDepositStore from '@/store/liquidity/deposit'\nimport { useFetch } from '@cetus/hooks'\nimport { Token } from '@cetus/types'\nimport { TickMath } from '@cetusprotocol/cetus-sui-clmm-sdk'\n\nfunction useGetPriceRange() {\n  const { fetchByApi } = useFetch()\n  const { setPriceRangeMap, setRecommendRangesInfo } = useDepositStore()\n  const fetchPriceRange = async (poolAddress: string, tokenA?: Token, tokenB?: Token) => {\n    try {\n      const res = await fetchByApi(PriceRangePath, 'GET', { pool: poolAddress })\n      const rangesWithDateTypeMap = Object.fromEntries(\n        res?.ranges?.map((item: any) => [\n          item?.dateType,\n          [\n            TickMath.tickIndexToPrice(item?.lower, tokenA!.decimals, tokenB!.decimals).toString(),\n            TickMath.tickIndexToPrice(item?.upper, tokenA!.decimals, tokenB!.decimals).toString()\n          ]\n        ])\n      )\n      setPriceRangeMap(rangesWithDateTypeMap)\n      setRecommendRangesInfo({\n        ranges: res?.recommender,\n        type: res?.type\n      })\n      return {\n        rangesWithDateTypeMap,\n        recommendRanges: {\n          ranges: res?.recommender,\n          type: res?.type\n        }\n      }\n    } catch (error) {\n      console.error('Error in fetchPriceRange:', error)\n      setPriceRangeMap({})\n      setRecommendRangesInfo({\n        ranges: {},\n        type: ''\n      })\n      return {\n        rangesWithDateTypeMap: {},\n        recommendRanges: {\n          ranges: {},\n          type: ''\n        }\n      }\n    }\n  }\n  return {\n    fetchPriceRange\n  }\n}\n\nexport default useGetPriceRange\n","import useLiquidityStore from '@/store/liquidity'\nimport { PoolApiInfo } from '@/types'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { Token } from '@cetus/types'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { maxBy } from 'lodash-es'\nimport { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useGetPoolList from '../pool/useGetPoolList'\n\nfunction useGetRelatedPools() {\n  const { tab, poolAddress, from, to, fee } = useQueryParams()\n  const { getPoolList } = useGetPoolList()\n  const [relatedPoolList, setRelatedPoolList] = useState<Partial<PoolApiInfo>[]>([])\n  const { apiPoolInfo, setApiPoolInfo, setApiPoolInfoLoading, setNetError } = useLiquidityStore()\n  const navigate = useNavigate()\n  const { fetchTokenInfo } = useGetToken()\n\n  /**\n   * 获取当前token对的相关池子列表\n   * Get the related pool list of the current token pair\n   * @param param0 poolAddress: 池子地址 / poolAddress: poolAddress\n   * @param param1 from: 代币A coin_type / from: tokenA coin_type\n   * @param param2 to: 代币B coin_type / to: tokenB coin_type\n   */\n  const getList = async ({ poolAddress, from, to }: { poolAddress?: string; from?: string; to?: string }) => {\n    try {\n      setApiPoolInfoLoading(true)\n      let res, pool\n      if (poolAddress && poolAddress !== 'undefined') {\n        const _res = await getPoolList({ pool: poolAddress })\n        if (_res && _res.list && _res.list.length) {\n          pool = _res.list[0]\n          res = await getPoolList({\n            coin_type: `${pool?.displayTokenA?.coin_type},${pool?.displayTokenB?.coin_type}`,\n            is_vaults: false,\n            display_all_pools: true,\n            has_mining: true,\n            has_farming: true,\n            no_incentives: true,\n            order_by: '-vol',\n            offset: 0\n          })\n        } else if (apiPoolInfo && isAvailableObject(apiPoolInfo)) {\n          pool = apiPoolInfo\n          res = { list: relatedPoolList }\n        } else {\n          pool = { poolAddress, displayTokenA: undefined, displayTokenB: undefined }\n          res = { list: [] }\n        }\n        setApiPoolInfoLoading(false)\n      } else if (from && to && from !== 'undefined' && to !== 'undefined' && from !== to) {\n        const _res = await getPoolList({\n          coin_type: `${from},${to}`,\n          is_vaults: false,\n          display_all_pools: true,\n          has_mining: true,\n          has_farming: true,\n          no_incentives: true,\n          order_by: '-vol',\n          offset: 0\n        })\n        console.log(_res, 'res_getPoolList')\n        if (_res && _res.list && _res.list.length) {\n          if (fee && fee !== 'undefined') {\n            const _pool = _res?.list?.find(item => d(item?.feeRate).eq(fee))\n            if (_pool) {\n              if (tab) {\n                navigate(`/liquidity?tab=${tab}&poolAddress=${_pool?.poolAddress}`)\n              } else {\n                navigate(`/liquidity?poolAddress=${_pool?.poolAddress}`)\n              }\n            } else {\n              const _pool = maxBy(_res?.list, item => Number(item?.tvl || '0'))\n              if (tab) {\n                navigate(`/liquidity?tab=${tab}&poolAddress=${_pool?.poolAddress}`)\n              } else {\n                navigate(`/liquidity?poolAddress=${_pool?.poolAddress}`)\n              }\n            }\n          } else {\n            let _pool = maxBy(_res?.list, item => Number(item?.tvl || '0'))\n\n            if (!_pool) {\n              _pool = maxBy(_res?.list, item => Number(item?.object?.liquidity || '0'))\n              if (!_pool) {\n                _pool = _res?.list[0]\n              }\n            }\n            if (tab) {\n              navigate(`/liquidity?tab=${tab}&poolAddress=${_pool?.poolAddress}`)\n            } else {\n              navigate(`/liquidity?poolAddress=${_pool?.poolAddress}`)\n            }\n          }\n        } else {\n          const tokenMap = await fetchTokenInfo([from, to].filter(Boolean))\n          const _displayTokenA = (tokenMap as Map<string, Token>)?.get(from)\n          const _displayTokenB = (tokenMap as Map<string, Token>)?.get(to)\n          pool = { poolAddress: undefined, displayTokenA: _displayTokenA, displayTokenB: _displayTokenB }\n          res = { list: [] }\n          setApiPoolInfoLoading(false)\n        }\n      } else {\n        if ((!from || from === 'undefined') && to && to !== 'undefined') {\n          const _displayTokenB = await fetchTokenInfo(to)\n          pool = { poolAddress: undefined, displayTokenA: undefined, displayTokenB: _displayTokenB as Token }\n        }\n        if ((!to || to === 'undefined') && from && from !== 'undefined') {\n          const _displayTokenA = await fetchTokenInfo(from)\n          pool = { poolAddress: undefined, displayTokenA: _displayTokenA as Token, displayTokenB: undefined }\n        }\n\n        res = { list: [] }\n        setApiPoolInfoLoading(false)\n      }\n      if (res) {\n        setNetError(false)\n        setRelatedPoolList(res?.list)\n        console.log(pool, 'setApiPoolInfo')\n        if (pool) {\n          if (pool?.poolAddress && poolAddress) {\n            if (pool?.poolAddress === poolAddress) {\n              setApiPoolInfo(pool as any)\n            }\n          } else {\n            setApiPoolInfo(pool as any)\n          }\n        }\n      }\n\n      setApiPoolInfoLoading(false)\n    } catch (error) {\n      if ((error as any)?.list && (error as any)?.list?.length === 1) {\n        setNetError(true)\n        const _pool = (error as any)?.list[0]\n        console.log((error as any)?.list, 'setApiPoolInfo')\n\n        setApiPoolInfo(_pool)\n        setRelatedPoolList([])\n        setApiPoolInfoLoading(false)\n      }\n    }\n  }\n  useEffect(() => {\n    if (poolAddress && poolAddress === 'undefined') return\n    getList({ poolAddress, from, to })\n  }, [poolAddress, from, to])\n  return {\n    getList,\n    relatedPoolList\n  }\n}\n\nexport default useGetRelatedPools\n","import useLiquidityStore from '@/store/liquidity'\nimport { isTrustedToken } from '@/utils'\nimport { getFeeTierList } from '@/utils/liquidity'\nimport { defaultFeeList } from '@cetus/design/src/components/common/FeeTierSelect'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { Token } from '@cetus/types'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useMemo } from 'react'\nimport useQuoteWhiteTokenList from '../create-pool/useQuoteWhiteTokenList'\nimport useGetPriceRange from './useGetPriceRange'\nimport useGetRelatedPools from './useGetRelatedPools'\nfunction useGetPoolRelatedInfo() {\n  const { poolAddress } = useQueryParams()\n  const { apiPoolInfo, apiPoolInfoLoading } = useLiquidityStore()\n\n  const { quoteWhiteTokenList } = useQuoteWhiteTokenList()\n\n  const { getList, relatedPoolList } = useGetRelatedPools()\n  /**\n   * 获取token对费率列表\n   * Get the token pair rate list\n   */\n  const feeTierList = useMemo(() => {\n    const list = getFeeTierList(relatedPoolList)\n    if (list) {\n      if (apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n        return defaultFeeList?.map(item => {\n          const title = list.find(feeTier => feeTier.feeRate === item.feeRate)?.title || item.title\n          return {\n            ...item,\n            title,\n            poolAddress: list.find(feeTier => feeTier.feeRate === item.feeRate)?.poolAddress,\n            disabled:\n              title === 'Not Created' &&\n              !isTrustedToken(apiPoolInfo?.tokenA, quoteWhiteTokenList) &&\n              !isTrustedToken(apiPoolInfo?.tokenB, quoteWhiteTokenList)\n                ? true\n                : false\n          }\n        })\n      } else {\n        return defaultFeeList?.map(item => {\n          const title = list.find(feeTier => feeTier.feeRate === item.feeRate)?.title || item.title\n          return {\n            ...item,\n            title,\n            poolAddress: list.find(feeTier => feeTier.feeRate === item.feeRate)?.poolAddress,\n            disabled:\n              !isTrustedToken(apiPoolInfo?.displayTokenA, quoteWhiteTokenList) && !isTrustedToken(apiPoolInfo?.displayTokenB, quoteWhiteTokenList)\n                ? true\n                : false\n          }\n        })\n      }\n    }\n    return []\n  }, [\n    JSON.stringify(relatedPoolList),\n    JSON.stringify(quoteWhiteTokenList),\n    apiPoolInfo?.displayTokenA?.coin_type,\n    apiPoolInfo?.displayTokenB?.coin_type\n  ])\n  /**\n   * 生成当前池子deposit的token切换tab列表\n   * Generate the token switch tab list for the current pool deposit\n   */\n  const rangeTabList = useMemo(() => {\n    if (apiPoolInfo) {\n      return [apiPoolInfo?.displayTokenA, apiPoolInfo?.displayTokenB]?.filter(Boolean).map(item => ({\n        label: item?.symbol,\n        key: item?.coin_type,\n        isToken: true,\n        imgInfo: {\n          src: item?.logo_url,\n          w: '16px',\n          h: '16px',\n          coinType: item ? item?.coin_type : '',\n          showTagWidth: '8px',\n          showTagHeight: '8px'\n        }\n      }))\n    } else {\n      return []\n    }\n  }, [apiPoolInfo?.displayTokenA?.symbol, apiPoolInfo?.displayTokenB?.symbol])\n\n  /**\n   * 获取当前池子的费率信息\n   * Get the current pool fee rate information\n   */\n  const currentFeeTier = useMemo(() => {\n    const _currentFeeTier = feeTierList?.find(item => item.poolAddress === poolAddress)\n    if (_currentFeeTier) {\n      return _currentFeeTier\n    } else {\n      return apiPoolInfo\n    }\n  }, [JSON.stringify(feeTierList), poolAddress, JSON.stringify(apiPoolInfo)])\n\n  /**\n   * 获取合约价格，获取过去24小时、7天、30天的价格范围\n   * Get contract price, get price range for past 24 hours, 7 days, 30 days\n   * @param address 池子地址 / Pool address\n   */\n  const { fetchPriceRange } = useGetPriceRange()\n  const getPriceRanges = async (address: string) => {\n    console.log('🚀 ~ setPriceRangeMap ~ this.addressHistTokens:🚀 ~ getContractPrices ~ address:', address)\n    await fetchPriceRange(address, apiPoolInfo?.tokenA, apiPoolInfo?.tokenB)\n  }\n\n  useDeepCompareEffect(() => {\n    if (poolAddress && poolAddress === apiPoolInfo?.poolAddress && apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n      getPriceRanges(poolAddress)\n    }\n  }, [poolAddress, apiPoolInfo?.tokenA, apiPoolInfo?.tokenB])\n\n  /**\n   * 生成警告弹窗代币列表\n   * Generate warning modal token list\n   */\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (apiPoolInfo?.displayTokenA) {\n      list.push(apiPoolInfo?.displayTokenA)\n    }\n    if (apiPoolInfo?.displayTokenB) {\n      list.push(apiPoolInfo?.displayTokenB)\n    }\n    return list\n  }, [JSON.stringify(apiPoolInfo?.displayTokenA), JSON.stringify(apiPoolInfo?.displayTokenB)])\n\n  return {\n    getList,\n    feeTierList,\n    apiPoolInfo,\n    rangeTabList,\n    currentFeeTier,\n    apiPoolInfoLoading,\n    quoteWhiteTokenList,\n    warningTokenList\n  }\n}\n\nexport default useGetPoolRelatedInfo\n","/**\n * 流动性交互Hook\n * Liquidity Interaction Hook\n */\nimport useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport usePoolsStore from '@/store/pool'\nimport usePositionStore from '@/store/position'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport useSwapWidgetConfigStore from '@/store/swap-widget/swapWidgetConfig'\nimport { PoolApiInfo } from '@/types'\nimport { FeeTier } from '@cetus/design/src/components/common/FeeTierSelect'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { CoinType, Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { cancelBubble } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useFavoritePool from '../pool/useFavoritePool'\nimport useGetTvlInfo from './useGetTvlInfo'\n\n/**\n * 流动性交互接口定义\n * Interface definition for liquidity interaction\n */\ntype LiquidityInteraction = {\n  apiPoolInfo: PoolApiInfo | null\n}\n\n/**\n * 标签页枚举\n * Tab enumeration\n */\nexport enum TabsEnum {\n  deposit = 'Provide Liquidity',\n  positions = 'My Positions',\n  analytics = 'Analytics'\n}\n\n/**\n * 默认标签页列表\n * Default tab list\n */\nconst defaultTabList: { label: TabsEnum; key: keyof typeof TabsEnum }[] = [\n  {\n    label: TabsEnum.deposit,\n    key: 'deposit'\n  },\n  {\n    label: TabsEnum.positions,\n    key: 'positions'\n  },\n  {\n    label: TabsEnum.analytics,\n    key: 'analytics'\n  }\n]\n\n/**\n * 流动性交互Hook\n * @param apiPoolInfo - 池子API信息 / Pool API information\n */\nfunction useLiquidityInteraction({ apiPoolInfo }: LiquidityInteraction) {\n  // 获取URL参数和导航函数\n  // Get URL parameters and navigation function\n  const { tab, poolAddress } = useQueryParams()\n  const navigate = useNavigate()\n\n  // 状态管理\n  // State management\n  const [feeTier, setFeeTier] = useState<FeeTier>()\n  const [tabList, setTabList] = useState<Tab[]>(defaultTabList)\n  const [currentTab, setCurrentTab] = useState<keyof typeof TabsEnum>(defaultTabList?.find(item => item.key === tab)?.key || defaultTabList[0].key)\n  const [selectedTokenA, setSelectedTokenA] = useState<Token>()\n  const [selectedTokenB, setSelectedTokenB] = useState<Token>()\n\n  // Store hooks\n  const { posBaseListGroupByPool } = usePositionStore()\n  const { addFavorites, removeFavorites } = useFavoritePool()\n  const { poolFavoriteIds } = usePoolsStore()\n  const { fromToken, toToken } = useAddLiquidityStore()\n\n  // Token price hook\n  const { fetchTokenPrices } = useTokenPrice()\n\n  const { setFromCoin, setToCoin } = useSwapWidgetStore()\n  const { setIsOpen } = useSwapWidgetConfigStore()\n\n  const { isSwapWidgetDisplay } = useWebConfigStore()\n  /**\n   * 跳转到swap token页面，PC打开小组件，H5跳转页面\n   * Jump to swap token page, PC opens widget, H5 jumps page\n   */\n  const onJump2Swap = () => {\n    if (isSwapWidgetDisplay) {\n      setIsOpen(true)\n    } else {\n      navigate(`/swap/${apiPoolInfo?.displayTokenA?.coin_type}/${apiPoolInfo?.displayTokenB?.coin_type}`)\n    }\n  }\n\n  /**\n   * 切换小组件token与当前池子相同\n   */\n  useEffect(() => {\n    if (fromToken && toToken) {\n      setFromCoin(fromToken)\n      setToCoin(toToken)\n    }\n    return () => {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [fromToken, toToken])\n\n  /**\n   * 计算当前池子的仓位数量\n   * Calculate the number of positions for current pool\n   */\n  const positionNum = useMemo(() => {\n    if (poolAddress && poolAddress !== 'undefined') {\n      const res = posBaseListGroupByPool[poolAddress.toLowerCase() || '']\n      if (res && res?.list) {\n        return res?.list.length > 0 ? res?.list.length : undefined\n      }\n      return undefined\n    }\n    return undefined\n  }, [JSON.stringify(posBaseListGroupByPool), poolAddress])\n\n  /**\n   * 更新标签页列表中的仓位数量\n   * Update position numbers in tab list\n   */\n  useEffect(() => {\n    setTabList(\n      defaultTabList?.map(tab => ({\n        ...tab,\n        num: tab.label === TabsEnum.positions && currentTab === 'positions' ? positionNum : undefined\n      }))\n    )\n  }, [positionNum, currentTab])\n\n  /**\n   * 同步URL参数中的标签页\n   * Synchronize tab from URL parameters\n   */\n  useLayoutEffect(() => {\n    if (tab && tab !== currentTab) {\n      setCurrentTab(tab as keyof typeof TabsEnum)\n    }\n  }, [tab])\n\n  /**\n   * 判断当前池子是否被收藏\n   * Check if current pool is favorited\n   */\n  const isFavoritePool = useMemo(() => {\n    return poolFavoriteIds?.includes(poolAddress || '')\n  }, [JSON.stringify(poolFavoriteIds), poolAddress])\n\n  /**\n   * 处理收藏/取消收藏\n   * Handle favorite/unfavorite\n   */\n  const onChangeFavorites = (e: any) => {\n    cancelBubble(e)\n    if (poolAddress) {\n      // 如果当前池子已经被收藏，则移除收藏\n      isFavoritePool ? removeFavorites(poolAddress) : addFavorites(poolAddress)\n    }\n  }\n\n  const favoriteStyle = useMemo(() => {\n    return isFavoritePool\n      ? {\n          tooltip: 'Remove from Watchlist',\n          xlinkHref: '#icon-icon_star_sel',\n          svgFill: 'primary_blue',\n          svgHover: 'primary'\n        }\n      : {\n          tooltip: 'Add to Watchlist',\n          xlinkHref: '#icon-icon_star',\n          svgFill: 'text_paragraph',\n          svgHover: 'text_caption'\n        }\n  }, [isFavoritePool])\n\n  /**\n   * 同步选中的代币\n   * Synchronize selected tokens\n   */\n  useEffect(() => {\n    setSelectedTokenA(apiPoolInfo?.displayTokenA)\n    setSelectedTokenB(apiPoolInfo?.displayTokenB)\n  }, [apiPoolInfo?.displayTokenA?.coin_type, apiPoolInfo?.displayTokenB?.coin_type])\n\n  /**\n   * 确认创建池子\n   * Confirm pool creation\n   */\n  const onConfirm = () => {\n    navigate(`/create-pool/${apiPoolInfo?.displayTokenA?.coin_type}/${apiPoolInfo?.displayTokenB?.coin_type}/${feeTier?.feeRate}`)\n  }\n\n  // 刷新市场价格\n  const refreshMarketPrice = () => {\n    const list = []\n    if (fromToken) {\n      list.push(fromToken.coin_type)\n    }\n\n    if (toToken) {\n      list.push(toToken.coin_type)\n    }\n\n    if (apiPoolInfo?.miningRewardList) {\n      apiPoolInfo?.miningRewardList?.forEach((item: any) => {\n        list.push(extractStructTagFromType(item?.coinType).full_address)\n      })\n    }\n\n    if (list.length > 0) {\n      fetchTokenPrices(Array.from(new Set(list.filter(item => item && item !== 'undefined'))))\n    }\n  }\n  /**\n   * 当fromToken或toToken变化时，刷新市场价格\n   * When fromToken or toToken changes, refresh market price\n   */\n  useEffect(() => {\n    refreshMarketPrice()\n  }, [fromToken?.coin_type, toToken?.coin_type])\n\n  const { fetchTokenInfo } = useGetToken()\n  const { setApiPoolInfo, apiPoolInfoLoading, netError } = useLiquidityStore()\n  const { setTotalAmountUSD } = useGetTvlInfo()\n\n  /**\n   * 切换代币\n   * Switch tokens\n   */\n  const handleSelectToken = useCallback(\n    async (token: Token, self_selected?: Token, other_selected?: Token, self_address?: string, other_address?: string, isDisplayA?: boolean) => {\n      const key = Object.keys(TabsEnum).find(tab => tab === currentTab)\n      const coinTypeList = [self_address, other_address].filter(Boolean)\n\n      const tokenMap = await fetchTokenInfo<string[]>(coinTypeList as string[])\n      if (other_selected?.coin_type || tokenMap?.get((other_address || '') as CoinType)?.coin_type) {\n        if (\n          extractStructTagFromType(token?.coin_type).full_address ===\n          extractStructTagFromType(other_selected?.coin_type || tokenMap?.get(other_address || '')?.coin_type || '').full_address\n        ) {\n          setSelectedTokenA(selectedTokenB)\n          setSelectedTokenB(selectedTokenA)\n        } else if (\n          extractStructTagFromType(token?.coin_type).full_address ===\n          extractStructTagFromType(self_selected?.coin_type || tokenMap?.get(self_address || '')?.coin_type || '').full_address\n        ) {\n          return\n        } else {\n          if (isDisplayA) {\n            navigate(\n              `/liquidity?tab=${key}&from=${token?.coin_type}&to=${other_selected?.coin_type || tokenMap?.get(other_address || '')?.coin_type}`\n            )\n          } else {\n            navigate(\n              `/liquidity?tab=${key}&from=${other_selected?.coin_type || tokenMap?.get(other_address || '')?.coin_type}&to=${token?.coin_type}`\n            )\n          }\n          setApiPoolInfo(null)\n          setTotalAmountUSD('')\n        }\n      } else {\n        if (isDisplayA) {\n          navigate(`/liquidity?tab=${key}&from=${token?.coin_type}`)\n        } else {\n          navigate(`/liquidity?tab=${key}&to=${token?.coin_type}`)\n        }\n        setApiPoolInfo(null)\n        setTotalAmountUSD('')\n      }\n    },\n    [selectedTokenA, selectedTokenB, currentTab]\n  )\n\n  /**\n   * 获取SelectToken组件的props\n   * Get props for SelectToken component\n   * @param address\n   * @param token\n   * @returns SelectTokenProps\n   */\n  const getSelectTokenProps = useCallback(\n    async (address?: string, token?: Token) => {\n      const tokenInfo = await fetchTokenInfo<CoinType>((address || '') as CoinType)\n      return {\n        value: token ? token : address ? tokenInfo : undefined,\n        isWhiteSelect: false,\n        whiteTokenList: undefined,\n        disabled: netError,\n        tokenStyle: { p: 0, border: 'none' },\n        tokenSize: '32px',\n        symbolStyle: { fontSize: '20px', fontWeight: '500' },\n        wrapStyle: { h: '32px', border: 'none', p: '0', bg: 'background' },\n        loading: !token && apiPoolInfoLoading\n      }\n    },\n    [netError, apiPoolInfoLoading]\n  )\n\n  return {\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    feeTier,\n    setFeeTier,\n    refreshMarketPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  }\n}\n\nexport default useLiquidityInteraction\n","import useGetCurrentPrice from '@/hooks/liquidity/useGetCurrentPrice'\nimport useGetPoolRelatedInfo from '@/hooks/liquidity/useGetPoolRelatedInfo'\nimport usePriceRange from '@/hooks/liquidity/usePriceRange'\nimport useGetContractPoolInfo from '@/hooks/pool/useGetContractPoolInfo'\nimport useLiquidityStore from '@/store/liquidity'\nimport useAddLiquidityStore from '@/store/liquidity/addLiquidity'\nimport useDepositStore from '@/store/liquidity/deposit'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject } from '@cetus/utils'\nimport { useEffect } from 'react'\nimport useLiquidityInteraction from './useLiquidityInteraction'\nfunction useLiquidity() {\n  const { currentAccount } = useAccountStore()\n  const { apiPoolInfo, resetLiquidity, setManualRefresh, setCurrentPriceData } = useLiquidityStore()\n  const { feeTierList, currentFeeTier, rangeTabList, getList, quoteWhiteTokenList, warningTokenList } = useGetPoolRelatedInfo()\n  const { poolAddress } = useQueryParams()\n  const { handleResetRange } = usePriceRange()\n  const { resetAddLiquidity, setFromToken, setToToken } = useAddLiquidityStore()\n  const { resetDeposit } = useDepositStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n  const { getCurrentPrice } = useGetCurrentPrice()\n  const {\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    setFeeTier,\n    refreshMarketPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  } = useLiquidityInteraction({ apiPoolInfo })\n\n  // 设置代币 Set tokens\n  useEffect(() => {\n    if (isAvailableObject(apiPoolInfo)) {\n      setFromToken(apiPoolInfo?.displayTokenA)\n      setToToken(apiPoolInfo?.displayTokenB)\n    }\n  }, [apiPoolInfo?.poolAddress])\n\n  /**\n   * 获取当前池子的token兑换价格\n   * Get the token exchange price of the current pool\n   */\n  const handleGetPrice = async () => {\n    if (poolAddress && apiPoolInfo && poolAddress === apiPoolInfo?.poolAddress) {\n      const _contractPoolInfo = await getContractPoolInfo(poolAddress)\n      if (_contractPoolInfo) {\n        getCurrentPrice(_contractPoolInfo?.current_sqrt_price, apiPoolInfo)\n      }\n    }\n  }\n\n  const handleRefreshPrice = () => {\n    refreshMarketPrice?.()\n    handleGetPrice?.()\n  }\n\n  /**\n   * 刷新按钮事件\n   * Refresh button event\n   * @param isManual 是否手动刷新\n   */\n  const handleRefresh = async (isManual?: boolean) => {\n    console.log('🚀 ~ handleRefresh ~ handleRefresh111:')\n    if (isManual) {\n      setManualRefresh(true)\n    }\n    if (poolAddress && poolAddress !== 'undefined') {\n      await getList({ poolAddress })\n    }\n    if (currentAccount?.address) {\n      await fetchAccountBalance()\n    }\n    handleRefreshPrice()\n    setManualRefresh(false)\n  }\n\n  /**\n   * 初始化，获取账户余额，离开页面销毁数据\n   * Initialize, get account balance, destroy data when leaving the page\n   */\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n\n    setCurrentPriceData({})\n\n    return () => {\n      handleResetRange()\n      resetAddLiquidity()\n      resetLiquidity()\n      resetDeposit()\n    }\n  }, [])\n\n  /**\n   * 切换池子，重置数据\n   * Switch pools, reset data\n   */\n  useEffect(() => {\n    /**\n     * 保证地址栏的poolAddress和接口请求到的池子数据poolAddress相同时再进行操作\n     * Ensure that the poolAddress in the address bar and the poolAddress obtained from the interface are the same before performing operations\n     */\n    if (poolAddress && apiPoolInfo?.poolAddress !== poolAddress) {\n      handleResetRange()\n      resetAddLiquidity()\n      resetLiquidity()\n      resetDeposit()\n    }\n\n    if (poolAddress && poolAddress === apiPoolInfo?.poolAddress) {\n      handleGetPrice()\n    }\n  }, [poolAddress, apiPoolInfo?.poolAddress])\n\n  return {\n    feeTierList,\n    currentFeeTier,\n    rangeTabList,\n    quoteWhiteTokenList,\n    warningTokenList,\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    setFeeTier,\n    handleRefresh,\n    handleGetPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  }\n}\n\nexport default useLiquidity\n","import Slippage from '@/components/common/Slippage'\nimport PoolsAnalytics from '@/components/liquidity/analytics/PoolsAnalytics'\nimport MyPositions from '@/components/liquidity/MyPositions'\nimport PoolsStats from '@/components/liquidity/PoolsStats'\nimport ProvideLiquidity from '@/components/liquidity/provideLiquidity'\nimport { SelectToken } from '@/components/liquidity/SelectPool'\nimport SelectTokenAnddFeeConfirm from '@/components/liquidity/SelectTokenAndFeeConfirm'\nimport useGetTvlInfo from '@/hooks/liquidity/useGetTvlInfo'\nimport useLiquidity from '@/hooks/liquidity/useLiquidity'\nimport useLiquidityStore from '@/store/liquidity'\nimport { isTrustedToken } from '@/utils'\nimport { CetusTooltip, CurrentPrice, FeeTierBlock, SelectTab } from '@cetus/design'\nimport { FeeTier } from '@cetus/design/src/components/common/FeeTierSelect'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { BackButton, Icon, NoData, RefreshButton } from '@cetus/ui-kit'\nimport { formatNumberWithDown } from '@cetus/utils'\nimport { Box, Button, Center, HStack, Spinner, Stack, Text, useDisclosure, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { TabsEnum } from '../hooks/liquidity/useLiquidityInteraction'\n\nfunction Liquidity() {\n  const navigate = useNavigate()\n  const { apiPoolInfo, apiPoolInfoLoading, currentPriceData, netError } = useLiquidityStore()\n  const { poolAddress, from, to } = useQueryParams()\n  const {\n    feeTierList,\n    currentFeeTier,\n    rangeTabList,\n    quoteWhiteTokenList,\n    warningTokenList,\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    onConfirm,\n    setFeeTier,\n    handleRefresh,\n    handleGetPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  } = useLiquidity()\n\n  const { isApp } = useWindowWidth()\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const { totalAmountUSD: totalTvl, tvlLoading } = useGetTvlInfo()\n\n  const showContent = poolAddress && apiPoolInfo?.tokenA && apiPoolInfo?.tokenB\n\n  const { tooltip, xlinkHref, svgFill, svgHover } = favoriteStyle\n\n  const [selectTokenAProps, setSelectTokenAProps] = useState<any>({})\n  const [selectTokenBProps, setSelectTokenBProps] = useState<any>({})\n\n  const fetchSelectTokenProps = async () => {\n    const tokenAProps = await getSelectTokenProps(from, selectedTokenA)\n    const tokenBProps = await getSelectTokenProps(to, selectedTokenB)\n    setSelectTokenAProps(tokenAProps)\n    setSelectTokenBProps(tokenBProps)\n  }\n  useEffect(() => {\n    fetchSelectTokenProps()\n  }, [from, to, selectedTokenA, selectedTokenB])\n  return (\n    <>\n      <Box w=\"100%\" mt=\"20px\">\n        <HStack w=\"100%\" minW={{ base: '100%', lg: '1024px' }} justify=\"space-between\">\n          <BackButton text=\"Pools\" onClick={() => navigate('/pools')} />\n          {showContent && (\n            <HStack gap=\"8px\">\n              <CetusTooltip placement=\"top\" tooltip={tooltip}>\n                <Button\n                  variant=\"outline\"\n                  w=\"32px\"\n                  h=\"32px\"\n                  lineHeight=\"32px\"\n                  onClick={onChangeFavorites}\n                  p=\"0 6px\"\n                  borderRadius=\"8px\"\n                  color=\"text_paragraph\"\n                  bg=\"background\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  gap=\"4px\"\n                  sx={{\n                    _hover: {\n                      color: 'text_caption',\n                      svg: {\n                        fill: svgHover\n                      }\n                    }\n                  }}\n                >\n                  <Icon xlinkHref={xlinkHref} svgFill={svgFill} svgHover={svgHover} fontSize=\"18px\" />\n                </Button>\n              </CetusTooltip>\n              <CetusTooltip placement=\"top\" tooltip=\"Trade\">\n                <Button\n                  variant=\"outline\"\n                  bg=\"background\"\n                  h=\"32px\"\n                  w=\"32px\"\n                  onClick={onJump2Swap}\n                  borderRadius=\"8px\"\n                  p=\"0 6px\"\n                  color=\"text_paragraph\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  gap=\"4px\"\n                  sx={{\n                    _hover: {\n                      color: 'text_caption',\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }\n                  }}\n                >\n                  <Icon xlinkHref=\"#icon-icon_swap1\" fontSize=\"16px\" />\n                </Button>\n              </CetusTooltip>\n              <CetusTooltip placement=\"top\" tooltip=\"Refresh\">\n                <Box>\n                  <RefreshButton\n                    key={poolAddress}\n                    handleRefresh={handleRefresh}\n                    isAutoRefresh\n                    refreshInterval={60}\n                    innerStyle={{ bg: 'background' }}\n                    w=\"32px\"\n                    h=\"32px\"\n                    borderRadius=\"8px\"\n                    bg=\"background\"\n                  />\n                </Box>\n              </CetusTooltip>\n            </HStack>\n          )}\n        </HStack>\n        <Stack\n          flexDir={{ base: 'column', lg: 'row' }}\n          w=\"100%\"\n          minW={{ base: '100%', lg: '1024px' }}\n          justify=\"space-between\"\n          mt=\"20px\"\n          gap={{ base: '20px', lg: '8px' }}\n        >\n          <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '20px', lg: '8px' }} align={{ base: 'flex-start', lg: 'center' }}>\n            <HStack gap=\"12px\">\n              <SelectToken\n                onChange={token => {\n                  handleSelectToken(token, selectedTokenA, selectedTokenB, from, to, true)\n                }}\n                {...selectTokenAProps}\n              />\n              <SelectToken\n                onChange={token => {\n                  handleSelectToken(token, selectedTokenB, selectedTokenA, to, from, false)\n                }}\n                {...selectTokenBProps}\n              />\n            </HStack>\n            <FeeTierBlock\n              value={currentFeeTier as FeeTier}\n              loading={!currentFeeTier && apiPoolInfoLoading}\n              feeTierList={feeTierList}\n              disabled={netError}\n              onChange={item => {\n                if (item?.poolAddress) {\n                  navigate(`/liquidity?poolAddress=${item?.poolAddress}`)\n                } else {\n                  setFeeTier(item)\n                  onOpen()\n                }\n              }}\n            />\n          </Stack>\n          {showContent && (\n            <PoolsStats apiPoolInfo={apiPoolInfo} totalTvl={totalTvl} apiPoolInfoLoading={apiPoolInfoLoading} tvlLoading={tvlLoading} />\n          )}\n        </Stack>\n        {showContent ? (\n          <>\n            <Stack\n              w=\"100%\"\n              flexDir={{ base: 'column', lg: 'row' }}\n              justify={{ base: 'center', lg: 'space-between' }}\n              align={{ base: 'flex-start', lg: 'center' }}\n              minW={{ base: '100%', lg: '1024px' }}\n            >\n              <SelectTab<any, any>\n                type=\"borderTab\"\n                tabList={tabList}\n                currentTab={currentTab}\n                handleChangeTab={item => {\n                  const key = Object.keys(TabsEnum).find(tab => TabsEnum[tab as keyof typeof TabsEnum] === item.label)\n                  if (poolAddress) {\n                    navigate(`/liquidity?tab=${key}&poolAddress=${poolAddress}`)\n                  }\n                  setCurrentTab(key as keyof typeof TabsEnum)\n                }}\n                wrapStyle={{\n                  w: { base: '100%', lg: 'auto' },\n                  justify: { base: 'space-between', lg: 'flex-start' },\n                  p: { base: '0 12px', lg: '0' },\n                  bg: { base: 'bg_secondary', lg: 'transparent' },\n                  h: isApp ? '60px' : '58px',\n                  gap: { base: '8px', lg: '45px' },\n                  border: { base: '1px solid', lg: 'none' },\n                  borderColor: { base: 'border', lg: 'transparent' },\n                  borderRadius: { base: '16px', lg: 'unset' },\n                  mt: { base: '20px', lg: '12px' }\n                }}\n                itemStyle={{\n                  fontSize: isApp ? '14px' : '16px',\n                  fontWeight: '500'\n                }}\n              />\n\n              {currentTab === 'deposit' && !isApp && (\n                <Box mt=\"24px\">\n                  <Slippage />\n                </Box>\n              )}\n              {currentTab !== 'deposit' && apiPoolInfo && (\n                <Stack\n                  w={isApp ? '100%' : 'auto'}\n                  mt={{ base: '4px', lg: '12px' }}\n                  gap=\"12px\"\n                  flexDir={{ base: 'column', lg: 'row' }}\n                  justify={{ base: 'center', lg: 'space-between' }}\n                  align={{ base: 'flex-start', lg: 'center' }}\n                >\n                  <Text>Current Price</Text>\n                  <CurrentPrice\n                    noCenter={isApp ? true : false}\n                    fromToken={apiPoolInfo?.displayTokenA}\n                    toToken={apiPoolInfo?.displayTokenB}\n                    fromValue=\"1\"\n                    toValue={formatNumberWithDown(\n                      apiPoolInfo?.isReverse ? currentPriceData?.reverseCurrentPrice : currentPriceData?.currentPrice,\n                      6,\n                      true\n                    ).toString()}\n                    color=\"text_caption\"\n                    wrapStyle={isApp ? { w: '100%' } : {}}\n                  />\n                </Stack>\n              )}\n            </Stack>\n            <Box h={{ base: '20px', lg: '8px' }} />\n            {currentTab === 'deposit' && (\n              <ProvideLiquidity\n                rangeTabList={rangeTabList as any}\n                getList={handleRefresh}\n                getPrice={handleGetPrice}\n                currentFeeTier={currentFeeTier as any}\n              />\n            )}\n            {currentTab === 'positions' && <MyPositions />}\n            {currentTab === 'analytics' && <PoolsAnalytics />}\n          </>\n        ) : (\n          <Box mt=\"20px\">\n            {!apiPoolInfo && apiPoolInfoLoading ? (\n              <Center w=\"100%\" h=\"480px\" background=\"bg_secondary\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\">\n                <Spinner />\n              </Center>\n            ) : (\n              <NoData type=\"custom\" imgUrl=\"/images/img_create_pool.png\" h=\"480px\">\n                <VStack>\n                  {selectedTokenA && selectedTokenB ? (\n                    isTrustedToken(selectedTokenA, quoteWhiteTokenList) || isTrustedToken(selectedTokenB, quoteWhiteTokenList) ? (\n                      <>\n                        <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\" fontWeight=\"500\">\n                          This Pool has not been initialized\n                        </Text>\n                        <Text fontSize=\"14px\">Do you want to initialize it?</Text>\n                        <Button\n                          mt=\"12px\"\n                          w=\"120px\"\n                          h=\"32px\"\n                          borderRadius=\"8px\"\n                          colorScheme=\"blue\"\n                          fontSize=\"14px\"\n                          fontWeight=\"500\"\n                          onClick={() => {\n                            onClose()\n                            onConfirm()\n                          }}\n                        >\n                          Initialized Pool\n                        </Button>\n                      </>\n                    ) : (\n                      <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n                        No liquidity data\n                      </Text>\n                    )\n                  ) : (\n                    <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n                      Select the token you want to provide liquidity for.\n                    </Text>\n                  )}\n                </VStack>\n              </NoData>\n            )}\n          </Box>\n        )}\n      </Box>\n      {/* Token 警告弹窗 */}\n      {apiPoolInfo?.displayTokenA && apiPoolInfo?.displayTokenB && (\n        <WarningTokenTipsModal\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            navigate('/pools')\n          }}\n        />\n      )}\n      <SelectTokenAnddFeeConfirm\n        title=\"This Pool has not been initialized\"\n        subTitle=\"Do you want to initialize it?\"\n        btnText=\"Initialized Pool\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      />\n    </>\n  )\n}\n\nexport default Liquidity\n"],"names":["EventEnums","useTransactionHistory","clmmSdk","useClmmSDKStore","fetchByApi","useFetch","params","res","TransactionsHistory","error","poolId","paginationArgs","useRecentTransactions","getTransactionsHistoryBySDK","isLoading","setIsLoading","useState","list","setList","currentPage","setCurrentPage","nextCursor","setNextCursor","hasNextPage","setHasNextPage","apiPoolInfo","manualRefresh","setManualRefresh","useLiquidityStore","poolAddress","useQueryParams","useEffect","fetchData","result","_data","_a","item","_parsedJson","_firstToken","_secondToken","_b","bnToAmount","pre","useDebounceEffect","iconMap","Event","type","HStack","jsx","Icon","_c","Text","_d","Amounts","items","isReverse","isApp","useWindowWidth","VStack","AmountItem","jsxs","SingleCoinImage","addComma","textEllipses","getColumns","getExplorerUrl","tx","AddressUnderline","block_time","getTimeDifferenceString","RecentTransactions","useExplorer","onCurrentPageChange","NoData","H5MapTable","_","index","Table","Center","Button","Spinner","ChartsTabsEnum","ChartsTypeEnum","DateTabsEnum","DateTypeEnum","LimitMap","useAnalyticChart","currentChartTab","setCurrentChartTab","currentDateType","setCurrentDateType","analyticsData","setAnalyticsData","chartLoading","setChartLoading","hoverData","setHoverData","getHistogramData","useGetHistogramData","getHoverTime","time","useChartTime","useLayoutEffect","fetchAnalyticsData","handleChartTabChange","handleDateTabChange","defaultDisplay","useMemo","chartsTabs","value","dateTypes","AnalyticsCharts","SelectTab","d","removeComma","formatPrice","Box","TvlChart","data","VolumeChart","store","set","get","useTvlInfoStore","create","useBurnedLiquidity","getBurnPositionAmountByPool","useBurn","contractPoolInfo","burnAmountA","setBurnAmountA","burnAmountB","setBurnAmountB","burnAmountAUSD","setBurnAmountAUSD","burnAmountBUSD","setBurnAmountBUSD","loading","setLoading","tokenAPrice","tokenBPrice","getBurnAmount","poolInfo","current_sqrt_price","totalA","totalB","BurnedLiquidity","Stack","TooltipIcon","TokenBurnedLiquidity","token","amount","amountUSD","HTextLabelBox","fromDecimalsAmountFix","formatNumber","usePoolInfo","tokenAAmountUSD","totalAmountUSD","tokenARatio","ratio","fixRounding","tokenBRatio","getRatio","PoolInfo","tokenAAmount","tokenBAmount","tokenBAmountUSD","tvlLoading","Heading","Grid","AddressCopyLink","Skeleton","Progress","_e","_f","TokenCard","PoolsAnalytics","RecentTransaction","useMyPositions","posBaseListLoading","posBaseListGroupByPool","usePositionStore","currentAccount","onWalletModal","useAccountStore","getPositionBaseList","getPosRelatedData","usePositionList","rpcNodeErrorStr","setRpcNodeErrorStr","handleGetPositionList","walletAddress","useRpcListener","MyPositions","navigate","useNavigate","PositionListLoading","PositionItem","PoolsStats","apiPoolInfoLoading","totalTvl","StatsInfo","AprTooltip","AddLiquidityConfirmModal","props","onClose","onSubmit","feeTier","zapData","fromToken","toToken","fromAmount","toAmount","totalAmount","percentMap","fromTokenLock","toTokenLock","useAddLiquidityStore","lowerTickData","upperTickData","usePriceRangeStore","currentPriceData","setIsChecked","useNotifiStore","direct","setDirect","showReverse","perText","onOk","debounce","notifiStatus","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","CoinPairImage","Block","TradeConfirmAmountInfo","PositionStatus","formatNumberWithDown","PriceItem","Divider","ZapSubmiteInfo","Fragment","DepositRatio","TotalAmount","RangeAlerts","title","price","useAddLiquidity","getList","preAdd","getClmmCreateAddData","getFarmsCreateAddData","usePosAdd","preAddLoading","setPreAddLoading","getContractPoolInfo","useGetContractPoolInfo","signAndExecuteTransaction","getTransactionStatus","transactionSuccess","useTransaction","mevProtect","maxCapForGas","transactionMode","customGasPrice","useGlobalStore","transactionConfirmation","useTransactionModal","getCurrentPrice","useGetCurrentPrice","setFromAmount","fromAmountValue","setFromAmountValue","setToAmount","toAmountValue","setToAmountValue","byAmountIn","setByAmountIn","isTokenA","setIsTokenA","setPercentMap","isFullRange","setIsFullRange","setFromToken","setToToken","setTotalAmount","setFromTokenLock","setToTokenLock","setTokenMaxA","setTokenMaxB","tokenMaxA","tokenMaxB","autoStakePosition","liquidityAmount","setLiquidityAmount","useZapIn","setUseZapIn","confirmModalOpen","setConfirmModalOpen","nftOpen","setNftOpen","relatedPosId","setRelatedPosId","getTokenAmountValue","useTokenPrice","getZapDepositTx","getZapDepositToastInfo","reCalculateZapData","useZapSubmit","setZapAmount","useZapStore","useDeepCompareEffect","isWhiteQuoteToken","useQuoteWhiteTokenList","notifiSubscription","useNotifiSubscription","isChecked","baseToken","amountToBN","rateMap","calcCoinProportion","handlePreCalc","_toAmount","_fromAmountValue","_toAmountValue","_totalAmountValue","_fromAmount","handleAmountChange","_byAmountIn","_isTokenA","fromBalanceInfo","useGetTokenBalance","toBalanceInfo","TickUtil","isAvailableObject","handleAdd","resetInputAmount","fetchAccountBalance","useAccountBalance","handleSubmit","toastInfo","msafeParams","inputAmount","tokenDecimals","Decimal","fixAmountA","amount_a","amount_b","lowerTick","upperTick","currentTickIndex","rewarderCoinTypes","rewarder_infos","ele","status","balanceChanges","description","formatDescription","info","amountAF","amountBF","getBalanceChanges","posId","farmsPosId","parsePositionIdFromEvent","errorLowerString","_contractPoolInfo","handleChangeZapIn","useAddLiquidityButton","submitBtnInfo","btnInfo","useGetLeverage","minPrice","maxPrice","useDeposit","rangeTabList","setIsFarmRewardsRange","setAutoStakePosition","currentRangeTab","setCurrentRangeTab","handleInitTickData","usePriceRange","getLeverage","coinType","leverage","handleChangeIsFarmRewardsRange","event","onReverseClick","tab","NFTModal","tokenA","tokenB","fee","isDirect","setIsDirect","e","cancelBubble","ModalFooter","ControlPriceRange","minPriceData","maxPriceData","tickDataLoading","handleAddPrice","handleSubPrice","setTickDataBasedOnPrice","PriceInput","FarmRewardsRange","checked","onChange","FarmingIcon","Switch","AutoStakePosition","disabled","CetusTooltip","useDepositStore","dateTypeList","PriceRangeForDate","wrapStyle","priceRangeMap","setTab","minPriceForDate","maxPriceForDate","setMinPriceForDate","setMaxPriceForDate","_min","_max","lowest","lowValue","highest","highValue","currentTab","useGetRecommendRanges","poolType","setPoolType","getStableRange","farmsEffectTickLower","farmsEffectTickUpper","getFullRange","tickSpacing","getCustomRange","currentTick","addTick","nearesCurrentTick","getNearestTickByTick","stableRange","recommendRangesResult","fullRange","customRange","combinedRanges","rangesList","key","a","b","getRecommendRangeData","rangeName","isActive","getRecommendRangeTipText","rangeWidthMap","SelectRecommendPriceRange","getRecommendRangesList","recommendRanges","setRecommendRanges","currentRange","setCurrentRange","setLowerTickData","setUpperTickData","setTickDataLoading","recommendRangesInfo","fetchRecommendRanges","rangeList","range","Flex","Tooltip","Image","vaultBanner","isOpen","setIsOpen","displayTokenA","displayTokenB","feeDisplay","clmmPool","vaultId","isUnstableVault","vaultsAPY","setVaultsAPY","vaultStatsObj","useVaultsStore","getVaultsStats","useGetVaultList","statsItem","VaultsAprTooltipContent","VaultModal","CurrentPrice","H5ProvideLiquidity","btnText","btnDisabled","resetLiquidity","contractPoolInfoLoading","isFarmRewardsRange","handleChangeAutoStake","currentPrice","priceImpactBasedOnMarket","usePriceImpact","formatTickPrice","priceImpactBasedOnMarketDisplay","LiquidityRangeChart","ErrorTips","WithTooltipInfo","getDisplayPrice","getDisplayReversePrice","Slippage","ZapSwitch","ZapDeposite","TradeInputGroup","focus","VaultBanner","DivisionBlock","children","PCProvideLiquidity","ProvideLiquidity","currentFeeTier","getPrice","zapAmount","currentZapToken","getTokenUSD","decimals","useGetTvlInfo","setTokenAPrice","setTokenBPrice","setTokenAAmount","setTokenBAmount","setTokenAAmountUSD","setTokenBAmountUSD","setTotalAmountUSD","resetTvlInfo","setTvlLoading","getTokenPrice","fullAddress","extractStructTagFromType","normalizeCoinType","prices","fetchGet","envConfigs","handleRefresh","_tokenAPrice","_tokenBPrice","useGetPriceRange","setPriceRangeMap","setRecommendRangesInfo","PriceRangePath","rangesWithDateTypeMap","TickMath","useGetRelatedPools","from","to","getPoolList","useGetPoolList","relatedPoolList","setRelatedPoolList","setApiPoolInfo","setApiPoolInfoLoading","setNetError","fetchTokenInfo","useGetToken","pool","_res","_pool","maxBy","tokenMap","_displayTokenA","_displayTokenB","useGetPoolRelatedInfo","quoteWhiteTokenList","feeTierList","getFeeTierList","defaultFeeList","isTrustedToken","_currentFeeTier","fetchPriceRange","getPriceRanges","address","warningTokenList","TabsEnum","defaultTabList","useLiquidityInteraction","setFeeTier","tabList","setTabList","setCurrentTab","selectedTokenA","setSelectedTokenA","selectedTokenB","setSelectedTokenB","addFavorites","removeFavorites","useFavoritePool","poolFavoriteIds","usePoolsStore","fetchTokenPrices","setFromCoin","setToCoin","useSwapWidgetStore","useSwapWidgetConfigStore","isSwapWidgetDisplay","useWebConfigStore","onJump2Swap","positionNum","isFavoritePool","onChangeFavorites","favoriteStyle","onConfirm","refreshMarketPrice","netError","handleSelectToken","useCallback","self_selected","other_selected","self_address","other_address","isDisplayA","coinTypeList","getSelectTokenProps","tokenInfo","useLiquidity","setCurrentPriceData","handleResetRange","resetAddLiquidity","resetDeposit","handleGetPrice","handleRefreshPrice","isManual","Liquidity","onOpen","useDisclosure","showContent","tooltip","xlinkHref","svgFill","svgHover","selectTokenAProps","setSelectTokenAProps","selectTokenBProps","setSelectTokenBProps","fetchSelectTokenProps","tokenAProps","tokenBProps","BackButton","RefreshButton","SelectToken","FeeTierBlock","WarningTokenTipsModal","SelectTokenAnddFeeConfirm"],"mappings":"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"}