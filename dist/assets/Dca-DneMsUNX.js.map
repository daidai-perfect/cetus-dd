<<<<<<< HEAD:dist/assets/Dca-DR6MQqdt.js.map
{"version":3,"file":"Dca-DR6MQqdt.js","sources":["../../src/components/dca/DcaItem.tsx","../../src/components/dca/ActiveAndPastDcas.tsx","../../src/hooks/dca/useDcaConfig.ts","../../src/hooks/dca/useGetDcaQuote.ts","../../src/hooks/dca/useDcaHook.ts","../../src/hooks/dca/useGetDcaTokenList.ts","../../src/hooks/dca/useOpenDcaOrder.ts","../../src/components/dca/DetailsContent.tsx","../../src/components/dca/ConfirmModal.tsx","../../src/components/dca/DetailsBlock.tsx","../../src/components/dca/InvestAndOrders.tsx","../../src/components/dca/MinAndMaxPrice.tsx","../../src/components/dca/DcaInputBlock.tsx","../../src/pages/Dca.tsx"],"sourcesContent":["import useTokenRank from '@/hooks/common/useTokenRank'\nimport useDcaItemActions from '@/hooks/dca/useDcaItemActions'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport DcaItemCoinPirBlock from './DcaItemBlock/DcaItemCoinPirBlock'\nimport DcaProgressBlock from './DcaItemBlock/DcaProgressBlock'\nimport RangeValueBlock from './DcaItemBlock/RangeValueBlock'\nimport OverviewOrders from './OverviewOrders'\n\nexport default function DcaItem({ currentTabVal, orderInfo }: { currentTabVal: string; orderInfo: any }) {\n  const { isApp } = useWindowWidth()\n  const { inCoin: sellCoin, outCoin: buyCoin } = orderInfo\n  const [isDetail, setIsDetail] = useState(false)\n\n  useEffect(() => {\n    setIsDetail(false)\n  }, [currentTabVal])\n\n  const { getTokenRank } = useTokenRank()\n  const [pageDirect, setPageDirect] = useState(false)\n\n  useEffect(() => {\n    const direct = getTokenRank(sellCoin, buyCoin)\n    console.log('🚀 ~ useEffectDcaItem ~ direct:', buyCoin, sellCoin, direct)\n    setPageDirect(!direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const { closeOrderAction, isCloseLoading } = useDcaItemActions()\n  const closeOrder = async () => {\n    closeOrderAction(orderInfo)\n  }\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack w=\"100%\" gap=\"12px\" align=\"flex-start\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'flex-start', lg: 'center' }}>\n        <HStack>\n          <DcaItemCoinPirBlock orderInfo={orderInfo} />\n          <Icon\n            xlinkHref=\"#icon-icon_link1\"\n            onClick={() => {\n              window.open(getExplorerUrl(orderInfo?.orderID, 'poolAddress'))\n            }}\n          />\n        </HStack>\n        {!isApp && (\n          <BtnContent\n            currentTabVal={currentTabVal}\n            isCloseLoading={isCloseLoading}\n            closeOrder={closeOrder}\n            orderInfo={orderInfo}\n            isDetail={isDetail}\n            onClickDetail={() => setIsDetail(!isDetail)}\n          />\n        )}\n      </HStack>\n      <DcaProgressBlock orderInfo={orderInfo} />\n      <HStack w=\"100%\">\n        <Text color=\"primary_gray\" fontSize=\"12px\">\n          Price Range\n        </Text>\n        <RangeValueBlock orderInfo={orderInfo} isRank={true} />\n      </HStack>\n      {isApp && (\n        <BtnContent\n          currentTabVal={currentTabVal}\n          isCloseLoading={isCloseLoading}\n          closeOrder={closeOrder}\n          orderInfo={orderInfo}\n          isDetail={isDetail}\n          onClickDetail={() => setIsDetail(!isDetail)}\n        />\n      )}\n      {isDetail && <OverviewOrders pageDirect={pageDirect} isDetail={isDetail} currentTabVal={currentTabVal} orderInfo={orderInfo} />}\n    </VStack>\n  )\n}\n\nconst BtnContent = ({\n  currentTabVal,\n  isCloseLoading,\n  closeOrder,\n  orderInfo,\n  isDetail,\n  onClickDetail\n}: {\n  currentTabVal: string\n  isCloseLoading: boolean\n  closeOrder: () => void\n  orderInfo: any\n  isDetail: boolean\n  onClickDetail: () => void\n}) => {\n  return (\n    <HStack w={{ base: '100%', lg: 'unset' }} flexDirection={{ base: 'column', lg: 'row' }}>\n      {currentTabVal == 'active' && (\n        <Button\n          w={{ base: '100%', lg: 'unset' }}\n          isLoading={isCloseLoading}\n          disabled={isCloseLoading}\n          onClick={closeOrder}\n          h=\"32px\"\n          minH=\"unset\"\n          p=\"0px 12px\"\n          fontSize=\"14px\"\n          borderRadius=\"8px\"\n          variant=\"outline\"\n        >\n          {orderInfo?.outBalance <= 0 ? 'Close' : 'Close and Withdraw'}\n        </Button>\n      )}\n      <Button\n        w={{ base: '100%', lg: 'unset' }}\n        h=\"32px\"\n        borderRadius=\"8px\"\n        minH=\"unset\"\n        p=\"0px 12px\"\n        fontSize=\"14px\"\n        variant=\"ghost\"\n        rightIcon={\n          <Icon\n            svgW=\"12px\"\n            svgH=\"12px\"\n            xlinkHref=\"#icon-icon_arrow\"\n            transform={isDetail ? 'rotate(180deg)' : 'rotate(0deg)'}\n            transition=\"transform 0.5s\"\n            ml=\"-4px\"\n            mr=\"-4px\"\n          />\n        }\n        onClick={onClickDetail}\n      >\n        Details\n      </Button>\n    </HStack>\n  )\n}\n","import useDcaActions from '@/hooks/dca/useDcaActions'\nimport { Block, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon, NoData, Pagination, RefreshButton } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport { Button, Center, HStack, Skeleton, SkeletonCircle, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport DcaItem from './DcaItem'\n\nexport default function ActiveAndPastDcas({\n  handleRefresh,\n  activeList,\n  pastList,\n  isOrderLoading\n}: {\n  handleRefresh: (isLoading: boolean) => void\n  activeList: any\n  pastList: any\n  isOrderLoading: boolean\n}) {\n  const pageSize = 10\n  const [pageList, setPageList] = useState([])\n  const [paginationList, setPaginationList] = useState([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [currentTab, setCurrentTab] = useState<Tab>({\n    label: 'Active DCAs',\n    value: 'active'\n  })\n\n  const tabList: Tab[] = useMemo(\n    () => [\n      {\n        label: 'Active DCAs',\n        value: 'active',\n        num: activeList?.length > 0 ? activeList?.length : undefined\n      },\n      {\n        label: 'Past DCAs',\n        value: 'past',\n        num: pastList?.length > 0 ? pastList?.length : undefined\n      }\n    ],\n    [currentTab?.value, activeList, pastList]\n  )\n\n  const handleChangeTab = (item: Tab) => {\n    setCurrentPage(1)\n    setCurrentTab(item)\n  }\n\n  useEffect(() => {\n    const currentList = currentTab?.value === 'active' ? activeList : pastList\n    setPageList(currentList)\n    setTotal(currentList?.length)\n  }, [currentTab?.value, activeList, pastList])\n\n  useEffect(() => {\n    const start = (currentPage - 1) * pageSize\n    const end = start + pageSize\n    setPaginationList(pageList?.slice(start, end))\n  }, [currentPage, pageList, currentTab?.value])\n\n  const totalClaimNum = useMemo(() => {\n    if (currentTab?.value === 'past' || pageList?.length === 0) return 0\n    return pageList?.reduce((sum, orderInfo: any) => d(sum).plus(orderInfo?.outBalance as string), d(0)).toString()\n  }, [currentTab?.value, pageList])\n\n  const { closeAll, claimAll, isClaimAllLoading, isCloseAllLoading } = useDcaActions()\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\">\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: { base: '100%', lg: '300px' },\n              h: '52px',\n              gap: '32px',\n              bg: 'none',\n              border: 'none',\n              mb: '8px'\n            }}\n            itemStyle={{ fontSize: '16px' }}\n            tabList={tabList}\n            currentTab={currentTab.label}\n            handleChangeTab={handleChangeTab}\n          />\n          {isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              h=\"28px\"\n              minH=\"unset\"\n              p=\"0 10px\"\n              fontSize=\"14px\"\n              borderRadius=\"8px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              isLoading={isClaimAllLoading}\n              disabled={Number(totalClaimNum) === 0 || isClaimAllLoading}\n              onClick={() => claimAll(pageList)}\n              leftIcon={<Icon xlinkHref=\"#icon-icon_incentive\" svgFill=\"primary\" mr=\"-4px\" ml=\"-4px\" />}\n            >\n              Claim all\n            </Button>\n          )}\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              isLoading={isCloseAllLoading}\n              disabled={pageList?.length == 0 || isCloseAllLoading}\n              h=\"28px\"\n              borderRadius=\"8px\"\n              minH=\"unset\"\n              p=\"0 12px\"\n              fontSize=\"14px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              onClick={() => closeAll(pageList)}\n            >\n              Close All\n            </Button>\n          )}\n          {!isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      </HStack>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : isOrderLoading ? (\n        <Block>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {[{}, {}].map((item, index) => (\n              <OrderLoading key={index} />\n            ))}\n          </VStack>\n        </Block>\n      ) : pageList?.length === 0 ? (\n        <NoData type=\"nodata\" text={currentTab?.value === 'active' ? 'No active orders' : 'No closed orders'} />\n      ) : (\n        <Block h={paginationList?.length > 8 ? '927px' : 'unset'} overflowY=\"auto\" p={{ base: '12px', lg: '20px 16px' }}>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {paginationList?.map((item: any) => <DcaItem key={item?.orderID} currentTabVal={currentTab.value} orderInfo={item} />)}\n          </VStack>\n          {!isOrderLoading && pageList?.length > pageSize && (\n            <Center mt=\"28px\">\n              <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n            </Center>\n          )}\n        </Block>\n      )}\n    </VStack>\n  )\n}\n\nconst OrderLoading = () => (\n  <VStack w=\"100%\" gap=\"16px\" align=\"flex-start\">\n    <HStack w=\"100%\" gap=\"0\" justify=\"space-between\">\n      <HStack gap=\"0\">\n        <HStack gap=\"0px\" mr=\"8px\" align=\"flex-start\">\n          <SkeletonCircle size=\"8\" />\n          <SkeletonCircle size=\"8\" />\n        </HStack>\n        <Skeleton height=\"4\" width=\"100px\" />\n      </HStack>\n      <Skeleton height=\"4\" width=\"150px\" />\n    </HStack>\n    <Skeleton height=\"4\" width=\"180px\" />\n  </VStack>\n)\n","import { DcaConfigPath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaConfig } from '@/types/dca'\nimport { useFetch } from '@cetus/hooks'\nimport { useSdk } from '@cetus/sdk-factory'\n\nexport default function useDcaConfig() {\n  const { fetchByApi } = useFetch()\n  const dcaSdk = useSdk('dca')\n  const { setDcaConfig } = useDcaStore()\n\n  const getDcaConfigFromApi = async () => {\n    const res = await fetchByApi(DcaConfigPath, 'GET')\n    return res || null\n  }\n\n  const getDcaConfigFromContract = async () => {\n    const data = await dcaSdk!.Dca.getDcaGlobalConfig()\n    return data\n  }\n\n  const getDcaConfig = async () => {\n    const dcaConfig: DcaConfig = {}\n    try {\n      const apiConfig = await getDcaConfigFromApi()\n      if (apiConfig) {\n        dcaConfig['minCycleAmountInUsd'] = apiConfig?.min_amount_in_usd\n      }\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:22 ~ getDcaConfig ~ error:', error)\n    }\n\n    try {\n      const contractConfig = await getDcaConfigFromContract()\n      dcaConfig['minCycleCount'] = contractConfig?.min_cycle_count\n      dcaConfig['minCycleFrequency'] = contractConfig?.min_cycle_frequency\n      dcaConfig['whitelistMode'] = contractConfig?.whitelist_mode\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:32 ~ getDcaConfig ~ error:', error)\n    }\n\n    console.log('🚀🚀🚀 ~ file: useDcaConfig.ts:45 ~ getDcaConfig ~ dcaConfig:', dcaConfig)\n    setDcaConfig(dcaConfig)\n    return dcaConfig\n  }\n\n  return {\n    getDcaConfig\n  }\n}\n","import { DcaQuotePath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaQuoteData } from '@/types'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useDcaGetQuote() {\n  const { fetchByApi } = useFetch()\n  const { setDcaQuote } = useDcaStore()\n  const getDcaQuote = async ({\n    inCoin,\n    freq,\n    count,\n    sender\n  }: {\n    inCoin: string\n    freq: string | number\n    count: string | number\n    sender: string\n  }): Promise<DcaQuoteData | null> => {\n    try {\n      const data = await fetchByApi(DcaQuotePath, 'GET', {\n        in_coin: inCoin,\n        freq,\n        count,\n        sender\n      })\n      if (data) {\n        const result = {\n          amountInLimitPerCycle: data?.amount_in_limit_per_cycle,\n          coinType: data?.coin_type,\n          feeRate: data?.fee_rate,\n          signature: data?.signature,\n          signer: data?.signer,\n          timestamp: data?.timestamp\n        }\n        setDcaQuote(result)\n        return result\n      }\n    } catch (error) {\n      console.log('getDcaQuote ~ error:', error)\n    }\n\n    return null\n  }\n\n  return {\n    getDcaQuote\n  }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useDcaStore from '@/store/dca'\nimport { AggregatorServerErrorCode, SwapRouterData } from '@/types'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, timeFormatUTC } from '@cetus/utils'\nimport { extractStructTagFromType, fixCoinType, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport useTokenRank from '../common/useTokenRank'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useDcaConfig from './useDcaConfig'\nimport useDcaGetQuote from './useGetDcaQuote'\n\nexport function useDcaHook() {\n  const {\n    sellCoin,\n    buyCoin,\n    setSellCoin,\n    setBuyCoin,\n    sellAmount,\n    buyAmount,\n    setBuyAmount,\n    setSellAmount,\n    dcaConfig,\n    setCurrentCoinKey,\n    currentCoinKey,\n    investNum,\n    currentInvest,\n    orderNum,\n    dcaQuote,\n    setInvestNum,\n    setOrderNum,\n    setCurrentInvest,\n    setPageDirect,\n    pageDirect,\n    dcaMode,\n    sellTotalAmount,\n    setSellTotalAmount,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n\n  const { currentAccount } = useAccountStore()\n  const { getDcaConfig } = useDcaConfig()\n  const { getDcaQuote } = useDcaGetQuote()\n  const { coinPriceObj } = useTokenPriceStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef(uuid)\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // 获取dca的配置(单笔订单数量不能小于多少)\n  const handleGetDcaConfig = async () => {\n    const res = await getDcaConfig()\n    console.log('🚀 ~ handleGetDcaConfig ~ res:', res)\n  }\n\n  // Initialization dca Token\n  const initiaTokenSelect = () => {\n    console.log('🚀 ~ initiaTokenSelect ~ setSellCoin:')\n    setSellCoin(envConfigs.clmm_swap.from_coin)\n    setBuyCoin(envConfigs.clmm_swap.to_coin)\n  }\n\n  useEffect(() => {\n    setLowerPriceSize('0%')\n    setUpperPriceSize('0%')\n    initiaTokenSelect()\n    getDcaConfig()\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  // 订单价格最小值\n  const [minPriceValue, setMinPriceValue] = useState<string>('')\n  // 订单价格最大值\n  const [maxPriceValue, setMaxPriceValue] = useState<string>('')\n  // 余额\n  const { balanceInfo: sellBalanceInfo } = useGetTokenBalance(sellCoin)\n  const { balanceInfo: buyBalanceInfo } = useGetTokenBalance(buyCoin)\n\n  // 价值\n  const sellAmountValue = getTokenAmountValue(sellCoin?.coin_type, sellAmount)\n\n  // 卖出数量变化\n  const handleAmountChange = (amount: string) => {\n    setCurrentCoinKey('sellCoin')\n    setSellAmount(amount)\n    fetchFindAvailableRouterDebounce()\n  }\n  useEffect(() => {\n    if (+sellAmount && +orderNum) {\n      if (dcaMode == 'total') {\n        setSellTotalAmount(sellAmount)\n      } else {\n        setSellTotalAmount(d(sellAmount).mul(orderNum).toString())\n      }\n    } else {\n      setSellTotalAmount('')\n    }\n  }, [sellAmount, dcaMode, orderNum])\n  const handlePageToggleDirect = () => {\n    const decimals = pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    setPageDirect(!pageDirect)\n    if (minPriceValue && maxPriceValue) {\n      const value = minPriceValue\n      const newMinVal = d(1).div(maxPriceValue).toString()\n      const newMaxVal = d(1).div(value).toString()\n      setMinPriceValue(formatNumberWithDown(newMinVal, decimals, true).toString())\n      setMaxPriceValue(formatNumberWithDown(newMaxVal, decimals, true).toString())\n    }\n  }\n  // token选择\n  const handleSelectToken = (coin: Token, isSell: boolean = true) => {\n    console.log('🚀🚀🚀 ~ useDcaHook.ts:143 ~ handleSelectToken ~ handleSelectToken:')\n\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    if (isSell) {\n      if (fixCoinType(coin?.coin_type) === fixCoinType(buyCoin!.coin_type)) {\n        onReverseClick()\n      } else {\n        setSellCoin(coin)\n      }\n      setCurrentCoinKey('sellCoin')\n    } else {\n      if (fixCoinType(coin?.coin_type) === fixCoinType(sellCoin!.coin_type)) {\n        onReverseClick()\n      } else {\n        setBuyCoin(coin)\n      }\n      setCurrentCoinKey('buyCoin')\n    }\n  }\n  // 清空输入框\n  const resetInputAmount = () => {\n    setSellAmount('')\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    setUuid('')\n    setInvestNum('1')\n    setOrderNum('2')\n    setCurrentInvest('Hour')\n  }\n  // 交换token方向\n  const onReverseClick = () => {\n    setSellCoin(buyCoin!)\n    setBuyCoin(sellCoin!)\n  }\n\n  // dca白名单判断\n  const isDcaSelect = useMemo(() => {\n    const whitelistMode = dcaConfig?.whitelistMode\n    console.log('🚀 ~ useDcaHook ~ whitelistMode:', whitelistMode)\n    if (whitelistMode === 3) return true\n    if (whitelistMode === 0) return false\n\n    if (currentCoinKey === 'sellCoin') {\n      return whitelistMode === 1\n    } else if (currentCoinKey === 'buyCoin') {\n      return whitelistMode === 2\n    }\n    return false\n  }, [dcaConfig?.whitelistMode])\n\n  // sellCoin的当前价格\n  const sellCoinPrice = coinPriceObj[extractStructTagFromType(sellCoin?.coin_type).full_address]?.price || 0\n  // 单笔订单的数量\n  const sellPerOrder = useMemo(() => {\n    if (sellTotalAmount && orderNum) {\n      return d(sellTotalAmount).div(orderNum).toString()\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum])\n  // 单笔订单的价值\n  const sellPerOrderUSD = useMemo(() => {\n    if (sellTotalAmount && orderNum && sellCoinPrice) {\n      return d(sellTotalAmount).div(orderNum).mul(sellCoinPrice).toString() || 0\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum, sellCoinPrice])\n  // 订单费率\n  const platformFee = d(dcaQuote?.feeRate).div(Decimal.pow(10, 6)).mul(100).toString() + '%' || '0%'\n  // 单比订单的数量限制\n  const amountInLimit = useMemo(() => {\n    if (dcaQuote?.amountInLimitPerCycle && sellCoin?.decimals) {\n      return bnToAmount(dcaQuote?.amountInLimitPerCycle, sellCoin?.decimals)\n    }\n  }, [dcaQuote?.amountInLimitPerCycle])\n  // 单比订单的数量错误\n  const orderSizeError = useMemo(() => {\n    console.log('🚀 ~ orderSizeError ~ sellPerOrder:', sellPerOrder, amountInLimit)\n    if (dcaConfig?.minCycleAmountInUsd && orderNum && sellAmount && amountInLimit && Number(sellPerOrder) < Number(amountInLimit)) {\n      return {\n        status: true,\n        tips: `Each order size should be higher than $${dcaConfig?.minCycleAmountInUsd}.`\n      }\n    }\n    if (sellAmount && orderNum && Number(sellPerOrderUSD) > 10000) {\n      return {\n        status: true,\n        tips: 'Each order size should be less than $10,000'\n      }\n    }\n    return {\n      status: false,\n      tips: ''\n    }\n  }, [dcaMode, amountInLimit, orderNum, sellPerOrder, sellAmount, sellPerOrderUSD, dcaConfig?.minCycleAmountInUsd])\n  // 订单数量输入错误\n  const orderInputError = useMemo(() => {\n    console.log('🚀 ~ orderInputError ~ orderNum:', orderNum, orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount))\n    if (dcaConfig?.minCycleCount && orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount)) {\n      return {\n        status: true,\n        tips: `Number of Orders cannot be lower than ${dcaConfig?.minCycleCount}.`\n      }\n    } else if (orderNum && Number(investNum) <= 0) {\n      return {\n        status: true,\n        tips: 'Please enter an interval above 0'\n      }\n    } else if (orderNum && investNum && Number(investNum) > 10000) {\n      return {\n        status: true,\n        tips: 'The maximum interval is 10,000.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [orderNum, dcaConfig?.minCycleCount, investNum])\n\n  // 最大最小价格错误\n  const priceError = useMemo(() => {\n    if ((minPriceValue && Number(minPriceValue) == 0) || (maxPriceValue && Number(maxPriceValue) == 0)) {\n      return {\n        status: true,\n        tips: 'Please enter a price greater than 0.'\n      }\n    } else if (minPriceValue && maxPriceValue && Number(minPriceValue) >= Number(maxPriceValue)) {\n      return {\n        status: true,\n        tips: 'The max price should be higher than min price.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  // 订单结束时间\n  const [estEndDate, setEstEndDate] = useState('')\n  // 订单时间错误\n  const [orderTimeError, setOrderTimeError] = useState({\n    status: false,\n    tips: ''\n  })\n  const getEstEndDate = () => {\n    const date = new Date().getTime()\n    let investTime = 0\n    console.log('🚀🚀🚀 ~ file: dca-detail.vue:34 ~ estEndDate ~ currentTime.value:', currentInvest)\n    switch (currentInvest) {\n      case 'Minute':\n        // investTime = d(investNum).mul(60).mul(1000).mul(d(orderNum).sub(1)).plus(60000).toNumber()\n        investTime = Number(investNum) * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n    }\n    console.log(\n      '🚀🚀🚀 ~ file: dca-detail.vue:46 ~ estEndDate ~ date + investTime:',\n      orderNum,\n      date,\n      investTime,\n      investTime > 60 * 60 * 24 * 365 * 1000\n    )\n    const result = timeFormatUTC(date + investTime, 'YMDHM')\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:303 ~ getEstEndDate ~ result:', result)\n    setEstEndDate(result!)\n    if (result == 'NaN-NaN-NaN NaN:NaN') {\n      setEstEndDate('--')\n    }\n    if (investTime > 60 * 60 * 24 * 365 * 1000) {\n      setOrderTimeError({\n        status: true,\n        tips: 'The maximum execution period is 1 year'\n      })\n    } else {\n      setOrderTimeError({\n        status: false,\n        tips: 'The maximum execution period is 1 year'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getEstEndDate()\n  }, [sellAmount, investNum, orderNum, minPriceValue, maxPriceValue, currentInvest])\n\n  const cycleFrequency = useMemo(() => {\n    let investTime = 0\n    switch (currentInvest) {\n      case 'Minute':\n        investTime = Number(investNum) * 60\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30\n        break\n    }\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:333 ~ cycleFrequency ~ investTime:', investTime)\n    return investTime\n  }, [currentInvest, investNum])\n\n  useEffect(() => {\n    if (sellCoin?.coin_type && cycleFrequency && orderNum) {\n      queryDcaQuoteDebounce(sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address)\n    }\n  }, [sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address])\n\n  const queryDcaQuote = async (coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    const defaultWalletAddress = sender || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    try {\n      const result = await getDcaQuote({ inCoin: coinAddress, freq, count, sender: defaultWalletAddress })\n      console.log('🚀 ~ queryDcaQuote ~ result:', result)\n      return result\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ file: dca-data.ts:344 ~ queryDcaQuote ~ error:', error)\n    }\n  }\n\n  const queryDcaQuoteDebounce = useDebounceFunction((coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    queryDcaQuote(coinAddress, freq, count, sender)\n  }, 500)\n\n  const { findBestRouters } = useFindBestRouting()\n  const [findRouterLoading, setFindRouterLoading] = useState<boolean>(false)\n  const [routerData, setRouterData] = useState<SwapRouterData | undefined>(undefined)\n\n  const { getTokenRank } = useTokenRank()\n\n  useEffect(() => {\n    getTokensPrice()\n    const direct = getTokenRank(sellCoin!, buyCoin!)\n    console.log('🚀 ~ useEffect ~ direct:', direct)\n    setPageDirect(direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  useEffect(() => {\n    fetchFindAvailableRouterDebounce()\n  }, [sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const fetchFindAvailableRouterDebounce = () => {\n    if (d(sellPerOrder).gt(0) && sellCoin?.coin_type && buyCoin?.coin_type) {\n      setFindRouterLoading(true)\n      console.log('🚀 ~ useDcaHook ~ sellAmountDebounce:', Number(sellPerOrder) > 0, sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type, orderNum)\n      findAvailableRouterDebounce()\n    }\n  }\n\n  const findAvailableRouterDebounce = useDebounceFunction(() => {\n    findAvailableRouter()\n  }, 500)\n\n  // 判断该交易对，是否存在可用路由\n  const findAvailableRouter = async () => {\n    console.log('🚀 ~ findAvailableRouter ~ findAvailableRouter:', sellPerOrder)\n    if (sellCoin && buyCoin) {\n      const newUuid = `${sellCoin.coin_type}_${buyCoin.coin_type}`\n      setUuid(newUuid)\n      const providersKeys = Object.entries(AggregatorDexMap).map(([key, value]) => value.id)\n      const result = await findBestRouters({\n        fromToken: sellCoin,\n        toToken: buyCoin,\n        amount: toDecimalsAmount(sellPerOrder || 1, sellCoin?.decimals).toFixed(0),\n        providersKeys: providersKeys as string[],\n        by_amount_in: true,\n        uuid: newUuid\n      })\n\n      console.log('🚀 ~ findAvailableRouter ~ newUuid:', newUuid, uuid, result)\n      if (newUuid === uuidRef.current) {\n        setRouterData(result)\n        setBuyAmount(result.toAmountUi)\n        setFindRouterLoading(false)\n      }\n    }\n  }\n\n  // 获取当前的token价格\n  const getTokensPrice = () => {\n    const uniqueTokens = (sellCoin?.coin_type || buyCoin?.coin_type) && Array.from(new Set([sellCoin?.coin_type, buyCoin?.coin_type]))\n    // fetchTokenPrices(uniqueTokens || [])\n    if (uniqueTokens?.length > 0) {\n      fetchTokenPrices(uniqueTokens)\n    }\n  }\n\n  const btnStatus = useMemo(() => {\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Create DCA Order',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n    if (!sellCoin?.coin_type || !buyCoin?.coin_type) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Select a token'\n      return btnInfo\n    }\n    if (!sellAmount || Number(sellAmount) == 0) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n    if (d(sellTotalAmount).gt(sellBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${sellCoin?.symbol} balance`\n      return btnInfo\n    }\n    if (d(dcaConfig?.minCycleCount).gt(orderNum || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum ${dcaConfig?.minCycleCount} orders`\n      return btnInfo\n    }\n\n    if (d(amountInLimit).gt(sellPerOrder || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum $${dcaConfig?.minCycleAmountInUsd} per order`\n      return btnInfo\n    }\n\n    if (\n      orderSizeError.status ||\n      orderInputError.status ||\n      priceError.status ||\n      orderTimeError.status ||\n      !sellCoin?.coin_type ||\n      !buyCoin?.coin_type ||\n      !orderNum ||\n      !investNum ||\n      !minPriceValue ||\n      !maxPriceValue\n    ) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Create DCA Order'\n      return btnInfo\n    }\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    // errorCode\n    if (routerData && routerData.errorCode) {\n      if (routerData.errorCode === AggregatorServerErrorCode.NoRouter || routerData.errorCode === AggregatorServerErrorCode.HoneyPot) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    sellBalanceInfo,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError,\n    sellCoin?.coin_type,\n    buyCoin?.coin_type,\n    sellTotalAmount,\n    investNum,\n    orderNum,\n    minPriceValue,\n    maxPriceValue,\n    routerData?.routes?.length\n  ])\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (buyCoin) {\n      list.push(buyCoin)\n    }\n\n    if (sellCoin) {\n      list.push(sellCoin)\n    }\n\n    return list\n  }, [buyCoin, sellCoin])\n\n  const currentPrice = useMemo(() => {\n    if (pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(buyAmount).div(sellPerOrder).toString(), buyCoin?.decimals, true)\n    }\n    if (!pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(sellPerOrder).div(buyAmount).toString(), sellCoin?.decimals, true)\n    }\n    return ''\n  }, [pageDirect, sellPerOrder, buyAmount])\n\n  const minPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMinPriceValue(val)\n  }, 500)\n\n  const maxPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMaxPriceValue(val)\n  }, 500)\n\n  const handleMinInputChange = (val: string) => {\n    console.log('🚀 ~ handleMinInputChange ~ val:', val)\n    minPriceValueDebounce(val)\n  }\n  const handleMaxInputChange = (val: string) => {\n    console.log('🚀 ~ handleMaxInputChange ~ val:', val)\n    maxPriceValueDebounce(val)\n  }\n\n  useEffect(() => {\n    changeLowerPriceSize(minPriceValue)\n  }, [minPriceValue, currentPrice])\n\n  useEffect(() => {\n    changeUpperPriceSize(maxPriceValue)\n  }, [maxPriceValue, currentPrice])\n\n  const changeLowerPriceSize = (val: string) => {\n    console.log('🚀 ~ changeLowerPriceSize ~ val:', val)\n    if (currentPrice && val) {\n      // 公式 lowerPriceSize = (lowerPrice/currentPrice - 1)*100\n      const lowerPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', lowerPrice)\n      setLowerPriceSize(d(lowerPrice).gt(10000) ? '>10,000%' : `${formatNumber(lowerPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  const changeUpperPriceSize = (val: string) => {\n    if (currentPrice && val) {\n      // 公式 upperPriceSize = (upperPrice/currentPrice - 1)*100\n      const upperPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', upperPrice)\n      setUpperPriceSize(d(upperPrice).gt(10000) ? '>10,000%' : `${formatNumber(upperPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  return {\n    currentPrice,\n    handleMinInputChange,\n    handleMaxInputChange,\n    warningTokenList,\n    resetInputAmount,\n    cycleFrequency,\n    btnStatus,\n    fetchFindAvailableRouterDebounce,\n    queryDcaQuote,\n    findRouterLoading,\n    platformFee,\n    estEndDate,\n    sellPerOrder,\n    isDcaSelect,\n    onReverseClick,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handlePageToggleDirect,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError\n  }\n}\n","import useDcaStore from '@/store/dca'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { CoinType } from '@cetus/types'\n\nexport default function () {\n  const dcaSdk = useSdk('dca')\n  const { getTokenListInfo } = useGetToken()\n  const { setFilterTokenLoading } = useTokenSelectStore()\n  const { setInCoinWhiteList, setOutCoinWhiteList } = useDcaStore()\n  // whitelist_mode = 0 关闭白名单模式\n  // whitelist_mode = 1 只开启in_coin\n  // whitelist_mode = 2 只开启out_coin\n  // whitelist_mode = 3 全部开启\n  const getDcaCoinWhiteList = async (whitelist_mode: number) => {\n    console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:44 ~ getDcaCoinWhiteList ~ getDcaCoinWhiteList:')\n    try {\n      setFilterTokenLoading(true)\n      const { in_coin_list, out_coin_list } = await dcaSdk!.Dca.getDcaCoinWhiteList(whitelist_mode)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ outCoinList:', out_coin_list)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ inCoinList:', in_coin_list)\n      const inList: any = []\n      const outList: any = []\n      const inCoinTypeList = in_coin_list.map((item: any) => item)\n      const inTokenMap = await getTokenListInfo(inCoinTypeList)\n      if (inTokenMap) {\n        for (let i = 0; i < in_coin_list.length; i++) {\n          const tokenInfo = inTokenMap.get(in_coin_list[i] as CoinType)\n          inList.push({\n            ...tokenInfo,\n            labels: tokenInfo?.labels?.length > 0 ? tokenInfo?.labels : ''\n          })\n        }\n      }\n      const outCoinTypeList = out_coin_list.map((item: any) => item)\n      const outTokenMap = await getTokenListInfo(outCoinTypeList)\n      if (outTokenMap) {\n        for (let i = 0; i < out_coin_list.length; i++) {\n          const tokenInfo = outTokenMap.get(out_coin_list[i] as CoinType)\n          outList.push({\n            ...tokenInfo,\n            labels: tokenInfo?.labels?.length > 0 ? tokenInfo?.labels : ''\n          })\n        }\n      }\n\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ outList:', outList)\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ inList:', inList)\n      setInCoinWhiteList(inList)\n      setOutCoinWhiteList(outList)\n      setFilterTokenLoading(false)\n    } catch (error) {\n      setInCoinWhiteList([])\n      setOutCoinWhiteList([])\n      setFilterTokenLoading(false)\n      console.log('🚀 ~ file: useGetDcaTokenList.ts:35 ~ getDcaCoinWhiteList ~ error:', error)\n    }\n  }\n  return { getDcaCoinWhiteList }\n}\n","import { useSdk } from '@cetus/sdk-factory'\nimport { Token } from '@cetus/types'\nimport { d, Decimal } from '@cetus/utils'\nimport { toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport useDcaGetQuote from './useGetDcaQuote'\nexport type OpenDcaOrderParams = {\n  in_coin: Token\n  out_coin: Token\n  in_coin_amount: number\n  cycle_count: number\n  min_price: number\n  max_price: number\n  freq: number\n}\nexport default function () {\n  const dcaSdk = useSdk('dca')\n  const { getDcaQuote } = useDcaGetQuote()\n\n  // Helper function: 计算单周期最大最小期望数量\n  const calculateCycleAmounts = (\n    inCoinAmount: number,\n    cycleCount: number,\n    inCoinDecimals: number,\n    outCoinDecimals: number,\n    minPrice: number,\n    maxPrice: number\n  ) => {\n    const cycleCountAmount = d(toDecimalsAmount(inCoinAmount, inCoinDecimals)).div(cycleCount)\n\n    const maxAmount = d(cycleCountAmount).div(d(minPrice))\n    const minAmount = d(cycleCountAmount).div(d(maxPrice))\n\n    let perCycleMinOutAmount: string, perCycleMaxOutAmount: string\n\n    if (inCoinDecimals > outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, inCoinDecimals - outCoinDecimals)\n      perCycleMinOutAmount = minAmount.div(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.div(perCycleAmountDecimal).ceil().toString()\n    } else if (inCoinDecimals < outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, outCoinDecimals - inCoinDecimals)\n      perCycleMinOutAmount = minAmount.mul(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.mul(perCycleAmountDecimal).ceil().toString()\n    } else {\n      perCycleMinOutAmount = minAmount.ceil().toString()\n      perCycleMaxOutAmount = maxAmount.ceil().toString()\n    }\n\n    return { perCycleMinOutAmount, perCycleMaxOutAmount, cycleCountAmount }\n  }\n\n  // Helper function: 构造 DCA 参数\n  const buildDcaOrderPayload = (params: OpenDcaOrderParams, quoteResult: any, perCycleMinOutAmount: string, perCycleMaxOutAmount: string) => {\n    const { in_coin, in_coin_amount, freq, cycle_count, out_coin } = params\n\n    return {\n      in_coin_amount: String(toDecimalsAmount(in_coin_amount, in_coin.decimals)),\n      in_coin_type: in_coin.coin_type,\n      out_coin_type: out_coin.coin_type,\n      cycle_frequency: freq,\n      cycle_count,\n      per_cycle_min_out_amount: perCycleMinOutAmount,\n      per_cycle_max_out_amount: perCycleMaxOutAmount,\n      per_cycle_in_amount_limit: quoteResult.amountInLimitPerCycle,\n      fee_rate: quoteResult.feeRate,\n      timestamp: quoteResult.timestamp,\n      signature: quoteResult.signature\n    }\n  }\n\n  // Main function\n  const openDcaOrder = async (params: OpenDcaOrderParams) => {\n    const { in_coin, out_coin, in_coin_amount, cycle_count, min_price, max_price, freq } = params\n\n    // Step 1: 获取报价\n    const sender = (await dcaSdk!.getSenderAddress()) || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    const quoteResult = await getDcaQuote({ inCoin: in_coin.coin_type, freq, count: cycle_count, sender })\n    if (!quoteResult) {\n      throw new Error('Request timed out')\n    }\n\n    // Step 2: 计算单周期金额\n    const { perCycleMinOutAmount, perCycleMaxOutAmount } = calculateCycleAmounts(\n      in_coin_amount,\n      cycle_count,\n      in_coin.decimals,\n      out_coin.decimals,\n      min_price,\n      max_price\n    )\n\n    // Step 3: 构造 DCA 开单参数\n    const dcaOpenOrderPayloadParams = buildDcaOrderPayload(params, quoteResult, perCycleMinOutAmount, perCycleMaxOutAmount)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:91 ~ openDcaOrder ~ dcaOpenOrderPayloadParams:', dcaOpenOrderPayloadParams)\n\n    // Step 4: 调用 SDK 提交订单\n    const tx = await dcaSdk!.Dca.dcaOpenOrderPayload(dcaOpenOrderPayloadParams)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:55 ~ openDcaOrder ~ tx:', tx)\n    return tx\n  }\n\n  return { openDcaOrder }\n}\n","import useDcaStore from '@/store/dca'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport RangeValue from '../position/RangeValue'\nexport type detailsDataType = {\n  sellPerOrder: string | number\n  estEndDate: string\n  platformFee: string\n  minPriceValue: string\n  maxPriceValue: string\n  minPriceResever: string\n  maxPriceResever: string\n}\ninterface DetailsContentProps {\n  detailsData: detailsDataType\n  isConfirm?: boolean\n}\nexport default function DetailsContent({ detailsData, isConfirm = false }: DetailsContentProps) {\n  const { sellPerOrder, estEndDate, platformFee, minPriceValue, maxPriceValue, minPriceResever, maxPriceResever } = detailsData\n  const { sellCoin, buyCoin, sellTotalAmount, investNum, currentInvest, pageDirect } = useDcaStore()\n  console.log('🚀 ~ DetailsBlock ~ investNum:', detailsData, investNum)\n  return (\n    <VStack w=\"100%\" gap={isConfirm ? '20px' : '16px'}>\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell total\"\n        value={!sellTotalAmount ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellTotalAmount, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell per order\"\n        value={!sellPerOrder ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellPerOrder, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {!isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Receive\"\n          value={\n            <HStack gap=\"4px\">\n              <SingleCoinImage\n                imageUrl={buyCoin?.logo_url}\n                w=\"20px\"\n                h=\"20px\"\n                coinType={buyCoin?.coin_type}\n                showTagHeight=\"10px\"\n                showTagWidth=\"10px\"\n              />\n              <Text color=\"text_caption\">{buyCoin?.symbol}</Text>\n            </HStack>\n          }\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      {isConfirm && (\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text textAlign=\"left\" whiteSpace=\"nowrap\">\n            Price range\n          </Text>\n          <RangeValue\n            displayTokenA={buyCoin}\n            displayTokenB={sellCoin}\n            isRank={true}\n            justify=\"flex-end\"\n            priceInfo={{\n              minPrice: addComma(minPriceValue).toString(),\n              maxPrice: addComma(maxPriceValue).toString(),\n              minPriceResever: addComma(minPriceResever).toString(),\n              maxPriceResever: addComma(maxPriceResever).toString()\n            }}\n            fontSize=\"14px\"\n            color=\"text_caption\"\n          />\n        </HStack>\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Invest every\"\n        value={Number(investNum) > 1 ? `${investNum} ${currentInvest}s` : `${investNum} ${currentInvest}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Start date\"\n          value={String(timeFormatUTC(Date.now(), 'YMDHM'))}\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Est. end date(UTC)\"\n        value={estEndDate}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Platform fee\"\n        value={platformFee}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n    </VStack>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { Icon } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport DetailsContent from './DetailsContent'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onClose: () => void\n  toOpenDca: () => void\n  confirmData: any\n  toOpenDcaLoading: boolean\n}\n\nconst ConfirmModal = ({ confirmData, isOpen, onClose, toOpenDca, toOpenDcaLoading }: ConfirmModalProps) => {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Review your order\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"16px\" p=\"16px\">\n            <Block borderRadius=\"12px\" position=\"relative\" p=\"0 12px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <VStack align=\"flex-start\" w=\"calc(50% - 24px)\">\n                  <Text>Sell</Text>\n                  <SingleTokenInfo token={sellCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n                <Box w=\"1px\" h=\"100px\" bg=\"border\" />\n                <VStack align=\"flex-end\" w=\"calc(50% - 24px)\">\n                  <Text>Buy</Text>\n                  <SingleTokenInfo token={buyCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n              </HStack>\n              <Center\n                w=\"36px\"\n                h=\"36px\"\n                borderRadius=\"50%\"\n                position=\"absolute\"\n                left=\"calc(50% - 18px)\"\n                top=\"calc(50% - 18px)\"\n                border=\"1px solid\"\n                borderColor=\"border\"\n                boxShadow=\"trade_icon_shadow\"\n                bg=\"input_bg\"\n              >\n                <Icon mt=\"-1px\" svgW=\"12px\" svgH=\"12px\" xlinkHref=\"#icon-a-icon_trade\" svgFill=\"text_caption\" transform=\"rotate(-90deg)\" />\n              </Center>\n            </Block>\n            <DetailsContent detailsData={confirmData} isConfirm />\n            <Button\n              mt=\"12px\"\n              onClick={() => {\n                toOpenDca()\n                onClose()\n              }}\n              disabled={toOpenDcaLoading}\n              w=\"calc(100% + 32px)\"\n              mb=\"-30px\"\n              h=\"52px\"\n              fontWeight=\"500\"\n            >\n              Create DCA Order\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import { Block } from '@cetus/design'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport DetailsContent, { detailsDataType } from './DetailsContent'\n\ninterface DetailsBlockProps {\n  detailsData: detailsDataType\n}\nexport default function DetailsBlock({ detailsData }: DetailsBlockProps) {\n  return (\n    <Block>\n      <VStack gap=\"20px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text color=\"text_caption\">Details</Text>\n          <Text fontSize=\"12px\">Your first invest cycle will begin immediately</Text>\n        </HStack>\n        <DetailsContent detailsData={detailsData} />\n      </VStack>\n    </Block>\n  )\n}\n","import { InputBox } from '@cetus/design'\nimport { HStack, Input, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\nimport MenuDropBlock from '../common/MenuDropBlock'\n\ninterface InvestAndOrdersProps {\n  title: string | ReactNode\n  label: string\n  inputValue: string\n  inputChange?: (value: string) => void\n  list?: string[]\n  onListItemClick?: (item: string) => void\n}\n\nexport default function InvestAndOrders({\n  title,\n  label,\n  inputValue,\n  inputChange = () => {},\n  list = [],\n  onListItemClick = () => {}\n}: InvestAndOrdersProps) {\n  // 处理输入值的变化\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    inputChange(value)\n  }\n  return (\n    <InputBox w=\"50%\" borderRadius=\"16px\">\n      <VStack gap=\"16px\" align=\"flex-start\">\n        {typeof title === 'string' ? (\n          <Text fontWeight=\"500\" lineHeight=\"18px\" fontSize=\"13px\">\n            {title}\n          </Text>\n        ) : (\n          title\n        )}\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Input\n            value={inputValue}\n            onChange={handleInputChange}\n            style={{\n              width: 'calc(100% - 8px)',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n\n          {list.length > 0 ? (\n            <MenuDropBlock label={label} list={list} onListItemClick={onListItemClick} />\n          ) : (\n            <Text color=\"text_caption\">{label}</Text>\n          )}\n        </HStack>\n      </VStack>\n    </InputBox>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { InputBox } from '@cetus/design'\nimport { NumericFormatInput } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface InvestAndOrdersProps {\n  text?: string\n  inputValue: string\n  inputChange: (value: string) => void\n  align: string\n  direct: boolean\n}\n\nexport default function MinAndMaxPrice({ direct, text, align, inputValue, inputChange = () => {} }: InvestAndOrdersProps) {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <InputBox w=\"unset\" borderRadius=\"8px\">\n      <HStack>\n        <VStack align={align}>\n          <NumericFormatInput\n            value={inputValue}\n            placeholder=\"0.0\"\n            decimals={18}\n            onChange={value => inputChange(value)}\n            style={{\n              width: 'calc(100% - 8px)',\n              textAlign: align == 'flex-start' ? 'left' : 'right',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n          <HStack w=\"100%\" justify=\"space-between\">\n            <Text fontSize=\"12px\" fontWeight=\"500\">\n              {direct ? `${buyCoin?.symbol} per ${sellCoin?.symbol}` : `${sellCoin?.symbol} per ${buyCoin?.symbol}`}\n            </Text>\n            {text && (\n              <Text fontSize=\"12px\" fontWeight=\"500\">\n                {text}\n              </Text>\n            )}\n          </HStack>\n        </VStack>\n      </HStack>\n    </InputBox>\n  )\n}\n","import useInsufficientBalanceToast from '@/hooks/common/useInsufficientBalanceToast'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport { useDcaHook } from '@/hooks/dca/useDcaHook'\nimport useGetDcaTokenList from '@/hooks/dca/useGetDcaTokenList'\nimport useOpenDcaOrder from '@/hooks/dca/useOpenDcaOrder'\nimport useDcaStore from '@/store/dca'\nimport { Block, CurrentPrice, ErrorTips, TooltipIcon, TradeInputGroup, useGlobalToast } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, formatNumber, formatNumberWithDown } from '@cetus/utils'\nimport { Button, HStack, Image, RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport ConfirmModal from './ConfirmModal'\nimport DetailsBlock from './DetailsBlock'\nimport { detailsDataType } from './DetailsContent'\nimport InvestAndOrders from './InvestAndOrders'\nimport MinAndMaxPrice from './MinAndMaxPrice'\nimport icon_currentprice from '/images/icon_currentprice@2x.png'\n\nexport function DcaInputBlock({ handleGetDcaOrderList }: { handleGetDcaOrderList: (orderId: string) => void }) {\n  const {\n    sellCoin,\n    buyCoin,\n    sellAmount,\n    buyAmount,\n    setInvestNum,\n    setOrderNum,\n    investNum,\n    orderNum,\n    currentInvest,\n    setCurrentInvest,\n    pageDirect,\n    isDcaRefresh,\n    dcaMode,\n    setDcaMode,\n    sellTotalAmount,\n    upperPriceSize,\n    lowerPriceSize,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n  const {\n    currentPrice,\n    btnStatus,\n    findRouterLoading,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handleMinInputChange,\n    handleMaxInputChange,\n    handlePageToggleDirect,\n    onReverseClick,\n    orderSizeError,\n    orderInputError,\n    orderTimeError,\n    priceError,\n    sellPerOrder,\n    estEndDate,\n    platformFee,\n    fetchFindAvailableRouterDebounce,\n    cycleFrequency,\n    resetInputAmount,\n    warningTokenList\n  } = useDcaHook()\n\n  useEffect(() => {\n    if (isDcaRefresh) {\n      fetchFindAvailableRouterDebounce()\n    }\n  }, [isDcaRefresh])\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [tradeIcon, setTradeIcon] = useState<string>('#icon-a-icon_trade')\n\n  const timeList: string[] = ['Minute', 'Hour', 'Day', 'Week', 'Month']\n\n  const toggleTradeIcon = (hovered: boolean) => setTradeIcon(hovered ? '#icon-icon_swap1' : '#icon-a-icon_trade')\n  const { openDcaOrder } = useOpenDcaOrder()\n  const [toOpenDcaLoading, setToOpenDcaLoading] = useState(false)\n\n  const { fetchCoinBalance } = useAccountBalance()\n  const { signAndExecuteTransaction, transactionRejected, transactionConfirmation } = useTransaction()\n  const { failedTsToast } = useGlobalToast()\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const toOpenDca = async () => {\n    setToOpenDcaLoading(true)\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType) => {\n        const desc = `Creating DCA Order for ${formatNumber(sellTotalAmount)} ${sellCoin?.symbol} to ${buyCoin?.symbol} over ${orderNum} orders`\n        const info: CommonTypeInfo = {\n          modalDescriptionText: 'Creating DCA Order',\n          toastTitleText: 'Creating DCA Order'\n        }\n        if (status === 'success') {\n          info.modalDescriptionText = 'DCA Order Created'\n          info.toastDescriptionContent = ''\n          info.toastTitleText = 'DCA Order Created'\n        }\n        return info\n      }\n    }\n    transactionConfirmation(toastInfo)\n    const min_price = !pageDirect ? minPriceValue : d(1).div(maxPriceValue).toString()\n    const max_price = !pageDirect ? maxPriceValue : d(1).div(minPriceValue).toString()\n    try {\n      const params: any = {\n        in_coin: sellCoin,\n        out_coin: buyCoin,\n        in_coin_amount: sellTotalAmount,\n        cycle_count: orderNum,\n        min_price,\n        max_price,\n        freq: cycleFrequency\n      }\n\n      console.log('🚀 ~ toOpenDca ~ params:', !pageDirect, minPriceValue, maxPriceValue, min_price, max_price, params)\n      const tx = await openDcaOrder(params)\n      console.log('🚀 ~ toOpenDca ~ tx:', tx)\n      const res = await signAndExecuteTransaction(tx, toastInfo)\n      console.log('🚀 ~ toOpenDca ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        resetInputAmount()\n        setTimeout(() => {\n          fetchCoinBalance(currentAccount?.address, sellCoin?.coin_type)\n          handleGetDcaOrderList(currentAccount?.address as string)\n        }, 2000)\n      }\n      setToOpenDcaLoading(false)\n    } catch (error) {\n      const errorInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType): CommonTypeInfo => {\n          const info: CommonTypeInfo = {}\n          if (String(error) === 'Error: Each order size should be higher than $10') {\n            info['toastTitleText'] = 'Transaction Submission Error'\n            info['toastDescriptionContent'] = 'Each order size should be higher than $10.'\n          }\n          if (String(error) === 'Error: Request timed out') {\n            info['toastTitleText'] = 'Request timed out'\n            info['toastDescriptionContent'] = 'Please confirm the network status and resubmit the transaction.'\n          }\n          if (String(error) === 'Error: minPrice error') {\n            info['toastTitleText'] = 'DCA order submission failed'\n            info['toastDescriptionContent'] = 'Your nominated prices are out of scope. Please modify your accepted price range and submit it again.'\n          }\n          return info\n        }\n      }\n      console.log('🚀 ~ toOpenDca ~ error:', error)\n      console.error('Open DCA Order Error: ', error)\n      showInsufficientBalanceToast(String(error))\n      transactionRejected(errorInfo)\n      failedTsToast(errorInfo)\n      setToOpenDcaLoading(false)\n    }\n  }\n\n  const { currentCoinKey, inCoinWhiteList, outCoinWhiteList, dcaConfig } = useDcaStore()\n  const { getDcaCoinWhiteList } = useGetDcaTokenList()\n  const [whiteTokenList, setWhiteTokenList] = useState<Token[]>([])\n  useEffect(() => {\n    if (currentCoinKey == 'sellCoin') {\n      setWhiteTokenList(inCoinWhiteList)\n    } else {\n      setWhiteTokenList(outCoinWhiteList)\n    }\n  }, [currentCoinKey, inCoinWhiteList, outCoinWhiteList])\n\n  useEffect(() => {\n    if (dcaConfig && (dcaConfig.whitelistMode || dcaConfig.whitelistMode == 0)) {\n      console.log('🚀🚀🚀 ~ file: DcaInputBlock.tsx:101 ~ DcaInputBlock ~ dcaConfig:', dcaConfig)\n      getDcaCoinWhiteList(dcaConfig.whitelistMode)\n    }\n  }, [dcaConfig])\n\n  const [isOpenConfirmModal, setIsOpenConfirmModal] = useState(false)\n\n  const detailsData: detailsDataType = useMemo(() => {\n    const decimals = !pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    let minPrice = ''\n    let maxPrice = ''\n    let minPriceResever = ''\n    let maxPriceResever = ''\n    if (minPriceValue && maxPriceValue) {\n      minPrice = !pageDirect ? minPriceValue : formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString()\n      maxPrice = !pageDirect ? maxPriceValue : formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString()\n      minPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString() : minPriceValue\n      maxPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString() : maxPriceValue\n    }\n    return { estEndDate, sellPerOrder, platformFee, minPriceValue: minPrice, maxPriceValue: maxPrice, minPriceResever, maxPriceResever }\n  }, [pageDirect, estEndDate, sellPerOrder, platformFee, minPriceValue, maxPriceValue])\n\n  const tabList = [\n    { label: 'Total', value: 'total' },\n    { label: 'Per Order', value: 'perOrder' }\n  ]\n\n  const [value, setValue] = useState<number[]>([0, 0])\n  const [minValue, setMinValue] = useState<number>(0)\n  const [maxValue, setMaxValue] = useState<number>(0)\n\n  const handleSlider = (val: number[]) => {\n    console.log('🚀 ~ handleSlider ~ val:', val)\n    setValue(val)\n    handleMinInputChange(val[0].toString())\n    handleMaxInputChange(val[1].toString())\n  }\n\n  useEffect(() => {\n    // 计算滑杆的min和max值 实际为了保证当前价格在中间 min=0 max=currentPrice * 2\n    if (minPriceValue && maxPriceValue) {\n      const start = Number(minPriceValue)\n      const end = Number(maxPriceValue)\n      setValue([start, end])\n      console.log('🚀 ~ useEffect ~ start:', start, end)\n    }\n    if (!minPriceValue) {\n      setLowerPriceSize('0%')\n    }\n    if (!maxPriceValue) {\n      setUpperPriceSize('0%')\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  useEffect(() => {\n    if (currentPrice) {\n      const min = d('-100').div(100).plus(1).mul(currentPrice).toNumber()\n      const max = d('100').div(100).plus(1).mul(currentPrice).toNumber()\n      console.log('🚀 ~ useEffect ~ min:', min, max)\n      setMinValue(min)\n      setMaxValue(max)\n    }\n  }, [currentPrice])\n  return (\n    <VStack w=\"100%\">\n      <TradeInputGroup\n        onClick={onReverseClick}\n        currentCoinKey={currentCoinKey}\n        whiteTokenList={whiteTokenList}\n        from={{\n          inputTabOptions: {\n            type: 'outlineTab',\n            tabList,\n            currentTab: dcaMode == 'total' ? 'Total' : 'Per Order',\n            handleChangeTab: tab => {\n              setDcaMode(tab?.value)\n            },\n            wrapStyle: {\n              w: '168px',\n              h: '28px',\n              p: '3px',\n              borderRadius: '10px'\n            },\n            itemStyle: {\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px',\n              borderRadius: '6px'\n            }\n          },\n          title: 'You Pay',\n          balance: sellBalanceInfo?.balanceFormat || '',\n          value: sellAmount,\n          amountValue: sellAmountValue,\n          loading: false,\n          onChange: handleAmountChange,\n          selectable: true,\n          placeholder: '0.0',\n          token: sellCoin,\n          whiteTokenList: inCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, true)\n        }}\n        to={{\n          isDcaTo: true,\n          wrapStyle: {\n            backgroundColor: 'bg_secondary',\n            h: '94px'\n          },\n          title: 'You Receive',\n          inputAllowed: false,\n          balance: buyBalanceInfo?.balanceFormat || '',\n          value: '',\n          amountValue: '',\n          loading: false,\n          onChange: () => {},\n          token: buyCoin,\n          whiteTokenList: outCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, false),\n          selectable: true,\n          placeholder: '',\n          half: false,\n          max: false\n        }}\n        iconParams={{\n          xlinkHref: tradeIcon,\n          svgFill: 'text_caption',\n          transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n          fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n          onMouseEnter: () => toggleTradeIcon(true),\n          onMouseLeave: () => toggleTradeIcon(false)\n        }}\n      />\n      {orderSizeError?.status && <ErrorTips tips={orderSizeError?.tips} bg=\"primary_red_bg\" />}\n      <HStack w=\"100%\">\n        <InvestAndOrders\n          title=\"Invest Every\"\n          label={currentInvest}\n          inputValue={investNum}\n          list={timeList}\n          onListItemClick={item => {\n            setCurrentInvest(item)\n          }}\n          inputChange={item => {\n            console.log('🚀 ~ DcaInputBlock ~ item:', item)\n            setInvestNum(item)\n          }}\n        />\n        <InvestAndOrders\n          title={\n            <TooltipIcon\n              type=\"over\"\n              children={\n                <Text fontSize=\"13px\" fontWeight=\"500\" mr=\"4px\">\n                  Over\n                </Text>\n              }\n            />\n          }\n          label=\"Orders\"\n          inputValue={orderNum}\n          inputChange={item => {\n            setOrderNum(item)\n            fetchFindAvailableRouterDebounce()\n          }}\n        />\n      </HStack>\n      {orderInputError?.status && <ErrorTips tips={orderInputError?.tips} bg=\"primary_red_bg\" />}\n      {orderTimeError?.status && <ErrorTips tips={orderTimeError?.tips} bg=\"primary_red_bg\" />}\n      <Block zIndex=\"1\" p=\"16px\" borderRadius=\"16px\">\n        <VStack align=\"flex-start\">\n          <Text color=\"text_caption\">Set Price Range</Text>\n          <Text lineHeight=\"16px\" fontSize=\"12px\" m={{ base: '4px 0', lg: '0' }} mb={{ base: sellAmount ? '4px' : '0' }}>\n            DCA will only be executed if the price falls within the range of your pricing strategy.\n          </Text>\n          {sellAmount && sellPerOrder && (\n            <HStack mt=\"8px\" w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'align', lg: 'center' }}>\n              <Text>Current Rate</Text>\n              <VStack align={{ base: 'flex-start', lg: 'flex-end' }}>\n                <CurrentPrice\n                  color=\"text_caption\"\n                  pageDirect={pageDirect}\n                  handlePageToggleDirect={handlePageToggleDirect}\n                  fromToken={sellCoin!}\n                  toToken={buyCoin!}\n                  fromValue={sellPerOrder}\n                  toValue={buyAmount}\n                  isLoading={findRouterLoading || !buyAmount || !sellPerOrder}\n                />\n              </VStack>\n            </HStack>\n          )}\n        </VStack>\n        <HStack justify=\"space-between\" gap=\"8px\" mt=\"20px\">\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && minPriceValue ? lowerPriceSize : ''}\n            inputValue={minPriceValue}\n            inputChange={val => handleMinInputChange(val)}\n            align=\"flex-start\"\n          />\n          <Text color=\"text_caption\">-</Text>\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && maxPriceValue ? upperPriceSize : ''}\n            inputValue={maxPriceValue}\n            inputChange={val => handleMaxInputChange(val)}\n            align=\"flex-start\"\n          />\n        </HStack>\n        {!findRouterLoading &&\n          sellAmount &&\n          minPriceValue &&\n          maxPriceValue &&\n          Number(maxPriceValue) >= Number(minPriceValue) &&\n          btnStatus?.text !== 'No Available Route' && (\n            <VStack w=\"100%\" gap=\"0\" mt=\"20px\">\n              <RangeSlider\n                min={minValue}\n                max={maxValue}\n                step={0.1}\n                value={value}\n                onChange={val => {\n                  handleSlider(val)\n                }}\n                colorScheme=\"teal\"\n              >\n                <RangeSliderTrack>\n                  <RangeSliderFilledTrack />\n                </RangeSliderTrack>\n                <RangeSliderThumb index={0} />\n                <RangeSliderThumb index={1} />\n              </RangeSlider>\n              <Image src={icon_currentprice} w=\"32px\" h=\"32px\" />\n              <HStack w=\"100%\" h=\"14px\" justify=\"center\" mt=\"-2px\">\n                <Text>Current Rate</Text>\n              </HStack>\n            </VStack>\n          )}\n      </Block>\n      {priceError?.status && <ErrorTips tips={priceError?.tips} bg=\"primary_red_bg\" />}\n      <Button\n        isLoading={toOpenDcaLoading}\n        disabled={btnStatus?.disabled || toOpenDcaLoading}\n        w=\"100%\"\n        h=\"52px\"\n        fontSize=\"18px\"\n        fontWeight=\"500\"\n        onClick={btnStatus?.text == 'Connect Wallet' ? () => onWalletModal(true) : () => setIsOpenConfirmModal(true)}\n      >\n        {btnStatus?.text}\n      </Button>\n      {sellAmount && <DetailsBlock detailsData={detailsData} />}\n      {isOpenConfirmModal && (\n        <ConfirmModal\n          confirmData={detailsData}\n          isOpen={isOpenConfirmModal}\n          onClose={() => setIsOpenConfirmModal(false)}\n          toOpenDca={toOpenDca}\n          toOpenDcaLoading={toOpenDcaLoading}\n        />\n      )}\n      {(buyCoin || sellCoin) && (\n        <WarningTokenTipsModal\n          addToken\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            tokenInfo.forEach(coin => {\n              const hasFind = coin.coin_type === buyCoin?.coin_type || coin.coin_type === sellCoin?.coin_type\n              if (hasFind) {\n                handleSelectToken(undefined, coin.coin_type === buyCoin?.coin_type)\n              }\n            })\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import { ChartOrderIcon } from '@/components/common/ChartOrderIcon'\nimport { TradeTab } from '@/components/common/TradeTab'\nimport ActiveAndPastDcas from '@/components/dca/ActiveAndPastDcas'\nimport { DcaInputBlock } from '@/components/dca/DcaInputBlock'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart'\nimport { TradeTabs } from '@/components/swap/type'\nimport { useGetDcaOrderList } from '@/hooks/dca/useGetDcaOrderList'\nimport useGlobalStore from '@/store/common/global'\nimport useDcaStore from '@/store/dca'\nimport useActiveOrdersStore from '@/store/profile/activeOrders'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nexport default function Dca() {\n  const { currentAccount } = useAccountStore()\n  const { sellCoin, buyCoin, setIsDcaRefresh } = useDcaStore()\n  const { isShowTradeChart, isShowTradeOrders } = useGlobalStore()\n  const { getDcaOrderList } = useGetDcaOrderList()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const { dcaOrderListLoading, dcaActiveOrderList, dcaPastOrderList, setDcaActiveOrderList, setDcaPastOrderList } = useActiveOrdersStore()\n\n  const handleGetDcaOrderList = async (account: string, isLoading: boolean = false) => {\n    if (!isShowTradeOrders) return\n    getDcaOrderList(account, isLoading)\n  }\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      handleGetDcaOrderList(currentAccount?.address, true)\n    } else {\n      setDcaActiveOrderList([])\n      setDcaPastOrderList([])\n    }\n  }, [currentAccount?.address, isShowTradeOrders])\n\n  const handleRefresh = (isLoading: boolean = true) => {\n    setRefreshCount(0)\n    setIsDcaRefresh(true)\n    setTimeout(() => {\n      setIsDcaRefresh(false)\n    }, 1000)\n    if (currentAccount?.address) {\n      if (!isLoading) {\n        // 手动刷新的时候只请求记录不请求余额 只有20s自动刷新和进入页面时请求余额\n        fetchAccountBalance()\n      }\n      handleGetDcaOrderList(currentAccount?.address, isLoading)\n    }\n  }\n\n  useRpcListener({\n    onRpcChange: () => {\n      handleRefresh()\n    }\n  })\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [currentAccount?.address])\n\n  const { isApp, windowWidth } = useWindowWidth()\n\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n  // 20s轮询订单列表\n  useInterval({\n    interval: 1000,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= 20) {\n        handleRefresh(false)\n      }\n    }\n  })\n\n  return (\n    <HStack\n      mt={windowWidth && windowWidth < 1024 ? '28px' : '42px'}\n      className={isApp || isShowTradeChart || isShowTradeOrders ? '' : 'bg_img'}\n      w=\"100%\"\n      gap=\"16px\"\n      justify=\"center\"\n      align=\"flex-start\"\n      flexDirection={{ base: 'column', lg: 'row' }}\n    >\n      {(isShowTradeOrders || isShowTradeChart) && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }} mt={isApp && !isShowTradeChart ? '-16px' : '0'}>\n          {isShowTradeChart && <LimitPriceChart baseToken={sellCoin} quoteToken={buyCoin} />}\n          {isShowTradeOrders && !isApp && (\n            <ActiveAndPastDcas\n              handleRefresh={handleRefresh}\n              activeList={dcaActiveOrderList}\n              pastList={dcaPastOrderList}\n              isOrderLoading={dcaOrderListLoading}\n            />\n          )}\n        </VStack>\n      )}\n      <VStack w={{ base: '100%', lg: '470px' }}>\n        <HStack w=\"100%\" justify=\"space-between\" mb=\"8px\">\n          <TradeTab currTradeTab={TradeTabs.DCA} />\n          <ChartOrderIcon />\n        </HStack>\n        <DcaInputBlock handleGetDcaOrderList={(walletAddress: string) => handleGetDcaOrderList(walletAddress)} />\n      </VStack>\n      {isApp && isShowTradeOrders && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n          <ActiveAndPastDcas\n            handleRefresh={handleRefresh}\n            activeList={dcaActiveOrderList}\n            pastList={dcaPastOrderList}\n            isOrderLoading={dcaOrderListLoading}\n          />\n        </VStack>\n      )}\n    </HStack>\n  )\n}\n"],"names":["DcaItem","currentTabVal","orderInfo","isApp","useWindowWidth","sellCoin","buyCoin","isDetail","setIsDetail","useState","useEffect","getTokenRank","useTokenRank","pageDirect","setPageDirect","direct","closeOrderAction","isCloseLoading","useDcaItemActions","closeOrder","getExplorerUrl","useExplorer","VStack","jsxs","HStack","jsx","DcaItemCoinPirBlock","Icon","BtnContent","DcaProgressBlock","Text","RangeValueBlock","OverviewOrders","onClickDetail","Button","ActiveAndPastDcas","handleRefresh","activeList","pastList","isOrderLoading","pageList","setPageList","paginationList","setPaginationList","total","setTotal","currentPage","setCurrentPage","currentAccount","onWalletModal","useAccountStore","currentTab","setCurrentTab","tabList","useMemo","handleChangeTab","item","currentList","start","end","totalClaimNum","sum","d","closeAll","claimAll","isClaimAllLoading","isCloseAllLoading","useDcaActions","SelectTab","RefreshButton","Block","index","OrderLoading","NoData","Center","Pagination","SkeletonCircle","Skeleton","useDcaConfig","fetchByApi","useFetch","dcaSdk","useSdk","setDcaConfig","useDcaStore","getDcaConfigFromApi","DcaConfigPath","getDcaConfigFromContract","dcaConfig","apiConfig","error","contractConfig","useDcaGetQuote","setDcaQuote","inCoin","freq","count","sender","data","DcaQuotePath","result","useDcaHook","setSellCoin","setBuyCoin","sellAmount","buyAmount","setBuyAmount","setSellAmount","setCurrentCoinKey","currentCoinKey","investNum","currentInvest","orderNum","dcaQuote","setInvestNum","setOrderNum","setCurrentInvest","dcaMode","sellTotalAmount","setSellTotalAmount","setLowerPriceSize","setUpperPriceSize","getDcaConfig","getDcaQuote","coinPriceObj","useTokenPriceStore","fetchTokenPrices","getTokenAmountValue","useTokenPrice","uuid","setUuid","uuidRef","useRef","initiaTokenSelect","envConfigs","resetInputAmount","minPriceValue","setMinPriceValue","maxPriceValue","setMaxPriceValue","sellBalanceInfo","useGetTokenBalance","buyBalanceInfo","sellAmountValue","handleAmountChange","amount","fetchFindAvailableRouterDebounce","handlePageToggleDirect","decimals","value","newMinVal","newMaxVal","formatNumberWithDown","handleSelectToken","coin","isSell","fixCoinType","onReverseClick","isDcaSelect","whitelistMode","sellCoinPrice","_a","extractStructTagFromType","sellPerOrder","sellPerOrderUSD","platformFee","Decimal","amountInLimit","bnToAmount","orderSizeError","orderInputError","priceError","estEndDate","setEstEndDate","orderTimeError","setOrderTimeError","getEstEndDate","date","investTime","timeFormatUTC","cycleFrequency","queryDcaQuoteDebounce","queryDcaQuote","coinAddress","defaultWalletAddress","useDebounceFunction","findBestRouters","useFindBestRouting","findRouterLoading","setFindRouterLoading","routerData","setRouterData","getTokensPrice","findAvailableRouterDebounce","findAvailableRouter","newUuid","providersKeys","AggregatorDexMap","key","toDecimalsAmount","uniqueTokens","btnStatus","btnInfo","AggregatorServerErrorCode","_b","warningTokenList","list","currentPrice","formatNumber","minPriceValueDebounce","val","maxPriceValueDebounce","handleMinInputChange","handleMaxInputChange","changeLowerPriceSize","changeUpperPriceSize","lowerPrice","upperPrice","useGetDcaTokenList","getTokenListInfo","useGetToken","setFilterTokenLoading","useTokenSelectStore","setInCoinWhiteList","setOutCoinWhiteList","whitelist_mode","in_coin_list","out_coin_list","inList","outList","inCoinTypeList","inTokenMap","i","tokenInfo","outCoinTypeList","outTokenMap","useOpenDcaOrder","calculateCycleAmounts","inCoinAmount","cycleCount","inCoinDecimals","outCoinDecimals","minPrice","maxPrice","cycleCountAmount","maxAmount","minAmount","perCycleMinOutAmount","perCycleMaxOutAmount","perCycleAmountDecimal","buildDcaOrderPayload","params","quoteResult","in_coin","in_coin_amount","cycle_count","out_coin","min_price","max_price","dcaOpenOrderPayloadParams","tx","DetailsContent","detailsData","isConfirm","minPriceResever","maxPriceResever","HTextLabelBox","SingleCoinImage","RangeValue","addComma","ConfirmModal","confirmData","isOpen","onClose","toOpenDca","toOpenDcaLoading","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","SingleTokenInfo","Box","DetailsBlock","InvestAndOrders","title","label","inputValue","inputChange","onListItemClick","handleInputChange","event","InputBox","Input","MenuDropBlock","MinAndMaxPrice","text","align","NumericFormatInput","DcaInputBlock","handleGetDcaOrderList","isDcaRefresh","setDcaMode","upperPriceSize","lowerPriceSize","tradeIcon","setTradeIcon","timeList","toggleTradeIcon","hovered","openDcaOrder","setToOpenDcaLoading","fetchCoinBalance","useAccountBalance","signAndExecuteTransaction","transactionRejected","transactionConfirmation","useTransaction","failedTsToast","useGlobalToast","showInsufficientBalanceToast","useInsufficientBalanceToast","toastInfo","status","info","res","errorInfo","inCoinWhiteList","outCoinWhiteList","getDcaCoinWhiteList","whiteTokenList","setWhiteTokenList","isOpenConfirmModal","setIsOpenConfirmModal","setValue","minValue","setMinValue","maxValue","setMaxValue","handleSlider","min","max","TradeInputGroup","tab","token","ErrorTips","TooltipIcon","CurrentPrice","RangeSlider","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderThumb","Image","icon_currentprice","WarningTokenTipsModal","Dca","setIsDcaRefresh","isShowTradeChart","isShowTradeOrders","useGlobalStore","getDcaOrderList","useGetDcaOrderList","fetchAccountBalance","dcaOrderListLoading","dcaActiveOrderList","dcaPastOrderList","setDcaActiveOrderList","setDcaPastOrderList","useActiveOrdersStore","account","isLoading","setRefreshCount","useRpcListener","windowWidth","refreshCount","useInterval","LimitPriceChart","TradeTab","TradeTabs","ChartOrderIcon","walletAddress"],"mappings":"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"}
=======
{"version":3,"file":"Dca-DneMsUNX.js","sources":["../../src/components/dca/DcaItem.tsx","../../src/components/dca/ActiveAndPastDcas.tsx","../../src/hooks/dca/useDcaConfig.ts","../../src/hooks/dca/useGetDcaQuote.ts","../../src/hooks/dca/useDcaHook.ts","../../src/hooks/dca/useGetDcaTokenList.ts","../../src/hooks/dca/useOpenDcaOrder.ts","../../src/components/dca/DetailsContent.tsx","../../src/components/dca/ConfirmModal.tsx","../../src/components/dca/DetailsBlock.tsx","../../src/components/dca/InvestAndOrders.tsx","../../src/components/dca/MinAndMaxPrice.tsx","../../src/components/dca/DcaInputBlock.tsx","../../src/pages/Dca.tsx"],"sourcesContent":["import useTokenRank from '@/hooks/common/useTokenRank'\nimport useDcaItemActions from '@/hooks/dca/useDcaItemActions'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport DcaItemCoinPirBlock from './DcaItemBlock/DcaItemCoinPirBlock'\nimport DcaProgressBlock from './DcaItemBlock/DcaProgressBlock'\nimport RangeValueBlock from './DcaItemBlock/RangeValueBlock'\nimport OverviewOrders from './OverviewOrders'\n\nexport default function DcaItem({ currentTabVal, orderInfo }: { currentTabVal: string; orderInfo: any }) {\n  const { isApp } = useWindowWidth()\n  const { inCoin: sellCoin, outCoin: buyCoin } = orderInfo\n  const [isDetail, setIsDetail] = useState(false)\n\n  useEffect(() => {\n    setIsDetail(false)\n  }, [currentTabVal])\n\n  const { getTokenRank } = useTokenRank()\n  const [pageDirect, setPageDirect] = useState(false)\n\n  useEffect(() => {\n    const direct = getTokenRank(sellCoin, buyCoin)\n    console.log('🚀 ~ useEffectDcaItem ~ direct:', buyCoin, sellCoin, direct)\n    setPageDirect(!direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const { closeOrderAction, isCloseLoading } = useDcaItemActions()\n  const closeOrder = async () => {\n    closeOrderAction(orderInfo)\n  }\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack w=\"100%\" gap=\"12px\" align=\"flex-start\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'flex-start', lg: 'center' }}>\n        <HStack>\n          <DcaItemCoinPirBlock orderInfo={orderInfo} />\n          <Icon\n            xlinkHref=\"#icon-icon_link1\"\n            onClick={() => {\n              window.open(getExplorerUrl(orderInfo?.orderID, 'poolAddress'))\n            }}\n          />\n        </HStack>\n        {!isApp && (\n          <BtnContent\n            currentTabVal={currentTabVal}\n            isCloseLoading={isCloseLoading}\n            closeOrder={closeOrder}\n            orderInfo={orderInfo}\n            isDetail={isDetail}\n            onClickDetail={() => setIsDetail(!isDetail)}\n          />\n        )}\n      </HStack>\n      <DcaProgressBlock orderInfo={orderInfo} />\n      <HStack w=\"100%\">\n        <Text color=\"primary_gray\" fontSize=\"12px\">\n          Price Range\n        </Text>\n        <RangeValueBlock orderInfo={orderInfo} isRank={true} />\n      </HStack>\n      {isApp && (\n        <BtnContent\n          currentTabVal={currentTabVal}\n          isCloseLoading={isCloseLoading}\n          closeOrder={closeOrder}\n          orderInfo={orderInfo}\n          isDetail={isDetail}\n          onClickDetail={() => setIsDetail(!isDetail)}\n        />\n      )}\n      {isDetail && <OverviewOrders pageDirect={pageDirect} isDetail={isDetail} currentTabVal={currentTabVal} orderInfo={orderInfo} />}\n    </VStack>\n  )\n}\n\nconst BtnContent = ({\n  currentTabVal,\n  isCloseLoading,\n  closeOrder,\n  orderInfo,\n  isDetail,\n  onClickDetail\n}: {\n  currentTabVal: string\n  isCloseLoading: boolean\n  closeOrder: () => void\n  orderInfo: any\n  isDetail: boolean\n  onClickDetail: () => void\n}) => {\n  return (\n    <HStack w={{ base: '100%', lg: 'unset' }} flexDirection={{ base: 'column', lg: 'row' }}>\n      {currentTabVal == 'active' && (\n        <Button\n          w={{ base: '100%', lg: 'unset' }}\n          isLoading={isCloseLoading}\n          disabled={isCloseLoading}\n          onClick={closeOrder}\n          h=\"32px\"\n          minH=\"unset\"\n          p=\"0px 12px\"\n          fontSize=\"14px\"\n          borderRadius=\"8px\"\n          variant=\"outline\"\n        >\n          {orderInfo?.outBalance <= 0 ? 'Close' : 'Close and Withdraw'}\n        </Button>\n      )}\n      <Button\n        w={{ base: '100%', lg: 'unset' }}\n        h=\"32px\"\n        borderRadius=\"8px\"\n        minH=\"unset\"\n        p=\"0px 12px\"\n        fontSize=\"14px\"\n        variant=\"ghost\"\n        rightIcon={\n          <Icon\n            svgW=\"12px\"\n            svgH=\"12px\"\n            xlinkHref=\"#icon-icon_arrow\"\n            transform={isDetail ? 'rotate(180deg)' : 'rotate(0deg)'}\n            transition=\"transform 0.5s\"\n            ml=\"-4px\"\n            mr=\"-4px\"\n          />\n        }\n        onClick={onClickDetail}\n      >\n        Details\n      </Button>\n    </HStack>\n  )\n}\n","import useDcaActions from '@/hooks/dca/useDcaActions'\nimport { Block, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon, NoData, Pagination, RefreshButton } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport { Button, Center, HStack, Skeleton, SkeletonCircle, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport DcaItem from './DcaItem'\n\nexport default function ActiveAndPastDcas({\n  handleRefresh,\n  activeList,\n  pastList,\n  isOrderLoading\n}: {\n  handleRefresh: (isLoading: boolean) => void\n  activeList: any\n  pastList: any\n  isOrderLoading: boolean\n}) {\n  const pageSize = 10\n  const [pageList, setPageList] = useState([])\n  const [paginationList, setPaginationList] = useState([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [currentTab, setCurrentTab] = useState<Tab>({\n    label: 'Active DCAs',\n    value: 'active'\n  })\n\n  const tabList: Tab[] = useMemo(\n    () => [\n      {\n        label: 'Active DCAs',\n        value: 'active',\n        num: activeList?.length > 0 ? activeList?.length : undefined\n      },\n      {\n        label: 'Past DCAs',\n        value: 'past',\n        num: pastList?.length > 0 ? pastList?.length : undefined\n      }\n    ],\n    [currentTab?.value, activeList, pastList]\n  )\n\n  const handleChangeTab = (item: Tab) => {\n    setCurrentPage(1)\n    setCurrentTab(item)\n  }\n\n  useEffect(() => {\n    const currentList = currentTab?.value === 'active' ? activeList : pastList\n    setPageList(currentList)\n    setTotal(currentList?.length)\n  }, [currentTab?.value, activeList, pastList])\n\n  useEffect(() => {\n    const start = (currentPage - 1) * pageSize\n    const end = start + pageSize\n    setPaginationList(pageList?.slice(start, end))\n  }, [currentPage, pageList, currentTab?.value])\n\n  const totalClaimNum = useMemo(() => {\n    if (currentTab?.value === 'past' || pageList?.length === 0) return 0\n    return pageList?.reduce((sum, orderInfo: any) => d(sum).plus(orderInfo?.outBalance as string), d(0)).toString()\n  }, [currentTab?.value, pageList])\n\n  const { closeAll, claimAll, isClaimAllLoading, isCloseAllLoading } = useDcaActions()\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\">\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: { base: '100%', lg: '300px' },\n              h: '52px',\n              gap: '32px',\n              bg: 'none',\n              border: 'none',\n              mb: '8px'\n            }}\n            itemStyle={{ fontSize: '16px' }}\n            tabList={tabList}\n            currentTab={currentTab.label}\n            handleChangeTab={handleChangeTab}\n          />\n          {isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              h=\"28px\"\n              minH=\"unset\"\n              p=\"0 10px\"\n              fontSize=\"14px\"\n              borderRadius=\"8px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              isLoading={isClaimAllLoading}\n              disabled={Number(totalClaimNum) === 0 || isClaimAllLoading}\n              onClick={() => claimAll(pageList)}\n              leftIcon={<Icon xlinkHref=\"#icon-icon_incentive\" svgFill=\"primary\" mr=\"-4px\" ml=\"-4px\" />}\n            >\n              Claim all\n            </Button>\n          )}\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              isLoading={isCloseAllLoading}\n              disabled={pageList?.length == 0 || isCloseAllLoading}\n              h=\"28px\"\n              borderRadius=\"8px\"\n              minH=\"unset\"\n              p=\"0 12px\"\n              fontSize=\"14px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              onClick={() => closeAll(pageList)}\n            >\n              Close All\n            </Button>\n          )}\n          {!isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      </HStack>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : isOrderLoading ? (\n        <Block>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {[{}, {}].map((item, index) => (\n              <OrderLoading key={index} />\n            ))}\n          </VStack>\n        </Block>\n      ) : pageList?.length === 0 ? (\n        <NoData type=\"nodata\" text={currentTab?.value === 'active' ? 'No active orders' : 'No closed orders'} />\n      ) : (\n        <Block h={paginationList?.length > 8 ? '927px' : 'unset'} overflowY=\"auto\" p={{ base: '12px', lg: '20px 16px' }}>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {paginationList?.map((item: any) => <DcaItem key={item?.orderID} currentTabVal={currentTab.value} orderInfo={item} />)}\n          </VStack>\n          {!isOrderLoading && pageList?.length > pageSize && (\n            <Center mt=\"28px\">\n              <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n            </Center>\n          )}\n        </Block>\n      )}\n    </VStack>\n  )\n}\n\nconst OrderLoading = () => (\n  <VStack w=\"100%\" gap=\"16px\" align=\"flex-start\">\n    <HStack w=\"100%\" gap=\"0\" justify=\"space-between\">\n      <HStack gap=\"0\">\n        <HStack gap=\"0px\" mr=\"8px\" align=\"flex-start\">\n          <SkeletonCircle size=\"8\" />\n          <SkeletonCircle size=\"8\" />\n        </HStack>\n        <Skeleton height=\"4\" width=\"100px\" />\n      </HStack>\n      <Skeleton height=\"4\" width=\"150px\" />\n    </HStack>\n    <Skeleton height=\"4\" width=\"180px\" />\n  </VStack>\n)\n","import { DcaConfigPath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaConfig } from '@/types/dca'\nimport { useFetch } from '@cetus/hooks'\nimport { useSdk } from '@cetus/sdk-factory'\n\nexport default function useDcaConfig() {\n  const { fetchByApi } = useFetch()\n  const dcaSdk = useSdk('dca')\n  const { setDcaConfig } = useDcaStore()\n\n  const getDcaConfigFromApi = async () => {\n    const res = await fetchByApi(DcaConfigPath, 'GET')\n    return res || null\n  }\n\n  const getDcaConfigFromContract = async () => {\n    const data = await dcaSdk!.Dca.getDcaGlobalConfig()\n    return data\n  }\n\n  const getDcaConfig = async () => {\n    const dcaConfig: DcaConfig = {}\n    try {\n      const apiConfig = await getDcaConfigFromApi()\n      if (apiConfig) {\n        dcaConfig['minCycleAmountInUsd'] = apiConfig?.min_amount_in_usd\n      }\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:22 ~ getDcaConfig ~ error:', error)\n    }\n\n    try {\n      const contractConfig = await getDcaConfigFromContract()\n      dcaConfig['minCycleCount'] = contractConfig?.min_cycle_count\n      dcaConfig['minCycleFrequency'] = contractConfig?.min_cycle_frequency\n      dcaConfig['whitelistMode'] = contractConfig?.whitelist_mode\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:32 ~ getDcaConfig ~ error:', error)\n    }\n\n    console.log('🚀🚀🚀 ~ file: useDcaConfig.ts:45 ~ getDcaConfig ~ dcaConfig:', dcaConfig)\n    setDcaConfig(dcaConfig)\n    return dcaConfig\n  }\n\n  return {\n    getDcaConfig\n  }\n}\n","import { DcaQuotePath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaQuoteData } from '@/types'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useDcaGetQuote() {\n  const { fetchByApi } = useFetch()\n  const { setDcaQuote } = useDcaStore()\n  const getDcaQuote = async ({\n    inCoin,\n    freq,\n    count,\n    sender\n  }: {\n    inCoin: string\n    freq: string | number\n    count: string | number\n    sender: string\n  }): Promise<DcaQuoteData | null> => {\n    try {\n      const data = await fetchByApi(DcaQuotePath, 'GET', {\n        in_coin: inCoin,\n        freq,\n        count,\n        sender\n      })\n      if (data) {\n        const result = {\n          amountInLimitPerCycle: data?.amount_in_limit_per_cycle,\n          coinType: data?.coin_type,\n          feeRate: data?.fee_rate,\n          signature: data?.signature,\n          signer: data?.signer,\n          timestamp: data?.timestamp\n        }\n        setDcaQuote(result)\n        return result\n      }\n    } catch (error) {\n      console.log('getDcaQuote ~ error:', error)\n    }\n\n    return null\n  }\n\n  return {\n    getDcaQuote\n  }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useDcaStore from '@/store/dca'\nimport { AggregatorServerErrorCode, SwapRouterData } from '@/types'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, timeFormatUTC } from '@cetus/utils'\nimport { extractStructTagFromType, fixCoinType, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport useTokenRank from '../common/useTokenRank'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useDcaConfig from './useDcaConfig'\nimport useDcaGetQuote from './useGetDcaQuote'\n\nexport function useDcaHook() {\n  const {\n    sellCoin,\n    buyCoin,\n    setSellCoin,\n    setBuyCoin,\n    sellAmount,\n    buyAmount,\n    setBuyAmount,\n    setSellAmount,\n    dcaConfig,\n    setCurrentCoinKey,\n    currentCoinKey,\n    investNum,\n    currentInvest,\n    orderNum,\n    dcaQuote,\n    setInvestNum,\n    setOrderNum,\n    setCurrentInvest,\n    setPageDirect,\n    pageDirect,\n    dcaMode,\n    sellTotalAmount,\n    setSellTotalAmount,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n\n  const { currentAccount } = useAccountStore()\n  const { getDcaConfig } = useDcaConfig()\n  const { getDcaQuote } = useDcaGetQuote()\n  const { coinPriceObj } = useTokenPriceStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef(uuid)\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // 获取dca的配置(单笔订单数量不能小于多少)\n  const handleGetDcaConfig = async () => {\n    const res = await getDcaConfig()\n    console.log('🚀 ~ handleGetDcaConfig ~ res:', res)\n  }\n\n  // Initialization dca Token\n  const initiaTokenSelect = () => {\n    console.log('🚀 ~ initiaTokenSelect ~ setSellCoin:')\n    setSellCoin(envConfigs.clmm_swap.from_coin)\n    setBuyCoin(envConfigs.clmm_swap.to_coin)\n  }\n\n  useEffect(() => {\n    setLowerPriceSize('0%')\n    setUpperPriceSize('0%')\n    initiaTokenSelect()\n    getDcaConfig()\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  // 订单价格最小值\n  const [minPriceValue, setMinPriceValue] = useState<string>('')\n  // 订单价格最大值\n  const [maxPriceValue, setMaxPriceValue] = useState<string>('')\n  // 余额\n  const { balanceInfo: sellBalanceInfo } = useGetTokenBalance(sellCoin)\n  const { balanceInfo: buyBalanceInfo } = useGetTokenBalance(buyCoin)\n\n  // 价值\n  const sellAmountValue = getTokenAmountValue(sellCoin?.coin_type, sellAmount)\n\n  // 卖出数量变化\n  const handleAmountChange = (amount: string) => {\n    setCurrentCoinKey('sellCoin')\n    setSellAmount(amount)\n    fetchFindAvailableRouterDebounce()\n  }\n  useEffect(() => {\n    if (+sellAmount && +orderNum) {\n      if (dcaMode == 'total') {\n        setSellTotalAmount(sellAmount)\n      } else {\n        setSellTotalAmount(d(sellAmount).mul(orderNum).toString())\n      }\n    } else {\n      setSellTotalAmount('')\n    }\n  }, [sellAmount, dcaMode, orderNum])\n  const handlePageToggleDirect = () => {\n    const decimals = pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    setPageDirect(!pageDirect)\n    if (minPriceValue && maxPriceValue) {\n      const value = minPriceValue\n      const newMinVal = d(1).div(maxPriceValue).toString()\n      const newMaxVal = d(1).div(value).toString()\n      setMinPriceValue(formatNumberWithDown(newMinVal, decimals, true).toString())\n      setMaxPriceValue(formatNumberWithDown(newMaxVal, decimals, true).toString())\n    }\n  }\n  // token选择\n  const handleSelectToken = (coin: Token, isSell: boolean = true) => {\n    console.log('🚀🚀🚀 ~ useDcaHook.ts:143 ~ handleSelectToken ~ handleSelectToken:')\n\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    if (isSell) {\n      if (fixCoinType(coin?.coin_type) === fixCoinType(buyCoin!.coin_type)) {\n        onReverseClick()\n      } else {\n        setSellCoin(coin)\n      }\n      setCurrentCoinKey('sellCoin')\n    } else {\n      if (fixCoinType(coin?.coin_type) === fixCoinType(sellCoin!.coin_type)) {\n        onReverseClick()\n      } else {\n        setBuyCoin(coin)\n      }\n      setCurrentCoinKey('buyCoin')\n    }\n  }\n  // 清空输入框\n  const resetInputAmount = () => {\n    setSellAmount('')\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    setUuid('')\n    setInvestNum('1')\n    setOrderNum('2')\n    setCurrentInvest('Hour')\n  }\n  // 交换token方向\n  const onReverseClick = () => {\n    setSellCoin(buyCoin!)\n    setBuyCoin(sellCoin!)\n  }\n\n  // dca白名单判断\n  const isDcaSelect = useMemo(() => {\n    const whitelistMode = dcaConfig?.whitelistMode\n    console.log('🚀 ~ useDcaHook ~ whitelistMode:', whitelistMode)\n    if (whitelistMode === 3) return true\n    if (whitelistMode === 0) return false\n\n    if (currentCoinKey === 'sellCoin') {\n      return whitelistMode === 1\n    } else if (currentCoinKey === 'buyCoin') {\n      return whitelistMode === 2\n    }\n    return false\n  }, [dcaConfig?.whitelistMode])\n\n  // sellCoin的当前价格\n  const sellCoinPrice = coinPriceObj[extractStructTagFromType(sellCoin?.coin_type).full_address]?.price || 0\n  // 单笔订单的数量\n  const sellPerOrder = useMemo(() => {\n    if (sellTotalAmount && orderNum) {\n      return d(sellTotalAmount).div(orderNum).toString()\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum])\n  // 单笔订单的价值\n  const sellPerOrderUSD = useMemo(() => {\n    if (sellTotalAmount && orderNum && sellCoinPrice) {\n      return d(sellTotalAmount).div(orderNum).mul(sellCoinPrice).toString() || 0\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum, sellCoinPrice])\n  // 订单费率\n  const platformFee = d(dcaQuote?.feeRate).div(Decimal.pow(10, 6)).mul(100).toString() + '%' || '0%'\n  // 单比订单的数量限制\n  const amountInLimit = useMemo(() => {\n    if (dcaQuote?.amountInLimitPerCycle && sellCoin?.decimals) {\n      return bnToAmount(dcaQuote?.amountInLimitPerCycle, sellCoin?.decimals)\n    }\n  }, [dcaQuote?.amountInLimitPerCycle])\n  // 单比订单的数量错误\n  const orderSizeError = useMemo(() => {\n    console.log('🚀 ~ orderSizeError ~ sellPerOrder:', sellPerOrder, amountInLimit)\n    if (dcaConfig?.minCycleAmountInUsd && orderNum && sellAmount && amountInLimit && Number(sellPerOrder) < Number(amountInLimit)) {\n      return {\n        status: true,\n        tips: `Each order size should be higher than $${dcaConfig?.minCycleAmountInUsd}.`\n      }\n    }\n    if (sellAmount && orderNum && Number(sellPerOrderUSD) > 10000) {\n      return {\n        status: true,\n        tips: 'Each order size should be less than $10,000'\n      }\n    }\n    return {\n      status: false,\n      tips: ''\n    }\n  }, [dcaMode, amountInLimit, orderNum, sellPerOrder, sellAmount, sellPerOrderUSD, dcaConfig?.minCycleAmountInUsd])\n  // 订单数量输入错误\n  const orderInputError = useMemo(() => {\n    console.log('🚀 ~ orderInputError ~ orderNum:', orderNum, orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount))\n    if (dcaConfig?.minCycleCount && orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount)) {\n      return {\n        status: true,\n        tips: `Number of Orders cannot be lower than ${dcaConfig?.minCycleCount}.`\n      }\n    } else if (orderNum && Number(investNum) <= 0) {\n      return {\n        status: true,\n        tips: 'Please enter an interval above 0'\n      }\n    } else if (orderNum && investNum && Number(investNum) > 10000) {\n      return {\n        status: true,\n        tips: 'The maximum interval is 10,000.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [orderNum, dcaConfig?.minCycleCount, investNum])\n\n  // 最大最小价格错误\n  const priceError = useMemo(() => {\n    if ((minPriceValue && Number(minPriceValue) == 0) || (maxPriceValue && Number(maxPriceValue) == 0)) {\n      return {\n        status: true,\n        tips: 'Please enter a price greater than 0.'\n      }\n    } else if (minPriceValue && maxPriceValue && Number(minPriceValue) >= Number(maxPriceValue)) {\n      return {\n        status: true,\n        tips: 'The max price should be higher than min price.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  // 订单结束时间\n  const [estEndDate, setEstEndDate] = useState('')\n  // 订单时间错误\n  const [orderTimeError, setOrderTimeError] = useState({\n    status: false,\n    tips: ''\n  })\n  const getEstEndDate = () => {\n    const date = new Date().getTime()\n    let investTime = 0\n    console.log('🚀🚀🚀 ~ file: dca-detail.vue:34 ~ estEndDate ~ currentTime.value:', currentInvest)\n    switch (currentInvest) {\n      case 'Minute':\n        // investTime = d(investNum).mul(60).mul(1000).mul(d(orderNum).sub(1)).plus(60000).toNumber()\n        investTime = Number(investNum) * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n    }\n    console.log(\n      '🚀🚀🚀 ~ file: dca-detail.vue:46 ~ estEndDate ~ date + investTime:',\n      orderNum,\n      date,\n      investTime,\n      investTime > 60 * 60 * 24 * 365 * 1000\n    )\n    const result = timeFormatUTC(date + investTime, 'YMDHM')\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:303 ~ getEstEndDate ~ result:', result)\n    setEstEndDate(result!)\n    if (result == 'NaN-NaN-NaN NaN:NaN') {\n      setEstEndDate('--')\n    }\n    if (investTime > 60 * 60 * 24 * 365 * 1000) {\n      setOrderTimeError({\n        status: true,\n        tips: 'The maximum execution period is 1 year'\n      })\n    } else {\n      setOrderTimeError({\n        status: false,\n        tips: 'The maximum execution period is 1 year'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getEstEndDate()\n  }, [sellAmount, investNum, orderNum, minPriceValue, maxPriceValue, currentInvest])\n\n  const cycleFrequency = useMemo(() => {\n    let investTime = 0\n    switch (currentInvest) {\n      case 'Minute':\n        investTime = Number(investNum) * 60\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30\n        break\n    }\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:333 ~ cycleFrequency ~ investTime:', investTime)\n    return investTime\n  }, [currentInvest, investNum])\n\n  useEffect(() => {\n    if (sellCoin?.coin_type && cycleFrequency && orderNum) {\n      queryDcaQuoteDebounce(sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address)\n    }\n  }, [sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address])\n\n  const queryDcaQuote = async (coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    const defaultWalletAddress = sender || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    try {\n      const result = await getDcaQuote({ inCoin: coinAddress, freq, count, sender: defaultWalletAddress })\n      console.log('🚀 ~ queryDcaQuote ~ result:', result)\n      return result\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ file: dca-data.ts:344 ~ queryDcaQuote ~ error:', error)\n    }\n  }\n\n  const queryDcaQuoteDebounce = useDebounceFunction((coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    queryDcaQuote(coinAddress, freq, count, sender)\n  }, 500)\n\n  const { findBestRouters } = useFindBestRouting()\n  const [findRouterLoading, setFindRouterLoading] = useState<boolean>(false)\n  const [routerData, setRouterData] = useState<SwapRouterData | undefined>(undefined)\n\n  const { getTokenRank } = useTokenRank()\n\n  useEffect(() => {\n    getTokensPrice()\n    const direct = getTokenRank(sellCoin!, buyCoin!)\n    console.log('🚀 ~ useEffect ~ direct:', direct)\n    setPageDirect(direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  useEffect(() => {\n    fetchFindAvailableRouterDebounce()\n  }, [sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const fetchFindAvailableRouterDebounce = () => {\n    if (d(sellPerOrder).gt(0) && sellCoin?.coin_type && buyCoin?.coin_type) {\n      setFindRouterLoading(true)\n      console.log('🚀 ~ useDcaHook ~ sellAmountDebounce:', Number(sellPerOrder) > 0, sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type, orderNum)\n      findAvailableRouterDebounce()\n    }\n  }\n\n  const findAvailableRouterDebounce = useDebounceFunction(() => {\n    findAvailableRouter()\n  }, 500)\n\n  // 判断该交易对，是否存在可用路由\n  const findAvailableRouter = async () => {\n    console.log('🚀 ~ findAvailableRouter ~ findAvailableRouter:', sellPerOrder)\n    if (sellCoin && buyCoin) {\n      const newUuid = `${sellCoin.coin_type}_${buyCoin.coin_type}`\n      setUuid(newUuid)\n      const providersKeys = Object.entries(AggregatorDexMap).map(([key, value]) => value.id)\n      const result = await findBestRouters({\n        fromToken: sellCoin,\n        toToken: buyCoin,\n        amount: toDecimalsAmount(sellPerOrder || 1, sellCoin?.decimals).toFixed(0),\n        providersKeys: providersKeys as string[],\n        by_amount_in: true,\n        uuid: newUuid\n      })\n\n      console.log('🚀 ~ findAvailableRouter ~ newUuid:', newUuid, uuid, result)\n      if (newUuid === uuidRef.current) {\n        setRouterData(result)\n        setBuyAmount(result.toAmountUi)\n        setFindRouterLoading(false)\n      }\n    }\n  }\n\n  // 获取当前的token价格\n  const getTokensPrice = () => {\n    const uniqueTokens = (sellCoin?.coin_type || buyCoin?.coin_type) && Array.from(new Set([sellCoin?.coin_type, buyCoin?.coin_type]))\n    // fetchTokenPrices(uniqueTokens || [])\n    if (uniqueTokens?.length > 0) {\n      fetchTokenPrices(uniqueTokens)\n    }\n  }\n\n  const btnStatus = useMemo(() => {\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Create DCA Order',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n    if (!sellCoin?.coin_type || !buyCoin?.coin_type) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Select a token'\n      return btnInfo\n    }\n    if (!sellAmount || Number(sellAmount) == 0) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n    if (d(sellTotalAmount).gt(sellBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${sellCoin?.symbol} balance`\n      return btnInfo\n    }\n    if (d(dcaConfig?.minCycleCount).gt(orderNum || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum ${dcaConfig?.minCycleCount} orders`\n      return btnInfo\n    }\n\n    if (d(amountInLimit).gt(sellPerOrder || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum $${dcaConfig?.minCycleAmountInUsd} per order`\n      return btnInfo\n    }\n\n    if (\n      orderSizeError.status ||\n      orderInputError.status ||\n      priceError.status ||\n      orderTimeError.status ||\n      !sellCoin?.coin_type ||\n      !buyCoin?.coin_type ||\n      !orderNum ||\n      !investNum ||\n      !minPriceValue ||\n      !maxPriceValue\n    ) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Create DCA Order'\n      return btnInfo\n    }\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    // errorCode\n    if (routerData && routerData.errorCode) {\n      if (routerData.errorCode === AggregatorServerErrorCode.NoRouter || routerData.errorCode === AggregatorServerErrorCode.HoneyPot) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    sellBalanceInfo,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError,\n    sellCoin?.coin_type,\n    buyCoin?.coin_type,\n    sellTotalAmount,\n    investNum,\n    orderNum,\n    minPriceValue,\n    maxPriceValue,\n    routerData?.routes?.length\n  ])\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (buyCoin) {\n      list.push(buyCoin)\n    }\n\n    if (sellCoin) {\n      list.push(sellCoin)\n    }\n\n    return list\n  }, [buyCoin, sellCoin])\n\n  const currentPrice = useMemo(() => {\n    if (pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(buyAmount).div(sellPerOrder).toString(), buyCoin?.decimals, true)\n    }\n    if (!pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(sellPerOrder).div(buyAmount).toString(), sellCoin?.decimals, true)\n    }\n    return ''\n  }, [pageDirect, sellPerOrder, buyAmount])\n\n  const minPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMinPriceValue(val)\n  }, 500)\n\n  const maxPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMaxPriceValue(val)\n  }, 500)\n\n  const handleMinInputChange = (val: string) => {\n    console.log('🚀 ~ handleMinInputChange ~ val:', val)\n    minPriceValueDebounce(val)\n  }\n  const handleMaxInputChange = (val: string) => {\n    console.log('🚀 ~ handleMaxInputChange ~ val:', val)\n    maxPriceValueDebounce(val)\n  }\n\n  useEffect(() => {\n    changeLowerPriceSize(minPriceValue)\n  }, [minPriceValue, currentPrice])\n\n  useEffect(() => {\n    changeUpperPriceSize(maxPriceValue)\n  }, [maxPriceValue, currentPrice])\n\n  const changeLowerPriceSize = (val: string) => {\n    console.log('🚀 ~ changeLowerPriceSize ~ val:', val)\n    if (currentPrice && val) {\n      // 公式 lowerPriceSize = (lowerPrice/currentPrice - 1)*100\n      const lowerPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', lowerPrice)\n      setLowerPriceSize(d(lowerPrice).gt(10000) ? '>10,000%' : `${formatNumber(lowerPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  const changeUpperPriceSize = (val: string) => {\n    if (currentPrice && val) {\n      // 公式 upperPriceSize = (upperPrice/currentPrice - 1)*100\n      const upperPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', upperPrice)\n      setUpperPriceSize(d(upperPrice).gt(10000) ? '>10,000%' : `${formatNumber(upperPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  return {\n    currentPrice,\n    handleMinInputChange,\n    handleMaxInputChange,\n    warningTokenList,\n    resetInputAmount,\n    cycleFrequency,\n    btnStatus,\n    fetchFindAvailableRouterDebounce,\n    queryDcaQuote,\n    findRouterLoading,\n    platformFee,\n    estEndDate,\n    sellPerOrder,\n    isDcaSelect,\n    onReverseClick,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handlePageToggleDirect,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError\n  }\n}\n","import useDcaStore from '@/store/dca'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { CoinType } from '@cetus/types'\n\nexport default function () {\n  const dcaSdk = useSdk('dca')\n  const { getTokenListInfo } = useGetToken()\n  const { setFilterTokenLoading } = useTokenSelectStore()\n  const { setInCoinWhiteList, setOutCoinWhiteList } = useDcaStore()\n  // whitelist_mode = 0 关闭白名单模式\n  // whitelist_mode = 1 只开启in_coin\n  // whitelist_mode = 2 只开启out_coin\n  // whitelist_mode = 3 全部开启\n  const getDcaCoinWhiteList = async (whitelist_mode: number) => {\n    console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:44 ~ getDcaCoinWhiteList ~ getDcaCoinWhiteList:')\n    try {\n      setFilterTokenLoading(true)\n      const { in_coin_list, out_coin_list } = await dcaSdk!.Dca.getDcaCoinWhiteList(whitelist_mode)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ outCoinList:', out_coin_list)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ inCoinList:', in_coin_list)\n      const inList: any = []\n      const outList: any = []\n      const inCoinTypeList = in_coin_list.map((item: any) => item)\n      const inTokenMap = await getTokenListInfo(inCoinTypeList)\n      if (inTokenMap) {\n        for (let i = 0; i < in_coin_list.length; i++) {\n          const tokenInfo = inTokenMap.get(in_coin_list[i] as CoinType)\n          inList.push({\n            ...tokenInfo,\n            labels: tokenInfo?.labels?.length > 0 ? tokenInfo?.labels : ''\n          })\n        }\n      }\n      const outCoinTypeList = out_coin_list.map((item: any) => item)\n      const outTokenMap = await getTokenListInfo(outCoinTypeList)\n      if (outTokenMap) {\n        for (let i = 0; i < out_coin_list.length; i++) {\n          const tokenInfo = outTokenMap.get(out_coin_list[i] as CoinType)\n          outList.push({\n            ...tokenInfo,\n            labels: tokenInfo?.labels?.length > 0 ? tokenInfo?.labels : ''\n          })\n        }\n      }\n\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ outList:', outList)\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ inList:', inList)\n      setInCoinWhiteList(inList)\n      setOutCoinWhiteList(outList)\n      setFilterTokenLoading(false)\n    } catch (error) {\n      setInCoinWhiteList([])\n      setOutCoinWhiteList([])\n      setFilterTokenLoading(false)\n      console.log('🚀 ~ file: useGetDcaTokenList.ts:35 ~ getDcaCoinWhiteList ~ error:', error)\n    }\n  }\n  return { getDcaCoinWhiteList }\n}\n","import { useSdk } from '@cetus/sdk-factory'\nimport { Token } from '@cetus/types'\nimport { d, Decimal } from '@cetus/utils'\nimport { toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport useDcaGetQuote from './useGetDcaQuote'\nexport type OpenDcaOrderParams = {\n  in_coin: Token\n  out_coin: Token\n  in_coin_amount: number\n  cycle_count: number\n  min_price: number\n  max_price: number\n  freq: number\n}\nexport default function () {\n  const dcaSdk = useSdk('dca')\n  const { getDcaQuote } = useDcaGetQuote()\n\n  // Helper function: 计算单周期最大最小期望数量\n  const calculateCycleAmounts = (\n    inCoinAmount: number,\n    cycleCount: number,\n    inCoinDecimals: number,\n    outCoinDecimals: number,\n    minPrice: number,\n    maxPrice: number\n  ) => {\n    const cycleCountAmount = d(toDecimalsAmount(inCoinAmount, inCoinDecimals)).div(cycleCount)\n\n    const maxAmount = d(cycleCountAmount).div(d(minPrice))\n    const minAmount = d(cycleCountAmount).div(d(maxPrice))\n\n    let perCycleMinOutAmount: string, perCycleMaxOutAmount: string\n\n    if (inCoinDecimals > outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, inCoinDecimals - outCoinDecimals)\n      perCycleMinOutAmount = minAmount.div(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.div(perCycleAmountDecimal).ceil().toString()\n    } else if (inCoinDecimals < outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, outCoinDecimals - inCoinDecimals)\n      perCycleMinOutAmount = minAmount.mul(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.mul(perCycleAmountDecimal).ceil().toString()\n    } else {\n      perCycleMinOutAmount = minAmount.ceil().toString()\n      perCycleMaxOutAmount = maxAmount.ceil().toString()\n    }\n\n    return { perCycleMinOutAmount, perCycleMaxOutAmount, cycleCountAmount }\n  }\n\n  // Helper function: 构造 DCA 参数\n  const buildDcaOrderPayload = (params: OpenDcaOrderParams, quoteResult: any, perCycleMinOutAmount: string, perCycleMaxOutAmount: string) => {\n    const { in_coin, in_coin_amount, freq, cycle_count, out_coin } = params\n\n    return {\n      in_coin_amount: String(toDecimalsAmount(in_coin_amount, in_coin.decimals)),\n      in_coin_type: in_coin.coin_type,\n      out_coin_type: out_coin.coin_type,\n      cycle_frequency: freq,\n      cycle_count,\n      per_cycle_min_out_amount: perCycleMinOutAmount,\n      per_cycle_max_out_amount: perCycleMaxOutAmount,\n      per_cycle_in_amount_limit: quoteResult.amountInLimitPerCycle,\n      fee_rate: quoteResult.feeRate,\n      timestamp: quoteResult.timestamp,\n      signature: quoteResult.signature\n    }\n  }\n\n  // Main function\n  const openDcaOrder = async (params: OpenDcaOrderParams) => {\n    const { in_coin, out_coin, in_coin_amount, cycle_count, min_price, max_price, freq } = params\n\n    // Step 1: 获取报价\n    const sender = (await dcaSdk!.getSenderAddress()) || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    const quoteResult = await getDcaQuote({ inCoin: in_coin.coin_type, freq, count: cycle_count, sender })\n    if (!quoteResult) {\n      throw new Error('Request timed out')\n    }\n\n    // Step 2: 计算单周期金额\n    const { perCycleMinOutAmount, perCycleMaxOutAmount } = calculateCycleAmounts(\n      in_coin_amount,\n      cycle_count,\n      in_coin.decimals,\n      out_coin.decimals,\n      min_price,\n      max_price\n    )\n\n    // Step 3: 构造 DCA 开单参数\n    const dcaOpenOrderPayloadParams = buildDcaOrderPayload(params, quoteResult, perCycleMinOutAmount, perCycleMaxOutAmount)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:91 ~ openDcaOrder ~ dcaOpenOrderPayloadParams:', dcaOpenOrderPayloadParams)\n\n    // Step 4: 调用 SDK 提交订单\n    const tx = await dcaSdk!.Dca.dcaOpenOrderPayload(dcaOpenOrderPayloadParams)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:55 ~ openDcaOrder ~ tx:', tx)\n    return tx\n  }\n\n  return { openDcaOrder }\n}\n","import useDcaStore from '@/store/dca'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport RangeValue from '../position/RangeValue'\nexport type detailsDataType = {\n  sellPerOrder: string | number\n  estEndDate: string\n  platformFee: string\n  minPriceValue: string\n  maxPriceValue: string\n  minPriceResever: string\n  maxPriceResever: string\n}\ninterface DetailsContentProps {\n  detailsData: detailsDataType\n  isConfirm?: boolean\n}\nexport default function DetailsContent({ detailsData, isConfirm = false }: DetailsContentProps) {\n  const { sellPerOrder, estEndDate, platformFee, minPriceValue, maxPriceValue, minPriceResever, maxPriceResever } = detailsData\n  const { sellCoin, buyCoin, sellTotalAmount, investNum, currentInvest, pageDirect } = useDcaStore()\n  console.log('🚀 ~ DetailsBlock ~ investNum:', detailsData, investNum)\n  return (\n    <VStack w=\"100%\" gap={isConfirm ? '20px' : '16px'}>\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell total\"\n        value={!sellTotalAmount ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellTotalAmount, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell per order\"\n        value={!sellPerOrder ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellPerOrder, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {!isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Receive\"\n          value={\n            <HStack gap=\"4px\">\n              <SingleCoinImage\n                imageUrl={buyCoin?.logo_url}\n                w=\"20px\"\n                h=\"20px\"\n                coinType={buyCoin?.coin_type}\n                showTagHeight=\"10px\"\n                showTagWidth=\"10px\"\n              />\n              <Text color=\"text_caption\">{buyCoin?.symbol}</Text>\n            </HStack>\n          }\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      {isConfirm && (\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text textAlign=\"left\" whiteSpace=\"nowrap\">\n            Price range\n          </Text>\n          <RangeValue\n            displayTokenA={buyCoin}\n            displayTokenB={sellCoin}\n            isRank={true}\n            justify=\"flex-end\"\n            priceInfo={{\n              minPrice: addComma(minPriceValue).toString(),\n              maxPrice: addComma(maxPriceValue).toString(),\n              minPriceResever: addComma(minPriceResever).toString(),\n              maxPriceResever: addComma(maxPriceResever).toString()\n            }}\n            fontSize=\"14px\"\n            color=\"text_caption\"\n          />\n        </HStack>\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Invest every\"\n        value={Number(investNum) > 1 ? `${investNum} ${currentInvest}s` : `${investNum} ${currentInvest}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Start date\"\n          value={String(timeFormatUTC(Date.now(), 'YMDHM'))}\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Est. end date(UTC)\"\n        value={estEndDate}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Platform fee\"\n        value={platformFee}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n    </VStack>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { Icon } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport DetailsContent from './DetailsContent'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onClose: () => void\n  toOpenDca: () => void\n  confirmData: any\n  toOpenDcaLoading: boolean\n}\n\nconst ConfirmModal = ({ confirmData, isOpen, onClose, toOpenDca, toOpenDcaLoading }: ConfirmModalProps) => {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Review your order\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"16px\" p=\"16px\">\n            <Block borderRadius=\"12px\" position=\"relative\" p=\"0 12px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <VStack align=\"flex-start\" w=\"calc(50% - 24px)\">\n                  <Text>Sell</Text>\n                  <SingleTokenInfo token={sellCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n                <Box w=\"1px\" h=\"100px\" bg=\"border\" />\n                <VStack align=\"flex-end\" w=\"calc(50% - 24px)\">\n                  <Text>Buy</Text>\n                  <SingleTokenInfo token={buyCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n              </HStack>\n              <Center\n                w=\"36px\"\n                h=\"36px\"\n                borderRadius=\"50%\"\n                position=\"absolute\"\n                left=\"calc(50% - 18px)\"\n                top=\"calc(50% - 18px)\"\n                border=\"1px solid\"\n                borderColor=\"border\"\n                boxShadow=\"trade_icon_shadow\"\n                bg=\"input_bg\"\n              >\n                <Icon mt=\"-1px\" svgW=\"12px\" svgH=\"12px\" xlinkHref=\"#icon-a-icon_trade\" svgFill=\"text_caption\" transform=\"rotate(-90deg)\" />\n              </Center>\n            </Block>\n            <DetailsContent detailsData={confirmData} isConfirm />\n            <Button\n              mt=\"12px\"\n              onClick={() => {\n                toOpenDca()\n                onClose()\n              }}\n              disabled={toOpenDcaLoading}\n              w=\"calc(100% + 32px)\"\n              mb=\"-30px\"\n              h=\"52px\"\n              fontWeight=\"500\"\n            >\n              Create DCA Order\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import { Block } from '@cetus/design'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport DetailsContent, { detailsDataType } from './DetailsContent'\n\ninterface DetailsBlockProps {\n  detailsData: detailsDataType\n}\nexport default function DetailsBlock({ detailsData }: DetailsBlockProps) {\n  return (\n    <Block>\n      <VStack gap=\"20px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text color=\"text_caption\">Details</Text>\n          <Text fontSize=\"12px\">Your first invest cycle will begin immediately</Text>\n        </HStack>\n        <DetailsContent detailsData={detailsData} />\n      </VStack>\n    </Block>\n  )\n}\n","import { InputBox } from '@cetus/design'\nimport { HStack, Input, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\nimport MenuDropBlock from '../common/MenuDropBlock'\n\ninterface InvestAndOrdersProps {\n  title: string | ReactNode\n  label: string\n  inputValue: string\n  inputChange?: (value: string) => void\n  list?: string[]\n  onListItemClick?: (item: string) => void\n}\n\nexport default function InvestAndOrders({\n  title,\n  label,\n  inputValue,\n  inputChange = () => {},\n  list = [],\n  onListItemClick = () => {}\n}: InvestAndOrdersProps) {\n  // 处理输入值的变化\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    inputChange(value)\n  }\n  return (\n    <InputBox w=\"50%\" borderRadius=\"16px\">\n      <VStack gap=\"16px\" align=\"flex-start\">\n        {typeof title === 'string' ? (\n          <Text fontWeight=\"500\" lineHeight=\"18px\" fontSize=\"13px\">\n            {title}\n          </Text>\n        ) : (\n          title\n        )}\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Input\n            value={inputValue}\n            onChange={handleInputChange}\n            style={{\n              width: 'calc(100% - 8px)',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n\n          {list.length > 0 ? (\n            <MenuDropBlock label={label} list={list} onListItemClick={onListItemClick} />\n          ) : (\n            <Text color=\"text_caption\">{label}</Text>\n          )}\n        </HStack>\n      </VStack>\n    </InputBox>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { InputBox } from '@cetus/design'\nimport { NumericFormatInput } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface InvestAndOrdersProps {\n  text?: string\n  inputValue: string\n  inputChange: (value: string) => void\n  align: string\n  direct: boolean\n}\n\nexport default function MinAndMaxPrice({ direct, text, align, inputValue, inputChange = () => {} }: InvestAndOrdersProps) {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <InputBox w=\"unset\" borderRadius=\"8px\">\n      <HStack>\n        <VStack align={align}>\n          <NumericFormatInput\n            value={inputValue}\n            placeholder=\"0.0\"\n            decimals={18}\n            onChange={value => inputChange(value)}\n            style={{\n              width: 'calc(100% - 8px)',\n              textAlign: align == 'flex-start' ? 'left' : 'right',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n          <HStack w=\"100%\" justify=\"space-between\">\n            <Text fontSize=\"12px\" fontWeight=\"500\">\n              {direct ? `${buyCoin?.symbol} per ${sellCoin?.symbol}` : `${sellCoin?.symbol} per ${buyCoin?.symbol}`}\n            </Text>\n            {text && (\n              <Text fontSize=\"12px\" fontWeight=\"500\">\n                {text}\n              </Text>\n            )}\n          </HStack>\n        </VStack>\n      </HStack>\n    </InputBox>\n  )\n}\n","import useInsufficientBalanceToast from '@/hooks/common/useInsufficientBalanceToast'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport { useDcaHook } from '@/hooks/dca/useDcaHook'\nimport useGetDcaTokenList from '@/hooks/dca/useGetDcaTokenList'\nimport useOpenDcaOrder from '@/hooks/dca/useOpenDcaOrder'\nimport useDcaStore from '@/store/dca'\nimport { Block, CurrentPrice, ErrorTips, TooltipIcon, TradeInputGroup, useGlobalToast } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, formatNumber, formatNumberWithDown } from '@cetus/utils'\nimport { Button, HStack, Image, RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport ConfirmModal from './ConfirmModal'\nimport DetailsBlock from './DetailsBlock'\nimport { detailsDataType } from './DetailsContent'\nimport InvestAndOrders from './InvestAndOrders'\nimport MinAndMaxPrice from './MinAndMaxPrice'\nimport icon_currentprice from '/images/icon_currentprice@2x.png'\n\nexport function DcaInputBlock({ handleGetDcaOrderList }: { handleGetDcaOrderList: (orderId: string) => void }) {\n  const {\n    sellCoin,\n    buyCoin,\n    sellAmount,\n    buyAmount,\n    setInvestNum,\n    setOrderNum,\n    investNum,\n    orderNum,\n    currentInvest,\n    setCurrentInvest,\n    pageDirect,\n    isDcaRefresh,\n    dcaMode,\n    setDcaMode,\n    sellTotalAmount,\n    upperPriceSize,\n    lowerPriceSize,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n  const {\n    currentPrice,\n    btnStatus,\n    findRouterLoading,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handleMinInputChange,\n    handleMaxInputChange,\n    handlePageToggleDirect,\n    onReverseClick,\n    orderSizeError,\n    orderInputError,\n    orderTimeError,\n    priceError,\n    sellPerOrder,\n    estEndDate,\n    platformFee,\n    fetchFindAvailableRouterDebounce,\n    cycleFrequency,\n    resetInputAmount,\n    warningTokenList\n  } = useDcaHook()\n\n  useEffect(() => {\n    if (isDcaRefresh) {\n      fetchFindAvailableRouterDebounce()\n    }\n  }, [isDcaRefresh])\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [tradeIcon, setTradeIcon] = useState<string>('#icon-a-icon_trade')\n\n  const timeList: string[] = ['Minute', 'Hour', 'Day', 'Week', 'Month']\n\n  const toggleTradeIcon = (hovered: boolean) => setTradeIcon(hovered ? '#icon-icon_swap1' : '#icon-a-icon_trade')\n  const { openDcaOrder } = useOpenDcaOrder()\n  const [toOpenDcaLoading, setToOpenDcaLoading] = useState(false)\n\n  const { fetchCoinBalance } = useAccountBalance()\n  const { signAndExecuteTransaction, transactionRejected, transactionConfirmation } = useTransaction()\n  const { failedTsToast } = useGlobalToast()\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const toOpenDca = async () => {\n    setToOpenDcaLoading(true)\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType) => {\n        const desc = `Creating DCA Order for ${formatNumber(sellTotalAmount)} ${sellCoin?.symbol} to ${buyCoin?.symbol} over ${orderNum} orders`\n        const info: CommonTypeInfo = {\n          modalDescriptionText: 'Creating DCA Order',\n          toastTitleText: 'Creating DCA Order'\n        }\n        if (status === 'success') {\n          info.modalDescriptionText = 'DCA Order Created'\n          info.toastDescriptionContent = ''\n          info.toastTitleText = 'DCA Order Created'\n        }\n        return info\n      }\n    }\n    transactionConfirmation(toastInfo)\n    const min_price = !pageDirect ? minPriceValue : d(1).div(maxPriceValue).toString()\n    const max_price = !pageDirect ? maxPriceValue : d(1).div(minPriceValue).toString()\n    try {\n      const params: any = {\n        in_coin: sellCoin,\n        out_coin: buyCoin,\n        in_coin_amount: sellTotalAmount,\n        cycle_count: orderNum,\n        min_price,\n        max_price,\n        freq: cycleFrequency\n      }\n\n      console.log('🚀 ~ toOpenDca ~ params:', !pageDirect, minPriceValue, maxPriceValue, min_price, max_price, params)\n      const tx = await openDcaOrder(params)\n      console.log('🚀 ~ toOpenDca ~ tx:', tx)\n      const res = await signAndExecuteTransaction(tx, toastInfo)\n      console.log('🚀 ~ toOpenDca ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        resetInputAmount()\n        setTimeout(() => {\n          fetchCoinBalance(currentAccount?.address, sellCoin?.coin_type)\n          handleGetDcaOrderList(currentAccount?.address as string)\n        }, 2000)\n      }\n      setToOpenDcaLoading(false)\n    } catch (error) {\n      const errorInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType): CommonTypeInfo => {\n          const info: CommonTypeInfo = {}\n          if (String(error) === 'Error: Each order size should be higher than $10') {\n            info['toastTitleText'] = 'Transaction Submission Error'\n            info['toastDescriptionContent'] = 'Each order size should be higher than $10.'\n          }\n          if (String(error) === 'Error: Request timed out') {\n            info['toastTitleText'] = 'Request timed out'\n            info['toastDescriptionContent'] = 'Please confirm the network status and resubmit the transaction.'\n          }\n          if (String(error) === 'Error: minPrice error') {\n            info['toastTitleText'] = 'DCA order submission failed'\n            info['toastDescriptionContent'] = 'Your nominated prices are out of scope. Please modify your accepted price range and submit it again.'\n          }\n          return info\n        }\n      }\n      console.log('🚀 ~ toOpenDca ~ error:', error)\n      console.error('Open DCA Order Error: ', error)\n      showInsufficientBalanceToast(String(error))\n      transactionRejected(errorInfo)\n      failedTsToast(errorInfo)\n      setToOpenDcaLoading(false)\n    }\n  }\n\n  const { currentCoinKey, inCoinWhiteList, outCoinWhiteList, dcaConfig } = useDcaStore()\n  const { getDcaCoinWhiteList } = useGetDcaTokenList()\n  const [whiteTokenList, setWhiteTokenList] = useState<Token[]>([])\n  useEffect(() => {\n    if (currentCoinKey == 'sellCoin') {\n      setWhiteTokenList(inCoinWhiteList)\n    } else {\n      setWhiteTokenList(outCoinWhiteList)\n    }\n  }, [currentCoinKey, inCoinWhiteList, outCoinWhiteList])\n\n  useEffect(() => {\n    if (dcaConfig && (dcaConfig.whitelistMode || dcaConfig.whitelistMode == 0)) {\n      console.log('🚀🚀🚀 ~ file: DcaInputBlock.tsx:101 ~ DcaInputBlock ~ dcaConfig:', dcaConfig)\n      getDcaCoinWhiteList(dcaConfig.whitelistMode)\n    }\n  }, [dcaConfig])\n\n  const [isOpenConfirmModal, setIsOpenConfirmModal] = useState(false)\n\n  const detailsData: detailsDataType = useMemo(() => {\n    const decimals = !pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    let minPrice = ''\n    let maxPrice = ''\n    let minPriceResever = ''\n    let maxPriceResever = ''\n    if (minPriceValue && maxPriceValue) {\n      minPrice = !pageDirect ? minPriceValue : formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString()\n      maxPrice = !pageDirect ? maxPriceValue : formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString()\n      minPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString() : minPriceValue\n      maxPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString() : maxPriceValue\n    }\n    return { estEndDate, sellPerOrder, platformFee, minPriceValue: minPrice, maxPriceValue: maxPrice, minPriceResever, maxPriceResever }\n  }, [pageDirect, estEndDate, sellPerOrder, platformFee, minPriceValue, maxPriceValue])\n\n  const tabList = [\n    { label: 'Total', value: 'total' },\n    { label: 'Per Order', value: 'perOrder' }\n  ]\n\n  const [value, setValue] = useState<number[]>([0, 0])\n  const [minValue, setMinValue] = useState<number>(0)\n  const [maxValue, setMaxValue] = useState<number>(0)\n\n  const handleSlider = (val: number[]) => {\n    console.log('🚀 ~ handleSlider ~ val:', val)\n    setValue(val)\n    handleMinInputChange(val[0].toString())\n    handleMaxInputChange(val[1].toString())\n  }\n\n  useEffect(() => {\n    // 计算滑杆的min和max值 实际为了保证当前价格在中间 min=0 max=currentPrice * 2\n    if (minPriceValue && maxPriceValue) {\n      const start = Number(minPriceValue)\n      const end = Number(maxPriceValue)\n      setValue([start, end])\n      console.log('🚀 ~ useEffect ~ start:', start, end)\n    }\n    if (!minPriceValue) {\n      setLowerPriceSize('0%')\n    }\n    if (!maxPriceValue) {\n      setUpperPriceSize('0%')\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  useEffect(() => {\n    if (currentPrice) {\n      const min = d('-100').div(100).plus(1).mul(currentPrice).toNumber()\n      const max = d('100').div(100).plus(1).mul(currentPrice).toNumber()\n      console.log('🚀 ~ useEffect ~ min:', min, max)\n      setMinValue(min)\n      setMaxValue(max)\n    }\n  }, [currentPrice])\n  return (\n    <VStack w=\"100%\">\n      <TradeInputGroup\n        onClick={onReverseClick}\n        currentCoinKey={currentCoinKey}\n        whiteTokenList={whiteTokenList}\n        from={{\n          inputTabOptions: {\n            type: 'outlineTab',\n            tabList,\n            currentTab: dcaMode == 'total' ? 'Total' : 'Per Order',\n            handleChangeTab: tab => {\n              setDcaMode(tab?.value)\n            },\n            wrapStyle: {\n              w: '168px',\n              h: '28px',\n              p: '3px',\n              borderRadius: '10px'\n            },\n            itemStyle: {\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px',\n              borderRadius: '6px'\n            }\n          },\n          title: 'You Pay',\n          balance: sellBalanceInfo?.balanceFormat || '',\n          value: sellAmount,\n          amountValue: sellAmountValue,\n          loading: false,\n          onChange: handleAmountChange,\n          selectable: true,\n          placeholder: '0.0',\n          token: sellCoin,\n          whiteTokenList: inCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, true)\n        }}\n        to={{\n          isDcaTo: true,\n          wrapStyle: {\n            backgroundColor: 'bg_secondary',\n            h: '94px'\n          },\n          title: 'You Receive',\n          inputAllowed: false,\n          balance: buyBalanceInfo?.balanceFormat || '',\n          value: '',\n          amountValue: '',\n          loading: false,\n          onChange: () => {},\n          token: buyCoin,\n          whiteTokenList: outCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, false),\n          selectable: true,\n          placeholder: '',\n          half: false,\n          max: false\n        }}\n        iconParams={{\n          xlinkHref: tradeIcon,\n          svgFill: 'text_caption',\n          transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n          fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n          onMouseEnter: () => toggleTradeIcon(true),\n          onMouseLeave: () => toggleTradeIcon(false)\n        }}\n      />\n      {orderSizeError?.status && <ErrorTips tips={orderSizeError?.tips} bg=\"primary_red_bg\" />}\n      <HStack w=\"100%\">\n        <InvestAndOrders\n          title=\"Invest Every\"\n          label={currentInvest}\n          inputValue={investNum}\n          list={timeList}\n          onListItemClick={item => {\n            setCurrentInvest(item)\n          }}\n          inputChange={item => {\n            console.log('🚀 ~ DcaInputBlock ~ item:', item)\n            setInvestNum(item)\n          }}\n        />\n        <InvestAndOrders\n          title={\n            <TooltipIcon\n              type=\"over\"\n              children={\n                <Text fontSize=\"13px\" fontWeight=\"500\" mr=\"4px\">\n                  Over\n                </Text>\n              }\n            />\n          }\n          label=\"Orders\"\n          inputValue={orderNum}\n          inputChange={item => {\n            setOrderNum(item)\n            fetchFindAvailableRouterDebounce()\n          }}\n        />\n      </HStack>\n      {orderInputError?.status && <ErrorTips tips={orderInputError?.tips} bg=\"primary_red_bg\" />}\n      {orderTimeError?.status && <ErrorTips tips={orderTimeError?.tips} bg=\"primary_red_bg\" />}\n      <Block zIndex=\"1\" p=\"16px\" borderRadius=\"16px\">\n        <VStack align=\"flex-start\">\n          <Text color=\"text_caption\">Set Price Range</Text>\n          <Text lineHeight=\"16px\" fontSize=\"12px\" m={{ base: '4px 0', lg: '0' }} mb={{ base: sellAmount ? '4px' : '0' }}>\n            DCA will only be executed if the price falls within the range of your pricing strategy.\n          </Text>\n          {sellAmount && sellPerOrder && (\n            <HStack mt=\"8px\" w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'align', lg: 'center' }}>\n              <Text>Current Rate</Text>\n              <VStack align={{ base: 'flex-start', lg: 'flex-end' }}>\n                <CurrentPrice\n                  color=\"text_caption\"\n                  pageDirect={pageDirect}\n                  handlePageToggleDirect={handlePageToggleDirect}\n                  fromToken={sellCoin!}\n                  toToken={buyCoin!}\n                  fromValue={sellPerOrder}\n                  toValue={buyAmount}\n                  isLoading={findRouterLoading || !buyAmount || !sellPerOrder}\n                />\n              </VStack>\n            </HStack>\n          )}\n        </VStack>\n        <HStack justify=\"space-between\" gap=\"8px\" mt=\"20px\">\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && minPriceValue ? lowerPriceSize : ''}\n            inputValue={minPriceValue}\n            inputChange={val => handleMinInputChange(val)}\n            align=\"flex-start\"\n          />\n          <Text color=\"text_caption\">-</Text>\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && maxPriceValue ? upperPriceSize : ''}\n            inputValue={maxPriceValue}\n            inputChange={val => handleMaxInputChange(val)}\n            align=\"flex-start\"\n          />\n        </HStack>\n        {!findRouterLoading &&\n          sellAmount &&\n          minPriceValue &&\n          maxPriceValue &&\n          Number(maxPriceValue) >= Number(minPriceValue) &&\n          btnStatus?.text !== 'No Available Route' && (\n            <VStack w=\"100%\" gap=\"0\" mt=\"20px\">\n              <RangeSlider\n                min={minValue}\n                max={maxValue}\n                step={0.1}\n                value={value}\n                onChange={val => {\n                  handleSlider(val)\n                }}\n                colorScheme=\"teal\"\n              >\n                <RangeSliderTrack>\n                  <RangeSliderFilledTrack />\n                </RangeSliderTrack>\n                <RangeSliderThumb index={0} />\n                <RangeSliderThumb index={1} />\n              </RangeSlider>\n              <Image src={icon_currentprice} w=\"32px\" h=\"32px\" />\n              <HStack w=\"100%\" h=\"14px\" justify=\"center\" mt=\"-2px\">\n                <Text>Current Rate</Text>\n              </HStack>\n            </VStack>\n          )}\n      </Block>\n      {priceError?.status && <ErrorTips tips={priceError?.tips} bg=\"primary_red_bg\" />}\n      <Button\n        isLoading={toOpenDcaLoading}\n        disabled={btnStatus?.disabled || toOpenDcaLoading}\n        w=\"100%\"\n        h=\"52px\"\n        fontSize=\"18px\"\n        fontWeight=\"500\"\n        onClick={btnStatus?.text == 'Connect Wallet' ? () => onWalletModal(true) : () => setIsOpenConfirmModal(true)}\n      >\n        {btnStatus?.text}\n      </Button>\n      {sellAmount && <DetailsBlock detailsData={detailsData} />}\n      {isOpenConfirmModal && (\n        <ConfirmModal\n          confirmData={detailsData}\n          isOpen={isOpenConfirmModal}\n          onClose={() => setIsOpenConfirmModal(false)}\n          toOpenDca={toOpenDca}\n          toOpenDcaLoading={toOpenDcaLoading}\n        />\n      )}\n      {(buyCoin || sellCoin) && (\n        <WarningTokenTipsModal\n          addToken\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            tokenInfo.forEach(coin => {\n              const hasFind = coin.coin_type === buyCoin?.coin_type || coin.coin_type === sellCoin?.coin_type\n              if (hasFind) {\n                handleSelectToken(undefined, coin.coin_type === buyCoin?.coin_type)\n              }\n            })\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import { ChartOrderIcon } from '@/components/common/ChartOrderIcon'\nimport { TradeTab } from '@/components/common/TradeTab'\nimport ActiveAndPastDcas from '@/components/dca/ActiveAndPastDcas'\nimport { DcaInputBlock } from '@/components/dca/DcaInputBlock'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart'\nimport { TradeTabs } from '@/components/swap/type'\nimport { useGetDcaOrderList } from '@/hooks/dca/useGetDcaOrderList'\nimport useGlobalStore from '@/store/common/global'\nimport useDcaStore from '@/store/dca'\nimport useActiveOrdersStore from '@/store/profile/activeOrders'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nexport default function Dca() {\n  const { currentAccount } = useAccountStore()\n  const { sellCoin, buyCoin, setIsDcaRefresh } = useDcaStore()\n  const { isShowTradeChart, isShowTradeOrders } = useGlobalStore()\n  const { getDcaOrderList } = useGetDcaOrderList()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const { dcaOrderListLoading, dcaActiveOrderList, dcaPastOrderList, setDcaActiveOrderList, setDcaPastOrderList } = useActiveOrdersStore()\n\n  const handleGetDcaOrderList = async (account: string, isLoading: boolean = false) => {\n    if (!isShowTradeOrders) return\n    getDcaOrderList(account, isLoading)\n  }\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      handleGetDcaOrderList(currentAccount?.address, true)\n    } else {\n      setDcaActiveOrderList([])\n      setDcaPastOrderList([])\n    }\n  }, [currentAccount?.address, isShowTradeOrders])\n\n  const handleRefresh = (isLoading: boolean = true) => {\n    setRefreshCount(0)\n    setIsDcaRefresh(true)\n    setTimeout(() => {\n      setIsDcaRefresh(false)\n    }, 1000)\n    if (currentAccount?.address) {\n      if (!isLoading) {\n        // 手动刷新的时候只请求记录不请求余额 只有20s自动刷新和进入页面时请求余额\n        fetchAccountBalance()\n      }\n      handleGetDcaOrderList(currentAccount?.address, isLoading)\n    }\n  }\n\n  useRpcListener({\n    onRpcChange: () => {\n      handleRefresh()\n    }\n  })\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [currentAccount?.address])\n\n  const { isApp, windowWidth } = useWindowWidth()\n\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n  // 20s轮询订单列表\n  useInterval({\n    interval: 1000,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= 20) {\n        handleRefresh(false)\n      }\n    }\n  })\n\n  return (\n    <HStack\n      mt={windowWidth && windowWidth < 1024 ? '28px' : '42px'}\n      className={isApp || isShowTradeChart || isShowTradeOrders ? '' : 'bg_img'}\n      w=\"100%\"\n      gap=\"16px\"\n      justify=\"center\"\n      align=\"flex-start\"\n      flexDirection={{ base: 'column', lg: 'row' }}\n    >\n      {(isShowTradeOrders || isShowTradeChart) && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }} mt={isApp && !isShowTradeChart ? '-16px' : '0'}>\n          {isShowTradeChart && <LimitPriceChart baseToken={sellCoin} quoteToken={buyCoin} />}\n          {isShowTradeOrders && !isApp && (\n            <ActiveAndPastDcas\n              handleRefresh={handleRefresh}\n              activeList={dcaActiveOrderList}\n              pastList={dcaPastOrderList}\n              isOrderLoading={dcaOrderListLoading}\n            />\n          )}\n        </VStack>\n      )}\n      <VStack w={{ base: '100%', lg: '470px' }}>\n        <HStack w=\"100%\" justify=\"space-between\" mb=\"8px\">\n          <TradeTab currTradeTab={TradeTabs.DCA} />\n          <ChartOrderIcon />\n        </HStack>\n        <DcaInputBlock handleGetDcaOrderList={(walletAddress: string) => handleGetDcaOrderList(walletAddress)} />\n      </VStack>\n      {isApp && isShowTradeOrders && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n          <ActiveAndPastDcas\n            handleRefresh={handleRefresh}\n            activeList={dcaActiveOrderList}\n            pastList={dcaPastOrderList}\n            isOrderLoading={dcaOrderListLoading}\n          />\n        </VStack>\n      )}\n    </HStack>\n  )\n}\n"],"names":["DcaItem","currentTabVal","orderInfo","isApp","useWindowWidth","sellCoin","buyCoin","isDetail","setIsDetail","useState","useEffect","getTokenRank","useTokenRank","pageDirect","setPageDirect","direct","closeOrderAction","isCloseLoading","useDcaItemActions","closeOrder","getExplorerUrl","useExplorer","VStack","jsxs","HStack","jsx","DcaItemCoinPirBlock","Icon","BtnContent","DcaProgressBlock","Text","RangeValueBlock","OverviewOrders","onClickDetail","Button","ActiveAndPastDcas","handleRefresh","activeList","pastList","isOrderLoading","pageList","setPageList","paginationList","setPaginationList","total","setTotal","currentPage","setCurrentPage","currentAccount","onWalletModal","useAccountStore","currentTab","setCurrentTab","tabList","useMemo","handleChangeTab","item","currentList","start","end","totalClaimNum","sum","d","closeAll","claimAll","isClaimAllLoading","isCloseAllLoading","useDcaActions","SelectTab","RefreshButton","Block","index","OrderLoading","NoData","Center","Pagination","SkeletonCircle","Skeleton","useDcaConfig","fetchByApi","useFetch","dcaSdk","useSdk","setDcaConfig","useDcaStore","getDcaConfigFromApi","DcaConfigPath","getDcaConfigFromContract","dcaConfig","apiConfig","error","contractConfig","useDcaGetQuote","setDcaQuote","inCoin","freq","count","sender","data","DcaQuotePath","result","useDcaHook","setSellCoin","setBuyCoin","sellAmount","buyAmount","setBuyAmount","setSellAmount","setCurrentCoinKey","currentCoinKey","investNum","currentInvest","orderNum","dcaQuote","setInvestNum","setOrderNum","setCurrentInvest","dcaMode","sellTotalAmount","setSellTotalAmount","setLowerPriceSize","setUpperPriceSize","getDcaConfig","getDcaQuote","coinPriceObj","useTokenPriceStore","fetchTokenPrices","getTokenAmountValue","useTokenPrice","uuid","setUuid","uuidRef","useRef","initiaTokenSelect","envConfigs","resetInputAmount","minPriceValue","setMinPriceValue","maxPriceValue","setMaxPriceValue","sellBalanceInfo","useGetTokenBalance","buyBalanceInfo","sellAmountValue","handleAmountChange","amount","fetchFindAvailableRouterDebounce","handlePageToggleDirect","decimals","value","newMinVal","newMaxVal","formatNumberWithDown","handleSelectToken","coin","isSell","fixCoinType","onReverseClick","isDcaSelect","whitelistMode","sellCoinPrice","_a","extractStructTagFromType","sellPerOrder","sellPerOrderUSD","platformFee","Decimal","amountInLimit","bnToAmount","orderSizeError","orderInputError","priceError","estEndDate","setEstEndDate","orderTimeError","setOrderTimeError","getEstEndDate","date","investTime","timeFormatUTC","cycleFrequency","queryDcaQuoteDebounce","queryDcaQuote","coinAddress","defaultWalletAddress","useDebounceFunction","findBestRouters","useFindBestRouting","findRouterLoading","setFindRouterLoading","routerData","setRouterData","getTokensPrice","findAvailableRouterDebounce","findAvailableRouter","newUuid","providersKeys","AggregatorDexMap","key","toDecimalsAmount","uniqueTokens","btnStatus","btnInfo","AggregatorServerErrorCode","_b","warningTokenList","list","currentPrice","formatNumber","minPriceValueDebounce","val","maxPriceValueDebounce","handleMinInputChange","handleMaxInputChange","changeLowerPriceSize","changeUpperPriceSize","lowerPrice","upperPrice","useGetDcaTokenList","getTokenListInfo","useGetToken","setFilterTokenLoading","useTokenSelectStore","setInCoinWhiteList","setOutCoinWhiteList","whitelist_mode","in_coin_list","out_coin_list","inList","outList","inCoinTypeList","inTokenMap","i","tokenInfo","outCoinTypeList","outTokenMap","useOpenDcaOrder","calculateCycleAmounts","inCoinAmount","cycleCount","inCoinDecimals","outCoinDecimals","minPrice","maxPrice","cycleCountAmount","maxAmount","minAmount","perCycleMinOutAmount","perCycleMaxOutAmount","perCycleAmountDecimal","buildDcaOrderPayload","params","quoteResult","in_coin","in_coin_amount","cycle_count","out_coin","min_price","max_price","dcaOpenOrderPayloadParams","tx","DetailsContent","detailsData","isConfirm","minPriceResever","maxPriceResever","HTextLabelBox","SingleCoinImage","RangeValue","addComma","ConfirmModal","confirmData","isOpen","onClose","toOpenDca","toOpenDcaLoading","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","SingleTokenInfo","Box","DetailsBlock","InvestAndOrders","title","label","inputValue","inputChange","onListItemClick","handleInputChange","event","InputBox","Input","MenuDropBlock","MinAndMaxPrice","text","align","NumericFormatInput","DcaInputBlock","handleGetDcaOrderList","isDcaRefresh","setDcaMode","upperPriceSize","lowerPriceSize","tradeIcon","setTradeIcon","timeList","toggleTradeIcon","hovered","openDcaOrder","setToOpenDcaLoading","fetchCoinBalance","useAccountBalance","signAndExecuteTransaction","transactionRejected","transactionConfirmation","useTransaction","failedTsToast","useGlobalToast","showInsufficientBalanceToast","useInsufficientBalanceToast","toastInfo","status","info","res","errorInfo","inCoinWhiteList","outCoinWhiteList","getDcaCoinWhiteList","whiteTokenList","setWhiteTokenList","isOpenConfirmModal","setIsOpenConfirmModal","setValue","minValue","setMinValue","maxValue","setMaxValue","handleSlider","min","max","TradeInputGroup","tab","token","ErrorTips","TooltipIcon","CurrentPrice","RangeSlider","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderThumb","Image","icon_currentprice","WarningTokenTipsModal","Dca","setIsDcaRefresh","isShowTradeChart","isShowTradeOrders","useGlobalStore","getDcaOrderList","useGetDcaOrderList","fetchAccountBalance","dcaOrderListLoading","dcaActiveOrderList","dcaPastOrderList","setDcaActiveOrderList","setDcaPastOrderList","useActiveOrdersStore","account","isLoading","setRefreshCount","useRpcListener","windowWidth","refreshCount","useInterval","LimitPriceChart","TradeTab","TradeTabs","ChartOrderIcon","walletAddress"],"mappings":"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"}
>>>>>>> 0c24c70bb8f4b262d669a2d6c2f695cdc5861cf4:dist/assets/Dca-DneMsUNX.js.map
