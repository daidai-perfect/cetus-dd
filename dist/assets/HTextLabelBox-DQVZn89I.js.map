{"version":3,"file":"HTextLabelBox-DQVZn89I.js","sources":["../../../ui-kit/src/components/HTextLabelBox.tsx"],"sourcesContent":["import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { cancelBubble } from '@cetus/utils'\nimport {\n  Box,\n  HStack,\n  LayoutProps,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  Skeleton,\n  StackProps,\n  Text,\n  TextProps,\n  Tooltip,\n  VStack\n} from '@chakra-ui/react'\nimport React from 'react'\n\nexport type HTextLabelBoxProps = {\n  label: string | JSX.Element\n  value: string | JSX.Element\n  subLabel?: string | JSX.Element\n  subValue?: string | JSX.Element\n  leftTooltip?: string | JSX.Element\n  rightValueTip?: string | JSX.Element\n  isLoading?: boolean\n  skeletonStyle?: HTextLabelSkeletonProps\n  wrapStyle?: StackProps\n  labelStyle?: TextProps\n  valueStyle?: TextProps\n  subLabelStyle?: TextProps\n  subValueStyle?: TextProps\n  showTooltip?: boolean\n}\n\nexport default function HTextLabelBox(props: HTextLabelBoxProps) {\n  const {\n    label,\n    value,\n    subLabel,\n    subValue,\n    leftTooltip,\n    rightValueTip,\n    isLoading,\n    skeletonStyle = {},\n    wrapStyle = {},\n    labelStyle = {},\n    valueStyle = {},\n    subLabelStyle = {},\n    subValueStyle = {},\n    showTooltip = true\n  } = props\n\n  const { isApp } = useWindowWidth()\n\n  return isLoading ? (\n    <HTextLabelSkeleton {...skeletonStyle} {...props} />\n  ) : (\n    <HStack w=\"100%\" justifyContent=\"space-between\" alignItems=\"center\" {...wrapStyle}>\n      <VStack alignItems=\"start\" gap=\"1px\">\n        {leftTooltip ? (\n          <Tooltip\n            label={\n              <Text fontSize=\"12px\" lineHeight=\"20px\">\n                {leftTooltip}\n              </Text>\n            }\n            aria-label=\"Yield\"\n            ml=\"12px\"\n            mr=\"12px\"\n          >\n            <button onClick={e => cancelBubble(e)}>\n              <Text cursor=\"help\" textDecoration=\"underline dotted\" textUnderlineOffset=\"3px\" fontSize=\"12px\">\n                {label}\n              </Text>\n            </button>\n          </Tooltip>\n        ) : (\n          <Text color=\"text_paragraph\" fontSize=\"12px\" {...labelStyle}>\n            {label}\n          </Text>\n        )}\n        {subLabel && (\n          <Text fontSize=\"12px\" {...subLabelStyle}>\n            {subLabel}\n          </Text>\n        )}\n      </VStack>\n\n      <VStack alignItems=\"end\" gap=\"1px\">\n        {/* {rightValueTip ? (\n          <Tooltip\n            label={\n              <Text fontSize=\"12px\" lineHeight=\"20px\">\n                {rightValueTip}\n              </Text>\n            }\n            aria-label=\"Yield\"\n            ml=\"12px\"\n            mr=\"12px\"\n          >\n            <button onClick={e => cancelBubble(e)}>\n              <Text\n                cursor=\"help\"\n                maxW=\"220px\"\n                color=\"text_caption\"\n                textDecoration=\"underline dotted\"\n                textUnderlineOffset=\"3px\"\n                textAlign=\"start\"\n                fontSize=\"12px\"\n                {...valueStyle}\n              >\n                {value}\n              </Text>\n            </button>\n          </Tooltip> */}\n        {rightValueTip ? (\n          <Popover isLazy trigger={isApp ? 'click' : 'hover'} autoFocus={false} returnFocusOnClose={false} gutter={4}>\n            <PopoverTrigger>\n              <Box as=\"button\">\n                <Text\n                  cursor=\"help\"\n                  maxW=\"220px\"\n                  color=\"text_caption\"\n                  textDecoration=\"underline dotted\"\n                  textUnderlineOffset=\"3px\"\n                  textAlign=\"start\"\n                  fontSize=\"12px\"\n                  {...valueStyle}\n                >\n                  {value}\n                </Text>\n              </Box>\n            </PopoverTrigger>\n            {showTooltip && (\n              <Portal>\n                <PopoverContent w=\"fit-content\">\n                  <PopoverBody fontSize=\"12px\" w=\"fit-content\">\n                    {rightValueTip}\n                  </PopoverBody>\n                </PopoverContent>\n              </Portal>\n            )}\n          </Popover>\n        ) : (\n          <Text textAlign=\"right\" maxW=\"220px\" color=\"text_caption\" fontSize=\"12px\" {...valueStyle}>\n            {value}\n          </Text>\n        )}\n        {subValue && (\n          <Text maxW=\"220px\" fontSize=\"12px\" {...subValueStyle}>\n            {subValue}\n          </Text>\n        )}\n      </VStack>\n    </HStack>\n  )\n}\n\ntype HTextLabelSkeleton = {\n  valueW?: LayoutProps['w']\n  subValueW?: LayoutProps['w']\n  valueH?: LayoutProps['h']\n  subValueH?: LayoutProps['h']\n}\n\ntype HTextLabelSkeletonProps = HTextLabelSkeleton & Partial<HTextLabelBoxProps>\n\nfunction HTextLabelSkeleton(props: HTextLabelSkeletonProps) {\n  const {\n    valueW = '60px',\n    subValueW = '80px',\n    valueH = '20px',\n    subValueH = '20px',\n    label,\n    value,\n    subLabel,\n    subValue,\n    leftTooltip,\n    rightValueTip,\n    isLoading,\n    skeletonStyle = {},\n    wrapStyle = {},\n    labelStyle = {},\n    valueStyle = {},\n    subLabelStyle = {},\n    subValueStyle = {}\n  } = props\n  return (\n    <HStack w=\"100%\" justifyContent=\"space-between\" alignItems=\"center\" {...wrapStyle}>\n      <VStack alignItems=\"start\" gap=\"1px\">\n        {leftTooltip ? (\n          <Tooltip label={<Text>{leftTooltip}</Text>} aria-label=\"Yield\">\n            <button onClick={e => cancelBubble(e)}>\n              <Text textDecoration=\"underline dotted\" textUnderlineOffset=\"3px\" fontSize=\"12px\" {...labelStyle}>\n                {label}\n              </Text>\n            </button>\n          </Tooltip>\n        ) : (\n          <Text color=\"text_paragraph\" fontSize=\"12px\" {...labelStyle}>\n            {label}\n          </Text>\n        )}\n        {subLabel && (\n          <Text fontSize=\"12px\" {...subLabelStyle}>\n            {subLabel}\n          </Text>\n        )}\n      </VStack>\n\n      <VStack alignItems=\"end\" gap=\"1px\">\n        {(typeof value === 'string' || React.isValidElement(value)) && <Skeleton w={valueW} h={valueH} />}\n        {subValue && typeof subValue === 'string' && <Skeleton w={subValueW} h={subValueH} />}\n      </VStack>\n    </HStack>\n  )\n}\n"],"names":["HTextLabelBox","props","label","value","subLabel","subValue","leftTooltip","rightValueTip","isLoading","skeletonStyle","wrapStyle","labelStyle","valueStyle","subLabelStyle","subValueStyle","showTooltip","isApp","useWindowWidth","jsx","HTextLabelSkeleton","jsxs","HStack","VStack","Tooltip","Text","cancelBubble","e","Popover","PopoverTrigger","Box","Portal","PopoverContent","PopoverBody","valueW","subValueW","valueH","subValueH","React","Skeleton"],"mappings":"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"}