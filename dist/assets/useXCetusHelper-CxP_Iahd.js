import{k as F,j as h,as as p,n as v,d as L,aK as N,aP as b,m as A,w as S,ar as O,Q as R,bg as X,bh as E}from"./index-kyUQkV0u.js";import{u as P}from"./useToken-DX7Pn68W.js";import{a as f}from"./vendor-DXHkIl66.js";import{u as G}from"./index-CptRizr3.js";function q(){const{xCetusSdk:e}=F(),{currentAccount:t}=h(),{setLockCetusListLoading:o,clearData:n,setLockCetusList:s}=p();return{fetchOwnerLockCetusList:async(c=t==null?void 0:t.address)=>{if(!c){o(!1),n();return}try{o(!0);const r=await e.XCetusModule.getOwnerRedeemLockList(c);console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ lockList:",r,c),c===(t==null?void 0:t.address)&&(r.sort((a,T)=>a.locked_until_time-T.locked_until_time),s(r))}catch(r){console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ error:",r)}finally{o(!1)}}}}function B(){const{xCetusSdk:e}=F(),{setDividendRewardList:t}=p();return{fetchVeNFTDividendInfo:async n=>{try{const s=await e.XCetusModule.getVeNFTDividendInfo(n);console.log("ðŸš€ ~ file: useXCetusHelper.ts:62 ~ fetchVeNFTDividendInfo ~ dividendInfo:",s),s&&t(s.rewards)}catch(s){console.log("ðŸš€ ~ fetchVeNFTDividendInfo ~ error:",s,n)}}}}function Q(){const{xCetusSdk:e}=F(),{currentAccount:t}=h(),{setVeNFTLoading:o,clearData:n,setVeNFT:s}=p();return{fetchOwnerVeNFT:async(c=t==null?void 0:t.address,r)=>{if(!c){o(!1),n();return}o(!0);try{const a=await e.XCetusModule.getOwnerVeNFT(c,r);if(console.log("ðŸš€ ~ fetchOwnerVeNFT ~ veNFT:",a),a)return s(a,c),a}catch(a){console.log("ðŸš€ ~ fetchOwnerVeNFT ~ error:",a)}finally{o(!1)}}}}function U(){const{dividendManager:e}=p(),[t,o]=f.useState(),[n,s]=f.useState(),d=c=>{const r=Date.now()/1e3,{start_time:a,interval_day:T}=c,k=Number(O.getNextStartTime(c).toString()),C=S.env=="testnet"?Math.ceil((r-a)/(T*60)):Math.ceil((r-a)/(T*24*3600));o(C),s(k)};return f.useEffect(()=>{e&&d(e)},[e]),{currentPeriod:t,nextStartTime:n,calculateCurrPeriod:d}}function W(e,t){const{fetchTokenInfo:o}=P(),{getTokenAmountValue:n}=v(),{coinPriceObj:s}=A(),[d,c]=f.useState("0"),r=f.useCallback(async()=>{if(!(!e||!t))try{const a=e.bonus,T=a.map(g=>N(g.name,!1)),k=await o(T),C=a.map(g=>{const w=N(g.name,!1),u=k==null?void 0:k.get(w);if(u){const l=b(g.value,u.decimals).toString();return n(w,l)}return"0"}).reduce((g,w)=>g.add(w),L(0)),y=n(S.cetus_coin.coin_type,b(t,9).toString()),i=L(y).gt(0)?C.div(7).mul(365).div(y).mul(100).toFixed(2):"0";c(Number(i)>0&&Number(i)<.01?"0.01":i.toString())}catch(a){console.error("Error calculating APR:",a),c("0.01")}},[e==null?void 0:e.bonus,t,s]);return G(()=>{r()},[e==null?void 0:e.bonus,t,s]),{cetusApr:d}}function z(e){const{dividendRewardList:t}=p(),{fetchTokenInfo:o}=P(),{getTokenAmountValue:n}=v(),[s,d]=f.useState([]),[c,r]=f.useState([]),[a,T]=f.useState("0"),k=f.useCallback(async()=>{let C=L(0);const y=t.filter(u=>!(u.period===e||u.rewards.find(l=>L(l.amount).eq(0))));console.log("ðŸš€ ~ file: useXCetusHelper.ts:107 ~ calculateRewards ~ filteredList:",{filteredList:y,dividendRewardList:t,currentPeriod:e}),r(y);const i={},g=y.flatMap(u=>u.rewards.map(l=>N(l.coin_type,!1))),w=await o(g);y.forEach(u=>{for(const l of u.rewards){const m=N(l.coin_type,!1),x=w==null?void 0:w.get(m);if(x){const V=b(l.amount,x.decimals).toString(),_=n(m,V);C=C.add(_),i[m]=i[m]?{...i[m],amount:L(i[m].amount).add(V).toString(),value:L(i[m].value).add(_).toString()}:{amount:V,coin_type:m,value:_}}}}),d(Object.values(i).filter(u=>L(u.amount).gt(0)).sort((u,l)=>L(l.value).sub(u.value).toNumber())),T(C.toString())},[t,n,e]);return f.useEffect(()=>{e&&k()},[t,e]),{summaryRewardList:s,rewardList:c,totalRewardValue:a}}const M=`${S.xcetus_sdk_options.xcetus.package_id}::xcetus::VeNFT`,j=`${S.xcetus_sdk_options.xcetus.package_id}::lock_coin::LockedCoin<${S.cetus_coin.coin_type}>`;function I(e){let t;return e.forEach(o=>{if(o){const n=R(X(o)).source_address;if(n===M&&o.data&&o.data.content){const{fields:s}=o.data.content;return t={...E(o),id:s.id.id,index:s.index,type:n,xcetus_balance:s.xcetus_balance},t}}}),t}async function J(e,t){const o=[];for(let n=0;n<e.length;n++){const s=e[n];if(s&&R(X(s)).source_address===j&&s.data){const c=O.buildLockCetus(s.data.content);c.xcetus_amount=await t.XCetusModule.getXCetusAmount(c.id),o.push(c)}}return o}export{M as X,j as a,I as b,J as c,Q as d,B as e,U as f,z as g,W as h,q as u};
//# sourceMappingURL=useXCetusHelper-CxP_Iahd.js.map
