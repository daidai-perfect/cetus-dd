{"version":3,"file":"SearchInputBlock-C_-D9XzV.js","sources":["../../src/components/pools/SearchInputBlock.tsx"],"sourcesContent":["import { Block, PoolsDropSelect } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport Icon from '@cetus/ui-kit/src/components/Icon'\nimport { cancelBubble, textEllipses } from '@cetus/utils'\nimport { Center, Flex, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Text } from '@chakra-ui/react'\nimport { useRef, useState } from 'react'\n\ninterface SearchInputProps {\n  selectCoinList: Token[]\n  onClickSelectCoinList: (tokenInfo: Token) => void\n  onDeleteSelectCoinList: (tokenInfo: Token) => void\n  whiteTokenList?: Token[]\n}\nexport default function SearchInputBlock({ whiteTokenList, selectCoinList, onClickSelectCoinList, onDeleteSelectCoinList }: SearchInputProps) {\n  const [isShowList, setIsShowList] = useState(false)\n  const { isApp } = useWindowWidth()\n  const firstItemRef = useRef(null)\n  return (\n    <Popover\n      isLazy\n      placement=\"bottom-start\"\n      trigger=\"click\"\n      modifiers={[\n        {\n          name: 'flip',\n          enabled: false // Disable automatic flip\n        },\n        {\n          name: 'shift',\n          enabled: false // Disable automatic shift\n        }\n      ]}\n      initialFocusRef={firstItemRef}\n    >\n      <PopoverTrigger>\n        <Center\n          ref={firstItemRef}\n          as=\"button\"\n          minW={{\n            base: 'calc(100% - 48px)',\n            lg: '292px'\n          }}\n        >\n          <Block\n            cursor={selectCoinList.length >= 2 ? 'not-allowed' : 'pointer'}\n            h=\"40px\"\n            borderRadius=\"12px\"\n            minW=\"100%\"\n            w=\"unset\"\n            p=\"0px 4px 0 10px\"\n            onClick={() => setIsShowList(true)}\n          >\n            <HStack w=\"100%\" justify=\"space-between\" h=\"100%\" align=\"center\">\n              <Flex align=\"center\" h=\"100%\">\n                <Icon xlinkHref=\"#icon-icon_search\" svgHover=\"text_paragraph\" />\n                <Text ml=\"4px\" whiteSpace=\"nowrap\">\n                  {isApp && selectCoinList.length >= 2 ? '' : 'Filter by token'}\n                </Text>\n              </Flex>\n              <HStack>\n                {selectCoinList?.map((item: Token) => {\n                  return (\n                    <HStack gap=\"4px\" align=\"center\" bg=\"button_ghost_bg\" borderRadius=\"8px\" p=\"5px 8px\" key={item?.coin_type}>\n                      <SingleCoinImage imageUrl={item?.logo_url} w=\"20px\" h=\"20px\" />\n                      <Text ml=\"2px\" color=\"text_caption\">\n                        {isApp ? textEllipses(item?.symbol || '', 5) : textEllipses(item?.symbol || '', 10)}\n                      </Text>\n                      <Icon\n                        xlinkHref=\"#icon-icon_close\"\n                        onClick={(e: any) => {\n                          cancelBubble(e)\n                          onDeleteSelectCoinList(item)\n                          setIsShowList(false)\n                        }}\n                      />\n                    </HStack>\n                  )\n                })}\n              </HStack>\n            </HStack>\n          </Block>\n        </Center>\n      </PopoverTrigger>\n      {isShowList && selectCoinList?.length < 2 && (\n        <PopoverContent\n          w={{\n            base: 'calc(100vw - 68px)',\n            lg: '292px'\n          }}\n        >\n          <PopoverBody p=\"0px\">\n            <PoolsDropSelect\n              whiteTokenList={whiteTokenList}\n              selectTokenList={selectCoinList}\n              onDeleteToken={onDeleteSelectCoinList}\n              onClickToken={onClickSelectCoinList}\n            />\n          </PopoverBody>\n        </PopoverContent>\n      )}\n    </Popover>\n  )\n}\n"],"names":["SearchInputBlock","whiteTokenList","selectCoinList","onClickSelectCoinList","onDeleteSelectCoinList","isShowList","setIsShowList","useState","isApp","useWindowWidth","firstItemRef","useRef","jsxs","Popover","jsx","PopoverTrigger","Center","Block","HStack","Flex","Icon","Text","item","SingleCoinImage","textEllipses","e","cancelBubble","PopoverContent","PopoverBody","PoolsDropSelect"],"mappings":"2NAeA,SAAwBA,EAAiB,CAAE,eAAAC,EAAgB,eAAAC,EAAgB,sBAAAC,EAAuB,uBAAAC,GAA4C,CAC5I,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAK,EAC5C,CAAE,MAAAC,CAAM,EAAIC,EAAe,EAC3BC,EAAeC,SAAO,IAAI,EAE9B,OAAAC,EAAA,KAACC,EAAA,CACC,OAAM,GACN,UAAU,eACV,QAAQ,QACR,UAAW,CACT,CACE,KAAM,OACN,QAAS,EACX,EACA,CACE,KAAM,QACN,QAAS,EAAA,CAEb,EACA,gBAAiBH,EAEjB,SAAA,CAAAI,MAACC,EACC,CAAA,SAAAD,EAAA,IAACE,EAAA,CACC,IAAKN,EACL,GAAG,SACH,KAAM,CACJ,KAAM,oBACN,GAAI,OACN,EAEA,SAAAI,EAAA,IAACG,EAAA,CACC,OAAQf,EAAe,QAAU,EAAI,cAAgB,UACrD,EAAE,OACF,aAAa,OACb,KAAK,OACL,EAAE,QACF,EAAE,iBACF,QAAS,IAAMI,EAAc,EAAI,EAEjC,SAAAM,EAAAA,KAACM,GAAO,EAAE,OAAO,QAAQ,gBAAgB,EAAE,OAAO,MAAM,SACtD,SAAA,CAAAN,EAAA,KAACO,EAAK,CAAA,MAAM,SAAS,EAAE,OACrB,SAAA,CAAAL,EAAA,IAACM,EAAK,CAAA,UAAU,oBAAoB,SAAS,iBAAiB,EAC9DN,EAAAA,IAACO,EAAK,CAAA,GAAG,MAAM,WAAW,SACvB,SAAAb,GAASN,EAAe,QAAU,EAAI,GAAK,iBAC9C,CAAA,CAAA,EACF,EACCY,EAAA,IAAAI,EAAA,CACE,SAAgBhB,GAAA,YAAAA,EAAA,IAAKoB,GAElBV,EAAA,KAACM,EAAO,CAAA,IAAI,MAAM,MAAM,SAAS,GAAG,kBAAkB,aAAa,MAAM,EAAE,UACzE,SAAA,CAAAJ,MAACS,GAAgB,SAAUD,GAAA,YAAAA,EAAM,SAAU,EAAE,OAAO,EAAE,OAAO,QAC5DD,EAAK,CAAA,GAAG,MAAM,MAAM,eAClB,WAAQG,GAAaF,GAAA,YAAAA,EAAM,SAAU,GAAI,CAAC,EAAIE,GAAaF,GAAA,YAAAA,EAAM,SAAU,GAAI,EAAE,EACpF,EACAR,EAAA,IAACM,EAAA,CACC,UAAU,mBACV,QAAUK,GAAW,CACnBC,EAAaD,CAAC,EACdrB,EAAuBkB,CAAI,EAC3BhB,EAAc,EAAK,CAAA,CACrB,CAAA,CACF,CAAA,EAZwFgB,GAAA,YAAAA,EAAM,SAahG,EAGN,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,EAEJ,EACCjB,IAAcH,GAAA,YAAAA,EAAgB,QAAS,GACtCY,EAAA,IAACa,EAAA,CACC,EAAG,CACD,KAAM,qBACN,GAAI,OACN,EAEA,SAAAb,EAAA,IAACc,EAAY,CAAA,EAAE,MACb,SAAAd,EAAA,IAACe,EAAA,CACC,eAAA5B,EACA,gBAAiBC,EACjB,cAAeE,EACf,aAAcD,CAAA,CAAA,CAElB,CAAA,CAAA,CAAA,CACF,CAAA,CAEJ,CAEJ"}