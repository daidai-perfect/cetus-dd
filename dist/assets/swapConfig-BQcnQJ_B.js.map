{"version":3,"file":"swapConfig-BQcnQJ_B.js","sources":["../../src/store/swap/swapConfig.ts"],"sourcesContent":["import { AggregatorProvider } from '@/types/swap'\nimport { create, StateCreator } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface SwapConfigState {\n  providersSwitchStates: Partial<Record<AggregatorProvider, boolean>>\n  setProvidersSwitchStates: (provider: Partial<Record<AggregatorProvider, boolean>>) => void\n  supportOrderSplit: boolean\n  setSupportOrderSplit: (value: boolean) => void\n}\n\nconst store: StateCreator<SwapConfigState> = (set, get) => ({\n  providersSwitchStates: {\n    [AggregatorProvider.CETUS]: true\n  },\n  setProvidersSwitchStates: (provider: Partial<Record<AggregatorProvider, boolean>>) => {\n    const providersSwitchStates = get().providersSwitchStates\n    set(() => ({\n      providersSwitchStates: { ...providersSwitchStates, ...provider }\n    }))\n  },\n  supportOrderSplit: true,\n  setSupportOrderSplit: (value: boolean) => {\n    set(() => ({\n      supportOrderSplit: value\n    }))\n  }\n})\n\nconst useSwapConfigStore = create(persist(store, { name: 'useSwapConfigStore' }))\nexport default useSwapConfigStore\n"],"names":["store","set","get","AggregatorProvider","provider","providersSwitchStates","value","useSwapConfigStore","create","persist"],"mappings":"gGAWA,MAAMA,EAAuC,CAACC,EAAKC,KAAS,CAC1D,sBAAuB,CACrB,CAACC,EAAmB,KAAK,EAAG,EAC9B,EACA,yBAA2BC,GAA2D,CAC9E,MAAAC,EAAwBH,IAAM,sBACpCD,EAAI,KAAO,CACT,sBAAuB,CAAE,GAAGI,EAAuB,GAAGD,CAAS,CAAA,EAC/D,CACJ,EACA,kBAAmB,GACnB,qBAAuBE,GAAmB,CACxCL,EAAI,KAAO,CACT,kBAAmBK,CAAA,EACnB,CAAA,CAEN,GAEMC,EAAqBC,EAAOC,EAAQT,EAAO,CAAE,KAAM,qBAAsB,CAAC"}