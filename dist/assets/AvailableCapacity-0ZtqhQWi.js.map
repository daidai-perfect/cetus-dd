{"version":3,"file":"AvailableCapacity-0ZtqhQWi.js","sources":["../../src/components/vaults/detail/VaultsAddResult.tsx","../../src/store/vaults/useVaultsRisk.ts","../../src/components/vaults/risk-modal/index.tsx","../../src/components/vaults/detail/AvailableCapacity.tsx"],"sourcesContent":["import TotalAmount from '@/components/common/TotalAmount'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { convertScientificToDecimal, formatNumber } from '@cetus/utils'\nimport { fromDecimalsAmount } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { VStack } from '@chakra-ui/react'\n\ntype VaultsAddResultProps = {\n  preCalculateLoading: boolean\n  inputTotalValue?: string\n  lpRate: string\n  amountLimit?: string\n  labelColor?: string\n  lpDecimals?: number\n  poolName: string\n  calculateLpLoading?: boolean\n}\n\nexport function VaultsAddResult(props: VaultsAddResultProps) {\n  const { poolName, amountLimit, lpRate, inputTotalValue, preCalculateLoading, labelColor, lpDecimals, calculateLpLoading } = props\n\n  return (\n    <VStack w=\"100%\" gap=\"20px\">\n      <TotalAmount totalAmount={inputTotalValue} loading={preCalculateLoading} />\n\n      {/* <HTextLabelBox\n        label=\"Total Amount\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={formatCurrency(inputTotalValue, 2)}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={preCalculateLoading}\n      /> */}\n      <HTextLabelBox\n        label=\"Share of Pool\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={lpRate}\n        isLoading={calculateLpLoading}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n      />\n      <HTextLabelBox\n        label=\"Est. Received LP\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={`${convertScientificToDecimal(formatNumber(fromDecimalsAmount(amountLimit || '0', lpDecimals ? lpDecimals : 9)).toString(), 9)} ${poolName}`}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={calculateLpLoading}\n      />\n    </VStack>\n  )\n}\n","import { create, StateCreator } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface VaultsRiskState {\n  isCheckedAcceptWalletObj: Record<string, boolean>\n  setIsCheckedAcceptWalletObj: (isCheckedWalletObj: Record<string, boolean>) => void\n  isCheckedDontRemindWalletObj: Record<string, boolean>\n  setIsCheckedDontRemindWalletObj: (isCheckedDontRemindWalletObj: Record<string, boolean>) => void\n}\n\nconst store: StateCreator<VaultsRiskState> = (set, get) => ({\n  isCheckedAcceptWalletObj: {},\n  setIsCheckedAcceptWalletObj: (isCheckedWalletObj: Record<string, boolean>) =>\n    set(() => ({\n      isCheckedAcceptWalletObj: {\n        ...get().isCheckedAcceptWalletObj,\n        ...isCheckedWalletObj\n      }\n    })),\n  isCheckedDontRemindWalletObj: {},\n  setIsCheckedDontRemindWalletObj: (isCheckedDontRemindWalletObj: Record<string, boolean>) =>\n    set(() => ({\n      isCheckedDontRemindWalletObj: {\n        ...get().isCheckedDontRemindWalletObj,\n        ...isCheckedDontRemindWalletObj\n      }\n    }))\n})\n\nconst useVaultsRiskStore = create(\n  persist(store, {\n    name: 'useVaultsRiskStore',\n    partialize: state => {\n      const { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj } = state\n      return { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj }\n    }\n  })\n)\n\nexport default useVaultsRiskStore\n","import useVaultsRiskStore from '@/store/vaults/useVaultsRisk'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CheckBox } from '@cetus/ui-kit'\nimport { Button, HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\n\ntype RiskModalProps = {\n  isOpen: boolean\n  setIsOpen: (status: boolean) => void\n  continueFunc: () => void\n}\n\n// é€šç”¨å¸¦åœ†ç‚¹æ–‡æœ¬ç»„ä»¶\nconst RiskBulletText = ({ children }: { children: React.ReactNode }) => (\n  <Text\n    lineHeight=\"20px\"\n    color=\"text_caption\"\n    fontSize=\"12px\"\n    position=\"relative\"\n    pl=\"10px\"\n    _before={{\n      content: '\"\"',\n      display: 'inline-block',\n      w: '4px',\n      h: '4px',\n      borderRadius: '50%',\n      bg: 'primary',\n      position: 'absolute',\n      left: '0',\n      top: '8px'\n    }}\n  >\n    {children}\n  </Text>\n)\nexport default function RiskModal(props: RiskModalProps) {\n  const { isOpen, setIsOpen, continueFunc } = props\n  const [isCheckedAccept, setIsCheckedAccept] = useState(false)\n  const [isCheckedDontRemind, setIsCheckedDontRemind] = useState(false)\n  const { setIsCheckedAcceptWalletObj, setIsCheckedDontRemindWalletObj } = useVaultsRiskStore()\n  const { currentAccount } = useAccountStore()\n\n  const riskContinue = () => {\n    const newIsCheckedAcceptWalletObj = {\n      [currentAccount?.address]: isCheckedAccept\n    }\n    setIsCheckedAcceptWalletObj(newIsCheckedAcceptWalletObj)\n    const newIsCheckedDontRemindWalletObj = {\n      [currentAccount?.address]: isCheckedDontRemind\n    }\n    setIsCheckedDontRemindWalletObj(newIsCheckedDontRemindWalletObj)\n    continueFunc()\n  }\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen}\n      onClose={() => {\n        setIsOpen(false)\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '480px' }}>\n        <ModalHeader>\n          <Text fontSize={isApp ? '14px' : '16px'} fontWeight=\"500\" color=\"caption\" lineHeight={isApp ? '20px' : '40px'}>\n            Risk Acknowledgement\n          </Text>\n        </ModalHeader>\n        <ModalCloseButton m={isApp ? '' : '12px 2px 0 0'} />\n\n        <ModalBody p=\"0 16px\">\n          <VStack bg=\"menu_item_bg\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" p=\"16px 12px\" gap={isApp ? '12px' : '16px'}>\n            <Text w=\"100%\" textAlign=\"left\" fontSize=\"12px\">\n              Before you provide liquidity via this vault:\n            </Text>\n            <VStack gap={isApp ? '12px' : '16px'}>\n              <RiskBulletText>\n                You acknowledge that this vault strategy is provided by a third party. Cetus integrates it at the UI level for user convenience but\n                does not operate this product or take responsibility for third-party risks.\n              </RiskBulletText>\n              <RiskBulletText>\n                You acknowledge that the displayed APR and APY are based on historical data and not a guaranteed return.\n              </RiskBulletText>\n              <RiskBulletText>\n                You understand that APR and APY figures reflect past trading fees and rewards only, excluding impermanent loss and price volatility.\n              </RiskBulletText>\n              <RiskBulletText>\n                You recognize the risks associated with automated liquidity strategies, including market fluctuations and third-party operational\n                risks.\n              </RiskBulletText>\n              <Text fontSize=\"12px\" color=\"text_paragraph\" lineHeight=\"20px\">\n                Please assess these risks carefully and proceed only if you fully understand and accept them.\n              </Text>\n            </VStack>\n          </VStack>\n          <VStack\n            bg=\"menu_item_bg\"\n            borderRadius=\"8px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p={isApp ? '12px 16px' : '16px'}\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            m=\"16px 0\"\n            userSelect=\"none\"\n            gap={isApp ? '8px' : '12px'}\n          >\n            <HStack>\n              <CheckBox checked={isCheckedAccept} onClick={() => setIsCheckedAccept(!isCheckedAccept)} />\n              <Text fontWeight=\"500\" color=\"text_caption\">\n                I acknowledge and accept all the risks.\n              </Text>\n            </HStack>\n            <HStack>\n              <CheckBox checked={isCheckedDontRemind} onClick={() => setIsCheckedDontRemind(!isCheckedDontRemind)} />\n              <Text fontSize=\"12px\" color=\"text_paragraph\">\n                Don't remind me again.\n              </Text>\n            </HStack>\n          </VStack>\n          <Button\n            w=\"calc(100% + 32px)\"\n            h=\"52px\"\n            bg=\"primary\"\n            borderRadius=\"12px\"\n            fontWeight=\"600\"\n            ml=\"-16px\"\n            disabled={!isCheckedAccept}\n            onClick={riskContinue}\n          >\n            Continue\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { d, formatNumber, formatPercentage, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { HStack, Image, Skeleton, Slider, SliderFilledTrack, SliderMark, SliderThumb, SliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype AvailableCapacityProps = {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  depositRatio: string | number\n  hardCapUSD: string | number\n  vaultTvl: string | number\n  gtAumLimit: boolean\n  calculateVaultTvlLoading: boolean\n  quoteCoin?: Token\n  maxCapNum?: string\n  availableCapacityWithQuoteCoin?: string\n}\n\nexport default function AvailableCapacity({\n  percentage,\n  onChange,\n  depositRatio,\n  hardCapUSD,\n  vaultTvl,\n  gtAumLimit,\n  calculateVaultTvlLoading,\n  quoteCoin,\n  availableCapacityWithQuoteCoin\n}: AvailableCapacityProps) {\n  console.log('ðŸš€ðŸš€ðŸš€ ~ AvailableCapacity.tsx:31 ~ gtAumLimit:', gtAumLimit)\n  const available = useMemo(() => {\n    if (calculateVaultTvlLoading) {\n      return ''\n    } else {\n      const amount = d(hardCapUSD).sub(d(vaultTvl))\n      if (amount.gt(0)) {\n        return amount.toString()\n      }\n      return '0'\n    }\n  }, [hardCapUSD, vaultTvl, calculateVaultTvlLoading])\n\n  const loading = useMemo(() => {\n    return !available || !depositRatio || !hardCapUSD || !vaultTvl || calculateVaultTvlLoading\n  }, [available, depositRatio, hardCapUSD, vaultTvl, calculateVaultTvlLoading])\n\n  const labelStyles = {\n    fontSize: 'sm',\n    position: 'absolute',\n    ml: '-5px',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    zIndex: '100',\n    borderRadius: '50%'\n  }\n\n  const sliderMarkList = [0, 25, 50, 75, 100]\n\n  return (\n    <>\n      {loading ? (\n        <VStack width=\"100%\" maxHeight=\"164px\" justifyContent=\"space-between\">\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n        </VStack>\n      ) : (\n        <VStack width=\"100%\" alignItems=\"start\" gap=\"14px\">\n          <Text color=\"text_paragraph\" textAlign=\"left\">\n            Available Capacity\n          </Text>\n          <HStack w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"12px\">\n            <CetusTooltip\n              tooltip={\n                <HStack>\n                  <Image src={quoteCoin?.logo_url} w=\"20px\" h=\"20px\" />\n                  <Text color=\"text_caption\">{formatNumber(availableCapacityWithQuoteCoin, 2)}</Text>\n                  <Text color=\"text_caption\">{quoteCoin?.symbol}</Text>\n                </HStack>\n              }\n            >\n              <HStack w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Text color=\"text_caption\" height=\"14px\" textAlign=\"left\" fontSize=\"16px\" textDecoration=\"underline dotted\">\n                  {symbolDataDisplayProcessing(available, '$')}\n                </Text>\n              </HStack>\n            </CetusTooltip>\n            <Slider\n              aria-label=\"slider-ex-6\"\n              min={0}\n              max={100}\n              focusThumbOnChange={false}\n              value={percentage == '--' ? 0 : Number(percentage)}\n              onChange={value => onChange(value)}\n              w=\"242px\"\n              isDisabled={Number(available) <= 0}\n            >\n              {sliderMarkList\n                .filter(item => item !== Number(percentage))\n                .map((item, index) => (\n                  <SliderMark\n                    key={index}\n                    value={item}\n                    {...labelStyles}\n                    w=\"8px\"\n                    h=\"8px\"\n                    bg={Number(percentage) >= item ? 'primary' : '#2b2e32'}\n                    onClick={() => onChange(item)}\n                  />\n                ))}\n              <SliderMark\n                value={Number(percentage)}\n                textAlign=\"center\"\n                bg=\"#1B2E3B\"\n                p=\"2px 4px\"\n                borderRadius=\"4px\"\n                fontSize=\"12px\"\n                color=\"primary\"\n                mt=\"-28px\"\n                ml=\"-15px\"\n              >\n                {formatPercentage(percentage, 2)}\n              </SliderMark>\n              <SliderTrack bg=\"#2b2e32\" height=\"2px\" borderRadius=\"4px\">\n                <SliderFilledTrack height=\"2px\" bg=\"primary\" borderRadius=\"2px\" />\n              </SliderTrack>\n              <SliderThumb\n                p=\"1px\"\n                w=\"10px\"\n                h=\"10px\"\n                border=\"1px solid primary\"\n                position=\"relative\"\n                zIndex=\"100\"\n                borderRadius=\"50%\"\n                _before={{\n                  content: '\"\"',\n                  w: '6px',\n                  h: '6px',\n                  borderRadius: '50%',\n                  bg: [0, 25, 50, 75, 100].includes(Number(percentage)) ? 'primary' : 'bg_secondary',\n                  border: '1px solid #2b2e32'\n                }}\n              />\n            </Slider>\n          </HStack>\n          {!loading && gtAumLimit ? (\n            <VStack w=\"100%\" alignItems=\"start\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The vault has reached its current capacity. New deposits are not accepted at this time.\n              </Text>\n            </VStack>\n          ) : null}\n        </VStack>\n      )}\n    </>\n  )\n}\n"],"names":["VaultsAddResult","props","poolName","amountLimit","lpRate","inputTotalValue","preCalculateLoading","labelColor","lpDecimals","calculateLpLoading","jsxs","VStack","jsx","TotalAmount","HTextLabelBox","convertScientificToDecimal","formatNumber","fromDecimalsAmount","store","set","get","isCheckedWalletObj","isCheckedDontRemindWalletObj","useVaultsRiskStore","create","persist","state","isCheckedAcceptWalletObj","RiskBulletText","children","Text","RiskModal","isOpen","setIsOpen","continueFunc","isCheckedAccept","setIsCheckedAccept","useState","isCheckedDontRemind","setIsCheckedDontRemind","setIsCheckedAcceptWalletObj","setIsCheckedDontRemindWalletObj","currentAccount","useAccountStore","riskContinue","newIsCheckedAcceptWalletObj","newIsCheckedDontRemindWalletObj","isApp","useWindowWidth","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","HStack","CheckBox","Button","AvailableCapacity","percentage","onChange","depositRatio","hardCapUSD","vaultTvl","gtAumLimit","calculateVaultTvlLoading","quoteCoin","availableCapacityWithQuoteCoin","available","useMemo","amount","d","loading","labelStyles","sliderMarkList","Fragment","Skeleton","CetusTooltip","Image","symbolDataDisplayProcessing","Slider","value","item","index","SliderMark","formatPercentage","SliderTrack","SliderFilledTrack","SliderThumb"],"mappings":"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"}