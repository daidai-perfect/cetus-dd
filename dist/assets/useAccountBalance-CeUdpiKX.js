<<<<<<< HEAD:dist/assets/useAccountBalance-CqxlQ2B9.js
import{k as g,l as C,bG as k,p as h,G as w}from"./index-Dusgv24d.js";import{a as t}from"./vendor-BFGDaAdA.js";function b(){const{currentAccount:e}=g(),i=C("clmm"),{setTokenBalanceObj:d,clearData:c,setIsLoading:f,isLoading:B,ownerAddress:m}=k(),n=t.useRef(e==null?void 0:e.address);t.useEffect(()=>{n.current=e==null?void 0:e.address},[e==null?void 0:e.address]);const p=async(s=(e==null?void 0:e.address)||"",o=!1)=>{try{if(B&&!o)return[];if(s){f(!0);const a=await i.FullClient.getOwnerCoinBalances(s),l={};return a.forEach(r=>{r.coinType=w(r.coinType,!1),l[h(r.coinType).full_address]=r}),s==n.current&&d(l,s),a}}catch(a){console.log("ðŸš€ ~ file: useAccountBalance.ts:18 ~ fetchAccountBalance ~ error:",a),m!==s&&c();return}finally{f(!1)}return[]},y=async(s=(e==null?void 0:e.address)||"",o)=>{try{if(s&&o){const a=await i.FullClient.getOwnerCoinBalances(s,o),l={};return a.forEach(r=>{l[h(r.coinType).full_address]=r}),s==n.current&&d(l,s),l}}catch(a){console.log("ðŸš€ ~ file: useAccountBalance.ts:18 ~ fetchCoinBalance ~ error:",a)}};return t.useEffect(()=>{e||(c(),f(!1))},[e==null?void 0:e.address]),{fetchAccountBalance:p,fetchCoinBalance:y,isLoading:B}}export{b as u};
//# sourceMappingURL=useAccountBalance-CqxlQ2B9.js.map
=======
import{k as g,l as C,bF as k,p as h,G as w}from"./index-CJa1Q5Eu.js";import{a as t}from"./vendor-BFGDaAdA.js";function b(){const{currentAccount:e}=g(),i=C("clmm"),{setTokenBalanceObj:d,clearData:c,setIsLoading:f,isLoading:B,ownerAddress:m}=k(),n=t.useRef(e==null?void 0:e.address);t.useEffect(()=>{n.current=e==null?void 0:e.address},[e==null?void 0:e.address]);const p=async(s=(e==null?void 0:e.address)||"",o=!1)=>{try{if(B&&!o)return[];if(s){f(!0);const a=await i.FullClient.getOwnerCoinBalances(s),l={};return a.forEach(r=>{r.coinType=w(r.coinType,!1),l[h(r.coinType).full_address]=r}),s==n.current&&d(l,s),a}}catch(a){console.log("ðŸš€ ~ file: useAccountBalance.ts:18 ~ fetchAccountBalance ~ error:",a),m!==s&&c();return}finally{f(!1)}return[]},y=async(s=(e==null?void 0:e.address)||"",o)=>{try{if(s&&o){const a=await i.FullClient.getOwnerCoinBalances(s,o),l={};return a.forEach(r=>{l[h(r.coinType).full_address]=r}),s==n.current&&d(l,s),l}}catch(a){console.log("ðŸš€ ~ file: useAccountBalance.ts:18 ~ fetchCoinBalance ~ error:",a)}};return t.useEffect(()=>{e||(c(),f(!1))},[e==null?void 0:e.address]),{fetchAccountBalance:p,fetchCoinBalance:y,isLoading:B}}export{b as u};
//# sourceMappingURL=useAccountBalance-CeUdpiKX.js.map
>>>>>>> 0c24c70bb8f4b262d669a2d6c2f695cdc5861cf4:dist/assets/useAccountBalance-CeUdpiKX.js
