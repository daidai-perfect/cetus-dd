{"version":3,"file":"XCetus-VyUdxux5.js","sources":["../../src/components/xcetus/RewardCountDown.tsx","../../src/components/xcetus/RewardVesting.tsx","../../src/hooks/xcetus/useXCetusClaimRewardAction.ts","../../src/components/xcetus/StakeRewardSummary.tsx","../../src/components/xcetus/XCetusTopHerder.tsx","../../src/pages/XCetus.tsx"],"sourcesContent":["import { Block } from '@cetus/design'\nimport useCountdown from '@cetus/hooks/src/useCountdown'\nimport { Center, HStack, Text, VStack } from '@chakra-ui/react'\n\nexport function RewardCountDown({ nextStartTime, refresh }: { nextStartTime: number; refresh: () => void }) {\n  const { days, hours, minutes, seconds } = useCountdown(nextStartTime * 1000, refresh)\n  return (\n    <VStack\n      w=\"100%\"\n      gap=\"16px\"\n      borderRadius=\"16px\"\n      m=\"-1px\"\n      p={{ base: '24px 12px', lg: '24px' }}\n      sx={{\n        backgroundImage: \"url('/images/img_xcetus@2x.png')\",\n        backgroundPosition: 'top center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover'\n      }}\n    >\n      <Text fontSize=\"16px\" color=\"text_caption\">\n        Convert CETUS to xCETUS to start earning\n      </Text>\n      <Text>Reward distribution in </Text>\n      {/* Â•ñÂä±ÂÄíËÆ°Êó∂ */}\n      <HStack>\n        {/* Â§© */}\n        <Block borderRadius=\"4px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {days}d\n            </Text>\n          </Center>\n        </Block>\n        <Text fontSize=\"16px\" textColor=\"text_caption\">\n          :\n        </Text>\n\n        {/* Êó∂ */}\n        <Block borderRadius=\"4px\" w=\"40px\" h=\"40px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {hours}h\n            </Text>\n          </Center>\n        </Block>\n        <Text fontSize=\"16px\" textColor=\"text_caption\">\n          :\n        </Text>\n\n        {/* ÂàÜ */}\n        <Block borderRadius=\"4px\" w=\"40px\" h=\"40px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {minutes}m\n            </Text>\n          </Center>\n        </Block>\n        <Text fontSize=\"16px\" textColor=\"text_caption\">\n          :\n        </Text>\n\n        {/* Áßí */}\n        <Block borderRadius=\"4px\" w=\"40px\" h=\"40px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {seconds}s\n            </Text>\n          </Center>\n        </Block>\n      </HStack>\n    </VStack>\n  )\n}\n","import useXCetusCancelAction from '@/hooks/xcetus/useXCetusCancelAction'\nimport useXCetusClaimAction from '@/hooks/xcetus/useXCetusClaimAction'\nimport { Block } from '@cetus/design'\nimport useCountdown from '@cetus/hooks/src/useCountdown'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { LockCetus, XCetusUtil } from '@cetusprotocol/cetus-periphery-sdk'\nimport { Button, HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport XCetusToCetus from './XCetusToCetus'\n\ntype RewardVestingProps = {\n  lockCetusList: LockCetus[]\n}\n\nexport function RewardVesting(props: RewardVestingProps) {\n  const { lockCetusList } = props\n  return (\n    <Block p={{ base: '16px 8px 8px', lg: '16px' }} borderRadius=\"16px\">\n      <VStack w=\"100%\" alignItems=\"start\" gap=\"16px\">\n        <Text fontSize=\"16px\" color=\"text_caption\" mt=\"4px\">\n          Vesting\n        </Text>\n\n        {lockCetusList.map(item => {\n          return <RewardVestingItem key={item.id} info={item} />\n        })}\n      </VStack>\n    </Block>\n  )\n}\n\ntype RewardVestingItemProps = {\n  info: LockCetus\n}\n\nfunction RewardVestingItem(props: RewardVestingItemProps) {\n  const { info } = props\n  const [isCanClaim, setIsCanClaim] = useState<boolean>(false)\n  const { days, hours, minutes, seconds } = useCountdown(\n    info.locked_until_time * 1000,\n    () => {\n      setIsCanClaim(true)\n    },\n    'days'\n  )\n\n  useEffect(() => {\n    setIsCanClaim(!XCetusUtil.isLocked(info))\n  }, [])\n\n  const { cancelOrderLoading, handleCancelOrder } = useXCetusCancelAction()\n  const { claimOrderLoading, handleClaimOrder } = useXCetusClaimAction()\n  const handleButtonClick = (isClickClaim: boolean) => {\n    if (isClickClaim) {\n      handleClaimOrder(info.id)\n    } else {\n      handleCancelOrder(info)\n    }\n  }\n  const { isApp } = useWindowWidth()\n  return (\n    <Block borderRadius=\"12px\" p={{ base: '20px 12px', lg: '20px 24px' }} bg=\"bg_primary\">\n      <Stack\n        flexDir={{ base: 'column', lg: 'row' }}\n        w=\"100%\"\n        justifyContent={{ base: 'flex-start', lg: 'space-between' }}\n        gap={{ base: '20px', lg: '8px' }}\n      >\n        <VStack gap={{ base: '20px', lg: '8px' }} alignItems=\"start\">\n          <HStack gap=\"6px\">\n            <Text color=\"primary_gray\">Available {isCanClaim ? '' : ' in'} </Text>\n            {!isCanClaim && (\n              <Text color=\"text_caption\">\n                {days}d : {hours}h : {minutes}m : {seconds}s\n              </Text>\n            )}\n          </HStack>\n          <XCetusToCetus xcetus_amount={info?.xcetus_amount} cetus_amount={info?.cetus_amount} />\n        </VStack>\n        <HStack w={{ base: '100%', lg: 'auto' }} justify=\"center\">\n          <Button\n            onClick={() => {\n              if (cancelOrderLoading || claimOrderLoading) {\n                return\n              }\n\n              if (isCanClaim) {\n                handleButtonClick(true)\n              } else {\n                handleButtonClick(false)\n              }\n            }}\n            variant=\"outline\"\n            h={{ base: '40px', lg: '28px' }}\n            w={{ base: '168px', lg: '80px' }}\n            borderRadius={{ base: '12px', lg: '8px' }}\n            fontSize=\"14px\"\n            isLoading={cancelOrderLoading || claimOrderLoading}\n            color={isCanClaim ? 'text_highlight' : 'primary_gray'}\n            bg=\"button_ghost_bg\"\n          >\n            {isCanClaim ? 'Claim' : 'Cancel'}\n          </Button>\n        </HStack>\n      </Stack>\n    </Block>\n  )\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useXCetusStore from '@/store/xcetus/useXCetus'\nimport { MsafeTransactionSubType } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { DividendReward } from '@cetusprotocol/cetus-periphery-sdk'\nimport { useState } from 'react'\nimport { useGetVeNFTDividendInfo } from './useXCetusHelper'\n\nexport default function useXCetusClaimRewardAction() {\n  const { fetchAccountBalance } = useAccountBalance()\n  const { signAndExecuteTransaction } = useTransaction()\n  const { xCetusSdk } = usePeripherySDKStore()\n  const { veNFT } = useXCetusStore()\n  const [claimRewardLoading, setClaimRewardLoading] = useState<boolean>(false)\n  const { fetchVeNFTDividendInfo } = useGetVeNFTDividendInfo()\n\n  const handleClaimReward = async (rewardList: DividendReward[]) => {\n    if (!veNFT) {\n      return\n    }\n    setClaimRewardLoading(true)\n\n    console.log('üöÄ ~ file: useXCetusClaimRewardAction.ts:23 ~ handleClaimReward ~ rewardList:', rewardList)\n\n    try {\n      const txb = xCetusSdk.XCetusModule.redeemDividendV3Payload(veNFT.id, rewardList)\n\n      const res = await signAndExecuteTransaction(\n        txb,\n        {},\n        {\n          useDevInspect: true,\n          msafeParams: {\n            action: MsafeTransactionSubType.xCETUSClaimStakingRwewards,\n            txbParams: {\n              veNftId: veNFT.id,\n              rewardList\n            }\n          }\n        }\n      )\n      setClaimRewardLoading(false)\n\n      if (res) {\n        // Âà∑Êñ∞‰ΩôÈ¢ù\n        fetchAccountBalance()\n        // Âà∑Êñ∞ËÆ¢Âçï\n        fetchVeNFTDividendInfo(veNFT.id)\n      }\n    } catch (error) {\n      console.log('üöÄ ~ file: useXCetusClaimRewardAction.ts:40 ~ handleClaimReward ~ error:', error)\n    } finally {\n      setClaimRewardLoading(false)\n    }\n  }\n\n  return {\n    handleClaimReward,\n    claimRewardLoading\n  }\n}\n","import useXCetusClaimRewardAction from '@/hooks/xcetus/useXCetusClaimRewardAction'\nimport useXCetusStore from '@/store/xcetus/useXCetus'\nimport { XCetusRewardInfo } from '@/types/xcetus'\nimport { Block, CetusTooltip } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CoinType } from '@cetus/types'\nimport { HTextLabelBox, Icon, SingleCoinImage, VTextLabelBox } from '@cetus/ui-kit'\nimport { d, formatCurrency, formatPercentage } from '@cetus/utils'\nimport { DividendReward } from '@cetusprotocol/cetus-periphery-sdk'\nimport { Box, Button, HStack, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\n\ntype StakeRewardSummaryProps = {\n  myShare: string\n  cetusApr?: string\n  totalRewardValue: string\n  summaryRewardList: XCetusRewardInfo[]\n  rewardList: DividendReward[]\n}\n\nexport function StakeRewardSummary(props: StakeRewardSummaryProps) {\n  const { myShare, cetusApr, totalRewardValue, summaryRewardList, rewardList } = props\n  const { claimRewardLoading, handleClaimReward } = useXCetusClaimRewardAction()\n  const { currentAccount } = useAccountStore()\n  const { veNFTLoading } = useXCetusStore()\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack w=\"100%\" alignItems=\"start\" p={{ base: '4px 8px 8px', lg: '4px 16px 16px' }} gap=\"16px\">\n      <Text fontSize=\"16px\" color=\"text_caption\">\n        xCETUS Staking Rewards\n      </Text>\n      <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap=\"16px\" justifyContent=\"space-between\">\n        {/* apr */}\n        <Block h={{ base: '60px', lg: '88px' }} p={{ base: '20px 12px', lg: '20px 24px' }} borderRadius=\"12px\" w=\"100%\" bg=\"bg_primary\">\n          <HStack h=\"100%\" w=\"100%s\" justifyContent=\"space-between\">\n            <HStack gap=\"4px\">\n              <Text color=\"primary_gray\">est.APR</Text>\n              <CetusTooltip\n                placement={isApp ? 'bottom-end' : 'top-start'}\n                maxW={{ base: 'calc(100vw - 16px)', lg: 'unset' }}\n                tooltip={\n                  isApp ? (\n                    <Box as=\"div\" lineHeight=\"20px\">\n                      <Text as=\"span\" fontSize=\"12px\" color=\"text_caption\">\n                        The estimated APR of the current epoch for all xCETUS holders.&nbsp;\n                      </Text>\n                      <Text as=\"span\" fontSize=\"12px\" color=\"text_highlight\">\n                        APR = ($ Rewards of the upcoming week * 52) / $ Total xCETUS staked * 100%&nbsp;\n                      </Text>\n                      <Text as=\"span\" fontSize=\"12px\" color=\"text_caption\">\n                        Both real-time value of rewards and CETUS price will affect the APR fluctuation.\n                      </Text>\n                    </Box>\n                  ) : (\n                    <VStack alignItems=\"start\">\n                      <Text whiteSpace=\"nowrap\" fontSize=\"12px\" color=\"text_caption\">\n                        The estimated APR of the current epoch for all xCETUS holders.\n                      </Text>\n                      <Text whiteSpace=\"nowrap\" fontSize=\"12px\" color=\"text_highlight\">\n                        APR = ($ Rewards of the upcoming week * 52) / $ Total xCETUS staked * 100%\n                      </Text>\n                      <Text whiteSpace=\"nowrap\" fontSize=\"12px\" color=\"text_caption\">\n                        Both real-time value of rewards and CETUS price will affect the APR fluctuation.\n                      </Text>\n                    </VStack>\n                  )\n                }\n              >\n                <Box>\n                  <Icon xlinkHref=\"#icon-icon_tips\" />\n                </Box>\n              </CetusTooltip>\n            </HStack>\n            <Skeleton isLoaded={cetusApr !== '0'}>\n              <Text fontSize=\"18px\" color=\"text_caption\">\n                ‚âà{formatPercentage(cetusApr, 2)}\n              </Text>\n            </Skeleton>\n          </HStack>\n        </Block>\n        {/* ÊàëÁöÑÊåÅÊúâÁéá */}\n        <Block h={{ base: '60px', lg: '88px' }} p={{ base: '20px 12px', lg: '20px 24px' }} borderRadius=\"12px\" w=\"100%\" bg=\"bg_primary\">\n          <HStack h=\"100%\" w=\"100%s\" justifyContent=\"space-between\">\n            <Text color=\"primary_gray\">Your Share</Text>\n            <Skeleton isLoaded={!veNFTLoading}>\n              <Text fontSize=\"18px\" color=\"text_caption\">\n                {myShare !== '--' ? `‚âà${myShare}` : myShare}\n              </Text>\n            </Skeleton>\n          </HStack>\n        </Block>\n      </Stack>\n      {/* ÂæÖÊî∂Ââ≤Â•ñÂä± */}(\n      <Block borderRadius=\"12px\" w=\"100%\" p={{ base: '20px 12px', lg: '20px 24px' }} bg=\"bg_primary\">\n        <VStack h=\"100%\" w=\"100%\" gap={{ base: '20px', lg: '14px' }}>\n          <HStack w=\"100%\" justifyContent=\"space-between\">\n            <Text color=\"primary_gray\">Pending Yield</Text>\n            <HStack justifyContent=\"end\" gap=\"12px\">\n              <Text fontSize=\"18px\" color=\"text_caption\">\n                {currentAccount ? formatCurrency(totalRewardValue, 2) : '--'}\n              </Text>\n              {!isApp && summaryRewardList.length > 0 && (\n                <Button\n                  onClick={() => {\n                    if (claimRewardLoading) {\n                      return\n                    }\n                    handleClaimReward(rewardList)\n                  }}\n                  variant=\"outline\"\n                  h=\"28px\"\n                  w=\"80px\"\n                  borderRadius=\"8px\"\n                  fontSize=\"14px\"\n                  disabled={claimRewardLoading}\n                  isLoading={claimRewardLoading}\n                  bg=\"button_ghost_bg\"\n                >\n                  Claim\n                </Button>\n              )}\n            </HStack>\n          </HStack>\n          {/* Â•ñÂä±ÊòéÁªÜ */}\n          {summaryRewardList.length > 0 && (\n            <Stack\n              w=\"100%\"\n              flexDir={{ base: 'column', lg: 'row' }}\n              align=\"center\"\n              justify={{ base: 'center', lg: 'flex-start' }}\n              gap={{ base: '20px', lg: '8px' }}\n            >\n              {summaryRewardList.map(item => (\n                <RewardItem key={item.coin_type} info={item} />\n              ))}\n            </Stack>\n          )}\n          {isApp && summaryRewardList.length > 0 && (\n            <Button\n              onClick={() => {\n                if (claimRewardLoading) {\n                  return\n                }\n                handleClaimReward(rewardList)\n              }}\n              variant=\"outline\"\n              h=\"40px\"\n              w=\"168px\"\n              borderRadius=\"12px\"\n              fontSize=\"14px\"\n              disabled={claimRewardLoading}\n              isLoading={claimRewardLoading}\n              bg=\"button_ghost_bg\"\n            >\n              Claim\n            </Button>\n          )}\n        </VStack>\n      </Block>\n      )\n    </VStack>\n  )\n}\n\ntype RewardItemProps = {\n  info: XCetusRewardInfo\n}\n\nfunction RewardItem(props: RewardItemProps) {\n  const { info } = props\n  const { tokenInfo } = useGetToken<CoinType>(info.coin_type as CoinType)\n  const { isApp } = useWindowWidth()\n  return isApp ? (\n    <HTextLabelBox\n      label={\n        <HStack>\n          <SingleCoinImage\n            imageUrl={tokenInfo?.logo_url}\n            imageStyle={{\n              w: '24px',\n              h: '24px'\n            }}\n          />\n          <Text>{tokenInfo?.symbol}</Text>\n        </HStack>\n      }\n      value={\n        <VStack alignItems=\"flex-end\" gap=\"4px\">\n          <Text color=\"text_caption\">{info.amount}</Text>\n          {d(info.value).gt('0') && <Text>{formatCurrency(info.value, 2)}</Text>}\n        </VStack>\n      }\n    />\n  ) : (\n    <VTextLabelBox\n      wrapStyle={{\n        gap: '10px',\n        flex: 1,\n        alignItems: 'flex-start'\n      }}\n      title={\n        <HStack>\n          <SingleCoinImage\n            imageUrl={tokenInfo?.logo_url}\n            imageStyle={{\n              w: '24px',\n              h: '24px'\n            }}\n          />\n          <Text>{tokenInfo?.symbol}</Text>\n        </HStack>\n      }\n      value={\n        <VStack alignItems=\"flex-start\" gap=\"4px\">\n          <Text color=\"text_caption\">{info.amount}</Text>\n          {d(info.value).gt('0') && <Text>{formatCurrency(info.value, 2)}</Text>}\n        </VStack>\n      }\n    />\n  )\n}\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport VTextLabelBox from '@cetus/ui-kit/src/components/VTextLabelBox'\nimport { formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Button, HStack, Image, ImageProps, Stack, StackProps, Text, VStack } from '@chakra-ui/react'\n\ntype XCetusTopHerderProps = {\n  totalAmount: string\n  availableAmount: string\n  redeemingAmount: string\n  isLoading: boolean\n}\n\nexport function XCetusTopHerder(props: XCetusTopHerderProps) {\n  const { totalAmount, availableAmount, redeemingAmount, isLoading } = props\n  const { currentAccount } = useAccountStore()\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w={{ base: '100%', lg: '100%' }} gap={{ base: '20px', lg: '28px' }} zIndex=\"100\" mt={{ base: '20px', lg: '32px' }}>\n      <VStack\n        w=\"100%\"\n        h=\"140px\"\n        gap=\"20px\"\n        borderRadius=\"20px\"\n        bg={{ base: 'none', lg: \"center / cover no-repeat url('/images/xcetus_banner.png')\" }}\n        align=\"center\"\n        justify=\"center\"\n      >\n        <Text\n          h={{ base: '28px', lg: '32px' }}\n          fontSize={{ base: '22px', lg: '32px' }}\n          lineHeight={{ base: '28px', lg: '32px' }}\n          fontWeight=\"600\"\n          fontStyle=\"normal\"\n          color=\"text_caption\"\n        >\n          Manage your{' '}\n          <Text\n            as=\"span\"\n            h={{ base: '28px', lg: '32px' }}\n            fontSize={{ base: '22px', lg: '32px' }}\n            lineHeight={{ base: '28px', lg: '32px' }}\n            fontWeight=\"600\"\n            fontStyle=\"normal\"\n            color=\"text_green\"\n          >\n            CETUS\n          </Text>{' '}\n          and{' '}\n          <Text\n            as=\"span\"\n            h={{ base: '28px', lg: '32px' }}\n            fontSize={{ base: '22px', lg: '32px' }}\n            lineHeight={{ base: '28px', lg: '32px' }}\n            fontWeight=\"600\"\n            fontStyle=\"normal\"\n            color=\"primary\"\n          >\n            xCETUS\n          </Text>\n        </Text>\n        <Button\n          h=\"28px\"\n          w=\"132px\"\n          fontSize=\"14px\"\n          fontWeight=\"600\"\n          variant=\"outline\"\n          bg=\"transparent\"\n          borderRadius=\"8px\"\n          borderColor=\"text_highlight\"\n          color=\"text_highlight\"\n          onClick={() => {\n            window.open('https://cetus-1.gitbook.io/cetus-docs/tokenomics/xcetus', '_blank')\n          }}\n        >\n          Learn more\n        </Button>\n      </VStack>\n\n      <Stack\n        flexDir={{ base: 'column', lg: 'row' }}\n        w={{ base: '100%', lg: '80%' }}\n        justifyContent={{ base: 'space-between', lg: 'space-around' }}\n        align={{ base: 'flex-start', lg: 'center' }}\n        gap={{ base: '16px', lg: '40px' }}\n      >\n        <StakeSummaryItem\n          isLoading={isLoading}\n          icon=\"/images/icon_my_total_xWHALE@2x.png\"\n          title=\"My total xCETUS\"\n          amount={currentAccount ? formatNumber(fromDecimalsAmountFix(totalAmount, 9), 9).toString() : '--'}\n          w={{ base: '28px', lg: '42px' }}\n          h={{ base: '24px', lg: '36px' }}\n          wrapStyle={{ gap: '2px' }}\n        />\n        <StakeSummaryItem\n          isLoading={isLoading}\n          icon=\"/images/icon_available_xWHALE@2x.png\"\n          title=\"Available xCETUS\"\n          amount={currentAccount ? formatNumber(fromDecimalsAmountFix(availableAmount, 9), 9).toString() : '--'}\n          w={{ base: '24px', lg: '36px' }}\n          h={{ base: '24px', lg: '36px' }}\n        />\n        <StakeSummaryItem\n          isLoading={isLoading}\n          icon=\"/images/icon_redeeming_xWHALE@2x.png\"\n          title=\"Redeeming xCETUS\"\n          amount={currentAccount ? formatNumber(fromDecimalsAmountFix(redeemingAmount, 9), 9).toString() : '--'}\n          w={{ base: '26px', lg: '38px' }}\n          h={{ base: '26px', lg: '38px' }}\n        />\n      </Stack>\n    </VStack>\n  )\n}\n\ntype StakeSummaryItemProps = {\n  isLoading: boolean\n  icon: string\n  title: string\n  amount: string\n  w: ImageProps['w']\n  h: ImageProps['h']\n  wrapStyle?: StackProps\n}\n\nfunction StakeSummaryItem(props: StakeSummaryItemProps) {\n  const { isLoading, icon, title, amount, w, h, wrapStyle = {} } = props\n  const { isApp } = useWindowWidth()\n  return isApp ? (\n    <HTextLabelBox\n      label={\n        <HStack {...wrapStyle}>\n          <Image src={icon} w={w} h={h} />\n          <Text>{title}</Text>\n        </HStack>\n      }\n      value={amount}\n      isLoading={isLoading}\n      labelStyle={{\n        fontSize: '14px',\n        color: 'primary_gray'\n      }}\n      valueStyle={{\n        fontSize: '14px'\n      }}\n    />\n  ) : (\n    <HStack gap=\"6px\" alignItems=\"center\" w={{ base: '100%', lg: 'auto' }} {...wrapStyle}>\n      <Image src={icon} w={w} h={h} />\n      <VTextLabelBox\n        wrapStyle={{\n          gap: '8px'\n        }}\n        title={title}\n        titleStyle={{\n          fontSize: '14px',\n          color: 'primary_gray'\n        }}\n        valueStyle={{\n          fontSize: '16px',\n          fontWeight: '500'\n        }}\n        value={amount}\n        isLoading={isLoading}\n      />\n    </HStack>\n  )\n}\n","import { CetusAdd } from '@/components/xcetus/CetusAdd'\nimport { CetusRedeem } from '@/components/xcetus/CetusRedeem'\nimport { RewardCountDown } from '@/components/xcetus/RewardCountDown'\nimport { RewardVesting } from '@/components/xcetus/RewardVesting'\nimport { StakeRewardSummary } from '@/components/xcetus/StakeRewardSummary'\nimport { XCetusTopHerder } from '@/components/xcetus/XCetusTopHerder'\nimport { useXCetus } from '@/hooks/xcetus/useXCetus'\nimport { useGetOwnerLockCetusList } from '@/hooks/xcetus/useXCetusHelper'\nimport useXCetusStore from '@/store/xcetus/useXCetus'\nimport { Block, SelectTab } from '@cetus/design'\nimport { useAccountBalance, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { fromDecimalsAmountFix } from '@cetus/utils'\nimport { Stack, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport type TabTypes = 'Get xCETUS' | 'Redeem CETUS'\n\nconst tabList: { label: TabTypes; value: TabTypes }[] = [\n  {\n    label: 'Get xCETUS',\n    value: 'Get xCETUS'\n  },\n  {\n    label: 'Redeem CETUS',\n    value: 'Redeem CETUS'\n  }\n]\n\nfunction XCetus() {\n  const { currentAccount } = useAccountStore()\n  const {\n    fetchOwnerVeNFT,\n    fetchXCetusManager,\n    fetchVeNFTDividendInfo,\n    availableXCetusAmount,\n    veNFT,\n    veNFTLoading,\n    lockCetusListLoading,\n    redeemingXCetusAmount,\n    fetchDividendManager,\n    myShare,\n    nextStartTime,\n    cetusApr,\n    summaryRewardList,\n    totalRewardValue,\n    lockCetusList,\n    rewardList,\n    calculateCurrPeriod\n  } = useXCetus()\n  const { dividendManager } = useXCetusStore()\n\n  const { fetchOwnerLockCetusList } = useGetOwnerLockCetusList()\n\n  const [currTab, setCurrTab] = useState<TabTypes>('Get xCETUS')\n  const { fetchAccountBalance } = useAccountBalance()\n  useRpcListener({\n    onRpcChange: () => {\n      fetchXCetusManager(false)\n      fetchDividendManager(false)\n      if (currentAccount) {\n        fetchOwnerVeNFT(currentAccount.address, true)\n        fetchOwnerLockCetusList(currentAccount.address)\n        fetchAccountBalance()\n      }\n    }\n  })\n\n  useEffect(() => {\n    if (currentAccount) {\n      fetchOwnerVeNFT(currentAccount.address, true)\n      fetchOwnerLockCetusList(currentAccount.address)\n    }\n  }, [currentAccount?.address])\n\n  useEffect(() => {\n    fetchXCetusManager(false)\n    fetchDividendManager(false)\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [])\n\n  const [tradeIcon, setTradeIcon] = useState('#icon-a-icon_trade')\n\n  const onTradeIconMouseEnter = () => {\n    setTradeIcon('#icon-icon_swap1')\n  }\n\n  const onTradeIconMouseLeave = () => {\n    setTradeIcon('#icon-a-icon_trade')\n  }\n\n  const onIconClick = () => {\n    const value = tabList?.find(tab => tab?.value !== currTab)?.value\n    if (value) {\n      setCurrTab(value)\n    }\n  }\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack\n      gap=\"0px\"\n      w=\"100%\"\n      pos=\"relative\"\n      sx={\n        isApp\n          ? {\n              backgroundImage: \"url('/images/xcetus_h5_bg.png')\",\n              backgroundPosition: 'center 256px',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: '375px 200px'\n            }\n          : {}\n      }\n    >\n      {/* È°∂ÈÉ®Âå∫Âüü */}\n      <XCetusTopHerder\n        totalAmount={veNFT?.xcetus_balance || '0'}\n        availableAmount={availableXCetusAmount}\n        redeemingAmount={redeemingXCetusAmount}\n        isLoading={lockCetusListLoading || veNFTLoading}\n      />\n      <Stack\n        flexDir={{ base: 'column-reverse', lg: 'row' }}\n        mt={{ base: '118px', lg: '28px' }}\n        zIndex={100}\n        w=\"100%\"\n        gap=\"16px\"\n        alignItems=\"start\"\n        justifyContent=\"space-between\"\n      >\n        {/* Â∑¶Ëæπ */}\n        <VStack w=\"60%\" gap=\"16px\" minW={{ base: '100%', lg: '600px' }}>\n          <Block p=\"0px\" borderRadius=\"16px\" w=\"100%\">\n            <VStack w=\"100%\" gap=\"16px\">\n              {/* Â•ñÂä±ÂÄíËÆ°Êó∂ */}\n              <RewardCountDown\n                nextStartTime={nextStartTime || 0}\n                refresh={() => {\n                  if (veNFT) {\n                    fetchVeNFTDividendInfo(veNFT.id)\n                  }\n                  fetchDividendManager(true)\n                  if (dividendManager) {\n                    calculateCurrPeriod(dividendManager)\n                  }\n                }}\n              />\n              {/* Ë¥®ÊäºÂ•ñÂä±Ê±áÊÄª */}\n              <StakeRewardSummary\n                myShare={myShare.toString()}\n                cetusApr={cetusApr}\n                totalRewardValue={totalRewardValue}\n                summaryRewardList={summaryRewardList}\n                rewardList={rewardList}\n              />\n            </VStack>\n          </Block>\n          {lockCetusList.length > 0 && <RewardVesting lockCetusList={lockCetusList} />}\n        </VStack>\n        {/* Âè≥Ëæπ  */}\n        <VStack w=\"40%\" gap=\"8px\" minW={{ base: '100%', lg: '380px' }}>\n          {/* ÂàáÊç¢Tab */}\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: '100%',\n              h: '60px'\n            }}\n            itemStyle={{\n              w: '50%',\n              fontSize: '16px'\n            }}\n            tabList={tabList}\n            currentTab={currTab}\n            handleChangeTab={(item: any) => {\n              setCurrTab(item?.value)\n            }}\n          />\n          {currTab === 'Get xCETUS' && (\n            <CetusAdd\n              availableXCetusAmount={availableXCetusAmount}\n              onIconClick={onIconClick}\n              iconParams={{\n                xlinkHref: tradeIcon,\n                svgFill: 'text_caption',\n                transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n                fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n                onMouseEnter: onTradeIconMouseEnter,\n                onMouseLeave: onTradeIconMouseLeave\n              }}\n            />\n          )}\n          {currTab === 'Redeem CETUS' && (\n            <CetusRedeem\n              availableXCetusAmount={fromDecimalsAmountFix(availableXCetusAmount, 9)}\n              onIconClick={onIconClick}\n              iconParams={{\n                xlinkHref: tradeIcon,\n                svgFill: 'text_caption',\n                transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n                fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n                onMouseEnter: onTradeIconMouseEnter,\n                onMouseLeave: onTradeIconMouseLeave\n              }}\n            />\n          )}\n        </VStack>\n      </Stack>\n    </VStack>\n  )\n}\n\nexport default XCetus\n"],"names":["RewardCountDown","nextStartTime","refresh","days","hours","minutes","seconds","useCountdown","jsxs","VStack","jsx","Text","HStack","Block","Center","RewardVesting","props","lockCetusList","item","RewardVestingItem","info","isCanClaim","setIsCanClaim","useState","useEffect","XCetusUtil","cancelOrderLoading","handleCancelOrder","useXCetusCancelAction","claimOrderLoading","handleClaimOrder","useXCetusClaimAction","handleButtonClick","isClickClaim","useWindowWidth","Stack","XCetusToCetus","Button","useXCetusClaimRewardAction","fetchAccountBalance","useAccountBalance","signAndExecuteTransaction","useTransaction","xCetusSdk","usePeripherySDKStore","veNFT","useXCetusStore","claimRewardLoading","setClaimRewardLoading","fetchVeNFTDividendInfo","useGetVeNFTDividendInfo","rewardList","txb","res","MsafeTransactionSubType","error","StakeRewardSummary","myShare","cetusApr","totalRewardValue","summaryRewardList","handleClaimReward","currentAccount","useAccountStore","veNFTLoading","isApp","CetusTooltip","Box","Icon","Skeleton","formatPercentage","formatCurrency","RewardItem","tokenInfo","useGetToken","HTextLabelBox","SingleCoinImage","d","VTextLabelBox","XCetusTopHerder","totalAmount","availableAmount","redeemingAmount","isLoading","StakeSummaryItem","formatNumber","fromDecimalsAmountFix","icon","title","amount","w","h","wrapStyle","Image","tabList","XCetus","fetchOwnerVeNFT","fetchXCetusManager","availableXCetusAmount","lockCetusListLoading","redeemingXCetusAmount","fetchDividendManager","calculateCurrPeriod","useXCetus","dividendManager","fetchOwnerLockCetusList","useGetOwnerLockCetusList","currTab","setCurrTab","useRpcListener","tradeIcon","setTradeIcon","onTradeIconMouseEnter","onTradeIconMouseLeave","onIconClick","value","_a","tab","SelectTab","CetusAdd","CetusRedeem"],"mappings":"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"}