{"version":3,"file":"H5Menus-BvZgg8v8.js","sources":["../../../ui-kit/src/components/Drawer.tsx","../../../ui-kit/src/components/Modal/index.tsx","../../../cetus-design/src/components/nav/settings/h5/Item.tsx","../../../cetus-design/src/components/nav/settings/h5/Preferred.tsx","../../../cetus-design/src/components/nav/settings/h5/RPCNode.tsx","../../../cetus-design/src/components/nav/settings/h5/index.tsx","../../../cetus-design/src/components/nav/menus/H5Menus.tsx"],"sourcesContent":["import {\n  Drawer as BaseDrawer,\n  Button,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerProps\n} from '@chakra-ui/react'\n\ninterface IDrawerProps extends DrawerProps {\n  title: React.ReactNode\n  footer?: React.ReactNode | boolean\n  cancelText?: string\n  okText?: string\n  onSubmit?: () => void\n}\n\nexport default function Drawer({ title, isOpen, onClose, children, cancelText, okText, onSubmit, footer = false, placement, size }: IDrawerProps) {\n  return (\n    <BaseDrawer isOpen={isOpen} placement={placement || 'right'} onClose={onClose} size={size || 'md'}>\n      <DrawerOverlay />\n      <DrawerContent h=\"100dvh !important\" minH=\"calc(100vh - 80px) !important\">\n        <DrawerCloseButton />\n        <DrawerHeader>{title}</DrawerHeader>\n\n        <DrawerBody>{children}</DrawerBody>\n\n        <DrawerFooter>\n          {typeof footer !== 'boolean'\n            ? footer\n            : footer && (\n                <>\n                  <Button variant=\"outline\" mr={3} onClick={onClose}>\n                    {cancelText}\n                  </Button>\n                  <Button colorScheme=\"blue\" onClick={onSubmit}>\n                    {okText}\n                  </Button>\n                </>\n              )}\n        </DrawerFooter>\n      </DrawerContent>\n    </BaseDrawer>\n  )\n}\n","import { Modal as BaseModal, Button, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react'\n\ninterface ModalProps {\n  title: React.ReactNode\n  isOpen: boolean\n  onClose(): void\n  children: React.ReactNode\n  showOverlay?: boolean\n  closeable?: boolean\n  isCentered?: boolean\n  footer?: React.ReactNode\n  okText?: string\n  cancelText?: string\n  onOk?(): void\n  onCancel?(): void\n}\n\nexport default function Modal({\n  title = '',\n  isOpen,\n  showOverlay = true,\n  closeable = true,\n  isCentered = true,\n  onClose,\n  children,\n  footer,\n  okText = 'OK',\n  cancelText = 'Cancel',\n  onOk,\n  onCancel\n}: ModalProps) {\n  return (\n    <BaseModal isOpen={isOpen} onClose={onClose} isCentered={isCentered}>\n      {showOverlay && <ModalOverlay />}\n      <ModalContent>\n        <ModalHeader>{title}</ModalHeader>\n        {closeable && <ModalCloseButton />}\n        <ModalBody>{children}</ModalBody>\n        {footer ? (\n          footer\n        ) : footer === null ? null : (\n          <ModalFooter>\n            <Button mr={3} onClick={onCancel} variant=\"outline\">\n              {cancelText}\n            </Button>\n            <Button colorScheme=\"blue\" onClick={onOk}>\n              {okText}\n            </Button>\n          </ModalFooter>\n        )}\n      </ModalContent>\n    </BaseModal>\n  )\n}\n","import { Icon } from '@cetus/ui-kit'\nimport { HStack, Text } from '@chakra-ui/react'\nimport { ISettingItemWithoutChildrenProps } from '../type'\n\nconst H5SettingItem = ({ icon, value, label, onClick }: ISettingItemWithoutChildrenProps) => {\n  return (\n    <HStack\n      w=\"100%\"\n      p=\"14px 16px\"\n      h=\"48px\"\n      borderRadius=\"8px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      justify=\"space-between\"\n      align=\"center\"\n      bg=\"menu_item_bg\"\n      onClick={onClick}\n    >\n      <HStack gap=\"8px\">\n        <Icon xlinkHref={icon} fontSize=\"20px\" />\n        <Text fontSize=\"14px\">{label}</Text>\n      </HStack>\n      <HStack gap=\"8px\">\n        <Text color=\"text_caption\" fontSize=\"14px\">\n          {value}\n        </Text>\n        <Icon transform=\"rotate(270deg)\" xlinkHref=\"#icon-icon_arrow\" fontSize=\"12px\" variant=\"gray\" />\n      </HStack>\n    </HStack>\n  )\n}\n\nexport default H5SettingItem\n","import useRpcConfigStore from '@cetus/stores/src/useRpcConfigStore'\nimport { Modal } from '@cetus/ui-kit'\nimport { useState } from 'react'\nimport ExplorerContent from '../ExplorerContent'\nimport H5SettingItem from './Item'\n\nconst H5Preferred = () => {\n  const { currentExplorer } = useRpcConfigStore()\n  const [showOptions, setShowOptions] = useState(false)\n  const closeModal = () => {\n    setShowOptions(false)\n  }\n  return (\n    <>\n      <H5SettingItem\n        icon=\"#icon-icon_preferredexplorer\"\n        label=\"Preferred Explorer\"\n        value={currentExplorer?.name}\n        onClick={() => setShowOptions(true)}\n      />\n      <Modal isOpen={showOptions} title=\"Preferred Explorer\" onClose={() => setShowOptions(false)} footer={null}>\n        <ExplorerContent closeModal={closeModal} isH5={true} />\n      </Modal>\n    </>\n  )\n}\n\nexport default H5Preferred\n","import useRpcConfigStore from '@cetus/stores/src/useRpcConfigStore'\nimport { Modal } from '@cetus/ui-kit'\nimport { Box } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport RPCContent from '../RPCContent'\nimport H5SettingItem from './Item'\n\nconst H5RPCNode = () => {\n  const { currentNode } = useRpcConfigStore()\n  const [showOptions, setShowOptions] = useState(false)\n  const closeModal = () => {\n    setShowOptions(false)\n  }\n  return (\n    <>\n      <H5SettingItem icon=\"#icon-icon_rpc\" label=\"RPC Node\" value={currentNode.name} onClick={() => setShowOptions(true)} />\n      <Modal isOpen={showOptions} title=\"RPC Node\" onClose={() => setShowOptions(false)} footer={null}>\n        <Box mb=\"12px\">\n          <RPCContent closeModal={closeModal} />\n        </Box>\n      </Modal>\n    </>\n  )\n}\n\nexport default H5RPCNode\n","import { SwapWidgetDisplay } from '../SwapWidgetDisplay'\nimport { SettingProps } from '../type'\nimport H5Preferred from './Preferred'\nimport H5RPCNode from './RPCNode'\ninterface H5Settings extends SettingProps {\n  isCetusPump: boolean\n}\nconst H5Settings = ({ swapWidgetDisplay, preferred, rpc }: H5Settings) => {\n  return (\n    <>\n      {swapWidgetDisplay && <SwapWidgetDisplay icon={swapWidgetDisplay.icon} h=\"48px\" borderRadius=\"8px\" color=\"text_paragraph\" />}\n      {rpc && <H5RPCNode />}\n      {preferred && <H5Preferred />}\n    </>\n  )\n}\nexport default H5Settings\n","import NavLink from '@/components/common/NavLink'\nimport { isMenuActive } from '@/utils'\nimport { Drawer, Icon } from '@cetus/ui-kit'\nimport { Box, Flex, HStack, Image, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport H5Settings from '../settings/h5'\nimport { ChildMenuItem, IMenusProps, MenuItemWithChildren, MenuItemWithoutChildren } from '../type'\n\ntype H5MenuProps = Omit<IMenusProps, 'notifications'> & { isOpen: boolean; onClose: () => void }\n\nconst H5Menus = ({ menus, logo, setting, jump, isCetusPump, children, isOpen, onClose }: H5MenuProps) => {\n  return (\n    <H5MenuDrawer\n      menus={menus}\n      setting={setting}\n      title={<Image src={logo?.image} h=\"32px\" alt=\"logo\" onClick={() => jump(logo.url)} />}\n      isOpen={isOpen}\n      onClose={onClose}\n      jump={jump}\n      isCetusPump={isCetusPump}\n    >\n      {children}\n    </H5MenuDrawer>\n  )\n}\n\ninterface IH5MenuProps extends Omit<IMenusProps, 'notifications' | 'logo' | 'chain'> {\n  title: React.ReactNode\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst H5MenuDrawer = ({ menus, setting, title, isOpen, onClose, jump, isCetusPump, children }: IH5MenuProps) => {\n  const { pathname } = useLocation()\n  const more = menus?.find(menu => !!(menu as any)?.socials)\n  const [openList, setOpenList] = useState<string[]>([])\n\n  const handleMenuVisible = (title: string) => {\n    // 要求:打开新的下拉列表时上一个需要收起\n    if (openList.includes(title)) {\n      // setOpenList(openList.filter(item => item !== title))\n      setOpenList([])\n    } else {\n      // setOpenList([...openList, title])\n      setOpenList([title])\n    }\n  }\n\n  return (\n    <Drawer title={title} isOpen={isOpen} onClose={onClose} placement=\"left\" size=\"full\">\n      <VStack w=\"100%\" h=\"100%\" justify=\"space-between\">\n        <VStack gap=\"36px\" w=\"100%\" align=\"flex-start\" mt=\"32px\">\n          {menus.map(menu => {\n            if ((menu as any).children) {\n              const active = isMenuActive(menu as any, pathname)\n              return (\n                <Box key={menu.title} w=\"100%\">\n                  <HStack\n                    onClick={() => handleMenuVisible(menu.title)}\n                    sx={{\n                      p: {\n                        color: active ? 'text_caption' : 'text_paragraph'\n                      },\n                      svg: {\n                        fill: active ? 'text_caption' : 'text_paragraph'\n                      }\n                    }}\n                    _hover={{\n                      p: {\n                        color: 'text_caption'\n                      },\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }}\n                  >\n                    <Text fontSize=\"16px\">{menu.title}</Text>\n                    <Icon\n                      xlinkHref=\"#icon-icon_arrow\"\n                      fontSize=\"16px\"\n                      variant=\"gray\"\n                      svgFill=\"primary_gray\"\n                      transition=\"transform 0.5s\"\n                      transform={openList.includes(menu.title) ? 'rotate(180deg)' : 'rotate(0deg)'}\n                    />\n                  </HStack>\n                  {openList.includes(menu.title) && (\n                    <VStack\n                      mt=\"12px\"\n                      bg=\"bg_secondary\"\n                      gap=\"24px\"\n                      p=\"20px 16px\"\n                      w=\"100%\"\n                      align=\"flex-start\"\n                      border=\"1px solid\"\n                      borderColor=\"border\"\n                      borderRadius=\"8px\"\n                    >\n                      {(menu as MenuItemWithChildren).children?.map(item => {\n                        const childActive = isMenuActive(item as any, pathname)\n                        return (\n                          <Item\n                            key={item.title}\n                            item={{\n                              ...item,\n                              onClick:\n                                item?.type === 'onClick'\n                                  ? () => {\n                                      item?.onClick?.()\n                                      onClose()\n                                    }\n                                  : undefined\n                            }}\n                            jump={(path: string) => {\n                              jump?.(path)\n                              onClose()\n                            }}\n                            isActive={childActive}\n                          />\n                        )\n                      })}\n                    </VStack>\n                  )}\n                </Box>\n              )\n            }\n            return (\n              <NavLink\n                key={menu.title}\n                type={(menu as MenuItemWithoutChildren)?.type}\n                onClick={() => {\n                  if ((menu as MenuItemWithoutChildren)?.type === 'onClick') {\n                    jump?.((menu as MenuItemWithoutChildren).path!)\n                    onClose()\n                  }\n                }}\n                link={(menu as MenuItemWithoutChildren).path!}\n                isActive={isMenuActive(menu as MenuItemWithoutChildren, pathname)}\n              >\n                <Text color=\"inherit\" fontSize=\"16px\">\n                  {menu.title}\n                </Text>\n              </NavLink>\n            )\n          })}\n        </VStack>\n        <VStack w=\"100%\">\n          <H5Settings {...setting} isCetusPump={isCetusPump} />\n\n          <HStack w=\"100%\">\n            {more &&\n              (more as MenuItemWithChildren)?.socials &&\n              (more as MenuItemWithChildren)?.socials?.map(social => {\n                return (\n                  <Flex\n                    key={social.title}\n                    flex=\"1\"\n                    onClick={() => window.open(social.path)}\n                    padding=\"14px\"\n                    h=\"48px\"\n                    borderRadius=\"8px\"\n                    border=\"1px solid\"\n                    borderColor=\"border\"\n                    bg=\"menu_item_bg\"\n                    justify=\"center\"\n                    align=\"center\"\n                    _hover={{\n                      p: {\n                        color: 'text_caption'\n                      },\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }}\n                  >\n                    {social.icon ? (\n                      <Box>\n                        {typeof social.icon === 'string' ? (\n                          <Icon xlinkHref={social.icon} variant=\"gray\" />\n                        ) : (\n                          <Icon xlinkHref={social.icon.xlinkHref} variant=\"gray\" />\n                        )}\n                      </Box>\n                    ) : null}\n                  </Flex>\n                )\n              })}\n          </HStack>\n          {children}\n        </VStack>\n      </VStack>\n    </Drawer>\n  )\n}\n\ninterface ItemProps {\n  item: ChildMenuItem\n  jump: (path: string) => void\n  isActive: boolean\n}\n\nconst Item = ({ item, jump, isActive }: ItemProps) => {\n  const [open, setOpen] = useState(false)\n  return (\n    <>\n      <HStack\n        key={item.title}\n        justify=\"space-between\"\n        h=\"20px\"\n        lineHeight=\"20px\"\n        onClick={() =>\n          item?.children && item?.children?.length > 1\n            ? setOpen(!open)\n            : item?.type === 'onClick'\n              ? item?.onClick()\n              : item?.type === '_blank'\n                ? window.open(item.path, '_blank')\n                : jump((item as ChildMenuItem).path!)\n        }\n        sx={{\n          p: {\n            color: isActive ? 'text_caption' : 'text_paragraph'\n          },\n          svg: {\n            fill: isActive ? 'text_caption' : 'text_paragraph'\n          }\n        }}\n        _hover={{\n          p: {\n            color: 'text_caption'\n          },\n          svg: {\n            fill: 'text_caption'\n          }\n        }}\n      >\n        <HStack>\n          <Icon xlinkHref={(item as ChildMenuItem)?.icon as string} variant=\"gray\" />\n          <Box position=\"relative\">\n            <Text color=\"inherit\" fontSize=\"16px\" fontWeight=\"500\">\n              {item.title}\n            </Text>\n            {item?.beta && <Image src=\"/images/icon_beta@2x.png\" position=\"absolute\" right=\"-32px\" top=\"-4px\" h=\"12px\" />}\n          </Box>\n        </HStack>\n        {item.children && item.children.length > 0 && (\n          <Icon\n            xlinkHref=\"#icon-icon_arrow\"\n            fontSize=\"16px\"\n            variant=\"gray\"\n            svgFill=\"primary_gray\"\n            transition=\"transform 0.5s\"\n            transform={open ? 'rotate(180deg)' : 'rotate(0deg)'}\n          />\n        )}\n      </HStack>\n      {open &&\n        item.children &&\n        item.children.length > 0 &&\n        item.children?.map(child => <Item key={child.title} item={child} jump={jump} isActive={false} />)}\n    </>\n  )\n}\n\nexport default H5Menus\n"],"names":["Drawer","title","isOpen","onClose","children","cancelText","okText","onSubmit","footer","placement","size","jsxs","BaseDrawer","jsx","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","DrawerFooter","Fragment","Button","Modal","showOverlay","closeable","isCentered","onOk","onCancel","BaseModal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","H5SettingItem","icon","value","label","onClick","HStack","Icon","Text","H5Preferred","currentExplorer","useRpcConfigStore","showOptions","setShowOptions","useState","closeModal","ExplorerContent","H5RPCNode","currentNode","Box","RPCContent","H5Settings","swapWidgetDisplay","preferred","rpc","SwapWidgetDisplay","H5Menus","menus","logo","setting","jump","isCetusPump","H5MenuDrawer","Image","pathname","useLocation","more","menu","openList","setOpenList","handleMenuVisible","VStack","active","isMenuActive","_a","item","childActive","Item","path","NavLink","social","Flex","isActive","open","setOpen","child"],"mappings":"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"}