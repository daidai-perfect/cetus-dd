{"version":3,"file":"SingleTokenInfo-B9uwt8O4.js","sources":["../../../cetus-design/src/components/common/AddressCopyLink.tsx","../../../cetus-design/src/components/common/SingleTokenInfo.tsx"],"sourcesContent":["import Icon from '@cetus/ui-kit/src/components/Icon'\nimport { HStack, StackProps, TextProps } from '@chakra-ui/react'\nimport AddressUnderLine from './AddressUnderline'\nimport { CopyButton } from './index'\n\ninterface AddressCopyLinkProps extends TextProps {\n  address: string\n  onClickLink: () => void\n  showCopy?: boolean\n  showLink?: boolean\n  addressWeight?: string\n  addressColor?: string\n  addressSize?: string\n  hasUnderline?: boolean\n  wrapStyle?: StackProps\n  addressAbridgeStyle?: string\n  showAddress?: boolean\n}\nexport default function AddressCopyLink(props: AddressCopyLinkProps) {\n  const {\n    address,\n    addressSize = '12px',\n    showCopy = true,\n    showLink = true,\n    hasUnderline = true,\n    addressWeight = '400',\n    addressColor = 'text_paragraph',\n    onClickLink,\n    wrapStyle = { gap: '4px' },\n    addressAbridgeStyle,\n    showAddress = true,\n    ...rest\n  } = props\n  return (\n    <HStack align=\"center\" {...wrapStyle}>\n      {showAddress && (\n        <AddressUnderLine\n          address={address}\n          addressAbridgeStyle={addressAbridgeStyle}\n          hasUnderline={hasUnderline}\n          onClickLink={onClickLink}\n          {...rest}\n        />\n      )}\n      {showCopy && <CopyButton text={address} />}\n      {showLink && <Icon xlinkHref=\"#icon-icon_link1\" onClick={onClickLink} />}\n    </HStack>\n  )\n}\n","import useExplorer from '@cetus/hooks/src/useExplorer'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { CoinType, Token } from '@cetus/types'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport { isAvailableObject, textEllipses } from '@cetus/utils'\nimport { CenterProps, HStack, HTMLChakraProps, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport { AddressCopyLink, CetusTooltip } from '../../index'\n\n// Ê≤°Êúâtoken‰ø°ÊÅØÊó∂ÂèØ‰ª•Âè™‰º†coin_type\ninterface SingleTokenInfoProps extends HTMLChakraProps<'div'> {\n  token?: any\n  coinType?: string\n  imgBoxStyle?: CenterProps\n  symbolFontSize?: string\n  symbolFontWeight?: string\n  haveTooltip?: boolean\n  haveName?: boolean\n  haveSymbol?: boolean\n  haveAddress?: boolean\n  addressAbridgeStyle?: string\n  symbolEllipsesDecimals?: number //symbolË∂ÖËøáÂ§öÂ∞ë‰ΩçÂ±ïÁ§∫... ÂÄº‰∏∫0Â±ïÁ§∫ÂÖ®ÈÉ®\n  nameEllipsesDecimals?: number\n  warningIcon?: {\n    isNeedShow?: boolean\n    iconW?: string\n    iconH?: string\n  }\n}\n\nconst getTokenName = (tokenInfo: Token) => {\n  if (tokenInfo?.coin_type) {\n    switch (tokenInfo?.coin_type) {\n      case '0x5d4b302506645c37ff133b98c4b50a5ae14841659738d6d733d59d0d217a93bf::coin::COIN':\n        return 'Portal from Eth'\n      case '0xc060006111016b8a020ad5b33834984a437aaa7d3c74c18e09a95d48aceab08c::coin::COIN':\n        return 'Portal from Eth'\n      default:\n        return tokenInfo.name\n    }\n  }\n}\nconst SingleTokenInfo = ({\n  token,\n  coinType,\n  imgBoxStyle = {},\n  symbolFontSize = '14px',\n  symbolFontWeight = '500',\n  haveTooltip = false,\n  haveName = true,\n  haveSymbol = true,\n  warningIcon = {},\n  haveAddress = false,\n  addressAbridgeStyle,\n  symbolEllipsesDecimals = 10,\n  nameEllipsesDecimals = 28,\n  ...rest\n}: SingleTokenInfoProps) => {\n  const { getTokenInfo } = useGetToken()\n  const [tokenInfo, setTokenInfo] = useState<any>(token)\n  const { isNeedShow = true, iconW = '16px', iconH = '16px' } = warningIcon\n\n  const fetchToken = async () => {\n    if (!coinType) return\n    try {\n      const coinInfo = await getTokenInfo(coinType as CoinType)\n      console.log('üöÄ ~ fetchToken ~ coinInfo:', coinType, coinInfo)\n      if (coinInfo) {\n        setTokenInfo(coinInfo)\n      }\n    } catch (error) {\n      console.error('Error fetching token info:', error)\n    }\n  }\n  useEffect(() => {\n    fetchToken()\n  }, [coinType])\n\n  useEffect(() => {\n    if (isAvailableObject(token)) {\n      setTokenInfo(token)\n    }\n  }, [token?.coin_type])\n\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <>\n      <HStack {...rest}>\n        <VStack align=\"flex-start\" gap=\"0\">\n          <CetusTooltip\n            placement=\"top\"\n            showTooltip={haveTooltip ? true : false}\n            tooltip={\n              <HStack>\n                <SingleCoinImage\n                  imageUrl={tokenInfo?.logo_url}\n                  w=\"20px\"\n                  h=\"20px\"\n                  minH=\"20px\"\n                  minW=\"20px\"\n                  showTag={isNeedShow}\n                  showTagWidth=\"14px\"\n                  showTagHeight=\"14px\"\n                  coinType={tokenInfo ? tokenInfo?.coin_type : ''}\n                />\n                <Text color=\"text_caption\"> {textEllipses(tokenInfo?.symbol, symbolEllipsesDecimals)}</Text>\n                <AddressCopyLink address={tokenInfo?.coin_type} onClickLink={() => window.open(getExplorerUrl(tokenInfo?.coin_type, 'coin'))} />\n              </HStack>\n            }\n          >\n            <HStack>\n              <SingleCoinImage\n                imageUrl={tokenInfo?.logo_url}\n                imgBoxStyle={imgBoxStyle}\n                coinType={tokenInfo?.coin_type}\n                showTag={isNeedShow}\n                showTagHeight={iconH}\n                showTagWidth={iconW}\n              />\n              {(haveSymbol || haveName || haveAddress) && (\n                <VStack align=\"flex-start\" gap=\"0px\">\n                  {haveSymbol && (\n                    <Text color=\"text_caption\" fontSize={symbolFontSize} fontWeight={symbolFontWeight} textAlign=\"left\">\n                      {textEllipses(tokenInfo?.symbol, symbolEllipsesDecimals)}\n                    </Text>\n                  )}\n                  {haveName && (\n                    <Text textAlign=\"left\" fontSize=\"12px\" mt=\"4px\">\n                      {textEllipses(getTokenName(tokenInfo), nameEllipsesDecimals)}\n                    </Text>\n                  )}\n                  {haveAddress && (\n                    <AddressCopyLink\n                      address={tokenInfo?.coin_type}\n                      addressAbridgeStyle={addressAbridgeStyle}\n                      showLink={false}\n                      onClickLink={() => window.open(getExplorerUrl(tokenInfo?.coin_type, 'coin'))}\n                    />\n                  )}\n                </VStack>\n              )}\n            </HStack>\n          </CetusTooltip>\n        </VStack>\n      </HStack>\n    </>\n  )\n}\n\nexport default SingleTokenInfo\n"],"names":["AddressCopyLink","props","address","addressSize","showCopy","showLink","hasUnderline","addressWeight","addressColor","onClickLink","wrapStyle","addressAbridgeStyle","showAddress","rest","jsxs","HStack","jsx","AddressUnderLine","CopyButton","Icon","getTokenName","tokenInfo","SingleTokenInfo","token","coinType","imgBoxStyle","symbolFontSize","symbolFontWeight","haveTooltip","haveName","haveSymbol","warningIcon","haveAddress","symbolEllipsesDecimals","nameEllipsesDecimals","getTokenInfo","useGetToken","setTokenInfo","useState","isNeedShow","iconW","iconH","fetchToken","coinInfo","error","useEffect","isAvailableObject","getExplorerUrl","useExplorer","Fragment","VStack","CetusTooltip","SingleCoinImage","Text","textEllipses"],"mappings":"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"}