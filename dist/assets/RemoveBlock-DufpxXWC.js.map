{"version":3,"file":"RemoveBlock-DufpxXWC.js","sources":["../../src/hooks/position/useCurrentApiPool.ts","../../src/assets/images/img_farming@2x.png","../../src/components/position/details/FarmsBlock.tsx","../../src/components/position/details/TradeTitle.tsx","../../src/hooks/position/usePosRemove.ts","../../src/hooks/position/usePosRemovePage.ts","../../src/components/position/details/RemoveBlock.tsx"],"sourcesContent":["import { useMemo } from 'react'\n\nexport default function useCurrentApiPool(currentPosBaseInfo: any, posApiPoolData: any) {\n  const currentApiPoolInfo = useMemo(() => {\n    if (currentPosBaseInfo?.clmmPool) {\n      return posApiPoolData?.[currentPosBaseInfo?.clmmPool]\n    }\n    return undefined\n  }, [currentPosBaseInfo?.clmmPool, posApiPoolData])\n\n  return {\n    currentApiPoolInfo\n  }\n}\n","export default \"__VITE_ASSET__D__rUlmk__\"","import bg_farming from '@/assets/images/img_farming@2x.png'\nimport AprTooltip from '@/components/common/aprTooltip'\nimport { RewardsCoin } from '@/components/farms/ExpendItem'\nimport useFarmsActions from '@/hooks/farms/useFarmsAction'\nimport useCurrentPos from '@/hooks/position/useCurrentPos'\nimport useGetFarmsPosRewards from '@/hooks/position/useGetFarmsPosRewards'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosReward } from '@/types'\nimport { Block, CetusTooltip } from '@cetus/design/src/components/common'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetusprotocol/cetus-sui-clmm-sdk'\nimport { Box, Button, HStack, Image, Text, VStack } from '@chakra-ui/react'\nimport React, { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nfunction FarmsBlock() {\n  const { isApp } = useWindowWidth()\n  const { currentPosBaseInfo, farmsPosRewardsData, posPoolsRelatedData, posBaseListLoading, posPoolsOriginalData } = usePositionStore()\n  const { currentPosPoolInfo } = usePositionDetailStore()\n  const { currentAccount } = useAccountStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const { getFarmsRewardsData } = useGetFarmsPosRewards()\n\n  const { getClmmPosName } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (currentPosBaseInfo?.tokenName) {\n      return currentPosBaseInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool as string]?.index\n      return getClmmPosName(currentPosBaseInfo?.index as number, position_index) || ''\n    }\n  }, [currentPosBaseInfo?.tokenName, currentPosBaseInfo?.index, currentPosBaseInfo?.clmmPool, posPoolsOriginalData])\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId as string]\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n\n  const posFarmsData = farmsPosRewardsData[currentPosBaseInfo?.id as string]\n  const farmsRewarderList = currentPosPoolInfo?.farmsRewarderList || []\n  const totalRewards = posFarmsData?.reduce((sum: number, item: any) => sum + item.display_amount_owed, 0)\n\n  const { toStakePos, toUnStakePos, toClaimPos, unstakeLoading, claimLoading } = useFarmsActions()\n\n  const navigate = useNavigate()\n\n  const stakeRefresh = (events: any) => {\n    navigate(`/position-detail/${events[0].parsedJson.wrapped_position_id}`, { replace: true })\n    setTimeout(() => {\n      getCurrentPosBaseInfo(currentAccount?.address as string, events[0].parsedJson.wrapped_position_id, true)\n    }, 2000)\n  }\n  const toStake = async () => {\n    toStakePos(currentPosBaseInfo?.id as string, currentPosPoolInfo?.farmsPoolAddress, tokenName, stakeRefresh)\n  }\n\n  const unstakeRefresh = () => {\n    navigate(`/position-detail/${currentPosBaseInfo?.posId}`, { replace: true })\n    setTimeout(() => {\n      getCurrentPosBaseInfo(currentAccount?.address as string, currentPosBaseInfo?.posId as string, true)\n      // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n    }, 2000)\n  }\n  const toUnstack = async () => {\n    toUnStakePos(currentPosBaseInfo?.id as string, currentPosBaseInfo?.farmsPool as string, tokenName, unstakeRefresh)\n  }\n\n  const claimRefresh = () => {\n    setTimeout(() => {\n      getFarmsRewardsData([currentPosBaseInfo])\n      // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n    }, 2000)\n  }\n\n  const toClaim = async () => {\n    toClaimPos(currentPosBaseInfo?.id as string, currentPosBaseInfo?.farmsPool as string, claimRefresh)\n  }\n\n  // 计算仓位的amount 判断用哪个list做奖励的循环展示\n  const totalAmount = useMemo(() => {\n    if (posFarmsData?.length > 0) {\n      return posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n        return d(sum).plus(rewardData?.display_amount_owed).toString()\n      }, '0')\n    }\n    return '0'\n  }, [posFarmsData, currentAccount?.address, claimLoading, unstakeLoading])\n\n  return (\n    <>\n      {(currentPosPoolInfo?.farmsPoolAddress || d(totalAmount).gt(0)) && (\n        <VStack w=\"100%\">\n          <HStack w=\"100%\" zIndex=\"1\" p={{ base: '12px 8px', lg: '12px 16px' }} bgImage={bg_farming} bgSize=\"100% 100%\" justify=\"space-between\">\n            <VStack align=\"flex-start\">\n              <HStack>\n                <Image src=\"/images/icon_farms.png\" w=\"24px\" h=\"24px\" />\n                <Text color=\"primary_yellow\" fontSize=\"20px\">\n                  Farming\n                </Text>\n              </HStack>\n              <Text color=\"primary_yellow\" fontSize=\"14px\">\n                Stake Position to Earn\n              </Text>\n            </VStack>\n            <HStack gap=\"4px\" bg=\"primary_yellow_opacity.10\" p=\"12px 16px\" borderRadius=\"100px\">\n              <Text color=\"primary\" fontSize=\"12px\" fontWeight=\"500\">\n                APR\n              </Text>\n              <Text color=\"primary\" fontSize=\"12px\" fontWeight=\"500\">\n                <AprTooltip poolInfo={currentPosPoolInfo} isPosition={true} showAprSize=\"12px\" />\n              </Text>\n              <HStack\n                gap=\"4px\"\n                cursor=\"pointer\"\n                onClick={() => navigate('/farms')}\n                sx={{\n                  _hover: {\n                    p: {\n                      color: 'text_caption'\n                    },\n                    svg: {\n                      fill: 'text_caption'\n                    }\n                  }\n                }}\n              >\n                <Text fontSize=\"12px\" ml=\"8px\" fontWeight=\"500\">\n                  View\n                </Text>\n                <Icon boxW=\"14px\" boxH=\"14px\" xlinkHref=\"#icon-icon_list_token\" />\n              </HStack>\n            </HStack>\n          </HStack>\n          <Block mt=\"-20px\" bg=\"bg_six\" p={{ base: '28px 8px 12px', lg: '28px 16px 16px' }} zIndex=\"0\" borderRadius=\"0 0 12px 12px\" borderTop=\"none\">\n            <Text>Farming Rewards</Text>\n            <HStack w=\"100%\" flexWrap=\"wrap\">\n              {posFarmsData?.length > 0 && d(totalAmount).gt(0) ? (\n                posFarmsData?.map((item: any) => {\n                  return (\n                    <React.Fragment key={item?.rewarder_type}>\n                      {d(item?.display_amount_owed).gt(0) && (\n                        <RewardsCoin\n                          key={item?.coinType}\n                          coinType={item?.token?.coin_type}\n                          amount={item?.display_amount_owed}\n                          tokenInfo={item?.token}\n                          boxStyle={{ mt: '16px', w: 'calc(50% - 4px) ' }}\n                          textAlign=\"left\"\n                        />\n                      )}\n                    </React.Fragment>\n                  )\n                })\n              ) : farmsRewarderList?.length > 0 ? (\n                farmsRewarderList?.map((item: any) => {\n                  return (\n                    <RewardsCoin\n                      key={item?.coinType}\n                      coinType={item?.coinType}\n                      amount=\"0\"\n                      boxStyle={{ mt: '16px', w: 'calc(50% - 4px) ' }}\n                      textAlign=\"left\"\n                    />\n                  )\n                })\n              ) : (\n                <Text textColor=\"text_caption\" textAlign=\"right\" mt=\"8px\">\n                  --\n                </Text>\n              )}\n            </HStack>\n            <HStack w=\"100%\" justify=\"space-between\" mt=\"16px\">\n              {currentPosBaseInfo?.posType == 'farms' && (\n                <Button\n                  disabled={claimLoading || unstakeLoading}\n                  isLoading={unstakeLoading}\n                  variant=\"outline\"\n                  h=\"40px\"\n                  w=\"50%\"\n                  fontSize=\"14px\"\n                  onClick={toUnstack}\n                >\n                  Unstake\n                </Button>\n              )}\n              {currentPosBaseInfo?.posType == 'clmm' && !isActive && (\n                <Box w=\"50%\" sx={{ '>button': { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" w=\"200px\">\n                        Farming rewards are only available for active positions.\n                      </Text>\n                    }\n                  >\n                    <Box w=\"100%\">\n                      <Button disabled={true} h=\"40px\" w=\"100%\" fontSize=\"14px\">\n                        Stake\n                      </Button>\n                    </Box>\n                  </CetusTooltip>\n                </Box>\n              )}\n\n              {currentPosBaseInfo?.posType == 'clmm' && isActive && (\n                <Button disabled={claimLoading || unstakeLoading} isLoading={unstakeLoading} h=\"40px\" w=\"50%\" fontSize=\"14px\" onClick={toStake}>\n                  Stake\n                </Button>\n              )}\n              <Button\n                disabled={claimLoading || unstakeLoading || d(totalRewards).eq(0)}\n                isLoading={claimLoading}\n                variant=\"outline\"\n                h=\"40px\"\n                w=\"50%\"\n                fontSize=\"14px\"\n                onClick={toClaim}\n              >\n                Claim rewards\n              </Button>\n            </HStack>\n          </Block>\n        </VStack>\n      )}\n    </>\n  )\n}\nexport default FarmsBlock\n","import ZapSwitch from '@/components/zap/ZapSwitch'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { HStack, Text } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nexport default function TradeTitle({\n  action,\n  haveZap,\n  resetInputAmount\n}: {\n  action: 'Deposit' | 'Withdraw'\n  haveZap?: boolean\n  resetInputAmount?: () => void\n}) {\n  const { useZapIn, setUseZapIn } = usePositionDetailStore()\n  const { setZapAmount, setPreDepositeData } = useZapStore()\n\n  const handleChangeZap = () => {\n    resetInputAmount?.()\n    setUseZapIn(!useZapIn)\n    setZapAmount('')\n  }\n\n  useEffect(() => {\n    setUseZapIn(false)\n    setPreDepositeData(undefined)\n  }, [action])\n\n  return (\n    <HStack w=\"100%\" justify=\"space-between\" align=\"center\" mb=\"16px\">\n      <Text color=\"primary_gray\" fontSize=\"14px\">\n        {action === 'Withdraw' ? 'Remove Amounts' : 'Deposit Amounts'}\n      </Text>\n      <ZapSwitch action={action} value={useZapIn} onChange={handleChangeZap} />\n    </HStack>\n  )\n}\n","import useGlobalStore from '@/store/common/global'\nimport { MsafeTransactionSubType } from '@/types'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { d, fixDown } from '@cetus/utils'\n\ntype GetRemoveParams = {\n  posId: string\n  poolAddress: string\n  coinTypeA: string\n  coinTypeB: string\n  amountA: string\n  amountB: string\n  liquidity: string\n  lowerTick: number\n  upperTick: number\n  posType: 'clmm' | 'farms'\n  rewarderCoinTypes: any\n  farmsPoolId?: string\n  farmsPosId?: string\n}\n\nexport default function usePosRemove() {\n  const { clmmSdk } = useClmmSDKStore()\n  const { peripherySdk } = usePeripherySDKStore()\n  const { slippage } = useGlobalStore()\n\n  const getRemoveTsPayload = async (params: GetRemoveParams) => {\n    const {\n      posId,\n      poolAddress,\n      coinTypeA,\n      coinTypeB,\n      amountA,\n      amountB,\n      liquidity,\n      lowerTick,\n      upperTick,\n      posType,\n      rewarderCoinTypes,\n      farmsPoolId,\n      farmsPosId\n    } = params\n    const minAmountA = d(amountA).mul(d(1).sub(d(slippage)))\n    const minAmountB = d(amountB.toString()).mul(d(1).sub(d(slippage)))\n    console.log('🚀 ~ getRemoveTsPayload ~ minAmountA:', minAmountA, minAmountB)\n\n    if (posType === 'clmm') {\n      const parameter = {\n        coinTypeA,\n        coinTypeB,\n        pool_id: poolAddress,\n        pos_id: posId,\n        delta_liquidity: liquidity,\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        collect_fee: true,\n        rewarder_coin_types: rewarderCoinTypes\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ parameter:', parameter)\n\n      const tx = await clmmSdk.Position.removeLiquidityTransactionPayload(parameter)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.DecreaseLiquidity,\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ msafeParams:', tx, msafeParams)\n      return {\n        tx,\n        msafeParams\n      }\n    } else {\n      const parameter = {\n        pool_id: farmsPoolId || '',\n        coinTypeA,\n        coinTypeB,\n        position_nft_id: farmsPosId || '',\n        clmm_pool_id: poolAddress,\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        collect_rewarder: false,\n        clmm_rewarder_types: rewarderCoinTypes,\n        delta_liquidity: liquidity,\n        unstake: false,\n        close_position: false\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ parameter:', parameter)\n\n      const tx = await peripherySdk.Farms.removeLiquidityPayload(parameter)\n\n      const msafeParams = {\n        action: 'FarmingDecreaseLiquidity',\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getRemoveTsPayload ~ msafeParams:', msafeParams, tx)\n      return {\n        tx,\n        msafeParams\n      }\n    }\n  }\n\n  // 移除并关闭仓位\n  const getCloseTsPayload = async (params: GetRemoveParams) => {\n    const {\n      posId,\n      poolAddress,\n      coinTypeA,\n      coinTypeB,\n      amountA,\n      amountB,\n      liquidity,\n      lowerTick,\n      upperTick,\n      posType,\n      rewarderCoinTypes,\n      farmsPoolId,\n      farmsPosId\n    } = params\n\n    const minAmountA = d(amountA).mul(d(1).sub(d(slippage)))\n    const minAmountB = d(amountB.toString()).mul(d(1).sub(d(slippage)))\n    console.log('🚀 ~ getCloseTsPayload ~ minAmountA:', params, minAmountA.toString(), minAmountB.toString())\n    console.log('🚀 ~ getCloseTsPayload ~ parameter.rewarderCoinTypes:', rewarderCoinTypes)\n\n    if (posType === 'clmm') {\n      const parameter = {\n        coinTypeA,\n        coinTypeB,\n        pool_id: poolAddress,\n        pos_id: posId || '',\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        rewarder_coin_types: rewarderCoinTypes,\n        collect_fee: false\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ parameter:', parameter)\n\n      const tx = await clmmSdk.Position.closePositionTransactionPayload(parameter)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.RemoveLiquidity,\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ msafeParams:', tx, msafeParams)\n      return {\n        tx,\n        msafeParams\n      }\n    } else {\n      const parameter = {\n        pool_id: farmsPoolId || '',\n        coinTypeA,\n        coinTypeB,\n        position_nft_id: farmsPosId || '',\n        clmm_pool_id: poolAddress,\n        min_amount_a: fixDown(minAmountA.toString(), 0) || '',\n        min_amount_b: fixDown(minAmountB.toString(), 0) || '',\n        collect_fee: true,\n        collect_rewarder: true,\n        clmm_rewarder_types: rewarderCoinTypes,\n        delta_liquidity: liquidity,\n        unstake: true,\n        close_position: true,\n        clmm_position_id: posId\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ parameter:', parameter)\n      const tx = await peripherySdk.Farms.removeLiquidityPayload(parameter)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.FarmingRemoveLiquidity,\n        txbParams: parameter\n      }\n      console.log('🚀 ~ getCloseTsPayload ~ msafeParams:', msafeParams, tx)\n      return {\n        tx,\n        msafeParams\n      }\n    }\n  }\n  return {\n    getRemoveTsPayload,\n    getCloseTsPayload\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useCurrentApiPool from '@/hooks/position/useCurrentApiPool'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, Token, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, getBalanceChanges, isAvailableObject } from '@cetus/utils'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport useCurrentPos from './useCurrentPos'\nimport useGetPosLiquiditys from './useGetPosLiquiditys'\nimport usePosAdd from './usePosAdd'\nimport usePosHelper from './usePosHelper'\nimport usePosRemove from './usePosRemove'\n\nexport default function usePosRemovePage() {\n  const { transactionConfirmation } = useTransactionModal()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { getCoinAmountFromLiquidity } = useGetPosLiquiditys()\n  const { currentPosBaseInfo, posLiquidityData, posRewardsData, setPosBaseList, posApiPoolData } = usePositionStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const { preAdd } = usePosAdd()\n  const { getRemoveTsPayload, getCloseTsPayload } = usePosRemove()\n  const { getTokenALock, getTokenBLock } = usePosHelper()\n  const {\n    setTokenAmountAfterA,\n    setTokenAmountAfterB,\n    currentPosPoolInfo,\n    currentPoolSqrtPrice,\n    setIsFixedDisplayTokenA,\n    slideValue,\n    setSlideValue,\n    isFixedDisplayTokenA,\n    isPosDetailRefresh,\n    currentPosDetailTab,\n    useZapIn,\n    curPosContractPoolInfo\n  } = usePositionDetailStore()\n\n  const { getZapWithdrawToastInfo, getZapWithdrawTx, reCalculateZapData } = useZapSubmit('Withdraw')\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n\n  const { preDepositeData, currentZapToken, setZapAmount, zapAmount } = useZapStore()\n\n  const { currentApiPoolInfo } = useCurrentApiPool(currentPosBaseInfo, posApiPoolData)\n\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId as string]\n\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n  const [preRemoveLoading, setPreRemoveLoading] = useState(false)\n  const [removeLiquidityAmount, setRemoveLiquidityAmount] = useState('')\n\n  const displayTokenA: Token | undefined = currentPosBaseInfo?.displayTokenA\n  const displayTokenB: Token | undefined = currentPosBaseInfo?.displayTokenB\n\n  const currentPosLiquidityData = posLiquidityData[currentPosBaseInfo?.posId as string]\n  // 余额\n  const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n  const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  useEffect(() => {\n    if (+tokenAmountA || +tokenAmountB) {\n      const amountA = +tokenAmountA\n      const amountB = +tokenAmountB\n      const numA = d(+tokenABalance).sub(amountA)\n      const numB = d(tokenBBalance).sub(amountB)\n      console.log('🚀 ~ useEffect ~ numA.gt(0):', numA.toString(), numB.toString())\n      setTokenAmountAfterA(numA.gt(0) ? numA.toString() : '0')\n      setTokenAmountAfterB(numB.gt(0) ? numB.toString() : '0')\n    } else {\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosRemovePage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setPreRemoveLoading(false)\n    setUuid('')\n    setSlideValue('--')\n  }\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showDisplayTokenALock = !currentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock\n  const showDisplayTokenBLock = !currentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [showDisplayTokenALock, showDisplayTokenBLock])\n\n  const debouncedPreCalculate = useDebounceFunction((amount, is_fixed_displaytokenA, uuid) => {\n    console.log('🚀 ~ debouncedPreCalculate ~ params:', amount)\n    const decimals = is_fixed_displaytokenA ? currentPosBaseInfo?.displayTokenA?.decimals : currentPosBaseInfo?.displayTokenB?.decimals\n    const amountBN = amountToBN(amount, decimals)\n    const tokenA = currentPosBaseInfo?.tokenA\n    const tokenB = currentPosBaseInfo?.tokenB\n    const lowerTick = currentPosBaseInfo?.lowerTick\n    const upperTick = currentPosBaseInfo?.upperTick\n    const isReverse = currentPosBaseInfo?.isReverse\n    // const curSqrtPrice = currentPosPoolsOriginalData.current_sqrt_price\n    const curSqrtPrice = currentPoolSqrtPrice\n    const params = {\n      amount: amountBN,\n      tokenA,\n      tokenB,\n      isTokenA: isReverse ? !is_fixed_displaytokenA : is_fixed_displaytokenA,\n      lowerTick,\n      upperTick,\n      curSqrtPrice,\n      isReverse,\n      roundUp: false\n    }\n    console.log('🚀 ~ debouncedPreCalculate ~ params:', params)\n    const { displayCoinAmountA, displayCoinAmountB, liquidityAmount } = preAdd(params)\n    console.log('🚀 ~ debouncedPreCalculate:', displayCoinAmountA, displayCoinAmountB, params, is_fixed_displaytokenA, uuid)\n    if (uuidRef.current === uuid) {\n      setRemoveLiquidityAmount(liquidityAmount)\n      console.log('🚀 ~ debouncedPreCalculate ~ liquidityAmount:', removeLiquidityAmount, liquidityAmount)\n\n      const slide = formatNumber(d(liquidityAmount).div(currentPosBaseInfo?.liquidity).mul(100).toNumber(), 2, true)\n      if (d(slide).gt(100) || d(slide).eq(100)) {\n        setSlideValue(100)\n        setTokenAmountA(tokenABalance as string)\n        setTokenAmountB(tokenBBalance as string)\n      } else {\n        setSlideValue(slide)\n        if (is_fixed_displaytokenA) {\n          setTokenAmountB(displayCoinAmountB || '')\n        } else {\n          setTokenAmountA(displayCoinAmountA || '')\n        }\n      }\n    } else {\n      resetInputAmount()\n    }\n    setPreRemoveLoading(false)\n  }, 500)\n  const [isUpdateSlider, setIsUpdateSlider] = useState(false)\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(currentPosBaseInfo)) {\n      console.log('🚀 ~ reCalculateResult ~ isFixedDisplayTokenA:', isUpdateSlider, slideValue)\n      if (slideValue === '--') return\n      if (isUpdateSlider || Number(slideValue) == 100) {\n        changeSlideFun(Number(slideValue))\n      } else {\n        console.log('🚀 ~ reCalculateResult ~ currentPosBaseInfo:', currentPosBaseInfo)\n        const amount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n        if (+amount) {\n          const uuid = v4()\n          setUuid(uuid)\n          debouncedPreCalculate(amount, isFixedDisplayTokenA, uuid)\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentPosDetailTab == 'remove') {\n      console.log('🚀 ~ usePosRemovePage ~ tokenABalance, tokenBBalance:', isPosDetailRefresh, tokenABalance, tokenBBalance)\n      reCalculateResult()\n    }\n  }, [tokenABalance, tokenBBalance])\n\n  /**\n   * 输入数量监听\n   * @param amount\n   */\n\n  const handleAmountChange = (amount: string, is_fixed_displaytokenA: boolean) => {\n    console.log('🚀 ~ h111andleAmountChange ~ amount:', amount)\n    setIsUpdateSlider(false)\n    setRemoveLiquidityAmount('')\n    if (!amount) {\n      resetInputAmount()\n      return\n    }\n    setPreRemoveLoading(true)\n    setIsFixedDisplayTokenA(is_fixed_displaytokenA)\n    if (is_fixed_displaytokenA) {\n      setTokenAmountA(amount)\n      if (d(amount).eq(tokenABalance)) {\n        setTokenAmountB(tokenBBalance as string)\n        setSlideValue(100)\n        setUuid('')\n        setPreRemoveLoading(false)\n        return\n      }\n    } else {\n      setTokenAmountB(amount)\n      if (d(amount).eq(tokenBBalance)) {\n        setTokenAmountA(tokenABalance as string)\n        setSlideValue(100)\n        setUuid('')\n        setPreRemoveLoading(false)\n        return\n      }\n    }\n\n    console.log('🚀 ~ handleAmountChange ~ amount:', amount, +amount)\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n      debouncedPreCalculate(amount, is_fixed_displaytokenA, uuid)\n    } else {\n      setPreRemoveLoading(false)\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB('')\n      } else {\n        setTokenAmountA('')\n      }\n    }\n  }\n\n  // //滑杆数值改变时用流动性改变input的值\n  const changeSlideFun = (num: number) => {\n    setIsUpdateSlider(true)\n    console.log('🚀 ~ changeSlideFun ~ changeSlideFun:', tokenABalance, tokenBBalance, num)\n\n    if (!useZapIn) {\n      if (num == 100) {\n        setTokenAmountA(tokenABalance)\n        setTokenAmountB(tokenBBalance)\n      } else {\n        const tokenA: Token = currentPosBaseInfo?.tokenA\n        const tokenB: Token = currentPosBaseInfo?.tokenB\n        const liquidity = formatNumberWithDown(d(currentPosBaseInfo?.liquidity).mul(num).div(100).toString() || '0', 0, true)\n        console.log('🚀 ~ changeSlideFun ~ liquidity1111111:', currentPosBaseInfo?.liquidity, liquidity)\n        const lowerTick = currentPosBaseInfo?.lowerTick\n        const upperTick = currentPosBaseInfo?.upperTick\n        const isReverse = currentPosBaseInfo?.isReverse\n        const params = { tokenA, tokenB, liquidity, currentSqrtPrice: currentPoolSqrtPrice, lowerTick, upperTick, roundUp: false }\n        try {\n          const { amountA, amountB } = getCoinAmountFromLiquidity(params)\n          setRemoveLiquidityAmount(liquidity)\n          const displayCoinAmountA = !isReverse ? amountA : amountB\n          const displayCoinAmountB = !isReverse ? amountB : amountA\n          console.log('🚀 ~ changeSlideFun ~  coinAmountA, coinAmountB:', amountA, amountB)\n          setTokenAmountA(d(displayCoinAmountA).gt(0) ? displayCoinAmountA : '')\n          setTokenAmountB(d(displayCoinAmountB).gt(0) ? displayCoinAmountB : '')\n        } catch (error) {\n          console.log('🚀 ~ changeSlideFun ~ error:', error)\n          setTokenAmountA('')\n          setTokenAmountB('')\n        }\n      }\n    } else {\n      const isCoin = currentApiPoolInfo?.tokenA?.coin_type === currentZapToken?.coin_type\n      const balance = isCoin ? onlyAmountA : onlyAmountB\n      if (num === 100) {\n        setZapAmount(balance)\n      } else {\n        const value = d(balance).mul(d(num).div(100)).toString()\n        setZapAmount(value)\n      }\n    }\n  }\n\n  const { currentAccount } = useAccountStore()\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Remove',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenABalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBBalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n\n    if (currentPosBaseInfo?.posType == 'burn') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    return btnInfo\n  }, [tokenAmountA, tokenAmountB, tokenABalance, tokenBBalance, currentAccount?.address])\n\n  const { signAndExecuteTransaction } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const [isRemoveLoading, setIsRemoveLoading] = useState(false)\n  const navigate = useNavigate()\n  const toRemove = async () => {\n    setIsRemoveLoading(true)\n    const isClosed = slideValue == 100\n    console.log('🚀 ~ toRemove ~ currentPosRewardsData:', currentPosRewardsData)\n    console.log('🚀 ~ toRemove ~ currentPosPoolInfo?.miningRewardList:', currentPosPoolInfo?.miningRewardList)\n    const rewarderCoinTypes = isClosed\n      ? !currentPosRewardsData || currentPosRewardsData?.length == 0\n        ? (currentPosPoolInfo?.miningRewardList || [])?.reduce((arr: string[], item: any) => {\n            arr.push(item.coinType)\n            return arr\n          }, [])\n        : (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n            arr.push(item.coin_address)\n            return arr\n          }, [])\n      : (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n          if (d(item?.amount_owed).gt(0)) {\n            arr.push(item.coin_address)\n          }\n          return arr\n        }, [])\n    console.log('🚀 ~ toRemove ~ rewarderCoinTypes:', rewarderCoinTypes)\n\n    try {\n      let tx\n      let msafeParams\n      let toastInfo\n      if (!useZapIn) {\n        const amountA = !currentPosBaseInfo?.isReverse\n          ? d(tokenAmountA).mul(Decimal.pow(10, displayTokenA.decimals)).toString()\n          : d(tokenAmountB).mul(Decimal.pow(10, displayTokenB.decimals)).toString()\n        const amountB = !currentPosBaseInfo?.isReverse\n          ? d(tokenAmountB).mul(Decimal.pow(10, displayTokenB.decimals)).toString()\n          : d(tokenAmountA).mul(Decimal.pow(10, displayTokenA.decimals)).toString()\n\n        console.log('🚀 ~ toAdd ~ rewarderCoinTypes:', currentPosPoolInfo, currentPosRewardsData, rewarderCoinTypes)\n\n        const params: any = {\n          posId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n          poolAddress: currentPosBaseInfo?.clmmPool,\n          coinTypeA: currentPosBaseInfo?.coinTypeA,\n          coinTypeB: currentPosBaseInfo?.coinTypeB,\n          amountA,\n          amountB,\n          liquidity: removeLiquidityAmount,\n          lowerTick: currentPosBaseInfo?.lowerTick,\n          upperTick: currentPosBaseInfo?.upperTick,\n          posType: currentPosBaseInfo?.posType,\n          rewarderCoinTypes\n        }\n        if (currentPosBaseInfo?.posType == 'farms') {\n          params['farmsPoolId'] = currentPosBaseInfo?.farmsPool\n          params['farmsPosId'] = currentPosBaseInfo?.id\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Remove ' +\n              [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n                .filter(Boolean)\n                .join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = tokenAmountA\n              let amountBF = tokenAmountB\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n                amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n              }\n\n              info.toastDescriptionContent = ''\n              info.modalDescriptionText = ''\n              info.toastTitleText = 'Remove Liquidity Successful'\n            }\n\n            return info\n          }\n        }\n        transactionConfirmation(toastInfo)\n\n        console.log('🚀 ~ toAdd ~ params:', removeLiquidityAmount, isClosed, slideValue, params)\n        const payload = isClosed ? await getCloseTsPayload(params) : await getRemoveTsPayload(params)\n        tx = payload.tx\n        msafeParams = payload.msafeParams\n      } else {\n        const posId = currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId\n        toastInfo = getZapWithdrawToastInfo(showDisplayTokenALock, showDisplayTokenBLock)\n        transactionConfirmation(toastInfo)\n        tx = await getZapWithdrawTx(\n          posId,\n          currentPosBaseInfo?.liquidity,\n          currentPosBaseInfo?.lowerTick,\n          currentPosBaseInfo?.upperTick,\n          rewarderCoinTypes,\n          currentPosBaseInfo?.posType == 'farms'\n        )\n      }\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n\n      if (res) {\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        if (isClosed) {\n          setPosBaseList([])\n          navigate('/pools?tab=positions')\n        } else {\n          getCurrentPosBaseInfo(currentAccount?.address, currentPosBaseInfo?.id, true)\n          // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n        }\n      } else {\n        if (currentPosBaseInfo?.clmmPool) {\n          getContractPoolInfo(currentPosBaseInfo?.clmmPool).then(res => {\n            console.log('🚀 ~ toClaim ~ res:', res)\n            if (useZapIn) {\n              reCalculateZapData()\n            } else {\n              reCalculateResult()\n            }\n          })\n        }\n      }\n      setIsRemoveLoading(false)\n    } catch (error) {\n      reCalculateResult()\n      setIsRemoveLoading(false)\n      console.log('🚀 ~ toClaim ~ error:', error)\n    }\n  }\n\n  const amountBalance = useMemo(() => {\n    if (currentPosBaseInfo?.posId) {\n      const tokenA: Token = currentPosBaseInfo?.tokenA\n      const tokenB: Token = currentPosBaseInfo?.tokenB\n      const liquidity = currentPosBaseInfo?.liquidity\n      const lowerTick = currentPosBaseInfo?.lowerTick\n      const upperTick = currentPosBaseInfo?.upperTick\n\n      const params = { tokenA, tokenB, liquidity, currentSqrtPrice: currentPoolSqrtPrice, lowerTick, upperTick, roundUp: false }\n      const { amountA, amountB } = getCoinAmountFromLiquidity(params)\n    }\n  }, [currentPosBaseInfo?.posId, currentPoolSqrtPrice])\n\n  // 为方便zap时候展示某个币总额\n  const { onlyAmountA, onlyAmountB } = useMemo(() => {\n    return {\n      onlyAmountA: currentPosLiquidityData?.onlyAmountA,\n      onlyAmountB: currentPosLiquidityData?.onlyAmountB\n    }\n  }, [currentPosLiquidityData])\n\n  useEffect(() => {\n    if (useZapIn) {\n      if (zapAmount) {\n        const isCoin = currentApiPoolInfo?.tokenA?.coin_type === currentZapToken?.coin_type\n        const balance = isCoin ? onlyAmountA : onlyAmountB\n        if (balance) {\n          const value = formatNumber(d(zapAmount).div(balance).mul(100).toString(), 2, true)\n          setSlideValue(value)\n        } else {\n          setSlideValue('--')\n        }\n      } else {\n        setSlideValue('--')\n      }\n    } else {\n      setSlideValue('--')\n    }\n  }, [useZapIn, zapAmount])\n\n  // zapIn时候根据计算结果设置amountA,B,  主要为了左侧after相关展示\n  useEffect(() => {\n    if (currentPosDetailTab === 'increase') return\n    if (useZapIn) {\n      console.log('🚀 ~ usePosRemovePage111 ~ preDepositeData:', preDepositeData)\n      if (preDepositeData?.amount_a || preDepositeData?.amount_b) {\n        const tokenA = currentPosBaseInfo?.tokenA\n        const tokenB = currentPosBaseInfo?.tokenB\n        const amountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n        const amountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n\n        // 100%时候after设置为0\n        if (slideValue == 100) {\n          setTokenAmountA(String(tokenABalance))\n          setTokenAmountB(String(tokenBBalance))\n        } else {\n          const a = !currentPosBaseInfo?.isReverse ? amountA : amountB\n          const b = !currentPosBaseInfo?.isReverse ? amountB : amountA\n          setTokenAmountA(d(a).gt(tokenABalance) ? String(tokenABalance) : a)\n          setTokenAmountB(d(b).gt(tokenBBalance) ? String(tokenBBalance) : b)\n        }\n\n        return\n      }\n\n      setTokenAmountA('')\n      setTokenAmountB('')\n    }\n  }, [useZapIn, preDepositeData, slideValue])\n\n  useEffect(() => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n  }, [])\n\n  return {\n    tokenAmountA,\n    tokenAmountB,\n    resetInputAmount,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    currentPosLiquidityData,\n    tokenABalance,\n    tokenBBalance,\n    displayTokenA,\n    displayTokenB,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    preRemoveLoading,\n    handleAmountChange,\n    btnStatusText,\n    changeSlideFun,\n    toRemove,\n    isRemoveLoading,\n    onlyAmountA,\n    onlyAmountB,\n    currentApiPoolInfo,\n    currentPoolSqrtPrice\n  }\n}\n","import ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\n\nimport usePosRemovePage from '@/hooks/position/usePosRemovePage'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { Block, SelectTab, TradeInputGroup } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { Box, Button, HStack, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\nimport FarmsBlock from './FarmsBlock'\nimport RangeAlerts from './RangeAlerts'\nimport TradeTitle from './TradeTitle'\n\nexport default function RemoveBlock() {\n  const { currentPosBaseInfo, posPoolsRelatedData, posApiPoolData } = usePositionStore()\n  const { isFixedDisplayTokenA, slideValue, setSlideValue, curPosContractPoolInfo, useZapIn, currentPosPoolInfo } = usePositionDetailStore()\n  const {\n    tokenAmountA,\n    tokenAmountB,\n    tokenABalance,\n    tokenBBalance,\n    displayTokenA,\n    displayTokenB,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    preRemoveLoading,\n    handleAmountChange,\n    changeSlideFun,\n    btnStatusText,\n    toRemove,\n    isRemoveLoading,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    resetInputAmount,\n    onlyAmountA,\n    onlyAmountB,\n    currentApiPoolInfo,\n    currentPoolSqrtPrice,\n    currentPosLiquidityData\n  } = usePosRemovePage()\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  const changeSlideValue = (value: string | number) => {\n    console.log('🚀 ~ changeSlideValue ~ value:', value)\n    if (value == 'MAX' || value == 100) {\n      setSlideValue(100)\n\n      changeSlideFun(100)\n    } else {\n      setSlideValue(Number((value + '').split('%')[0]))\n      changeSlideFun(Number((value + '').split('%')[0]))\n    }\n  }\n  useEffect(() => {\n    return setSlideValue('--')\n  }, [])\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId]\n\n  return (\n    <VStack w=\"100%\" gap=\"8px\">\n      <Box w=\"100%\" position=\"relative\" bg=\"bg_six\" p={{ base: '8px', lg: '16px' }} border=\"1px solid\" borderColor=\"border\" borderRadius=\"16px\">\n        {currentApiPoolInfo?.haveZap && currentPosBaseInfo?.posType !== 'burn' && !showDisplayTokenALock && !showDisplayTokenBLock && (\n          <TradeTitle action=\"Withdraw\" resetInputAmount={resetInputAmount} />\n        )}\n        {useZapIn ? (\n          <ZapDeposite\n            action=\"Withdraw\"\n            apiPoolInfo={currentApiPoolInfo}\n            currentSqrtPrice={currentPoolSqrtPrice}\n            onlyAmountA={onlyAmountA}\n            onlyAmountB={onlyAmountB}\n            liquidity={currentPosBaseInfo?.liquidity}\n            lowerTick={currentPosBaseInfo?.lowerTick}\n            upperTick={currentPosBaseInfo?.upperTick}\n            slideValue={String(slideValue)}\n            currentPosLiquidityData={currentPosLiquidityData}\n            changeSlideValue={changeSlideValue}\n          />\n        ) : (\n          <>\n            <TradeInputGroup\n              from={{\n                wrapStyle: {\n                  h: '108px',\n                  borderRadius: '12px'\n                },\n                balance: tokenABalance || '',\n                value: tokenAmountA,\n                amountValue: tokenAmountValueA,\n                loading: !isFixedDisplayTokenA && preRemoveLoading,\n                onChange: value => {\n                  handleAmountChange(value, true)\n                },\n                needRemainBalance: false,\n                placeholder: '0.0',\n                balanceLabel: 'Available',\n                token: displayTokenA,\n                half: false,\n                lock: {\n                  isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenALock,\n                  style: {\n                    borderRadius: '12px'\n                  }\n                }\n              }}\n              to={{\n                wrapStyle: {\n                  h: '108px',\n                  borderRadius: '12px'\n                },\n                balance: tokenBBalance || '',\n                value: tokenAmountB,\n                amountValue: tokenAmountValueB,\n                loading: isFixedDisplayTokenA && preRemoveLoading,\n                onChange: value => {\n                  handleAmountChange(value, false)\n                },\n                needRemainBalance: false,\n                placeholder: '0.0',\n                balanceLabel: 'Available',\n                token: displayTokenB,\n                half: false,\n                lock: {\n                  isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenBLock,\n                  style: {\n                    borderRadius: '12px'\n                  }\n                }\n              }}\n              lock={{\n                isLock: !currentPosBaseInfo || !curPosContractPoolInfo || (currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn'),\n                text: currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn' ? 'Your liquidity has been permanently locked' : undefined,\n                style: {\n                  h: '224px',\n                  borderRadius: '12px'\n                }\n              }}\n            />\n          </>\n        )}\n\n        {currentPosBaseInfo?.posType !== 'burn' && (\n          <Block borderRadius=\"12px\" p=\"16px\" mt=\"8px\">\n            <Text color=\"primary_gray\">Amount</Text>\n            <PositionSlider percentage={slideValue} onChange={(value: string | number) => changeSlideValue(value)} />\n          </Block>\n        )}\n      </Box>\n\n      {useZapIn ? (\n        <ZapSubmiteInfo\n          action=\"Withdraw\"\n          onClick={toRemove}\n          hideDepositRatio={true}\n          otherLoading={isRemoveLoading}\n          isReverse={currentPosBaseInfo?.isReverse}\n        />\n      ) : (\n        <Button\n          isLoading={isRemoveLoading}\n          onClick={toRemove}\n          disabled={btnStatusText.disabled || isRemoveLoading}\n          w=\"100%\"\n          h=\"56px\"\n          fontSize=\"20px\"\n          fontWeight=\"500\"\n        >\n          {btnStatusText.text}\n        </Button>\n      )}\n      {currentPosBaseInfo?.posType !== 'burn' && currentPosPoolInfo?.farmsRewarderList && currentPosPoolInfo?.farmsRewarderList?.length > 0 && (\n        <FarmsBlock />\n      )}\n      {currentPosPoolsRelatedData && currentPosPoolsRelatedData?.minPrice !== '0' && currentPosPoolsRelatedData?.maxPrice !== '∞' && (\n        <RangeAlerts subscriptionSource=\"PositionDetail\" />\n      )}\n    </VStack>\n  )\n}\n\nexport function PercentageTab(props: {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  wrapStyle?: {}\n  selectTabStyle?: {}\n  selectTabItemStyle?: {}\n  selectTabItemTextStyle?: {}\n  textFontSize?: string\n  isShowPercentageText?: boolean\n}) {\n  const {\n    percentage,\n    onChange,\n    wrapStyle,\n    textFontSize,\n    selectTabStyle,\n    selectTabItemStyle,\n    selectTabItemTextStyle,\n    isShowPercentageText = true\n  } = props\n  const tabList: Tab[] = [{ label: '25%' }, { label: '50%' }, { label: '75%' }, { label: 'MAX' }]\n  const currentTab = useMemo(() => {\n    if (percentage !== 100) {\n      return `${percentage}%`\n    } else {\n      return 'MAX'\n    }\n  }, [percentage])\n\n  return (\n    <HStack w=\"100%\" {...wrapStyle}>\n      {isShowPercentageText && (\n        <Text fontSize={textFontSize} color=\"text_caption\">\n          {percentage == '--' ? '--' : d(percentage).gt(0) && Number(percentage) < 0.01 ? '<0.01' : formatNumberWithDown(percentage, 2)}%\n        </Text>\n      )}\n\n      <SelectTab\n        type=\"outlineTab\"\n        tabList={tabList}\n        currentTab={currentTab}\n        handleChangeTab={tab => {\n          if (tab.label === 'MAX') {\n            onChange(100)\n          } else {\n            onChange(tab.label.replace('%', ''))\n          }\n        }}\n        wrapStyle={selectTabStyle}\n        itemStyle={selectTabItemStyle}\n        selectTabItemTextStyle={selectTabItemTextStyle}\n      />\n    </HStack>\n  )\n}\n\nexport function PositionSlider(props: { percentage: string | number; onChange: (value: string | number) => void }) {\n  const { percentage, onChange } = props\n\n  return (\n    <Box w=\"100%\">\n      <PercentageTab\n        percentage={percentage}\n        onChange={onChange}\n        wrapStyle={{\n          justifyContent: 'space-between',\n          m: '10px 0'\n        }}\n        selectTabStyle={{\n          w: { base: '220px', lg: '310px' },\n          h: '32px',\n          p: '3px',\n          borderRadius: '8px'\n        }}\n        selectTabItemStyle={{\n          flex: '1',\n          fontSize: '14px',\n          margin: '0px'\n        }}\n        textFontSize=\"24px\"\n      />\n      <Slider\n        aria-label=\"slider-ex-1\"\n        min={0}\n        max={100}\n        focusThumbOnChange={false}\n        value={percentage == '--' ? 0 : Number(percentage)}\n        onChange={value => onChange(value + '%')}\n      >\n        <SliderTrack>\n          <SliderFilledTrack />\n        </SliderTrack>\n        <SliderThumb />\n      </Slider>\n    </Box>\n  )\n}\n"],"names":["useCurrentApiPool","currentPosBaseInfo","posApiPoolData","useMemo","bg_farming","FarmsBlock","useWindowWidth","farmsPosRewardsData","posPoolsRelatedData","posBaseListLoading","posPoolsOriginalData","usePositionStore","currentPosPoolInfo","usePositionDetailStore","currentAccount","useAccountStore","getCurrentPosBaseInfo","useCurrentPos","getFarmsRewardsData","useGetFarmsPosRewards","getClmmPosName","usePosHelper","tokenName","position_index","_a","currentPosPoolsRelatedData","isActive","posFarmsData","farmsRewarderList","totalRewards","sum","item","toStakePos","toUnStakePos","toClaimPos","unstakeLoading","claimLoading","useFarmsActions","navigate","useNavigate","stakeRefresh","events","toStake","unstakeRefresh","toUnstack","claimRefresh","toClaim","totalAmount","rewardData","d","jsx","Fragment","jsxs","VStack","HStack","Image","Text","AprTooltip","Icon","Block","React","RewardsCoin","Button","Box","CetusTooltip","TradeTitle","action","haveZap","resetInputAmount","useZapIn","setUseZapIn","setZapAmount","setPreDepositeData","useZapStore","handleChangeZap","useEffect","ZapSwitch","usePosRemove","clmmSdk","useClmmSDKStore","peripherySdk","usePeripherySDKStore","slippage","useGlobalStore","params","posId","poolAddress","coinTypeA","coinTypeB","amountA","amountB","liquidity","lowerTick","upperTick","posType","rewarderCoinTypes","farmsPoolId","farmsPosId","minAmountA","minAmountB","parameter","fixDown","tx","msafeParams","MsafeTransactionSubType","usePosRemovePage","transactionConfirmation","useTransactionModal","getTokenAmountValue","useTokenPrice","getCoinAmountFromLiquidity","useGetPosLiquiditys","posLiquidityData","posRewardsData","setPosBaseList","preAdd","usePosAdd","getRemoveTsPayload","getCloseTsPayload","getTokenALock","getTokenBLock","setTokenAmountAfterA","setTokenAmountAfterB","currentPoolSqrtPrice","setIsFixedDisplayTokenA","slideValue","setSlideValue","isFixedDisplayTokenA","isPosDetailRefresh","currentPosDetailTab","curPosContractPoolInfo","getZapWithdrawToastInfo","getZapWithdrawTx","reCalculateZapData","useZapSubmit","getContractPoolInfo","useGetContractPoolInfo","preDepositeData","currentZapToken","zapAmount","currentApiPoolInfo","currentPosRewardsData","mevProtect","maxCapForGas","transactionMode","customGasPrice","tokenAmountA","setTokenAmountA","useState","tokenAmountB","setTokenAmountB","preRemoveLoading","setPreRemoveLoading","removeLiquidityAmount","setRemoveLiquidityAmount","displayTokenA","displayTokenB","currentPosLiquidityData","tokenABalance","formatNumberWithDown","tokenBBalance","tokenAmountValueA","tokenAmountValueB","numA","numB","uuid","setUuid","uuidRef","useRef","showTokenALock","showTokenBLock","showDisplayTokenALock","showDisplayTokenBLock","debouncedPreCalculate","useDebounceFunction","amount","is_fixed_displaytokenA","decimals","_b","amountBN","amountToBN","tokenA","tokenB","isReverse","displayCoinAmountA","displayCoinAmountB","liquidityAmount","slide","formatNumber","isUpdateSlider","setIsUpdateSlider","reCalculateResult","isAvailableObject","changeSlideFun","v4","handleAmountChange","num","balance","onlyAmountA","onlyAmountB","value","error","btnStatusText","btnInfo","signAndExecuteTransaction","useTransaction","fetchAccountBalance","useAccountBalance","isRemoveLoading","setIsRemoveLoading","toRemove","isClosed","arr","_c","toastInfo","Decimal","status","balanceChanges","description","formatDescription","info","amountAF","amountBF","getBalanceChanges","payload","res","bnToAmount","a","b","RemoveBlock","changeSlideValue","ZapDeposite","TradeInputGroup","PositionSlider","ZapSubmiteInfo","RangeAlerts","PercentageTab","props","percentage","onChange","wrapStyle","textFontSize","selectTabStyle","selectTabItemStyle","selectTabItemTextStyle","isShowPercentageText","tabList","currentTab","SelectTab","tab","Slider","SliderTrack","SliderFilledTrack","SliderThumb"],"mappings":"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"}