import{j as p,n as O,aB as V,r as R,d as g,U as N,au as b,q as x,z as h,aC as G}from"./index-DIvDX_Yh.js";import{u as _}from"./useToken-YYj-bY2H.js";import{a as f}from"./vendor-DsVemle5.js";import{u as P}from"./index-CB7ViKlR.js";function j(){const{xCetusSdk:e}=p(),{currentAccount:t}=O(),{setLockCetusListLoading:r,clearData:c,setLockCetusList:o}=V();return{fetchOwnerLockCetusList:async(n=t==null?void 0:t.address)=>{if(!n){r(!1),c();return}r(!0);try{const a=await e.XCetusModule.getOwnerRedeemLockList(n);console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ lockList:",a,n),n===(t==null?void 0:t.address)&&(a.sort((s,w)=>s.locked_until_time-w.locked_until_time),o(a))}catch(a){console.log("ðŸš€ ~ fetchOwnerLockCetusList ~ error:",a)}finally{r(!1)}}}}function q(){const{xCetusSdk:e}=p(),{setDividendRewardList:t}=V();return{fetchVeNFTDividendInfo:async c=>{try{const o=await e.XCetusModule.getVeNFTDividendInfo(c);console.log("ðŸš€ ~ file: useXCetusHelper.ts:62 ~ fetchVeNFTDividendInfo ~ dividendInfo:",o),o&&t(o.rewards)}catch(o){console.log("ðŸš€ ~ fetchVeNFTDividendInfo ~ error:",o,c)}}}}function B(){const{xCetusSdk:e}=p(),{currentAccount:t}=O(),{setVeNFTLoading:r,clearData:c,setVeNFT:o}=V();return{fetchOwnerVeNFT:async(n=t==null?void 0:t.address,a)=>{if(!n){r(!1),c();return}r(!0);try{const s=await e.XCetusModule.getOwnerVeNFT(n,a);if(console.log("ðŸš€ ~ fetchOwnerVeNFT ~ veNFT:",s),s)return o(s,n),s}catch(s){console.log("ðŸš€ ~ fetchOwnerVeNFT ~ error:",s)}finally{r(!1)}}}}function D(){const{dividendManager:e}=V(),[t,r]=f.useState(),[c,o]=f.useState(),d=n=>{const a=Date.now()/1e3,{start_time:s,interval_day:w}=n,S=Number(G.getNextStartTime(n).toString()),C=h.env=="testnet"?Math.ceil((a-s)/(w*60)):Math.ceil((a-s)/(w*24*3600));r(C),o(S)};return f.useEffect(()=>{e&&d(e)},[e]),{currentPeriod:t,nextStartTime:c,calculateCurrPeriod:d}}function H(e,t){const{fetchTokenInfo:r}=_(),{getTokenAmountValue:c}=R(),{coinPriceObj:o}=x(),[d,n]=f.useState("0"),a=f.useCallback(async()=>{if(!(!e||!t))try{const s=e.bonus,w=s.map(T=>N(T.name,!1)),S=await r(w),C=s.map(T=>{const L=N(T.name,!1),u=S==null?void 0:S.get(L);if(u){const l=b(T.value,u.decimals).toString();return c(L,l)}return"0"}).reduce((T,L)=>T.add(L),g(0)),k=c(h.cetus_coin.coin_type,b(t,9).toString()),i=g(k).gt(0)?C.div(7).mul(365).div(k).mul(100).toFixed(2):"0";n(Number(i)>0&&Number(i)<.01?"0.01":i.toString())}catch(s){console.error("Error calculating APR:",s),n("0.01")}},[e==null?void 0:e.bonus,t,o]);return P(()=>{a()},[e==null?void 0:e.bonus,t,o]),{cetusApr:d}}function U(e){const{dividendRewardList:t}=V(),{fetchTokenInfo:r}=_(),{getTokenAmountValue:c}=R(),[o,d]=f.useState([]),[n,a]=f.useState([]),[s,w]=f.useState("0"),S=f.useCallback(async()=>{let C=g(0);const k=t.filter(u=>!(u.period===e||u.rewards.find(l=>g(l.amount).eq(0))));console.log("ðŸš€ ~ file: useXCetusHelper.ts:107 ~ calculateRewards ~ filteredList:",{filteredList:k,dividendRewardList:t,currentPeriod:e}),a(k);const i={},T=k.flatMap(u=>u.rewards.map(l=>N(l.coin_type,!1))),L=await r(T);k.forEach(u=>{for(const l of u.rewards){const m=N(l.coin_type,!1),v=L==null?void 0:L.get(m);if(v){const y=b(l.amount,v.decimals).toString(),F=c(m,y);C=C.add(F),i[m]=i[m]?{...i[m],amount:g(i[m].amount).add(y).toString(),value:g(i[m].value).add(F).toString()}:{amount:y,coin_type:m,value:F}}}}),d(Object.values(i).filter(u=>g(u.amount).gt(0)).sort((u,l)=>g(l.value).sub(u.value).toNumber())),w(C.toString())},[t,c,e]);return f.useEffect(()=>{e&&S()},[t,e]),{summaryRewardList:o,rewardList:n,totalRewardValue:s}}export{B as a,q as b,D as c,U as d,H as e,j as u};
//# sourceMappingURL=useXCetusHelper-CgocXtBx.js.map
